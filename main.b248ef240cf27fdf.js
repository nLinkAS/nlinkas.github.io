(self.webpackChunktest_tfjs=self.webpackChunktest_tfjs||[]).push([[179],{8125:(Re,Y,h)=>{"use strict";var V={};function U(t){return"function"==typeof t}function W(t){const e=t(s=>{Error.call(s),s.stack=(new Error).stack});return e.prototype=Object.create(Error.prototype),e.prototype.constructor=e,e}h.r(V),h.d(V,{addImpl:()=>wT,bincountImpl:()=>nx,bincountReduceImpl:()=>MT,castImpl:()=>TT,ceilImpl:()=>kT,concatImpl:()=>PT,equalImpl:()=>LT,expImpl:()=>UT,expm1Impl:()=>zT,floorImpl:()=>HT,gatherNdImpl:()=>KT,gatherV2Impl:()=>jT,greaterEqualImpl:()=>ZT,greaterImpl:()=>XT,lessEqualImpl:()=>QT,lessImpl:()=>YT,linSpaceImpl:()=>JT,logImpl:()=>qT,maxImpl:()=>ew,maximumImpl:()=>nw,minimumImpl:()=>sw,multiplyImpl:()=>sx,negImpl:()=>ow,notEqualImpl:()=>iw,prodImpl:()=>cw,raggedGatherImpl:()=>hw,raggedTensorToTensorImpl:()=>mw,rangeImpl:()=>gw,rsqrtImpl:()=>yw,scatterImpl:()=>_d,sigmoidImpl:()=>OV,simpleAbsImpl:()=>NT,sliceImpl:()=>RT,sparseFillEmptyRowsImpl:()=>xw,sparseReshapeImpl:()=>Ew,sparseSegmentReductionImpl:()=>ux,sqrtImpl:()=>t6,squaredDifferenceImpl:()=>_w,stridedSliceImpl:()=>bw,stringNGramsImpl:()=>Cw,stringSplitImpl:()=>Dw,stringToHashBucketFastImpl:()=>Iw,subImpl:()=>WT,tileImpl:()=>Tw,topKImpl:()=>Sw,transposeImpl:()=>ex,uniqueImpl:()=>Aw});const L=W(t=>function(e){t(this),this.message=e?`${e.length} errors occurred during unsubscription:\n${e.map((s,r)=>`${r+1}) ${s.toString()}`).join("\n  ")}`:"",this.name="UnsubscriptionError",this.errors=e});function P(t,n){if(t){const e=t.indexOf(n);0<=e&&t.splice(e,1)}}class k{constructor(n){this.initialTeardown=n,this.closed=!1,this._parentage=null,this._finalizers=null}unsubscribe(){let n;if(!this.closed){this.closed=!0;const{_parentage:e}=this;if(e)if(this._parentage=null,Array.isArray(e))for(const o of e)o.remove(this);else e.remove(this);const{initialTeardown:s}=this;if(U(s))try{s()}catch(o){n=o instanceof L?o.errors:[o]}const{_finalizers:r}=this;if(r){this._finalizers=null;for(const o of r)try{b(o)}catch(i){n=null!=n?n:[],i instanceof L?n=[...n,...i.errors]:n.push(i)}}if(n)throw new L(n)}}add(n){var e;if(n&&n!==this)if(this.closed)b(n);else{if(n instanceof k){if(n.closed||n._hasParent(this))return;n._addParent(this)}(this._finalizers=null!==(e=this._finalizers)&&void 0!==e?e:[]).push(n)}}_hasParent(n){const{_parentage:e}=this;return e===n||Array.isArray(e)&&e.includes(n)}_addParent(n){const{_parentage:e}=this;this._parentage=Array.isArray(e)?(e.push(n),e):e?[e,n]:n}_removeParent(n){const{_parentage:e}=this;e===n?this._parentage=null:Array.isArray(e)&&P(e,n)}remove(n){const{_finalizers:e}=this;e&&P(e,n),n instanceof k&&n._removeParent(this)}}k.EMPTY=(()=>{const t=new k;return t.closed=!0,t})();const $=k.EMPTY;function S(t){return t instanceof k||t&&"closed"in t&&U(t.remove)&&U(t.add)&&U(t.unsubscribe)}function b(t){U(t)?t():t.unsubscribe()}const N={onUnhandledError:null,onStoppedNotification:null,Promise:void 0,useDeprecatedSynchronousErrorHandling:!1,useDeprecatedNextContext:!1},O={setTimeout(t,n,...e){const{delegate:s}=O;return(null==s?void 0:s.setTimeout)?s.setTimeout(t,n,...e):setTimeout(t,n,...e)},clearTimeout(t){const{delegate:n}=O;return((null==n?void 0:n.clearTimeout)||clearTimeout)(t)},delegate:void 0};function M(t){O.setTimeout(()=>{const{onUnhandledError:n}=N;if(!n)throw t;n(t)})}function H(){}const oe=pe("C",void 0,void 0);function pe(t,n,e){return{kind:t,value:n,error:e}}let be=null;function we(t){if(N.useDeprecatedSynchronousErrorHandling){const n=!be;if(n&&(be={errorThrown:!1,error:null}),t(),n){const{errorThrown:e,error:s}=be;if(be=null,e)throw s}}else t()}class me extends k{constructor(n){super(),this.isStopped=!1,n?(this.destination=n,S(n)&&n.add(this)):this.destination=ae}static create(n,e,s){return new K(n,e,s)}next(n){this.isStopped?le(function de(t){return pe("N",t,void 0)}(n),this):this._next(n)}error(n){this.isStopped?le(function J(t){return pe("E",void 0,t)}(n),this):(this.isStopped=!0,this._error(n))}complete(){this.isStopped?le(oe,this):(this.isStopped=!0,this._complete())}unsubscribe(){this.closed||(this.isStopped=!0,super.unsubscribe(),this.destination=null)}_next(n){this.destination.next(n)}_error(n){try{this.destination.error(n)}finally{this.unsubscribe()}}_complete(){try{this.destination.complete()}finally{this.unsubscribe()}}}const ye=Function.prototype.bind;function xe(t,n){return ye.call(t,n)}class Q{constructor(n){this.partialObserver=n}next(n){const{partialObserver:e}=this;if(e.next)try{e.next(n)}catch(s){w(s)}}error(n){const{partialObserver:e}=this;if(e.error)try{e.error(n)}catch(s){w(s)}else w(n)}complete(){const{partialObserver:n}=this;if(n.complete)try{n.complete()}catch(e){w(e)}}}class K extends me{constructor(n,e,s){let r;if(super(),U(n)||!n)r={next:null!=n?n:void 0,error:null!=e?e:void 0,complete:null!=s?s:void 0};else{let o;this&&N.useDeprecatedNextContext?(o=Object.create(n),o.unsubscribe=()=>this.unsubscribe(),r={next:n.next&&xe(n.next,o),error:n.error&&xe(n.error,o),complete:n.complete&&xe(n.complete,o)}):r=n}this.destination=new Q(r)}}function w(t){N.useDeprecatedSynchronousErrorHandling?function Ce(t){N.useDeprecatedSynchronousErrorHandling&&be&&(be.errorThrown=!0,be.error=t)}(t):M(t)}function le(t,n){const{onStoppedNotification:e}=N;e&&O.setTimeout(()=>e(t,n))}const ae={closed:!0,next:H,error:function q(t){throw t},complete:H},E="function"==typeof Symbol&&Symbol.observable||"@@observable";function Oe(t){return t}let Ne=(()=>{class t{constructor(e){e&&(this._subscribe=e)}lift(e){const s=new t;return s.source=this,s.operator=e,s}subscribe(e,s,r){const o=function _t(t){return t&&t instanceof me||function mt(t){return t&&U(t.next)&&U(t.error)&&U(t.complete)}(t)&&S(t)}(e)?e:new K(e,s,r);return we(()=>{const{operator:i,source:a}=this;o.add(i?i.call(o,a):a?this._subscribe(o):this._trySubscribe(o))}),o}_trySubscribe(e){try{return this._subscribe(e)}catch(s){e.error(s)}}forEach(e,s){return new(s=He(s))((r,o)=>{const i=new K({next:a=>{try{e(a)}catch(l){o(l),i.unsubscribe()}},error:o,complete:r});this.subscribe(i)})}_subscribe(e){var s;return null===(s=this.source)||void 0===s?void 0:s.subscribe(e)}[E](){return this}pipe(...e){return function Pe(t){return 0===t.length?Oe:1===t.length?t[0]:function(e){return t.reduce((s,r)=>r(s),e)}}(e)(this)}toPromise(e){return new(e=He(e))((s,r)=>{let o;this.subscribe(i=>o=i,i=>r(i),()=>s(o))})}}return t.create=n=>new t(n),t})();function He(t){var n;return null!==(n=null!=t?t:N.Promise)&&void 0!==n?n:Promise}const Rt=W(t=>function(){t(this),this.name="ObjectUnsubscribedError",this.message="object unsubscribed"});let Dt=(()=>{class t extends Ne{constructor(){super(),this.closed=!1,this.currentObservers=null,this.observers=[],this.isStopped=!1,this.hasError=!1,this.thrownError=null}lift(e){const s=new Xt(this,this);return s.operator=e,s}_throwIfClosed(){if(this.closed)throw new Rt}next(e){we(()=>{if(this._throwIfClosed(),!this.isStopped){this.currentObservers||(this.currentObservers=Array.from(this.observers));for(const s of this.currentObservers)s.next(e)}})}error(e){we(()=>{if(this._throwIfClosed(),!this.isStopped){this.hasError=this.isStopped=!0,this.thrownError=e;const{observers:s}=this;for(;s.length;)s.shift().error(e)}})}complete(){we(()=>{if(this._throwIfClosed(),!this.isStopped){this.isStopped=!0;const{observers:e}=this;for(;e.length;)e.shift().complete()}})}unsubscribe(){this.isStopped=this.closed=!0,this.observers=this.currentObservers=null}get observed(){var e;return(null===(e=this.observers)||void 0===e?void 0:e.length)>0}_trySubscribe(e){return this._throwIfClosed(),super._trySubscribe(e)}_subscribe(e){return this._throwIfClosed(),this._checkFinalizedStatuses(e),this._innerSubscribe(e)}_innerSubscribe(e){const{hasError:s,isStopped:r,observers:o}=this;return s||r?$:(this.currentObservers=null,o.push(e),new k(()=>{this.currentObservers=null,P(o,e)}))}_checkFinalizedStatuses(e){const{hasError:s,thrownError:r,isStopped:o}=this;s?e.error(r):o&&e.complete()}asObservable(){const e=new Ne;return e.source=this,e}}return t.create=(n,e)=>new Xt(n,e),t})();class Xt extends Dt{constructor(n,e){super(),this.destination=n,this.source=e}next(n){var e,s;null===(s=null===(e=this.destination)||void 0===e?void 0:e.next)||void 0===s||s.call(e,n)}error(n){var e,s;null===(s=null===(e=this.destination)||void 0===e?void 0:e.error)||void 0===s||s.call(e,n)}complete(){var n,e;null===(e=null===(n=this.destination)||void 0===n?void 0:n.complete)||void 0===e||e.call(n)}_subscribe(n){var e,s;return null!==(s=null===(e=this.source)||void 0===e?void 0:e.subscribe(n))&&void 0!==s?s:$}}function Et(t){return U(null==t?void 0:t.lift)}function Vt(t){return n=>{if(Et(n))return n.lift(function(e){try{return t(e,this)}catch(s){this.error(s)}});throw new TypeError("Unable to lift unknown Observable type")}}function Ht(t,n,e,s,r){return new ss(t,n,e,s,r)}class ss extends me{constructor(n,e,s,r,o,i){super(n),this.onFinalize=o,this.shouldUnsubscribe=i,this._next=e?function(a){try{e(a)}catch(l){n.error(l)}}:super._next,this._error=r?function(a){try{r(a)}catch(l){n.error(l)}finally{this.unsubscribe()}}:super._error,this._complete=s?function(){try{s()}catch(a){n.error(a)}finally{this.unsubscribe()}}:super._complete}unsubscribe(){var n;if(!this.shouldUnsubscribe||this.shouldUnsubscribe()){const{closed:e}=this;super.unsubscribe(),!e&&(null===(n=this.onFinalize)||void 0===n||n.call(this))}}}function St(t,n){return Vt((e,s)=>{let r=0;e.subscribe(Ht(s,o=>{s.next(t.call(n,o,r++))}))})}function Mr(t){return this instanceof Mr?(this.v=t,this):new Mr(t)}function qs(t,n,e){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var r,s=e.apply(t,n||[]),o=[];return r={},i("next"),i("throw"),i("return"),r[Symbol.asyncIterator]=function(){return this},r;function i(p){s[p]&&(r[p]=function(m){return new Promise(function(y,_){o.push([p,m,y,_])>1||a(p,m)})})}function a(p,m){try{!function l(p){p.value instanceof Mr?Promise.resolve(p.value.v).then(c,d):f(o[0][2],p)}(s[p](m))}catch(y){f(o[0][3],y)}}function c(p){a("next",p)}function d(p){a("throw",p)}function f(p,m){p(m),o.shift(),o.length&&a(o[0][0],o[0][1])}}function xi(t){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var e,n=t[Symbol.asyncIterator];return n?n.call(t):(t=function Js(t){var n="function"==typeof Symbol&&Symbol.iterator,e=n&&t[n],s=0;if(e)return e.call(t);if(t&&"number"==typeof t.length)return{next:function(){return t&&s>=t.length&&(t=void 0),{value:t&&t[s++],done:!t}}};throw new TypeError(n?"Object is not iterable.":"Symbol.iterator is not defined.")}(t),e={},s("next"),s("throw"),s("return"),e[Symbol.asyncIterator]=function(){return this},e);function s(o){e[o]=t[o]&&function(i){return new Promise(function(a,l){!function r(o,i,a,l){Promise.resolve(l).then(function(c){o({value:c,done:a})},i)}(a,l,(i=t[o](i)).done,i.value)})}}}const Ao=t=>t&&"number"==typeof t.length&&"function"!=typeof t;function fa(t){return U(null==t?void 0:t.then)}function Te(t){return U(t[E])}function Ci(t){return Symbol.asyncIterator&&U(null==t?void 0:t[Symbol.asyncIterator])}function pa(t){return new TypeError(`You provided ${null!==t&&"object"==typeof t?"an invalid object":`'${t}'`} where a stream was expected. You can provide an Observable, Promise, ReadableStream, Array, AsyncIterable, or Iterable.`)}const xo=function il(){return"function"==typeof Symbol&&Symbol.iterator?Symbol.iterator:"@@iterator"}();function Mn(t){return U(null==t?void 0:t[xo])}function rs(t){return qs(this,arguments,function*(){const e=t.getReader();try{for(;;){const{value:s,done:r}=yield Mr(e.read());if(r)return yield Mr(void 0);yield yield Mr(s)}}finally{e.releaseLock()}})}function ro(t){return U(null==t?void 0:t.getReader)}function Os(t){if(t instanceof Ne)return t;if(null!=t){if(Te(t))return function al(t){return new Ne(n=>{const e=t[E]();if(U(e.subscribe))return e.subscribe(n);throw new TypeError("Provided object does not correctly implement Symbol.observable")})}(t);if(Ao(t))return function kr(t){return new Ne(n=>{for(let e=0;e<t.length&&!n.closed;e++)n.next(t[e]);n.complete()})}(t);if(fa(t))return function ll(t){return new Ne(n=>{t.then(e=>{n.closed||(n.next(e),n.complete())},e=>n.error(e)).then(null,M)})}(t);if(Ci(t))return ma(t);if(Mn(t))return function Di(t){return new Ne(n=>{for(const e of t)if(n.next(e),n.closed)return;n.complete()})}(t);if(ro(t))return function Ii(t){return ma(rs(t))}(t)}throw pa(t)}function ma(t){return new Ne(n=>{(function Zo(t,n){var e,s,r,o;return function cn(t,n,e,s){return new(e||(e=Promise))(function(o,i){function a(d){try{c(s.next(d))}catch(f){i(f)}}function l(d){try{c(s.throw(d))}catch(f){i(f)}}function c(d){d.done?o(d.value):function r(o){return o instanceof e?o:new e(function(i){i(o)})}(d.value).then(a,l)}c((s=s.apply(t,n||[])).next())})}(this,void 0,void 0,function*(){try{for(e=xi(t);!(s=yield e.next()).done;)if(n.next(s.value),n.closed)return}catch(i){r={error:i}}finally{try{s&&!s.done&&(o=e.return)&&(yield o.call(e))}finally{if(r)throw r.error}}n.complete()})})(t,n).catch(e=>n.error(e))})}function Rs(t,n,e,s=0,r=!1){const o=n.schedule(function(){e(),r?t.add(this.schedule(null,s)):this.unsubscribe()},s);if(t.add(o),!r)return o}function Yn(t,n,e=1/0){return U(n)?Yn((s,r)=>St((o,i)=>n(s,o,r,i))(Os(t(s,r))),e):("number"==typeof n&&(e=n),Vt((s,r)=>function ga(t,n,e,s,r,o,i,a){const l=[];let c=0,d=0,f=!1;const p=()=>{f&&!l.length&&!c&&n.complete()},m=_=>c<s?y(_):l.push(_),y=_=>{o&&n.next(_),c++;let x=!1;Os(e(_,d++)).subscribe(Ht(n,D=>{null==r||r(D),o?m(D):n.next(D)},()=>{x=!0},void 0,()=>{if(x)try{for(c--;l.length&&c<s;){const D=l.shift();i?Rs(n,i,()=>y(D)):y(D)}p()}catch(D){n.error(D)}}))};return t.subscribe(Ht(n,m,()=>{f=!0,p()})),()=>{null==a||a()}}(s,r,t,e)))}function Pr(t=1/0){return Yn(Oe,t)}const $r=new Ne(t=>t.complete());function ya(t){return t&&U(t.schedule)}function wi(t){return t[t.length-1]}function Oo(t){return ya(wi(t))?t.pop():void 0}function Ro(t,n=0){return Vt((e,s)=>{e.subscribe(Ht(s,r=>Rs(s,t,()=>s.next(r),n),()=>Rs(s,t,()=>s.complete(),n),r=>Rs(s,t,()=>s.error(r),n)))})}function va(t,n=0){return Vt((e,s)=>{s.add(t.schedule(()=>e.subscribe(s),n))})}function Si(t,n){if(!t)throw new Error("Iterable cannot be null");return new Ne(e=>{Rs(e,n,()=>{const s=t[Symbol.asyncIterator]();Rs(e,n,()=>{s.next().then(r=>{r.done?e.complete():e.next(r.value)})},0,!0)})})}function Qn(t,n){return n?function xa(t,n){if(null!=t){if(Te(t))return function cl(t,n){return Os(t).pipe(va(n),Ro(n))}(t,n);if(Ao(t))return function zl(t,n){return new Ne(e=>{let s=0;return n.schedule(function(){s===t.length?e.complete():(e.next(t[s++]),e.closed||this.schedule())})})}(t,n);if(fa(t))return function dl(t,n){return Os(t).pipe(va(n),Ro(n))}(t,n);if(Ci(t))return Si(t,n);if(Mn(t))return function Yo(t,n){return new Ne(e=>{let s;return Rs(e,n,()=>{s=t[xo](),Rs(e,n,()=>{let r,o;try{({value:r,done:o}=s.next())}catch(i){return void e.error(i)}o?e.complete():e.next(r)},0,!0)}),()=>U(null==s?void 0:s.return)&&s.return()})}(t,n);if(ro(t))return function hl(t,n){return Si(rs(t),n)}(t,n)}throw pa(t)}(t,n):Os(t)}function Qo(t,n,...e){if(!0===n)return void t();if(!1===n)return;const s=new K({next:()=>{s.unsubscribe(),t()}});return n(...e).subscribe(s)}function Sn(t){for(let n in t)if(t[n]===Sn)return n;throw Error("Could not find renamed property on target object.")}function Tn(t){if("string"==typeof t)return t;if(Array.isArray(t))return"["+t.map(Tn).join(", ")+"]";if(null==t)return""+t;if(t.overriddenName)return`${t.overriddenName}`;if(t.name)return`${t.name}`;const n=t.toString();if(null==n)return""+n;const e=n.indexOf("\n");return-1===e?n:n.substring(0,e)}function Ni(t,n){return null==t||""===t?null===n?"":n:null==n||""===n?t:t+" "+n}const Jo=Sn({__forward_ref__:Sn});function ba(t){return t.__forward_ref__=ba,t.toString=function(){return Tn(this())},t}function sn(t){return function fl(t){return"function"==typeof t&&t.hasOwnProperty(Jo)&&t.__forward_ref__===ba}(t)?t():t}class wn extends Error{constructor(n,e){super(function Mo(t,n){return`NG0${Math.abs(t)}${n?": "+n:""}`}(n,e)),this.code=n}}function ps(t){return"function"==typeof t?t.name||t.toString():"object"==typeof t&&null!=t&&"function"==typeof t.type?t.type.name||t.type.toString():function an(t){return"string"==typeof t?t:null==t?"":String(t)}(t)}function Ir(t,n){const e=n?` in ${n}`:"";throw new wn(-201,`No provider for ${ps(t)} found${e}`)}function is(t,n){null==t&&function Bn(t,n,e,s){throw new Error(`ASSERTION ERROR: ${t}`+(null==s?"":` [Expected=> ${e} ${s} ${n} <=Actual]`))}(n,t,null,"!=")}function T(t){return{token:t.token,providedIn:t.providedIn||null,factory:t.factory,value:void 0}}function j(t){return{providers:t.providers||[],imports:t.imports||[]}}function fe(t){return he(t,ft)||he(t,qt)}function he(t,n){return t.hasOwnProperty(n)?t[n]:null}function it(t){return t&&(t.hasOwnProperty(Tt)||t.hasOwnProperty(hn))?t[Tt]:null}const ft=Sn({\u0275prov:Sn}),Tt=Sn({\u0275inj:Sn}),qt=Sn({ngInjectableDef:Sn}),hn=Sn({ngInjectorDef:Sn});var bt=(()=>((bt=bt||{})[bt.Default=0]="Default",bt[bt.Host=1]="Host",bt[bt.Self=2]="Self",bt[bt.SkipSelf=4]="SkipSelf",bt[bt.Optional=8]="Optional",bt))();let en;function Cs(t){const n=en;return en=t,n}function Kr(t,n,e){const s=fe(t);return s&&"root"==s.providedIn?void 0===s.value?s.value=s.factory():s.value:e&bt.Optional?null:void 0!==n?n:void Ir(Tn(t),"Injector")}function Fs(t){return{toString:t}.toString()}var Gs=(()=>((Gs=Gs||{})[Gs.OnPush=0]="OnPush",Gs[Gs.Default=1]="Default",Gs))(),wr=(()=>{return(t=wr||(wr={}))[t.Emulated=0]="Emulated",t[t.None=2]="None",t[t.ShadowDom=3]="ShadowDom",wr;var t})();const yl="undefined"!=typeof globalThis&&globalThis,Ru="undefined"!=typeof window&&window,xc="undefined"!=typeof self&&"undefined"!=typeof WorkerGlobalScope&&self instanceof WorkerGlobalScope&&self,Gn=yl||"undefined"!=typeof global&&global||Ru||xc,Bt={},Wt=[],Fr=Sn({\u0275cmp:Sn}),En=Sn({\u0275dir:Sn}),ei=Sn({\u0275pipe:Sn}),ti=Sn({\u0275mod:Sn}),Ls=Sn({\u0275fac:Sn}),oo=Sn({__NG_ELEMENT_ID__:Sn});let Mi=0;function jr(t){return Fs(()=>{const e={},s={type:t.type,providersResolver:null,decls:t.decls,vars:t.vars,factory:null,template:t.template||null,consts:t.consts||null,ngContentSelectors:t.ngContentSelectors,hostBindings:t.hostBindings||null,hostVars:t.hostVars||0,hostAttrs:t.hostAttrs||null,contentQueries:t.contentQueries||null,declaredInputs:e,inputs:null,outputs:null,exportAs:t.exportAs||null,onPush:t.changeDetection===Gs.OnPush,directiveDefs:null,pipeDefs:null,selectors:t.selectors||Wt,viewQuery:t.viewQuery||null,features:t.features||null,data:t.data||{},encapsulation:t.encapsulation||wr.Emulated,id:"c",styles:t.styles||Wt,_:null,setInput:null,schemas:t.schemas||null,tView:null},r=t.directives,o=t.features,i=t.pipes;return s.id+=Mi++,s.inputs=Ta(t.inputs,e),s.outputs=Ta(t.outputs),o&&o.forEach(a=>a(s)),s.directiveDefs=r?()=>("function"==typeof r?r():r).map(Ia):null,s.pipeDefs=i?()=>("function"==typeof i?i():i).map(xl):null,s})}function Ia(t){return Ms(t)||function ao(t){return t[En]||null}(t)}function xl(t){return function bo(t){return t[ei]||null}(t)}const Mu={};function Sr(t){return Fs(()=>{const n={type:t.type,bootstrap:t.bootstrap||Wt,declarations:t.declarations||Wt,imports:t.imports||Wt,exports:t.exports||Wt,transitiveCompileScopes:null,schemas:t.schemas||null,id:t.id||null};return null!=t.id&&(Mu[t.id]=t.type),n})}function Ta(t,n){if(null==t)return Bt;const e={};for(const s in t)if(t.hasOwnProperty(s)){let r=t[s],o=r;Array.isArray(r)&&(o=r[1],r=r[0]),e[r]=s,n&&(n[r]=o)}return e}const or=jr;function Ms(t){return t[Fr]||null}function Bs(t,n){const e=t[ti]||null;if(!e&&!0===n)throw new Error(`Type ${Tn(t)} does not have '\u0275mod' property.`);return e}function Co(t){return Array.isArray(t)&&"object"==typeof t[1]}function Lr(t){return Array.isArray(t)&&!0===t[1]}function El(t){return 0!=(8&t.flags)}function si(t){return 2==(2&t.flags)}function Zl(t){return 1==(1&t.flags)}function lo(t){return null!==t.template}function ar(t){return 0!=(512&t[2])}function ri(t,n){return t.hasOwnProperty(Ls)?t[Ls]:null}class Zd{constructor(n,e,s){this.previousValue=n,this.currentValue=e,this.firstChange=s}isFirstChange(){return this.firstChange}}function Ql(t){return t.type.prototype.ngOnChanges&&(t.setInput=Bu),Yd}function Yd(){const t=Ma(this),n=null==t?void 0:t.current;if(n){const e=t.previous;if(e===Bt)t.previous=n;else for(let s in n)e[s]=n[s];t.current=null,this.ngOnChanges(n)}}function Bu(t,n,e,s){const r=Ma(t)||function Qd(t,n){return t[Jl]=n}(t,{previous:Bt,current:null}),o=r.current||(r.current={}),i=r.previous,a=this.declaredInputs[e],l=i[a];o[a]=new Zd(l&&l.currentValue,n,i===Bt),t[s]=n}const Jl="__ngSimpleChanges__";function Ma(t){return t[Jl]||null}const A="math";let Ee;function Ye(t){return!!t.listen}const yt={createRenderer:(t,n)=>function Ve(){return void 0!==Ee?Ee:"undefined"!=typeof document?document:void 0}()};function xt(t){for(;Array.isArray(t);)t=t[0];return t}function nn(t,n){return xt(n[t.index])}function ms(t,n){return t.data[n]}function gr(t,n){const e=n[t];return Co(e)?e:e[0]}function yr(t){return 4==(4&t[2])}function oi(t){return 128==(128&t[2])}function ko(t,n){return null==n?null:t[n]}function Yf(t){t[18]=0}function qd(t,n){t[5]+=n;let e=t,s=t[3];for(;null!==s&&(1===n&&1===e[5]||-1===n&&0===e[5]);)s[5]+=n,e=s,s=s[3]}const fn={lFrame:rp(null),bindingsEnabled:!0,isInCheckNoChangesMode:!1};function eh(){return fn.bindingsEnabled}function pt(){return fn.lFrame.lView}function Pn(){return fn.lFrame.tView}function tr(){let t=Jf();for(;null!==t&&64===t.type;)t=t.parent;return t}function Jf(){return fn.lFrame.currentTNode}function ii(t,n){const e=fn.lFrame;e.currentTNode=t,e.isParent=n}function th(){return fn.lFrame.isParent}function ql(){return fn.isInCheckNoChangesMode}function Dc(t){fn.isInCheckNoChangesMode=t}function Ug(t,n){const e=fn.lFrame;e.bindingIndex=e.bindingRootIndex=t,sh(n)}function sh(t){fn.lFrame.currentDirectiveIndex=t}function tp(){return fn.lFrame.currentQueryIndex}function rh(t){fn.lFrame.currentQueryIndex=t}function zg(t){const n=t[1];return 2===n.type?n.declTNode:1===n.type?t[6]:null}function np(t,n,e){if(e&bt.SkipSelf){let r=n,o=t;for(;!(r=r.parent,null!==r||e&bt.Host||(r=zg(o),null===r||(o=o[15],10&r.type))););if(null===r)return!1;n=r,t=o}const s=fn.lFrame=sp();return s.currentTNode=n,s.lView=t,!0}function Ic(t){const n=sp(),e=t[1];fn.lFrame=n,n.currentTNode=e.firstChild,n.lView=t,n.tView=e,n.contextLView=t,n.bindingIndex=e.bindingStartIndex,n.inI18n=!1}function sp(){const t=fn.lFrame,n=null===t?null:t.child;return null===n?rp(t):n}function rp(t){const n={currentTNode:null,isParent:!0,lView:null,tView:null,selectedIndex:-1,contextLView:null,elementDepthCount:0,currentNamespace:null,currentDirectiveIndex:-1,bindingRootIndex:-1,bindingIndex:-1,currentQueryIndex:0,parent:t,child:null,inI18n:!1};return null!==t&&(t.child=n),n}function op(){const t=fn.lFrame;return fn.lFrame=t.parent,t.currentTNode=null,t.lView=null,t}const ip=op;function Tc(){const t=op();t.isParent=!0,t.tView=null,t.selectedIndex=-1,t.contextLView=null,t.elementDepthCount=0,t.currentDirectiveIndex=-1,t.currentNamespace=null,t.bindingRootIndex=-1,t.bindingIndex=-1,t.currentQueryIndex=0}function Ur(){return fn.lFrame.selectedIndex}function Pa(t){fn.lFrame.selectedIndex=t}function wc(t,n){for(let e=n.directiveStart,s=n.directiveEnd;e<s;e++){const o=t.data[e].type.prototype,{ngAfterContentInit:i,ngAfterContentChecked:a,ngAfterViewInit:l,ngAfterViewChecked:c,ngOnDestroy:d}=o;i&&(t.contentHooks||(t.contentHooks=[])).push(-e,i),a&&((t.contentHooks||(t.contentHooks=[])).push(e,a),(t.contentCheckHooks||(t.contentCheckHooks=[])).push(e,a)),l&&(t.viewHooks||(t.viewHooks=[])).push(-e,l),c&&((t.viewHooks||(t.viewHooks=[])).push(e,c),(t.viewCheckHooks||(t.viewCheckHooks=[])).push(e,c)),null!=d&&(t.destroyHooks||(t.destroyHooks=[])).push(e,d)}}function Sc(t,n,e){ap(t,n,3,e)}function Nc(t,n,e,s){(3&t[2])===e&&ap(t,n,e,s)}function oh(t,n){let e=t[2];(3&e)===n&&(e&=2047,e+=1,t[2]=e)}function ap(t,n,e,s){const o=null!=s?s:-1,i=n.length-1;let a=0;for(let l=void 0!==s?65535&t[18]:0;l<i;l++)if("number"==typeof n[l+1]){if(a=n[l],null!=s&&a>=s)break}else n[l]<0&&(t[18]+=65536),(a<o||-1==o)&&(Zg(t,e,n,l),t[18]=(4294901760&t[18])+l+2),l++}function Zg(t,n,e,s){const r=e[s]<0,o=e[s+1],a=t[r?-e[s]:e[s]];if(r){if(t[2]>>11<t[18]>>16&&(3&t[2])===n){t[2]+=2048;try{o.call(a)}finally{}}}else try{o.call(a)}finally{}}class zu{constructor(n,e,s){this.factory=n,this.resolving=!1,this.canSeeViewProviders=e,this.injectImpl=s}}function Ac(t,n,e){const s=Ye(t);let r=0;for(;r<e.length;){const o=e[r];if("number"==typeof o){if(0!==o)break;r++;const i=e[r++],a=e[r++],l=e[r++];s?t.setAttribute(n,a,l,i):n.setAttributeNS(i,a,l)}else{const i=o,a=e[++r];ah(i)?s&&t.setProperty(n,i,a):s?t.setAttribute(n,i,a):n.setAttribute(i,a),r++}}return r}function lp(t){return 3===t||4===t||6===t}function ah(t){return 64===t.charCodeAt(0)}function Oc(t,n){if(null!==n&&0!==n.length)if(null===t||0===t.length)t=n.slice();else{let e=-1;for(let s=0;s<n.length;s++){const r=n[s];"number"==typeof r?e=r:0===e||up(t,e,r,null,-1===e||2===e?n[++s]:null)}}return t}function up(t,n,e,s,r){let o=0,i=t.length;if(-1===n)i=-1;else for(;o<t.length;){const a=t[o++];if("number"==typeof a){if(a===n){i=-1;break}if(a>n){i=o-1;break}}}for(;o<t.length;){const a=t[o];if("number"==typeof a)break;if(a===e){if(null===s)return void(null!==r&&(t[o+1]=r));if(s===t[o+1])return void(t[o+2]=r)}o++,null!==s&&o++,null!==r&&o++}-1!==i&&(t.splice(i,0,n),o=i+1),t.splice(o++,0,e),null!==s&&t.splice(o++,0,s),null!==r&&t.splice(o++,0,r)}function cp(t){return-1!==t}function tu(t){return 32767&t}function nu(t,n){let e=function e0(t){return t>>16}(t),s=n;for(;e>0;)s=s[15],e--;return s}let lh=!0;function Rc(t){const n=lh;return lh=t,n}let t0=0;function Gu(t,n){const e=ch(t,n);if(-1!==e)return e;const s=n[1];s.firstCreatePass&&(t.injectorIndex=n.length,uh(s.data,t),uh(n,null),uh(s.blueprint,null));const r=Mc(t,n),o=t.injectorIndex;if(cp(r)){const i=tu(r),a=nu(r,n),l=a[1].data;for(let c=0;c<8;c++)n[o+c]=a[i+c]|l[i+c]}return n[o+8]=r,o}function uh(t,n){t.push(0,0,0,0,0,0,0,0,n)}function ch(t,n){return-1===t.injectorIndex||t.parent&&t.parent.injectorIndex===t.injectorIndex||null===n[t.injectorIndex+8]?-1:t.injectorIndex}function Mc(t,n){if(t.parent&&-1!==t.parent.injectorIndex)return t.parent.injectorIndex;let e=0,s=null,r=n;for(;null!==r;){const o=r[1],i=o.type;if(s=2===i?o.declTNode:1===i?r[6]:null,null===s)return-1;if(e++,r=r[15],-1!==s.injectorIndex)return s.injectorIndex|e<<16}return-1}function kc(t,n,e){!function n0(t,n,e){let s;"string"==typeof e?s=e.charCodeAt(0)||0:e.hasOwnProperty(oo)&&(s=e[oo]),null==s&&(s=e[oo]=t0++);const r=255&s;n.data[t+(r>>5)]|=1<<r}(t,n,e)}function ne(t,n,e){if(e&bt.Optional)return t;Ir(n,"NodeInjector")}function ee(t,n,e,s){if(e&bt.Optional&&void 0===s&&(s=null),0==(e&(bt.Self|bt.Host))){const r=t[9],o=Cs(void 0);try{return r?r.get(n,s,e&bt.Optional):Kr(n,s,e&bt.Optional)}finally{Cs(o)}}return ne(s,n,e)}function se(t,n,e,s=bt.Default,r){if(null!==t){const o=function je(t){if("string"==typeof t)return t.charCodeAt(0)||0;const n=t.hasOwnProperty(oo)?t[oo]:void 0;return"number"==typeof n?n>=0?255&n:ue:n}(e);if("function"==typeof o){if(!np(n,t,s))return s&bt.Host?ne(r,e,s):ee(n,e,s,r);try{const i=o(s);if(null!=i||s&bt.Optional)return i;Ir(e)}finally{ip()}}else if("number"==typeof o){let i=null,a=ch(t,n),l=-1,c=s&bt.Host?n[16][6]:null;for((-1===a||s&bt.SkipSelf)&&(l=-1===a?Mc(t,n):n[a+8],-1!==l&&ht(s,!1)?(i=n[1],a=tu(l),n=nu(l,n)):a=-1);-1!==a;){const d=n[1];if(ct(o,a,d.data)){const f=ge(a,n,e,i,s,c);if(f!==ie)return f}l=n[a+8],-1!==l&&ht(s,n[1].data[a+8]===c)&&ct(o,a,n)?(i=d,a=tu(l),n=nu(l,n)):a=-1}}}return ee(n,e,s,r)}const ie={};function ue(){return new Mt(tr(),pt())}function ge(t,n,e,s,r,o){const i=n[1],a=i.data[t+8],d=Se(a,i,e,null==s?si(a)&&lh:s!=i&&0!=(3&a.type),r&bt.Host&&o===a);return null!==d?We(n,i,d,a):ie}function Se(t,n,e,s,r){const o=t.providerIndexes,i=n.data,a=1048575&o,l=t.directiveStart,d=o>>20,p=r?a+d:t.directiveEnd;for(let m=s?a:a+d;m<p;m++){const y=i[m];if(m<l&&e===y||m>=l&&y.type===e)return m}if(r){const m=i[l];if(m&&lo(m)&&m.type===e)return l}return null}function We(t,n,e,s){let r=t[e];const o=n.data;if(function Yg(t){return t instanceof zu}(r)){const i=r;i.resolving&&function Ai(t,n){const e=n?`. Dependency path: ${n.join(" > ")} > ${t}`:"";throw new wn(-200,`Circular dependency in DI detected for ${t}${e}`)}(ps(o[e]));const a=Rc(i.canSeeViewProviders);i.resolving=!0;const l=i.injectImpl?Cs(i.injectImpl):null;np(t,s,bt.Default);try{r=t[e]=i.factory(void 0,o,t,s),n.firstCreatePass&&e>=s.directiveStart&&function Xg(t,n,e){const{ngOnChanges:s,ngOnInit:r,ngDoCheck:o}=n.type.prototype;if(s){const i=Ql(n);(e.preOrderHooks||(e.preOrderHooks=[])).push(t,i),(e.preOrderCheckHooks||(e.preOrderCheckHooks=[])).push(t,i)}r&&(e.preOrderHooks||(e.preOrderHooks=[])).push(0-t,r),o&&((e.preOrderHooks||(e.preOrderHooks=[])).push(t,o),(e.preOrderCheckHooks||(e.preOrderCheckHooks=[])).push(t,o))}(e,o[e],n)}finally{null!==l&&Cs(l),Rc(a),i.resolving=!1,ip()}}return r}function ct(t,n,e){return!!(e[n+(t>>5)]&1<<t)}function ht(t,n){return!(t&bt.Self||t&bt.Host&&n)}class Mt{constructor(n,e){this._tNode=n,this._lView=e}get(n,e,s){return se(this._tNode,this._lView,n,s,e)}}const Dn="__parameters__";function ls(t,n,e){return Fs(()=>{const s=function lr(t){return function(...e){if(t){const s=t(...e);for(const r in s)this[r]=s[r]}}}(n);function r(...o){if(this instanceof r)return s.apply(this,o),this;const i=new r(...o);return a.annotation=i,a;function a(l,c,d){const f=l.hasOwnProperty(Dn)?l[Dn]:Object.defineProperty(l,Dn,{value:[]})[Dn];for(;f.length<=d;)f.push(null);return(f[d]=f[d]||[]).push(i),l}}return e&&(r.prototype=Object.create(e.prototype)),r.prototype.ngMetadataName=t,r.annotationCls=r,r})}class Zt{constructor(n,e){this._desc=n,this.ngMetadataName="InjectionToken",this.\u0275prov=void 0,"number"==typeof e?this.__NG_ELEMENT_ID__=e:void 0!==e&&(this.\u0275prov=T({token:this,providedIn:e.providedIn||"root",factory:e.factory}))}toString(){return`InjectionToken ${this._desc}`}}const us=new Zt("AnalyzeForEntryComponents");function li(t,n){void 0===n&&(n=t);for(let e=0;e<t.length;e++){let s=t[e];Array.isArray(s)?(n===t&&(n=t.slice(0,e)),li(s,n)):n!==t&&n.push(s)}return n}function Ba(t,n){t.forEach(e=>Array.isArray(e)?Ba(e,n):n(e))}function FE(t,n,e){n>=t.length?t.push(e):t.splice(n,0,e)}function fp(t,n){return n>=t.length-1?t.pop():t.splice(n,1)[0]}const hh={},o0="__NG_DI_FLAG__",mp="ngTempTokenPath",SO=/\n/gm,zE="__source",AO=Sn({provide:String,useValue:Sn});let fh;function WE(t){const n=fh;return fh=t,n}function OO(t,n=bt.Default){if(void 0===fh)throw new wn(203,"");return null===fh?Kr(t,void 0,n):fh.get(t,n&bt.Optional?null:void 0,n)}function rn(t,n=bt.Default){return(function ts(){return en}()||OO)(sn(t),n)}const RO=rn;function a0(t){const n=[];for(let e=0;e<t.length;e++){const s=sn(t[e]);if(Array.isArray(s)){if(0===s.length)throw new wn(900,"");let r,o=bt.Default;for(let i=0;i<s.length;i++){const a=s[i],l=MO(a);"number"==typeof l?-1===l?r=a.token:o|=l:r=a}n.push(rn(r,o))}else n.push(rn(s))}return n}function ph(t,n){return t[o0]=n,t.prototype[o0]=n,t}function MO(t){return t[o0]}const gp=ph(ls("Inject",t=>({token:t})),-1),su=ph(ls("Optional"),8),mh=ph(ls("SkipSelf"),4);let vp;function Fc(t){var n;return(null===(n=function u0(){if(void 0===vp&&(vp=null,Gn.trustedTypes))try{vp=Gn.trustedTypes.createPolicy("angular",{createHTML:t=>t,createScript:t=>t,createScriptURL:t=>t})}catch(t){}return vp}())||void 0===n?void 0:n.createHTML(t))||t}class Ku{constructor(n){this.changingThisBreaksApplicationSecurity=n}toString(){return`SafeValue must use [property]=binding: ${this.changingThisBreaksApplicationSecurity} (see https://g.co/ng/security#xss)`}}class KO extends Ku{getTypeName(){return"HTML"}}class jO extends Ku{getTypeName(){return"Style"}}class XO extends Ku{getTypeName(){return"Script"}}class ZO extends Ku{getTypeName(){return"URL"}}class YO extends Ku{getTypeName(){return"ResourceURL"}}function Lo(t){return t instanceof Ku?t.changingThisBreaksApplicationSecurity:t}function Ua(t,n){const e=JE(t);if(null!=e&&e!==n){if("ResourceURL"===e&&"URL"===n)return!0;throw new Error(`Required a safe ${n}, got a ${e} (see https://g.co/ng/security#xss)`)}return e===n}function JE(t){return t instanceof Ku&&t.getTypeName()||null}class nR{constructor(n){this.inertDocumentHelper=n}getInertBodyElement(n){n="<body><remove></remove>"+n;try{const e=(new window.DOMParser).parseFromString(Fc(n),"text/html").body;return null===e?this.inertDocumentHelper.getInertBodyElement(n):(e.removeChild(e.firstChild),e)}catch(e){return null}}}class sR{constructor(n){if(this.defaultDoc=n,this.inertDocument=this.defaultDoc.implementation.createHTMLDocument("sanitization-inert"),null==this.inertDocument.body){const e=this.inertDocument.createElement("html");this.inertDocument.appendChild(e);const s=this.inertDocument.createElement("body");e.appendChild(s)}}getInertBodyElement(n){const e=this.inertDocument.createElement("template");if("content"in e)return e.innerHTML=Fc(n),e;const s=this.inertDocument.createElement("body");return s.innerHTML=Fc(n),this.defaultDoc.documentMode&&this.stripCustomNsAttrs(s),s}stripCustomNsAttrs(n){const e=n.attributes;for(let r=e.length-1;0<r;r--){const i=e.item(r).name;("xmlns:ns1"===i||0===i.indexOf("ns1:"))&&n.removeAttribute(i)}let s=n.firstChild;for(;s;)s.nodeType===Node.ELEMENT_NODE&&this.stripCustomNsAttrs(s),s=s.nextSibling}}const oR=/^(?:(?:https?|mailto|ftp|tel|file|sms):|[^&:/?#]*(?:[/?#]|$))/gi,iR=/^data:(?:image\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\/(?:mpeg|mp4|ogg|webm)|audio\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\/]+=*$/i;function yh(t){return(t=String(t)).match(oR)||t.match(iR)?t:"unsafe:"+t}function Va(t){const n={};for(const e of t.split(","))n[e]=!0;return n}function vh(...t){const n={};for(const e of t)for(const s in e)e.hasOwnProperty(s)&&(n[s]=!0);return n}const t_=Va("area,br,col,hr,img,wbr"),n_=Va("colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr"),s_=Va("rp,rt"),d0=vh(t_,vh(n_,Va("address,article,aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul")),vh(s_,Va("a,abbr,acronym,audio,b,bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video")),vh(s_,n_)),h0=Va("background,cite,href,itemtype,longdesc,poster,src,xlink:href"),f0=Va("srcset"),r_=vh(h0,f0,Va("abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,valign,value,vspace,width"),Va("aria-activedescendant,aria-atomic,aria-autocomplete,aria-busy,aria-checked,aria-colcount,aria-colindex,aria-colspan,aria-controls,aria-current,aria-describedby,aria-details,aria-disabled,aria-dropeffect,aria-errormessage,aria-expanded,aria-flowto,aria-grabbed,aria-haspopup,aria-hidden,aria-invalid,aria-keyshortcuts,aria-label,aria-labelledby,aria-level,aria-live,aria-modal,aria-multiline,aria-multiselectable,aria-orientation,aria-owns,aria-placeholder,aria-posinset,aria-pressed,aria-readonly,aria-relevant,aria-required,aria-roledescription,aria-rowcount,aria-rowindex,aria-rowspan,aria-selected,aria-setsize,aria-sort,aria-valuemax,aria-valuemin,aria-valuenow,aria-valuetext")),aR=Va("script,style,template");class lR{constructor(){this.sanitizedSomething=!1,this.buf=[]}sanitizeChildren(n){let e=n.firstChild,s=!0;for(;e;)if(e.nodeType===Node.ELEMENT_NODE?s=this.startElement(e):e.nodeType===Node.TEXT_NODE?this.chars(e.nodeValue):this.sanitizedSomething=!0,s&&e.firstChild)e=e.firstChild;else for(;e;){e.nodeType===Node.ELEMENT_NODE&&this.endElement(e);let r=this.checkClobberedElement(e,e.nextSibling);if(r){e=r;break}e=this.checkClobberedElement(e,e.parentNode)}return this.buf.join("")}startElement(n){const e=n.nodeName.toLowerCase();if(!d0.hasOwnProperty(e))return this.sanitizedSomething=!0,!aR.hasOwnProperty(e);this.buf.push("<"),this.buf.push(e);const s=n.attributes;for(let r=0;r<s.length;r++){const o=s.item(r),i=o.name,a=i.toLowerCase();if(!r_.hasOwnProperty(a)){this.sanitizedSomething=!0;continue}let l=o.value;h0[a]&&(l=yh(l)),f0[a]&&(t=l,l=(t=String(t)).split(",").map(n=>yh(n.trim())).join(", ")),this.buf.push(" ",i,'="',o_(l),'"')}var t;return this.buf.push(">"),!0}endElement(n){const e=n.nodeName.toLowerCase();d0.hasOwnProperty(e)&&!t_.hasOwnProperty(e)&&(this.buf.push("</"),this.buf.push(e),this.buf.push(">"))}chars(n){this.buf.push(o_(n))}checkClobberedElement(n,e){if(e&&(n.compareDocumentPosition(e)&Node.DOCUMENT_POSITION_CONTAINED_BY)===Node.DOCUMENT_POSITION_CONTAINED_BY)throw new Error(`Failed to sanitize html because the element is clobbered: ${n.outerHTML}`);return e}}const uR=/[\uD800-\uDBFF][\uDC00-\uDFFF]/g,cR=/([^\#-~ |!])/g;function o_(t){return t.replace(/&/g,"&amp;").replace(uR,function(n){return"&#"+(1024*(n.charCodeAt(0)-55296)+(n.charCodeAt(1)-56320)+65536)+";"}).replace(cR,function(n){return"&#"+n.charCodeAt(0)+";"}).replace(/</g,"&lt;").replace(/>/g,"&gt;")}let Ep;function i_(t,n){let e=null;try{Ep=Ep||function qE(t){const n=new sR(t);return function rR(){try{return!!(new window.DOMParser).parseFromString(Fc(""),"text/html")}catch(t){return!1}}()?new nR(n):n}(t);let s=n?String(n):"";e=Ep.getInertBodyElement(s);let r=5,o=s;do{if(0===r)throw new Error("Failed to sanitize html because the input is unstable");r--,s=o,o=e.innerHTML,e=Ep.getInertBodyElement(s)}while(s!==o);return Fc((new lR).sanitizeChildren(p0(e)||e))}finally{if(e){const s=p0(e)||e;for(;s.firstChild;)s.removeChild(s.firstChild)}}}function p0(t){return"content"in t&&function dR(t){return t.nodeType===Node.ELEMENT_NODE&&"TEMPLATE"===t.nodeName}(t)?t.content:null}var ys=(()=>((ys=ys||{})[ys.NONE=0]="NONE",ys[ys.HTML=1]="HTML",ys[ys.STYLE=2]="STYLE",ys[ys.SCRIPT=3]="SCRIPT",ys[ys.URL=4]="URL",ys[ys.RESOURCE_URL=5]="RESOURCE_URL",ys))();const u_="__ngContext__";function Qr(t,n){t[u_]=n}function y0(t){const n=function Eh(t){return t[u_]||null}(t);return n?Array.isArray(n)?n:n.lView:null}function x0(t){return t.ngOriginalError}function SR(t,...n){t.error(...n)}class _h{constructor(){this._console=console}handleError(n){const e=this._findOriginalError(n),s=function wR(t){return t&&t.ngErrorLogger||SR}(n);s(this._console,"ERROR",n),e&&s(this._console,"ORIGINAL ERROR",e)}_findOriginalError(n){let e=n&&x0(n);for(;e&&x0(e);)e=x0(e);return e||null}}const LR=(()=>("undefined"!=typeof requestAnimationFrame&&requestAnimationFrame||setTimeout).bind(Gn))();function za(t){return t instanceof Function?t():t}var Bo=(()=>((Bo=Bo||{})[Bo.Important=1]="Important",Bo[Bo.DashCase=2]="DashCase",Bo))();function _0(t,n){return undefined(t,n)}function bh(t){const n=t[3];return Lr(n)?n[3]:n}function b0(t){return v_(t[13])}function C0(t){return v_(t[4])}function v_(t){for(;null!==t&&!Lr(t);)t=t[4];return t}function Bc(t,n,e,s,r){if(null!=s){let o,i=!1;Lr(s)?o=s:Co(s)&&(i=!0,s=s[0]);const a=xt(s);0===t&&null!==e?null==r?D_(n,e,a):ju(n,e,a,r||null,!0):1===t&&null!==e?ju(n,e,a,r||null,!0):2===t?function O_(t,n,e){const s=_p(t,n);s&&function JR(t,n,e,s){Ye(t)?t.removeChild(n,e,s):n.removeChild(e)}(t,s,n,e)}(n,a,i):3===t&&n.destroyNode(a),null!=o&&function tM(t,n,e,s,r){const o=e[7];o!==xt(e)&&Bc(n,t,s,o,r);for(let a=10;a<e.length;a++){const l=e[a];Ch(l[1],l,t,n,s,o)}}(n,t,o,e,r)}}function I0(t,n,e){if(Ye(t))return t.createElement(n,e);{const s=null!==e?function te(t){const n=t.toLowerCase();return"svg"===n?"http://www.w3.org/2000/svg":n===A?"http://www.w3.org/1998/MathML/":null}(e):null;return null===s?t.createElement(n):t.createElementNS(s,n)}}function E_(t,n){const e=t[9],s=e.indexOf(n),r=n[3];1024&n[2]&&(n[2]&=-1025,qd(r,-1)),e.splice(s,1)}function T0(t,n){if(t.length<=10)return;const e=10+n,s=t[e];if(s){const r=s[17];null!==r&&r!==t&&E_(r,s),n>0&&(t[e-1][4]=s[4]);const o=fp(t,10+n);!function GR(t,n){Ch(t,n,n[11],2,null,null),n[0]=null,n[6]=null}(s[1],s);const i=o[19];null!==i&&i.detachView(o[1]),s[3]=null,s[4]=null,s[2]&=-129}return s}function __(t,n){if(!(256&n[2])){const e=n[11];Ye(e)&&e.destroyNode&&Ch(t,n,e,3,null,null),function jR(t){let n=t[13];if(!n)return w0(t[1],t);for(;n;){let e=null;if(Co(n))e=n[13];else{const s=n[10];s&&(e=s)}if(!e){for(;n&&!n[4]&&n!==t;)Co(n)&&w0(n[1],n),n=n[3];null===n&&(n=t),Co(n)&&w0(n[1],n),e=n&&n[4]}n=e}}(n)}}function w0(t,n){if(!(256&n[2])){n[2]&=-129,n[2]|=256,function QR(t,n){let e;if(null!=t&&null!=(e=t.destroyHooks))for(let s=0;s<e.length;s+=2){const r=n[e[s]];if(!(r instanceof zu)){const o=e[s+1];if(Array.isArray(o))for(let i=0;i<o.length;i+=2){const a=r[o[i]],l=o[i+1];try{l.call(a)}finally{}}else try{o.call(r)}finally{}}}}(t,n),function YR(t,n){const e=t.cleanup,s=n[7];let r=-1;if(null!==e)for(let o=0;o<e.length-1;o+=2)if("string"==typeof e[o]){const i=e[o+1],a="function"==typeof i?i(n):xt(n[i]),l=s[r=e[o+2]],c=e[o+3];"boolean"==typeof c?a.removeEventListener(e[o],l,c):c>=0?s[r=c]():s[r=-c].unsubscribe(),o+=2}else{const i=s[r=e[o+1]];e[o].call(i)}if(null!==s){for(let o=r+1;o<s.length;o++)s[o]();n[7]=null}}(t,n),1===n[1].type&&Ye(n[11])&&n[11].destroy();const e=n[17];if(null!==e&&Lr(n[3])){e!==n[3]&&E_(e,n);const s=n[19];null!==s&&s.detachView(t)}}}function b_(t,n,e){return function C_(t,n,e){let s=n;for(;null!==s&&40&s.type;)s=(n=s).parent;if(null===s)return e[0];if(2&s.flags){const r=t.data[s.directiveStart].encapsulation;if(r===wr.None||r===wr.Emulated)return null}return nn(s,e)}(t,n.parent,e)}function ju(t,n,e,s,r){Ye(t)?t.insertBefore(n,e,s,r):n.insertBefore(e,s,r)}function D_(t,n,e){Ye(t)?t.appendChild(n,e):n.appendChild(e)}function I_(t,n,e,s,r){null!==s?ju(t,n,e,s,r):D_(t,n,e)}function _p(t,n){return Ye(t)?t.parentNode(n):n.parentNode}let S_=function w_(t,n,e){return 40&t.type?nn(t,e):null};function bp(t,n,e,s){const r=b_(t,s,n),o=n[11],a=function T_(t,n,e){return S_(t,n,e)}(s.parent||n[6],s,n);if(null!=r)if(Array.isArray(e))for(let l=0;l<e.length;l++)I_(o,r,e[l],a,!1);else I_(o,r,e,a,!1)}function Cp(t,n){if(null!==n){const e=n.type;if(3&e)return nn(n,t);if(4&e)return N0(-1,t[n.index]);if(8&e){const s=n.child;if(null!==s)return Cp(t,s);{const r=t[n.index];return Lr(r)?N0(-1,r):xt(r)}}if(32&e)return _0(n,t)()||xt(t[n.index]);{const s=A_(t,n);return null!==s?Array.isArray(s)?s[0]:Cp(bh(t[16]),s):Cp(t,n.next)}}return null}function A_(t,n){return null!==n?t[16][6].projection[n.projection]:null}function N0(t,n){const e=10+t+1;if(e<n.length){const s=n[e],r=s[1].firstChild;if(null!==r)return Cp(s,r)}return n[7]}function A0(t,n,e,s,r,o,i){for(;null!=e;){const a=s[e.index],l=e.type;if(i&&0===n&&(a&&Qr(xt(a),s),e.flags|=4),64!=(64&e.flags))if(8&l)A0(t,n,e.child,s,r,o,!1),Bc(n,t,r,a,o);else if(32&l){const c=_0(e,s);let d;for(;d=c();)Bc(n,t,r,d,o);Bc(n,t,r,a,o)}else 16&l?R_(t,n,s,e,r,o):Bc(n,t,r,a,o);e=i?e.projectionNext:e.next}}function Ch(t,n,e,s,r,o){A0(e,s,t.firstChild,n,r,o,!1)}function R_(t,n,e,s,r,o){const i=e[16],l=i[6].projection[s.projection];if(Array.isArray(l))for(let c=0;c<l.length;c++)Bc(n,t,r,l[c],o);else A0(t,n,l,i[3],r,o,!0)}function M_(t,n,e){Ye(t)?t.setAttribute(n,"style",e):n.style.cssText=e}function O0(t,n,e){Ye(t)?""===e?t.removeAttribute(n,"class"):t.setAttribute(n,"class",e):n.className=e}function k_(t,n,e){let s=t.length;for(;;){const r=t.indexOf(n,e);if(-1===r)return r;if(0===r||t.charCodeAt(r-1)<=32){const o=n.length;if(r+o===s||t.charCodeAt(r+o)<=32)return r}e=r+1}}const P_="ng-template";function sM(t,n,e){let s=0;for(;s<t.length;){let r=t[s++];if(e&&"class"===r){if(r=t[s],-1!==k_(r.toLowerCase(),n,0))return!0}else if(1===r){for(;s<t.length&&"string"==typeof(r=t[s++]);)if(r.toLowerCase()===n)return!0;return!1}}return!1}function $_(t){return 4===t.type&&t.value!==P_}function rM(t,n,e){return n===(4!==t.type||e?t.value:P_)}function oM(t,n,e){let s=4;const r=t.attrs||[],o=function lM(t){for(let n=0;n<t.length;n++)if(lp(t[n]))return n;return t.length}(r);let i=!1;for(let a=0;a<n.length;a++){const l=n[a];if("number"!=typeof l){if(!i)if(4&s){if(s=2|1&s,""!==l&&!rM(t,l,e)||""===l&&1===n.length){if(Gi(s))return!1;i=!0}}else{const c=8&s?l:n[++a];if(8&s&&null!==t.attrs){if(!sM(t.attrs,c,e)){if(Gi(s))return!1;i=!0}continue}const f=iM(8&s?"class":l,r,$_(t),e);if(-1===f){if(Gi(s))return!1;i=!0;continue}if(""!==c){let p;p=f>o?"":r[f+1].toLowerCase();const m=8&s?p:null;if(m&&-1!==k_(m,c,0)||2&s&&c!==p){if(Gi(s))return!1;i=!0}}}}else{if(!i&&!Gi(s)&&!Gi(l))return!1;if(i&&Gi(l))continue;i=!1,s=l|1&s}}return Gi(s)||i}function Gi(t){return 0==(1&t)}function iM(t,n,e,s){if(null===n)return-1;let r=0;if(s||!e){let o=!1;for(;r<n.length;){const i=n[r];if(i===t)return r;if(3===i||6===i)o=!0;else{if(1===i||2===i){let a=n[++r];for(;"string"==typeof a;)a=n[++r];continue}if(4===i)break;if(0===i){r+=4;continue}}r+=o?1:2}return-1}return function uM(t,n){let e=t.indexOf(4);if(e>-1)for(e++;e<t.length;){const s=t[e];if("number"==typeof s)return-1;if(s===n)return e;e++}return-1}(n,t)}function F_(t,n,e=!1){for(let s=0;s<n.length;s++)if(oM(t,n[s],e))return!0;return!1}function L_(t,n){return t?":not("+n.trim()+")":n}function dM(t){let n=t[0],e=1,s=2,r="",o=!1;for(;e<t.length;){let i=t[e];if("string"==typeof i)if(2&s){const a=t[++e];r+="["+i+(a.length>0?'="'+a+'"':"")+"]"}else 8&s?r+="."+i:4&s&&(r+=" "+i);else""!==r&&!Gi(i)&&(n+=L_(o,r),r=""),s=i,o=o||!Gi(s);e++}return""!==r&&(n+=L_(o,r)),n}const yn={};function R0(t){B_(Pn(),pt(),Ur()+t,ql())}function B_(t,n,e,s){if(!s)if(3==(3&n[2])){const o=t.preOrderCheckHooks;null!==o&&Sc(n,o,e)}else{const o=t.preOrderHooks;null!==o&&Nc(n,o,0,e)}Pa(e)}function Y_(t,n){const e=t.contentQueries;if(null!==e)for(let s=0;s<e.length;s+=2){const r=e[s],o=e[s+1];if(-1!==o){const i=t.data[o];rh(r),i.contentQueries(2,n[o],o)}}}function Dh(t,n,e,s,r,o,i,a,l,c){const d=n.blueprint.slice();return d[0]=r,d[2]=140|s,Yf(d),d[3]=d[15]=t,d[8]=e,d[10]=i||t&&t[10],d[11]=a||t&&t[11],d[12]=l||t&&t[12]||null,d[9]=c||t&&t[9]||null,d[6]=o,d[16]=2==n.type?t[16]:d,d}function Uc(t,n,e,s,r){let o=t.data[n];if(null===o)o=function G0(t,n,e,s,r){const o=Jf(),i=th(),l=t.data[n]=function NM(t,n,e,s,r,o){return{type:e,index:s,insertBeforeIndex:null,injectorIndex:n?n.injectorIndex:-1,directiveStart:-1,directiveEnd:-1,directiveStylingLast:-1,propertyBindings:null,flags:0,providerIndexes:0,value:r,attrs:o,mergedAttrs:null,localNames:null,initialInputs:void 0,inputs:null,outputs:null,tViews:null,next:null,projectionNext:null,child:null,parent:n,projection:null,styles:null,stylesWithoutHost:null,residualStyles:void 0,classes:null,classesWithoutHost:null,residualClasses:void 0,classBindings:0,styleBindings:0}}(0,i?o:o&&o.parent,e,n,s,r);return null===t.firstChild&&(t.firstChild=l),null!==o&&(i?null==o.child&&null!==l.parent&&(o.child=l):null===o.next&&(o.next=l)),l}(t,n,e,s,r),function nh(){return fn.lFrame.inI18n}()&&(o.flags|=64);else if(64&o.type){o.type=e,o.value=s,o.attrs=r;const i=function Uu(){const t=fn.lFrame,n=t.currentTNode;return t.isParent?n:n.parent}();o.injectorIndex=null===i?-1:i.injectorIndex}return ii(o,!0),o}function Vc(t,n,e,s){if(0===e)return-1;const r=n.length;for(let o=0;o<e;o++)n.push(s),t.blueprint.push(s),t.data.push(null);return r}function Ih(t,n,e){Ic(n);try{const s=t.viewQuery;null!==s&&q0(1,s,e);const r=t.template;null!==r&&Q_(t,n,r,1,e),t.firstCreatePass&&(t.firstCreatePass=!1),t.staticContentQueries&&Y_(t,n),t.staticViewQueries&&q0(2,t.viewQuery,e);const o=t.components;null!==o&&function TM(t,n){for(let e=0;e<n.length;e++)jM(t,n[e])}(n,o)}catch(s){throw t.firstCreatePass&&(t.incompleteFirstPass=!0,t.firstCreatePass=!1),s}finally{n[2]&=-5,Tc()}}function zc(t,n,e,s){const r=n[2];if(256==(256&r))return;Ic(n);const o=ql();try{Yf(n),function qf(t){return fn.lFrame.bindingIndex=t}(t.bindingStartIndex),null!==e&&Q_(t,n,e,2,s);const i=3==(3&r);if(!o)if(i){const c=t.preOrderCheckHooks;null!==c&&Sc(n,c,null)}else{const c=t.preOrderHooks;null!==c&&Nc(n,c,0,null),oh(n,0)}if(function HM(t){for(let n=b0(t);null!==n;n=C0(n)){if(!n[2])continue;const e=n[9];for(let s=0;s<e.length;s++){const r=e[s],o=r[3];0==(1024&r[2])&&qd(o,1),r[2]|=1024}}}(n),function GM(t){for(let n=b0(t);null!==n;n=C0(n))for(let e=10;e<n.length;e++){const s=n[e],r=s[1];oi(s)&&zc(r,s,r.template,s[8])}}(n),null!==t.contentQueries&&Y_(t,n),!o)if(i){const c=t.contentCheckHooks;null!==c&&Sc(n,c)}else{const c=t.contentHooks;null!==c&&Nc(n,c,1),oh(n,1)}!function DM(t,n){const e=t.hostBindingOpCodes;if(null!==e)try{for(let s=0;s<e.length;s++){const r=e[s];if(r<0)Pa(~r);else{const o=r,i=e[++s],a=e[++s];Ug(i,o),a(2,n[o])}}}finally{Pa(-1)}}(t,n);const a=t.components;null!==a&&function IM(t,n){for(let e=0;e<n.length;e++)KM(t,n[e])}(n,a);const l=t.viewQuery;if(null!==l&&q0(2,l,s),!o)if(i){const c=t.viewCheckHooks;null!==c&&Sc(n,c)}else{const c=t.viewHooks;null!==c&&Nc(n,c,2),oh(n,2)}!0===t.firstUpdatePass&&(t.firstUpdatePass=!1),o||(n[2]&=-73),1024&n[2]&&(n[2]&=-1025,qd(n[3],-1))}finally{Tc()}}function wM(t,n,e,s){const r=n[10],o=!ql(),i=yr(n);try{o&&!i&&r.begin&&r.begin(),i&&Ih(t,n,s),zc(t,n,e,s)}finally{o&&!i&&r.end&&r.end()}}function Q_(t,n,e,s,r){const o=Ur(),i=2&s;try{Pa(-1),i&&n.length>20&&B_(t,n,20,ql()),e(s,r)}finally{Pa(o)}}function q_(t){const n=t.tView;return null===n||n.incompleteFirstPass?t.tView=wp(1,null,t.template,t.decls,t.vars,t.directiveDefs,t.pipeDefs,t.viewQuery,t.schemas,t.consts):n}function wp(t,n,e,s,r,o,i,a,l,c){const d=20+s,f=d+r,p=function SM(t,n){const e=[];for(let s=0;s<n;s++)e.push(s<t?null:yn);return e}(d,f),m="function"==typeof c?c():c;return p[1]={type:t,blueprint:p,template:e,queries:null,viewQuery:a,declTNode:n,data:p.slice().fill(null,d),bindingStartIndex:d,expandoStartIndex:f,hostBindingOpCodes:null,firstCreatePass:!0,firstUpdatePass:!0,staticViewQueries:!1,staticContentQueries:!1,preOrderHooks:null,preOrderCheckHooks:null,contentHooks:null,contentCheckHooks:null,viewHooks:null,viewCheckHooks:null,destroyHooks:null,cleanup:null,contentQueries:null,components:null,directiveRegistry:"function"==typeof o?o():o,pipeRegistry:"function"==typeof i?i():i,firstChild:null,schemas:l,consts:m,incompleteFirstPass:!1}}function nb(t,n,e,s){const r=hb(n);null===e?r.push(s):(r.push(e),t.firstCreatePass&&fb(t).push(s,r.length-1))}function sb(t,n,e){for(let s in t)if(t.hasOwnProperty(s)){const r=t[s];(e=null===e?{}:e).hasOwnProperty(s)?e[s].push(n,r):e[s]=[n,r]}return e}function ob(t,n,e,s,r,o){const i=o.hostBindings;if(i){let a=t.hostBindingOpCodes;null===a&&(a=t.hostBindingOpCodes=[]);const l=~n.index;(function PM(t){let n=t.length;for(;n>0;){const e=t[--n];if("number"==typeof e&&e<0)return e}return 0})(a)!=l&&a.push(l),a.push(s,r,i)}}function ib(t,n){null!==t.hostBindings&&t.hostBindings(1,n)}function ab(t,n){n.flags|=2,(t.components||(t.components=[])).push(n.index)}function UM(t,n,e){if(e){if(n.exportAs)for(let s=0;s<n.exportAs.length;s++)e[n.exportAs[s]]=t;lo(n)&&(e[""]=t)}}function lb(t,n,e){t.flags|=1,t.directiveStart=n,t.directiveEnd=n+e,t.providerIndexes=n}function ub(t,n,e,s,r){t.data[s]=r;const o=r.factory||(r.factory=ri(r.type)),i=new zu(o,lo(r),null);t.blueprint[s]=i,e[s]=i,ob(t,n,0,s,Vc(t,e,r.hostVars,yn),r)}function VM(t,n,e){const s=nn(n,t),r=q_(e),o=t[10],i=Sp(t,Dh(t,r,null,e.onPush?64:16,s,n,o,o.createRenderer(s,e),null,null));t[n.index]=i}function zM(t,n,e,s,r,o){const i=o[n];if(null!==i){const a=s.setInput;for(let l=0;l<i.length;){const c=i[l++],d=i[l++],f=i[l++];null!==a?s.setInput(e,f,c,d):e[d]=f}}}function WM(t,n){let e=null,s=0;for(;s<n.length;){const r=n[s];if(0!==r)if(5!==r){if("number"==typeof r)break;t.hasOwnProperty(r)&&(null===e&&(e=[]),e.push(r,t[r],n[s+1])),s+=2}else s+=2;else s+=4}return e}function KM(t,n){const e=gr(n,t);if(oi(e)){const s=e[1];80&e[2]?zc(s,e,s.template,e[8]):e[5]>0&&Z0(e)}}function Z0(t){for(let s=b0(t);null!==s;s=C0(s))for(let r=10;r<s.length;r++){const o=s[r];if(1024&o[2]){const i=o[1];zc(i,o,i.template,o[8])}else o[5]>0&&Z0(o)}const e=t[1].components;if(null!==e)for(let s=0;s<e.length;s++){const r=gr(e[s],t);oi(r)&&r[5]>0&&Z0(r)}}function jM(t,n){const e=gr(n,t),s=e[1];(function XM(t,n){for(let e=n.length;e<t.blueprint.length;e++)n.push(t.blueprint[e])})(s,e),Ih(s,e,e[8])}function Sp(t,n){return t[13]?t[14][4]=n:t[13]=n,t[14]=n,n}function Y0(t){for(;t;){t[2]|=64;const n=bh(t);if(ar(t)&&!n)return t;t=n}return null}function J0(t,n,e){const s=n[10];s.begin&&s.begin();try{zc(t,n,t.template,e)}catch(r){throw mb(n,r),r}finally{s.end&&s.end()}}function db(t){!function Q0(t){for(let n=0;n<t.components.length;n++){const e=t.components[n],s=y0(e),r=s[1];wM(r,s,r.template,e)}}(t[8])}function q0(t,n,e){rh(0),n(t,e)}const JM=(()=>Promise.resolve(null))();function hb(t){return t[7]||(t[7]=[])}function fb(t){return t.cleanup||(t.cleanup=[])}function mb(t,n){const e=t[9],s=e?e.get(_h,null):null;s&&s.handleError(n)}function gb(t,n,e,s,r){for(let o=0;o<e.length;){const i=e[o++],a=e[o++],l=n[i],c=t.data[i];null!==c.setInput?c.setInput(l,r,s,a):l[a]=r}}function Np(t,n,e){let s=e?t.styles:null,r=e?t.classes:null,o=0;if(null!==n)for(let i=0;i<n.length;i++){const a=n[i];"number"==typeof a?o=a:1==o?r=Ni(r,a):2==o&&(s=Ni(s,a+": "+n[++i]+";"))}e?t.styles=s:t.stylesWithoutHost=s,e?t.classes=r:t.classesWithoutHost=r}const ey=new Zt("INJECTOR",-1);class yb{get(n,e=hh){if(e===hh){const s=new Error(`NullInjectorError: No provider for ${Tn(n)}!`);throw s.name="NullInjectorError",s}return e}}const ty=new Zt("Set Injector scope."),Th={},tk={};let ny;function vb(){return void 0===ny&&(ny=new yb),ny}function xb(t,n=null,e=null,s){const r=Eb(t,n,e,s);return r._resolveInjectorDefTypes(),r}function Eb(t,n=null,e=null,s){return new nk(t,e,n||vb(),s)}class nk{constructor(n,e,s,r=null){this.parent=s,this.records=new Map,this.injectorDefTypes=new Set,this.onDestroy=new Set,this._destroyed=!1;const o=[];e&&Ba(e,a=>this.processProvider(a,n,e)),Ba([n],a=>this.processInjectorType(a,[],o)),this.records.set(ey,Wc(void 0,this));const i=this.records.get(ty);this.scope=null!=i?i.value:null,this.source=r||("object"==typeof n?null:Tn(n))}get destroyed(){return this._destroyed}destroy(){this.assertNotDestroyed(),this._destroyed=!0;try{this.onDestroy.forEach(n=>n.ngOnDestroy())}finally{this.records.clear(),this.onDestroy.clear(),this.injectorDefTypes.clear()}}get(n,e=hh,s=bt.Default){this.assertNotDestroyed();const r=WE(this),o=Cs(void 0);try{if(!(s&bt.SkipSelf)){let a=this.records.get(n);if(void 0===a){const l=function ck(t){return"function"==typeof t||"object"==typeof t&&t instanceof Zt}(n)&&fe(n);a=l&&this.injectableDefInScope(l)?Wc(sy(n),Th):null,this.records.set(n,a)}if(null!=a)return this.hydrate(n,a)}return(s&bt.Self?vb():this.parent).get(n,e=s&bt.Optional&&e===hh?null:e)}catch(i){if("NullInjectorError"===i.name){if((i[mp]=i[mp]||[]).unshift(Tn(n)),r)throw i;return function kO(t,n,e,s){const r=t[mp];throw n[zE]&&r.unshift(n[zE]),t.message=function PO(t,n,e,s=null){t=t&&"\n"===t.charAt(0)&&"\u0275"==t.charAt(1)?t.substr(2):t;let r=Tn(n);if(Array.isArray(n))r=n.map(Tn).join(" -> ");else if("object"==typeof n){let o=[];for(let i in n)if(n.hasOwnProperty(i)){let a=n[i];o.push(i+":"+("string"==typeof a?JSON.stringify(a):Tn(a)))}r=`{${o.join(", ")}}`}return`${e}${s?"("+s+")":""}[${r}]: ${t.replace(SO,"\n  ")}`}("\n"+t.message,r,e,s),t.ngTokenPath=r,t[mp]=null,t}(i,n,"R3InjectorError",this.source)}throw i}finally{Cs(o),WE(r)}}_resolveInjectorDefTypes(){this.injectorDefTypes.forEach(n=>this.get(n))}toString(){const n=[];return this.records.forEach((s,r)=>n.push(Tn(r))),`R3Injector[${n.join(", ")}]`}assertNotDestroyed(){if(this._destroyed)throw new wn(205,!1)}processInjectorType(n,e,s){if(!(n=sn(n)))return!1;let r=it(n);const o=null==r&&n.ngModule||void 0,i=void 0===o?n:o,a=-1!==s.indexOf(i);if(void 0!==o&&(r=it(o)),null==r)return!1;if(null!=r.imports&&!a){let d;s.push(i);try{Ba(r.imports,f=>{this.processInjectorType(f,e,s)&&(void 0===d&&(d=[]),d.push(f))})}finally{}if(void 0!==d)for(let f=0;f<d.length;f++){const{ngModule:p,providers:m}=d[f];Ba(m,y=>this.processProvider(y,p,m||Wt))}}this.injectorDefTypes.add(i);const l=ri(i)||(()=>new i);this.records.set(i,Wc(l,Th));const c=r.providers;if(null!=c&&!a){const d=n;Ba(c,f=>this.processProvider(f,d,c))}return void 0!==o&&void 0!==n.providers}processProvider(n,e,s){let r=Gc(n=sn(n))?n:sn(n&&n.provide);const o=function rk(t,n,e){return bb(t)?Wc(void 0,t.useValue):Wc(function _b(t,n,e){let s;if(Gc(t)){const r=sn(t);return ri(r)||sy(r)}if(bb(t))s=()=>sn(t.useValue);else if(function ik(t){return!(!t||!t.useFactory)}(t))s=()=>t.useFactory(...a0(t.deps||[]));else if(function ok(t){return!(!t||!t.useExisting)}(t))s=()=>rn(sn(t.useExisting));else{const r=sn(t&&(t.useClass||t.provide));if(!function lk(t){return!!t.deps}(t))return ri(r)||sy(r);s=()=>new r(...a0(t.deps))}return s}(t),Th)}(n);if(Gc(n)||!0!==n.multi)this.records.get(r);else{let i=this.records.get(r);i||(i=Wc(void 0,Th,!0),i.factory=()=>a0(i.multi),this.records.set(r,i)),r=n,i.multi.push(n)}this.records.set(r,o)}hydrate(n,e){return e.value===Th&&(e.value=tk,e.value=e.factory()),"object"==typeof e.value&&e.value&&function uk(t){return null!==t&&"object"==typeof t&&"function"==typeof t.ngOnDestroy}(e.value)&&this.onDestroy.add(e.value),e.value}injectableDefInScope(n){if(!n.providedIn)return!1;const e=sn(n.providedIn);return"string"==typeof e?"any"===e||e===this.scope:this.injectorDefTypes.has(e)}}function sy(t){const n=fe(t),e=null!==n?n.factory:ri(t);if(null!==e)return e;if(t instanceof Zt)throw new wn(204,!1);if(t instanceof Function)return function sk(t){const n=t.length;if(n>0)throw function dh(t,n){const e=[];for(let s=0;s<t;s++)e.push(n);return e}(n,"?"),new wn(204,!1);const e=function ze(t){const n=t&&(t[ft]||t[qt]);if(n){const e=function gt(t){if(t.hasOwnProperty("name"))return t.name;const n=(""+t).match(/^function\s*([^\s(]+)/);return null===n?"":n[1]}(t);return console.warn(`DEPRECATED: DI is instantiating a token "${e}" that inherits its @Injectable decorator but does not provide one itself.\nThis will become an error in a future version of Angular. Please add @Injectable() to the "${e}" class.`),n}return null}(t);return null!==e?()=>e.factory(t):()=>new t}(t);throw new wn(204,!1)}function Wc(t,n,e=!1){return{factory:t,value:n,multi:e?[]:void 0}}function bb(t){return null!==t&&"object"==typeof t&&AO in t}function Gc(t){return"function"==typeof t}let ho=(()=>{class t{static create(e,s){var r;if(Array.isArray(e))return xb({name:""},s,e,"");{const o=null!==(r=e.name)&&void 0!==r?r:"";return xb({name:o},e.parent,e.providers,o)}}}return t.THROW_IF_NOT_FOUND=hh,t.NULL=new yb,t.\u0275prov=T({token:t,providedIn:"any",factory:()=>rn(ey)}),t.__NG_ELEMENT_ID__=-1,t})();function vk(t,n){wc(y0(t)[1],tr())}let Ap=null;function Hc(){if(!Ap){const t=Gn.Symbol;if(t&&t.iterator)Ap=t.iterator;else{const n=Object.getOwnPropertyNames(Map.prototype);for(let e=0;e<n.length;++e){const s=n[e];"entries"!==s&&"size"!==s&&Map.prototype[s]===Map.prototype.entries&&(Ap=s)}}}return Ap}function Yt(t,n=bt.Default){const e=pt();return null===e?rn(t,n):se(tr(),e,sn(t),n)}function fy(){throw new Error("invalid")}function Mp(t,n,e){const s=pt();return function Jr(t,n,e){return!Object.is(t[n],e)&&(t[n]=e,!0)}(s,function eu(){return fn.lFrame.bindingIndex++}(),n)&&function Uo(t,n,e,s,r,o,i,a){const l=nn(n,e);let d,c=n.inputs;!a&&null!=c&&(d=c[s])?(gb(t,e,d,s,r),si(n)&&function RM(t,n){const e=gr(n,t);16&e[2]||(e[2]|=64)}(e,n.index)):3&n.type&&(s=function OM(t){return"class"===t?"className":"for"===t?"htmlFor":"formaction"===t?"formAction":"innerHtml"===t?"innerHTML":"readonly"===t?"readOnly":"tabindex"===t?"tabIndex":t}(s),r=null!=i?i(r,n.value||"",s):r,Ye(o)?o.setProperty(l,s,r):ah(s)||(l.setProperty?l.setProperty(s,r):l[s]=r))}(Pn(),function Is(){const t=fn.lFrame;return ms(t.tView,t.selectedIndex)}(),s,t,n,s[11],e,!1),Mp}function py(t,n,e,s,r){const i=r?"class":"style";gb(t,e,n.inputs[i],i,s)}function Il(t,n,e,s){const r=pt(),o=Pn(),i=20+t,a=r[11],l=r[i]=I0(a,n,function jg(){return fn.lFrame.currentNamespace}()),c=o.firstCreatePass?function Jk(t,n,e,s,r,o,i){const a=n.consts,c=Uc(n,t,2,r,ko(a,o));return function j0(t,n,e,s){let r=!1;if(eh()){const o=function LM(t,n,e){const s=t.directiveRegistry;let r=null;if(s)for(let o=0;o<s.length;o++){const i=s[o];F_(e,i.selectors,!1)&&(r||(r=[]),kc(Gu(e,n),t,i.type),lo(i)?(ab(t,e),r.unshift(i)):r.push(i))}return r}(t,n,e),i=null===s?null:{"":-1};if(null!==o){r=!0,lb(e,t.data.length,o.length);for(let d=0;d<o.length;d++){const f=o[d];f.providersResolver&&f.providersResolver(f)}let a=!1,l=!1,c=Vc(t,n,o.length,null);for(let d=0;d<o.length;d++){const f=o[d];e.mergedAttrs=Oc(e.mergedAttrs,f.hostAttrs),ub(t,e,n,c,f),UM(c,f,i),null!==f.contentQueries&&(e.flags|=8),(null!==f.hostBindings||null!==f.hostAttrs||0!==f.hostVars)&&(e.flags|=128);const p=f.type.prototype;!a&&(p.ngOnChanges||p.ngOnInit||p.ngDoCheck)&&((t.preOrderHooks||(t.preOrderHooks=[])).push(e.index),a=!0),!l&&(p.ngOnChanges||p.ngDoCheck)&&((t.preOrderCheckHooks||(t.preOrderCheckHooks=[])).push(e.index),l=!0),c++}!function AM(t,n){const s=n.directiveEnd,r=t.data,o=n.attrs,i=[];let a=null,l=null;for(let c=n.directiveStart;c<s;c++){const d=r[c],f=d.inputs,p=null===o||$_(n)?null:WM(f,o);i.push(p),a=sb(f,c,a),l=sb(d.outputs,c,l)}null!==a&&(a.hasOwnProperty("class")&&(n.flags|=16),a.hasOwnProperty("style")&&(n.flags|=32)),n.initialInputs=i,n.inputs=a,n.outputs=l}(t,e)}i&&function BM(t,n,e){if(n){const s=t.localNames=[];for(let r=0;r<n.length;r+=2){const o=e[n[r+1]];if(null==o)throw new wn(-301,!1);s.push(n[r],o)}}}(e,s,i)}return e.mergedAttrs=Oc(e.mergedAttrs,e.attrs),r}(n,e,c,ko(a,i)),null!==c.attrs&&Np(c,c.attrs,!1),null!==c.mergedAttrs&&Np(c,c.mergedAttrs,!0),null!==n.queries&&n.queries.elementStart(n,c),c}(i,o,r,0,n,e,s):o.data[i];ii(c,!0);const d=c.mergedAttrs;null!==d&&Ac(a,l,d);const f=c.classes;null!==f&&O0(a,l,f);const p=c.styles;return null!==p&&M_(a,l,p),64!=(64&c.flags)&&bp(o,r,l,c),0===function kg(){return fn.lFrame.elementDepthCount}()&&Qr(l,r),function Qf(){fn.lFrame.elementDepthCount++}(),Zl(c)&&(function H0(t,n,e){!eh()||(function $M(t,n,e,s){const r=e.directiveStart,o=e.directiveEnd;t.firstCreatePass||Gu(e,n),Qr(s,n);const i=e.initialInputs;for(let a=r;a<o;a++){const l=t.data[a],c=lo(l);c&&VM(n,e,l);const d=We(n,t,a,e);Qr(d,n),null!==i&&zM(0,a-r,d,l,0,i),c&&(gr(e.index,n)[8]=d)}}(t,n,e,nn(e,n)),128==(128&e.flags)&&function FM(t,n,e){const s=e.directiveStart,r=e.directiveEnd,i=e.index,a=function Vg(){return fn.lFrame.currentDirectiveIndex}();try{Pa(i);for(let l=s;l<r;l++){const c=t.data[l],d=n[l];sh(l),(null!==c.hostBindings||0!==c.hostVars||null!==c.hostAttrs)&&ib(c,d)}}finally{Pa(-1),sh(a)}}(t,n,e))}(o,r,c),function J_(t,n,e){if(El(n)){const r=n.directiveEnd;for(let o=n.directiveStart;o<r;o++){const i=t.data[o];i.contentQueries&&i.contentQueries(1,e[o],o)}}}(o,c,r)),null!==s&&function K0(t,n,e=nn){const s=n.localNames;if(null!==s){let r=n.index+1;for(let o=0;o<s.length;o+=2){const i=s[o+1],a=-1===i?e(n,t):t[i];t[r++]=a}}}(r,c),Il}function Tl(){let t=tr();th()?function ka(){fn.lFrame.isParent=!1}():(t=t.parent,ii(t,!1));const n=t;!function Pg(){fn.lFrame.elementDepthCount--}();const e=Pn();return e.firstCreatePass&&(wc(e,t),El(t)&&e.queries.elementEnd(t)),null!=n.classesWithoutHost&&function Jg(t){return 0!=(16&t.flags)}(n)&&py(e,n,pt(),n.classesWithoutHost,!0),null!=n.stylesWithoutHost&&function qg(t){return 0!=(32&t.flags)}(n)&&py(e,n,pt(),n.stylesWithoutHost,!1),Tl}function Nh(t,n,e,s){return Il(t,n,e,s),Tl(),Nh}function kp(t){return!!t&&"function"==typeof t.then}const sC=function nC(t){return!!t&&"function"==typeof t.subscribe};function iu(t,n,e,s){const r=pt(),o=Pn(),i=tr();return function oC(t,n,e,s,r,o,i,a){const l=Zl(s),d=t.firstCreatePass&&fb(t),f=n[8],p=hb(n);let m=!0;if(3&s.type||a){const x=nn(s,n),D=a?a(x):x,C=p.length,F=a?B=>a(xt(B[s.index])):s.index;if(Ye(e)){let B=null;if(!a&&l&&(B=function t2(t,n,e,s){const r=t.cleanup;if(null!=r)for(let o=0;o<r.length-1;o+=2){const i=r[o];if(i===e&&r[o+1]===s){const a=n[7],l=r[o+2];return a.length>l?a[l]:null}"string"==typeof i&&(o+=2)}return null}(t,n,r,s.index)),null!==B)(B.__ngLastListenerFn__||B).__ngNextListenerFn__=o,B.__ngLastListenerFn__=o,m=!1;else{o=yy(s,n,f,o,!1);const Z=e.listen(D,r,o);p.push(o,Z),d&&d.push(r,F,C,C+1)}}else o=yy(s,n,f,o,!0),D.addEventListener(r,o,i),p.push(o),d&&d.push(r,F,C,i)}else o=yy(s,n,f,o,!1);const y=s.outputs;let _;if(m&&null!==y&&(_=y[r])){const x=_.length;if(x)for(let D=0;D<x;D+=2){const ce=n[_[D]][_[D+1]].subscribe(o),ve=p.length;p.push(o,ce),d&&d.push(r,s.index,ve,-(ve+1))}}}(o,r,r[11],i,t,n,!!e,s),iu}function iC(t,n,e,s){try{return!1!==e(s)}catch(r){return mb(t,r),!1}}function yy(t,n,e,s,r){return function o(i){if(i===Function)return s;const a=2&t.flags?gr(t.index,n):n;0==(32&n[2])&&Y0(a);let l=iC(n,0,s,i),c=o.__ngNextListenerFn__;for(;c;)l=iC(n,0,c,i)&&l,c=c.__ngNextListenerFn__;return r&&!1===l&&(i.preventDefault(),i.returnValue=!1),l}}function Oh(t,n=""){const e=pt(),s=Pn(),r=t+20,o=s.firstCreatePass?Uc(s,r,1,n,null):s.data[r],i=e[r]=function D0(t,n){return Ye(t)?t.createText(n):t.createTextNode(n)}(e[11],n);bp(s,e,i,o),ii(o,!1)}const $p="en-US";let qC=$p;class DD{}class KP{resolveComponentFactory(n){throw function HP(t){const n=Error(`No component factory found for ${Tn(t)}. Did you add it to @NgModule.entryComponents?`);return n.ngComponent=t,n}(n)}}let $h=(()=>{class t{}return t.NULL=new KP,t})();function jP(){return od(tr(),pt())}function od(t,n){return new au(nn(t,n))}let au=(()=>{class t{constructor(e){this.nativeElement=e}}return t.__NG_ELEMENT_ID__=jP,t})();function XP(t){return t instanceof au?t.nativeElement:t}class TD{}let QP=(()=>{class t{}return t.\u0275prov=T({token:t,providedIn:"root",factory:()=>null}),t})();class zp{constructor(n){this.full=n,this.major=n.split(".")[0],this.minor=n.split(".")[1],this.patch=n.split(".").slice(2).join(".")}}const JP=new zp("13.2.7"),wy={};function Wp(t,n,e,s,r=!1){for(;null!==e;){const o=n[e.index];if(null!==o&&s.push(xt(o)),Lr(o))for(let a=10;a<o.length;a++){const l=o[a],c=l[1].firstChild;null!==c&&Wp(l[1],l,c,s)}const i=e.type;if(8&i)Wp(t,n,e.child,s);else if(32&i){const a=_0(e,n);let l;for(;l=a();)s.push(l)}else if(16&i){const a=A_(n,e);if(Array.isArray(a))s.push(...a);else{const l=bh(n[16]);Wp(l[1],l,a,s,!0)}}e=r?e.projectionNext:e.next}return s}class Fh{constructor(n,e){this._lView=n,this._cdRefInjectingView=e,this._appRef=null,this._attachedToViewContainer=!1}get rootNodes(){const n=this._lView,e=n[1];return Wp(e,n,e.firstChild,[])}get context(){return this._lView[8]}set context(n){this._lView[8]=n}get destroyed(){return 256==(256&this._lView[2])}destroy(){if(this._appRef)this._appRef.detachView(this);else if(this._attachedToViewContainer){const n=this._lView[3];if(Lr(n)){const e=n[8],s=e?e.indexOf(this):-1;s>-1&&(T0(n,s),fp(e,s))}this._attachedToViewContainer=!1}__(this._lView[1],this._lView)}onDestroy(n){nb(this._lView[1],this._lView,null,n)}markForCheck(){Y0(this._cdRefInjectingView||this._lView)}detach(){this._lView[2]&=-129}reattach(){this._lView[2]|=128}detectChanges(){J0(this._lView[1],this._lView,this.context)}checkNoChanges(){!function YM(t,n,e){Dc(!0);try{J0(t,n,e)}finally{Dc(!1)}}(this._lView[1],this._lView,this.context)}attachToViewContainerRef(){if(this._appRef)throw new wn(902,"");this._attachedToViewContainer=!0}detachFromAppRef(){this._appRef=null,function KR(t,n){Ch(t,n,n[11],2,null,null)}(this._lView[1],this._lView)}attachToAppRef(n){if(this._attachedToViewContainer)throw new wn(902,"");this._appRef=n}}class qP extends Fh{constructor(n){super(n),this._view=n}detectChanges(){db(this._view)}checkNoChanges(){!function QM(t){Dc(!0);try{db(t)}finally{Dc(!1)}}(this._view)}get context(){return null}}class wD extends $h{constructor(n){super(),this.ngModule=n}resolveComponentFactory(n){const e=Ms(n);return new Sy(e,this.ngModule)}}function SD(t){const n=[];for(let e in t)t.hasOwnProperty(e)&&n.push({propName:t[e],templateName:e});return n}class Sy extends DD{constructor(n,e){super(),this.componentDef=n,this.ngModule=e,this.componentType=n.type,this.selector=function hM(t){return t.map(dM).join(",")}(n.selectors),this.ngContentSelectors=n.ngContentSelectors?n.ngContentSelectors:[],this.isBoundToModule=!!e}get inputs(){return SD(this.componentDef.inputs)}get outputs(){return SD(this.componentDef.outputs)}create(n,e,s,r){const o=(r=r||this.ngModule)?function t$(t,n){return{get:(e,s,r)=>{const o=t.get(e,wy,r);return o!==wy||s===wy?o:n.get(e,s,r)}}}(n,r.injector):n,i=o.get(TD,yt),a=o.get(QP,null),l=i.createRenderer(null,this.componentDef),c=this.componentDef.selectors[0][0]||"div",d=s?function tb(t,n,e){if(Ye(t))return t.selectRootElement(n,e===wr.ShadowDom);let s="string"==typeof n?t.querySelector(n):n;return s.textContent="",s}(l,s,this.componentDef.encapsulation):I0(i.createRenderer(null,this.componentDef),c,function e$(t){const n=t.toLowerCase();return"svg"===n?"svg":"math"===n?A:null}(c)),f=this.componentDef.onPush?576:528,p=function Mb(t,n){return{components:[],scheduler:t||LR,clean:JM,playerHandler:n||null,flags:0}}(),m=wp(0,null,null,1,0,null,null,null,null,null),y=Dh(null,m,p,f,null,null,i,l,a,o);let _,x;Ic(y);try{const D=function Ob(t,n,e,s,r,o){const i=e[1];e[20]=t;const l=Uc(i,20,2,"#host",null),c=l.mergedAttrs=n.hostAttrs;null!==c&&(Np(l,c,!0),null!==t&&(Ac(r,t,c),null!==l.classes&&O0(r,t,l.classes),null!==l.styles&&M_(r,t,l.styles)));const d=s.createRenderer(t,n),f=Dh(e,q_(n),null,n.onPush?64:16,e[20],l,s,d,o||null,null);return i.firstCreatePass&&(kc(Gu(l,e),i,n.type),ab(i,l),lb(l,e.length,1)),Sp(e,f),e[20]=f}(d,this.componentDef,y,i,l);if(d)if(s)Ac(l,d,["ng-version",JP.full]);else{const{attrs:C,classes:F}=function fM(t){const n=[],e=[];let s=1,r=2;for(;s<t.length;){let o=t[s];if("string"==typeof o)2===r?""!==o&&n.push(o,t[++s]):8===r&&e.push(o);else{if(!Gi(r))break;r=o}s++}return{attrs:n,classes:e}}(this.componentDef.selectors[0]);C&&Ac(l,d,C),F&&F.length>0&&O0(l,d,F.join(" "))}if(x=ms(m,20),void 0!==e){const C=x.projection=[];for(let F=0;F<this.ngContentSelectors.length;F++){const B=e[F];C.push(null!=B?Array.from(B):null)}}_=function Rb(t,n,e,s,r){const o=e[1],i=function kM(t,n,e){const s=tr();t.firstCreatePass&&(e.providersResolver&&e.providersResolver(e),ub(t,s,n,Vc(t,n,1,null),e));const r=We(n,t,s.directiveStart,s);Qr(r,n);const o=nn(s,n);return o&&Qr(o,n),r}(o,e,n);if(s.components.push(i),t[8]=i,r&&r.forEach(l=>l(i,n)),n.contentQueries){const l=tr();n.contentQueries(1,i,l.directiveStart)}const a=tr();return!o.firstCreatePass||null===n.hostBindings&&null===n.hostAttrs||(Pa(a.index),ob(e[1],a,0,a.directiveStart,a.directiveEnd,n),ib(n,i)),i}(D,this.componentDef,y,p,[vk]),Ih(m,y,null)}finally{Tc()}return new s$(this.componentType,_,od(x,y),y,x)}}class s$ extends class GP{}{constructor(n,e,s,r,o){super(),this.location=s,this._rootLView=r,this._tNode=o,this.instance=e,this.hostView=this.changeDetectorRef=new qP(r),this.componentType=n}get injector(){return new Mt(this._tNode,this._rootLView)}destroy(){this.hostView.destroy()}onDestroy(n){this.hostView.onDestroy(n)}}class wl{}class ND{}const id=new Map;class RD extends wl{constructor(n,e){super(),this._parent=e,this._bootstrapComponents=[],this.injector=this,this.destroyCbs=[],this.componentFactoryResolver=new wD(this);const s=Bs(n);this._bootstrapComponents=za(s.bootstrap),this._r3Injector=Eb(n,e,[{provide:wl,useValue:this},{provide:$h,useValue:this.componentFactoryResolver}],Tn(n)),this._r3Injector._resolveInjectorDefTypes(),this.instance=this.get(n)}get(n,e=ho.THROW_IF_NOT_FOUND,s=bt.Default){return n===ho||n===wl||n===ey?this:this._r3Injector.get(n,e,s)}destroy(){const n=this._r3Injector;!n.destroyed&&n.destroy(),this.destroyCbs.forEach(e=>e()),this.destroyCbs=null}onDestroy(n){this.destroyCbs.push(n)}}class Ny extends ND{constructor(n){super(),this.moduleType=n,null!==Bs(n)&&function o$(t){const n=new Set;!function e(s){const r=Bs(s,!0),o=r.id;null!==o&&(function AD(t,n,e){if(n&&n!==e)throw new Error(`Duplicate module registered for ${t} - ${Tn(n)} vs ${Tn(n.name)}`)}(o,id.get(o),s),id.set(o,s));const i=za(r.imports);for(const a of i)n.has(a)||(n.add(a),e(a))}(t)}(n)}create(n){return new RD(this.moduleType,n)}}function Ay(t){return n=>{setTimeout(t,void 0,n)}}const po=class C$ extends Dt{constructor(n=!1){super(),this.__isAsync=n}emit(n){super.next(n)}subscribe(n,e,s){var r,o,i;let a=n,l=e||(()=>null),c=s;if(n&&"object"==typeof n){const f=n;a=null===(r=f.next)||void 0===r?void 0:r.bind(f),l=null===(o=f.error)||void 0===o?void 0:o.bind(f),c=null===(i=f.complete)||void 0===i?void 0:i.bind(f)}this.__isAsync&&(l=Ay(l),a&&(a=Ay(a)),c&&(c=Ay(c)));const d=super.subscribe({next:a,error:l,complete:c});return n instanceof k&&n.add(d),d}};function D$(){return this._results[Hc()]()}class Oy{constructor(n=!1){this._emitDistinctChangesOnly=n,this.dirty=!0,this._results=[],this._changesDetected=!1,this._changes=null,this.length=0,this.first=void 0,this.last=void 0;const e=Hc(),s=Oy.prototype;s[e]||(s[e]=D$)}get changes(){return this._changes||(this._changes=new po)}get(n){return this._results[n]}map(n){return this._results.map(n)}filter(n){return this._results.filter(n)}find(n){return this._results.find(n)}reduce(n,e){return this._results.reduce(n,e)}forEach(n){this._results.forEach(n)}some(n){return this._results.some(n)}toArray(){return this._results.slice()}toString(){return this._results.toString()}reset(n,e){const s=this;s.dirty=!1;const r=li(n);(this._changesDetected=!function xO(t,n,e){if(t.length!==n.length)return!1;for(let s=0;s<t.length;s++){let r=t[s],o=n[s];if(e&&(r=e(r),o=e(o)),o!==r)return!1}return!0}(s._results,r,e))&&(s._results=r,s.length=r.length,s.last=r[this.length-1],s.first=r[0])}notifyOnChanges(){this._changes&&(this._changesDetected||!this._emitDistinctChangesOnly)&&this._changes.emit(this)}setDirty(){this.dirty=!0}destroy(){this.changes.complete(),this.changes.unsubscribe()}}Symbol;let Sl=(()=>{class t{}return t.__NG_ELEMENT_ID__=w$,t})();const I$=Sl,T$=class extends I${constructor(n,e,s){super(),this._declarationLView=n,this._declarationTContainer=e,this.elementRef=s}createEmbeddedView(n){const e=this._declarationTContainer.tViews,s=Dh(this._declarationLView,e,n,16,null,e.declTNode,null,null,null,null);s[17]=this._declarationLView[this._declarationTContainer.index];const o=this._declarationLView[19];return null!==o&&(s[19]=o.createEmbeddedView(e)),Ih(e,s,n),new Fh(s)}};function w$(){return Gp(tr(),pt())}function Gp(t,n){return 4&t.type?new T$(n,t,od(t,n)):null}let Zi=(()=>{class t{}return t.__NG_ELEMENT_ID__=S$,t})();function S$(){return UD(tr(),pt())}const N$=Zi,LD=class extends N${constructor(n,e,s){super(),this._lContainer=n,this._hostTNode=e,this._hostLView=s}get element(){return od(this._hostTNode,this._hostLView)}get injector(){return new Mt(this._hostTNode,this._hostLView)}get parentInjector(){const n=Mc(this._hostTNode,this._hostLView);if(cp(n)){const e=nu(n,this._hostLView),s=tu(n);return new Mt(e[1].data[s+8],e)}return new Mt(null,this._hostLView)}clear(){for(;this.length>0;)this.remove(this.length-1)}get(n){const e=BD(this._lContainer);return null!==e&&e[n]||null}get length(){return this._lContainer.length-10}createEmbeddedView(n,e,s){const r=n.createEmbeddedView(e||{});return this.insert(r,s),r}createComponent(n,e,s,r,o){const i=n&&!function Hu(t){return"function"==typeof t}(n);let a;if(i)a=e;else{const f=e||{};a=f.index,s=f.injector,r=f.projectableNodes,o=f.ngModuleRef}const l=i?n:new Sy(Ms(n)),c=s||this.parentInjector;if(!o&&null==l.ngModule){const p=(i?c:this.parentInjector).get(wl,null);p&&(o=p)}const d=l.create(c,r,void 0,o);return this.insert(d.hostView,a),d}insert(n,e){const s=n._lView,r=s[1];if(function Cc(t){return Lr(t[3])}(s)){const d=this.indexOf(n);if(-1!==d)this.detach(d);else{const f=s[3],p=new LD(f,f[6],f[3]);p.detach(p.indexOf(n))}}const o=this._adjustIndex(e),i=this._lContainer;!function XR(t,n,e,s){const r=10+s,o=e.length;s>0&&(e[r-1][4]=n),s<o-10?(n[4]=e[r],FE(e,10+s,n)):(e.push(n),n[4]=null),n[3]=e;const i=n[17];null!==i&&e!==i&&function ZR(t,n){const e=t[9];n[16]!==n[3][3][16]&&(t[2]=!0),null===e?t[9]=[n]:e.push(n)}(i,n);const a=n[19];null!==a&&a.insertView(t),n[2]|=128}(r,s,i,o);const a=N0(o,i),l=s[11],c=_p(l,i[7]);return null!==c&&function HR(t,n,e,s,r,o){s[0]=r,s[6]=n,Ch(t,s,e,1,r,o)}(r,i[6],l,s,c,a),n.attachToViewContainerRef(),FE(Ry(i),o,n),n}move(n,e){return this.insert(n,e)}indexOf(n){const e=BD(this._lContainer);return null!==e?e.indexOf(n):-1}remove(n){const e=this._adjustIndex(n,-1),s=T0(this._lContainer,e);s&&(fp(Ry(this._lContainer),e),__(s[1],s))}detach(n){const e=this._adjustIndex(n,-1),s=T0(this._lContainer,e);return s&&null!=fp(Ry(this._lContainer),e)?new Fh(s):null}_adjustIndex(n,e=0){return null==n?this.length+e:n}};function BD(t){return t[8]}function Ry(t){return t[8]||(t[8]=[])}function UD(t,n){let e;const s=n[t.index];if(Lr(s))e=s;else{let r;if(8&t.type)r=xt(s);else{const o=n[11];r=o.createComment("");const i=nn(t,n);ju(o,_p(o,i),r,function qR(t,n){return Ye(t)?t.nextSibling(n):n.nextSibling}(o,i),!1)}n[t.index]=e=function cb(t,n,e,s){return new Array(t,!0,!1,n,null,0,s,e,null,null)}(s,n,r,t),Sp(n,e)}return new LD(e,t,n)}class My{constructor(n){this.queryList=n,this.matches=null}clone(){return new My(this.queryList)}setDirty(){this.queryList.setDirty()}}class ky{constructor(n=[]){this.queries=n}createEmbeddedView(n){const e=n.queries;if(null!==e){const s=null!==n.contentQueries?n.contentQueries[0]:e.length,r=[];for(let o=0;o<s;o++){const i=e.getByIndex(o);r.push(this.queries[i.indexInDeclarationView].clone())}return new ky(r)}return null}insertView(n){this.dirtyQueriesWithMatches(n)}detachView(n){this.dirtyQueriesWithMatches(n)}dirtyQueriesWithMatches(n){for(let e=0;e<this.queries.length;e++)null!==HD(n,e).matches&&this.queries[e].setDirty()}}class VD{constructor(n,e,s=null){this.predicate=n,this.flags=e,this.read=s}}class Py{constructor(n=[]){this.queries=n}elementStart(n,e){for(let s=0;s<this.queries.length;s++)this.queries[s].elementStart(n,e)}elementEnd(n){for(let e=0;e<this.queries.length;e++)this.queries[e].elementEnd(n)}embeddedTView(n){let e=null;for(let s=0;s<this.length;s++){const r=null!==e?e.length:0,o=this.getByIndex(s).embeddedTView(n,r);o&&(o.indexInDeclarationView=s,null!==e?e.push(o):e=[o])}return null!==e?new Py(e):null}template(n,e){for(let s=0;s<this.queries.length;s++)this.queries[s].template(n,e)}getByIndex(n){return this.queries[n]}get length(){return this.queries.length}track(n){this.queries.push(n)}}class $y{constructor(n,e=-1){this.metadata=n,this.matches=null,this.indexInDeclarationView=-1,this.crossesNgTemplate=!1,this._appliesToNextNode=!0,this._declarationNodeIndex=e}elementStart(n,e){this.isApplyingToNode(e)&&this.matchTNode(n,e)}elementEnd(n){this._declarationNodeIndex===n.index&&(this._appliesToNextNode=!1)}template(n,e){this.elementStart(n,e)}embeddedTView(n,e){return this.isApplyingToNode(n)?(this.crossesNgTemplate=!0,this.addMatch(-n.index,e),new $y(this.metadata)):null}isApplyingToNode(n){if(this._appliesToNextNode&&1!=(1&this.metadata.flags)){const e=this._declarationNodeIndex;let s=n.parent;for(;null!==s&&8&s.type&&s.index!==e;)s=s.parent;return e===(null!==s?s.index:-1)}return this._appliesToNextNode}matchTNode(n,e){const s=this.metadata.predicate;if(Array.isArray(s))for(let r=0;r<s.length;r++){const o=s[r];this.matchTNodeWithReadOption(n,e,R$(e,o)),this.matchTNodeWithReadOption(n,e,Se(e,n,o,!1,!1))}else s===Sl?4&e.type&&this.matchTNodeWithReadOption(n,e,-1):this.matchTNodeWithReadOption(n,e,Se(e,n,s,!1,!1))}matchTNodeWithReadOption(n,e,s){if(null!==s){const r=this.metadata.read;if(null!==r)if(r===au||r===Zi||r===Sl&&4&e.type)this.addMatch(e.index,-2);else{const o=Se(e,n,r,!1,!1);null!==o&&this.addMatch(e.index,o)}else this.addMatch(e.index,s)}}addMatch(n,e){null===this.matches?this.matches=[n,e]:this.matches.push(n,e)}}function R$(t,n){const e=t.localNames;if(null!==e)for(let s=0;s<e.length;s+=2)if(e[s]===n)return e[s+1];return null}function k$(t,n,e,s){return-1===e?function M$(t,n){return 11&t.type?od(t,n):4&t.type?Gp(t,n):null}(n,t):-2===e?function P$(t,n,e){return e===au?od(n,t):e===Sl?Gp(n,t):e===Zi?UD(n,t):void 0}(t,n,s):We(t,t[1],e,n)}function zD(t,n,e,s){const r=n[19].queries[s];if(null===r.matches){const o=t.data,i=e.matches,a=[];for(let l=0;l<i.length;l+=2){const c=i[l];a.push(c<0?null:k$(n,o[c],i[l+1],e.metadata.read))}r.matches=a}return r.matches}function Fy(t,n,e,s){const r=t.queries.getByIndex(e),o=r.matches;if(null!==o){const i=zD(t,n,r,e);for(let a=0;a<o.length;a+=2){const l=o[a];if(l>0)s.push(i[a/2]);else{const c=o[a+1],d=n[-l];for(let f=10;f<d.length;f++){const p=d[f];p[17]===p[3]&&Fy(p[1],p,c,s)}if(null!==d[9]){const f=d[9];for(let p=0;p<f.length;p++){const m=f[p];Fy(m[1],m,c,s)}}}}}return s}function ad(t){const n=pt(),e=Pn(),s=tp();rh(s+1);const r=HD(e,s);if(t.dirty&&yr(n)===(2==(2&r.metadata.flags))){if(null===r.matches)t.reset([]);else{const o=r.crossesNgTemplate?Fy(e,n,s,[]):zD(e,n,r,s);t.reset(o,XP),t.notifyOnChanges()}return!0}return!1}function Hp(t,n,e){const s=Pn();s.firstCreatePass&&(function GD(t,n,e){null===t.queries&&(t.queries=new Py),t.queries.track(new $y(n,e))}(s,new VD(t,n,e),-1),2==(2&n)&&(s.staticViewQueries=!0)),function WD(t,n,e){const s=new Oy(4==(4&e));nb(t,n,s,s.destroy),null===n[19]&&(n[19]=new ky),n[19].queries.push(new My(s))}(s,pt(),n)}function ld(){return function $$(t,n){return t[19].queries[n].queryList}(pt(),tp())}function HD(t,n){return t.queries.getByIndex(n)}function Xp(...t){}const Gy=new Zt("Application Initializer");let Hy=(()=>{class t{constructor(e){this.appInits=e,this.resolve=Xp,this.reject=Xp,this.initialized=!1,this.done=!1,this.donePromise=new Promise((s,r)=>{this.resolve=s,this.reject=r})}runInitializers(){if(this.initialized)return;const e=[],s=()=>{this.done=!0,this.resolve()};if(this.appInits)for(let r=0;r<this.appInits.length;r++){const o=this.appInits[r]();if(kp(o))e.push(o);else if(sC(o)){const i=new Promise((a,l)=>{o.subscribe({complete:a,error:l})});e.push(i)}}Promise.all(e).then(()=>{s()}).catch(r=>{this.reject(r)}),0===e.length&&s(),this.initialized=!0}}return t.\u0275fac=function(e){return new(e||t)(rn(Gy,8))},t.\u0275prov=T({token:t,factory:t.\u0275fac,providedIn:"root"}),t})();const Vh=new Zt("AppId",{providedIn:"root",factory:function l1(){return`${Ky()}${Ky()}${Ky()}`}});function Ky(){return String.fromCharCode(97+Math.floor(25*Math.random()))}const u1=new Zt("Platform Initializer"),jy=new Zt("Platform ID"),c1=new Zt("appBootstrapListener");let d1=(()=>{class t{log(e){console.log(e)}warn(e){console.warn(e)}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275prov=T({token:t,factory:t.\u0275fac}),t})();const lu=new Zt("LocaleId",{providedIn:"root",factory:()=>RO(lu,bt.Optional|bt.SkipSelf)||function tF(){return"undefined"!=typeof $localize&&$localize.locale||$p}()});class sF{constructor(n,e){this.ngModuleFactory=n,this.componentFactories=e}}let h1=(()=>{class t{compileModuleSync(e){return new Ny(e)}compileModuleAsync(e){return Promise.resolve(this.compileModuleSync(e))}compileModuleAndAllComponentsSync(e){const s=this.compileModuleSync(e),o=za(Bs(e).declarations).reduce((i,a)=>{const l=Ms(a);return l&&i.push(new Sy(l)),i},[]);return new sF(s,o)}compileModuleAndAllComponentsAsync(e){return Promise.resolve(this.compileModuleAndAllComponentsSync(e))}clearCache(){}clearCacheFor(e){}getModuleId(e){}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275prov=T({token:t,factory:t.\u0275fac,providedIn:"root"}),t})();const oF=(()=>Promise.resolve(0))();function Xy(t){"undefined"==typeof Zone?oF.then(()=>{t&&t.apply(null,null)}):Zone.current.scheduleMicroTask("scheduleMicrotask",t)}class Vr{constructor({enableLongStackTrace:n=!1,shouldCoalesceEventChangeDetection:e=!1,shouldCoalesceRunChangeDetection:s=!1}){if(this.hasPendingMacrotasks=!1,this.hasPendingMicrotasks=!1,this.isStable=!0,this.onUnstable=new po(!1),this.onMicrotaskEmpty=new po(!1),this.onStable=new po(!1),this.onError=new po(!1),"undefined"==typeof Zone)throw new Error("In this configuration Angular requires Zone.js");Zone.assertZonePatched();const r=this;r._nesting=0,r._outer=r._inner=Zone.current,Zone.TaskTrackingZoneSpec&&(r._inner=r._inner.fork(new Zone.TaskTrackingZoneSpec)),n&&Zone.longStackTraceZoneSpec&&(r._inner=r._inner.fork(Zone.longStackTraceZoneSpec)),r.shouldCoalesceEventChangeDetection=!s&&e,r.shouldCoalesceRunChangeDetection=s,r.lastRequestAnimationFrameId=-1,r.nativeRequestAnimationFrame=function iF(){let t=Gn.requestAnimationFrame,n=Gn.cancelAnimationFrame;if("undefined"!=typeof Zone&&t&&n){const e=t[Zone.__symbol__("OriginalDelegate")];e&&(t=e);const s=n[Zone.__symbol__("OriginalDelegate")];s&&(n=s)}return{nativeRequestAnimationFrame:t,nativeCancelAnimationFrame:n}}().nativeRequestAnimationFrame,function uF(t){const n=()=>{!function lF(t){t.isCheckStableRunning||-1!==t.lastRequestAnimationFrameId||(t.lastRequestAnimationFrameId=t.nativeRequestAnimationFrame.call(Gn,()=>{t.fakeTopEventTask||(t.fakeTopEventTask=Zone.root.scheduleEventTask("fakeTopEventTask",()=>{t.lastRequestAnimationFrameId=-1,Yy(t),t.isCheckStableRunning=!0,Zy(t),t.isCheckStableRunning=!1},void 0,()=>{},()=>{})),t.fakeTopEventTask.invoke()}),Yy(t))}(t)};t._inner=t._inner.fork({name:"angular",properties:{isAngularZone:!0},onInvokeTask:(e,s,r,o,i,a)=>{try{return f1(t),e.invokeTask(r,o,i,a)}finally{(t.shouldCoalesceEventChangeDetection&&"eventTask"===o.type||t.shouldCoalesceRunChangeDetection)&&n(),p1(t)}},onInvoke:(e,s,r,o,i,a,l)=>{try{return f1(t),e.invoke(r,o,i,a,l)}finally{t.shouldCoalesceRunChangeDetection&&n(),p1(t)}},onHasTask:(e,s,r,o)=>{e.hasTask(r,o),s===r&&("microTask"==o.change?(t._hasPendingMicrotasks=o.microTask,Yy(t),Zy(t)):"macroTask"==o.change&&(t.hasPendingMacrotasks=o.macroTask))},onHandleError:(e,s,r,o)=>(e.handleError(r,o),t.runOutsideAngular(()=>t.onError.emit(o)),!1)})}(r)}static isInAngularZone(){return"undefined"!=typeof Zone&&!0===Zone.current.get("isAngularZone")}static assertInAngularZone(){if(!Vr.isInAngularZone())throw new Error("Expected to be in Angular Zone, but it is not!")}static assertNotInAngularZone(){if(Vr.isInAngularZone())throw new Error("Expected to not be in Angular Zone, but it is!")}run(n,e,s){return this._inner.run(n,e,s)}runTask(n,e,s,r){const o=this._inner,i=o.scheduleEventTask("NgZoneEvent: "+r,n,aF,Xp,Xp);try{return o.runTask(i,e,s)}finally{o.cancelTask(i)}}runGuarded(n,e,s){return this._inner.runGuarded(n,e,s)}runOutsideAngular(n){return this._outer.run(n)}}const aF={};function Zy(t){if(0==t._nesting&&!t.hasPendingMicrotasks&&!t.isStable)try{t._nesting++,t.onMicrotaskEmpty.emit(null)}finally{if(t._nesting--,!t.hasPendingMicrotasks)try{t.runOutsideAngular(()=>t.onStable.emit(null))}finally{t.isStable=!0}}}function Yy(t){t.hasPendingMicrotasks=!!(t._hasPendingMicrotasks||(t.shouldCoalesceEventChangeDetection||t.shouldCoalesceRunChangeDetection)&&-1!==t.lastRequestAnimationFrameId)}function f1(t){t._nesting++,t.isStable&&(t.isStable=!1,t.onUnstable.emit(null))}function p1(t){t._nesting--,Zy(t)}class cF{constructor(){this.hasPendingMicrotasks=!1,this.hasPendingMacrotasks=!1,this.isStable=!0,this.onUnstable=new po,this.onMicrotaskEmpty=new po,this.onStable=new po,this.onError=new po}run(n,e,s){return n.apply(e,s)}runGuarded(n,e,s){return n.apply(e,s)}runOutsideAngular(n){return n()}runTask(n,e,s,r){return n.apply(e,s)}}let Qy=(()=>{class t{constructor(e){this._ngZone=e,this._pendingCount=0,this._isZoneStable=!0,this._didWork=!1,this._callbacks=[],this.taskTrackingZone=null,this._watchAngularEvents(),e.run(()=>{this.taskTrackingZone="undefined"==typeof Zone?null:Zone.current.get("TaskTrackingZone")})}_watchAngularEvents(){this._ngZone.onUnstable.subscribe({next:()=>{this._didWork=!0,this._isZoneStable=!1}}),this._ngZone.runOutsideAngular(()=>{this._ngZone.onStable.subscribe({next:()=>{Vr.assertNotInAngularZone(),Xy(()=>{this._isZoneStable=!0,this._runCallbacksIfReady()})}})})}increasePendingRequestCount(){return this._pendingCount+=1,this._didWork=!0,this._pendingCount}decreasePendingRequestCount(){if(this._pendingCount-=1,this._pendingCount<0)throw new Error("pending async requests below zero");return this._runCallbacksIfReady(),this._pendingCount}isStable(){return this._isZoneStable&&0===this._pendingCount&&!this._ngZone.hasPendingMacrotasks}_runCallbacksIfReady(){if(this.isStable())Xy(()=>{for(;0!==this._callbacks.length;){let e=this._callbacks.pop();clearTimeout(e.timeoutId),e.doneCb(this._didWork)}this._didWork=!1});else{let e=this.getPendingTasks();this._callbacks=this._callbacks.filter(s=>!s.updateCb||!s.updateCb(e)||(clearTimeout(s.timeoutId),!1)),this._didWork=!0}}getPendingTasks(){return this.taskTrackingZone?this.taskTrackingZone.macroTasks.map(e=>({source:e.source,creationLocation:e.creationLocation,data:e.data})):[]}addCallback(e,s,r){let o=-1;s&&s>0&&(o=setTimeout(()=>{this._callbacks=this._callbacks.filter(i=>i.timeoutId!==o),e(this._didWork,this.getPendingTasks())},s)),this._callbacks.push({doneCb:e,timeoutId:o,updateCb:r})}whenStable(e,s,r){if(r&&!this.taskTrackingZone)throw new Error('Task tracking zone is required when passing an update callback to whenStable(). Is "zone.js/plugins/task-tracking" loaded?');this.addCallback(e,s,r),this._runCallbacksIfReady()}getPendingRequestCount(){return this._pendingCount}findProviders(e,s,r){return[]}}return t.\u0275fac=function(e){return new(e||t)(rn(Vr))},t.\u0275prov=T({token:t,factory:t.\u0275fac}),t})(),m1=(()=>{class t{constructor(){this._applications=new Map,Jy.addToWindow(this)}registerApplication(e,s){this._applications.set(e,s)}unregisterApplication(e){this._applications.delete(e)}unregisterAllApplications(){this._applications.clear()}getTestability(e){return this._applications.get(e)||null}getAllTestabilities(){return Array.from(this._applications.values())}getAllRootElements(){return Array.from(this._applications.keys())}findTestabilityInTree(e,s=!0){return Jy.findTestabilityInTree(this,e,s)}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275prov=T({token:t,factory:t.\u0275fac}),t})();class dF{addToWindow(n){}findTestabilityInTree(n,e,s){return null}}let Yi,Jy=new dF;const g1=new Zt("AllowMultipleToken");class y1{constructor(n,e){this.name=n,this.token=e}}function v1(t,n,e=[]){const s=`Platform: ${n}`,r=new Zt(s);return(o=[])=>{let i=x1();if(!i||i.injector.get(g1,!1))if(t)t(e.concat(o).concat({provide:r,useValue:!0}));else{const a=e.concat(o).concat({provide:r,useValue:!0},{provide:ty,useValue:"platform"});!function mF(t){if(Yi&&!Yi.destroyed&&!Yi.injector.get(g1,!1))throw new wn(400,"");Yi=t.get(E1);const n=t.get(u1,null);n&&n.forEach(e=>e())}(ho.create({providers:a,name:s}))}return function gF(t){const n=x1();if(!n)throw new wn(401,"");return n}()}}function x1(){return Yi&&!Yi.destroyed?Yi:null}let E1=(()=>{class t{constructor(e){this._injector=e,this._modules=[],this._destroyListeners=[],this._destroyed=!1}bootstrapModuleFactory(e,s){const a=function yF(t,n){let e;return e="noop"===t?new cF:("zone.js"===t?void 0:t)||new Vr({enableLongStackTrace:!1,shouldCoalesceEventChangeDetection:!!(null==n?void 0:n.ngZoneEventCoalescing),shouldCoalesceRunChangeDetection:!!(null==n?void 0:n.ngZoneRunCoalescing)}),e}(s?s.ngZone:void 0,{ngZoneEventCoalescing:s&&s.ngZoneEventCoalescing||!1,ngZoneRunCoalescing:s&&s.ngZoneRunCoalescing||!1}),l=[{provide:Vr,useValue:a}];return a.run(()=>{const c=ho.create({providers:l,parent:this.injector,name:e.moduleType.name}),d=e.create(c),f=d.injector.get(_h,null);if(!f)throw new wn(402,"");return a.runOutsideAngular(()=>{const p=a.onError.subscribe({next:m=>{f.handleError(m)}});d.onDestroy(()=>{ev(this._modules,d),p.unsubscribe()})}),function vF(t,n,e){try{const s=e();return kp(s)?s.catch(r=>{throw n.runOutsideAngular(()=>t.handleError(r)),r}):s}catch(s){throw n.runOutsideAngular(()=>t.handleError(s)),s}}(f,a,()=>{const p=d.injector.get(Hy);return p.runInitializers(),p.donePromise.then(()=>(function X2(t){is(t,"Expected localeId to be defined"),"string"==typeof t&&(qC=t.toLowerCase().replace(/_/g,"-"))}(d.injector.get(lu,$p)||$p),this._moduleDoBootstrap(d),d))})})}bootstrapModule(e,s=[]){const r=_1({},s);return function fF(t,n,e){const s=new Ny(e);return Promise.resolve(s)}(0,0,e).then(o=>this.bootstrapModuleFactory(o,r))}_moduleDoBootstrap(e){const s=e.injector.get(qy);if(e._bootstrapComponents.length>0)e._bootstrapComponents.forEach(r=>s.bootstrap(r));else{if(!e.instance.ngDoBootstrap)throw new wn(403,"");e.instance.ngDoBootstrap(s)}this._modules.push(e)}onDestroy(e){this._destroyListeners.push(e)}get injector(){return this._injector}destroy(){if(this._destroyed)throw new wn(404,"");this._modules.slice().forEach(e=>e.destroy()),this._destroyListeners.forEach(e=>e()),this._destroyed=!0}get destroyed(){return this._destroyed}}return t.\u0275fac=function(e){return new(e||t)(rn(ho))},t.\u0275prov=T({token:t,factory:t.\u0275fac}),t})();function _1(t,n){return Array.isArray(n)?n.reduce(_1,t):Object.assign(Object.assign({},t),n)}let qy=(()=>{class t{constructor(e,s,r,o,i){this._zone=e,this._injector=s,this._exceptionHandler=r,this._componentFactoryResolver=o,this._initStatus=i,this._bootstrapListeners=[],this._views=[],this._runningTick=!1,this._stable=!0,this.componentTypes=[],this.components=[],this._onMicrotaskEmptySubscription=this._zone.onMicrotaskEmpty.subscribe({next:()=>{this._zone.run(()=>{this.tick()})}});const a=new Ne(c=>{this._stable=this._zone.isStable&&!this._zone.hasPendingMacrotasks&&!this._zone.hasPendingMicrotasks,this._zone.runOutsideAngular(()=>{c.next(this._stable),c.complete()})}),l=new Ne(c=>{let d;this._zone.runOutsideAngular(()=>{d=this._zone.onStable.subscribe(()=>{Vr.assertNotInAngularZone(),Xy(()=>{!this._stable&&!this._zone.hasPendingMacrotasks&&!this._zone.hasPendingMicrotasks&&(this._stable=!0,c.next(!0))})})});const f=this._zone.onUnstable.subscribe(()=>{Vr.assertInAngularZone(),this._stable&&(this._stable=!1,this._zone.runOutsideAngular(()=>{c.next(!1)}))});return()=>{d.unsubscribe(),f.unsubscribe()}});this.isStable=function Wl(...t){const n=Oo(t),e=function ul(t,n){return"number"==typeof wi(t)?t.pop():n}(t,1/0),s=t;return s.length?1===s.length?Os(s[0]):Pr(e)(Qn(s,n)):$r}(a,l.pipe(function Ea(t={}){const{connector:n=(()=>new Dt),resetOnError:e=!0,resetOnComplete:s=!0,resetOnRefCountZero:r=!0}=t;return o=>{let i,a,l,c=0,d=!1,f=!1;const p=()=>{null==a||a.unsubscribe(),a=void 0},m=()=>{p(),i=l=void 0,d=f=!1},y=()=>{const _=i;m(),null==_||_.unsubscribe()};return Vt((_,x)=>{c++,!f&&!d&&p();const D=l=null!=l?l:n();x.add(()=>{c--,0===c&&!f&&!d&&(a=Qo(y,r))}),D.subscribe(x),!i&&c>0&&(i=new K({next:C=>D.next(C),error:C=>{f=!0,p(),a=Qo(m,e,C),D.error(C)},complete:()=>{d=!0,p(),a=Qo(m,s),D.complete()}}),Os(_).subscribe(i))})(o)}}()))}bootstrap(e,s){if(!this._initStatus.done)throw new wn(405,"");let r;r=e instanceof DD?e:this._componentFactoryResolver.resolveComponentFactory(e),this.componentTypes.push(r.componentType);const o=function pF(t){return t.isBoundToModule}(r)?void 0:this._injector.get(wl),a=r.create(ho.NULL,[],s||r.selector,o),l=a.location.nativeElement,c=a.injector.get(Qy,null),d=c&&a.injector.get(m1);return c&&d&&d.registerApplication(l,c),a.onDestroy(()=>{this.detachView(a.hostView),ev(this.components,a),d&&d.unregisterApplication(l)}),this._loadComponent(a),a}tick(){if(this._runningTick)throw new wn(101,"");try{this._runningTick=!0;for(let e of this._views)e.detectChanges()}catch(e){this._zone.runOutsideAngular(()=>this._exceptionHandler.handleError(e))}finally{this._runningTick=!1}}attachView(e){const s=e;this._views.push(s),s.attachToAppRef(this)}detachView(e){const s=e;ev(this._views,s),s.detachFromAppRef()}_loadComponent(e){this.attachView(e.hostView),this.tick(),this.components.push(e),this._injector.get(c1,[]).concat(this._bootstrapListeners).forEach(r=>r(e))}ngOnDestroy(){this._views.slice().forEach(e=>e.destroy()),this._onMicrotaskEmptySubscription.unsubscribe()}get viewCount(){return this._views.length}}return t.\u0275fac=function(e){return new(e||t)(rn(Vr),rn(ho),rn(_h),rn($h),rn(Hy))},t.\u0275prov=T({token:t,factory:t.\u0275fac,providedIn:"root"}),t})();function ev(t,n){const e=t.indexOf(n);e>-1&&t.splice(e,1)}let C1=!0,tv=(()=>{class t{}return t.__NG_ELEMENT_ID__=_F,t})();function _F(t){return function bF(t,n,e){if(si(t)&&!e){const s=gr(t.index,n);return new Fh(s,s)}return 47&t.type?new Fh(n[16],n):null}(tr(),pt(),16==(16&t))}const PF=v1(null,"core",[{provide:jy,useValue:"unknown"},{provide:E1,deps:[ho]},{provide:m1,deps:[]},{provide:d1,deps:[]}]);let $F=(()=>{class t{constructor(e){}}return t.\u0275fac=function(e){return new(e||t)(rn(qy))},t.\u0275mod=Sr({type:t}),t.\u0275inj=j({}),t})(),Jp=null;function uu(){return Jp}const Io=new Zt("DocumentToken");let Qu=(()=>{class t{historyGo(e){throw new Error("Not implemented")}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275prov=T({token:t,factory:function(){return function UF(){return rn(k1)}()},providedIn:"platform"}),t})();const VF=new Zt("Location Initialized");let k1=(()=>{class t extends Qu{constructor(e){super(),this._doc=e,this._init()}_init(){this.location=window.location,this._history=window.history}getBaseHrefFromDOM(){return uu().getBaseHref(this._doc)}onPopState(e){const s=uu().getGlobalEventTarget(this._doc,"window");return s.addEventListener("popstate",e,!1),()=>s.removeEventListener("popstate",e)}onHashChange(e){const s=uu().getGlobalEventTarget(this._doc,"window");return s.addEventListener("hashchange",e,!1),()=>s.removeEventListener("hashchange",e)}get href(){return this.location.href}get protocol(){return this.location.protocol}get hostname(){return this.location.hostname}get port(){return this.location.port}get pathname(){return this.location.pathname}get search(){return this.location.search}get hash(){return this.location.hash}set pathname(e){this.location.pathname=e}pushState(e,s,r){P1()?this._history.pushState(e,s,r):this.location.hash=r}replaceState(e,s,r){P1()?this._history.replaceState(e,s,r):this.location.hash=r}forward(){this._history.forward()}back(){this._history.back()}historyGo(e=0){this._history.go(e)}getState(){return this._history.state}}return t.\u0275fac=function(e){return new(e||t)(rn(Io))},t.\u0275prov=T({token:t,factory:function(){return function zF(){return new k1(rn(Io))}()},providedIn:"platform"}),t})();function P1(){return!!window.history.pushState}function iv(t,n){if(0==t.length)return n;if(0==n.length)return t;let e=0;return t.endsWith("/")&&e++,n.startsWith("/")&&e++,2==e?t+n.substring(1):1==e?t+n:t+"/"+n}function $1(t){const n=t.match(/#|\?|$/),e=n&&n.index||t.length;return t.slice(0,e-("/"===t[e-1]?1:0))+t.slice(e)}function Nl(t){return t&&"?"!==t[0]?"?"+t:t}let cd=(()=>{class t{historyGo(e){throw new Error("Not implemented")}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275prov=T({token:t,factory:function(){return function WF(t){const n=rn(Io).location;return new F1(rn(Qu),n&&n.origin||"")}()},providedIn:"root"}),t})();const av=new Zt("appBaseHref");let F1=(()=>{class t extends cd{constructor(e,s){if(super(),this._platformLocation=e,this._removeListenerFns=[],null==s&&(s=this._platformLocation.getBaseHrefFromDOM()),null==s)throw new Error("No base href set. Please provide a value for the APP_BASE_HREF token or add a base element to the document.");this._baseHref=s}ngOnDestroy(){for(;this._removeListenerFns.length;)this._removeListenerFns.pop()()}onPopState(e){this._removeListenerFns.push(this._platformLocation.onPopState(e),this._platformLocation.onHashChange(e))}getBaseHref(){return this._baseHref}prepareExternalUrl(e){return iv(this._baseHref,e)}path(e=!1){const s=this._platformLocation.pathname+Nl(this._platformLocation.search),r=this._platformLocation.hash;return r&&e?`${s}${r}`:s}pushState(e,s,r,o){const i=this.prepareExternalUrl(r+Nl(o));this._platformLocation.pushState(e,s,i)}replaceState(e,s,r,o){const i=this.prepareExternalUrl(r+Nl(o));this._platformLocation.replaceState(e,s,i)}forward(){this._platformLocation.forward()}back(){this._platformLocation.back()}historyGo(e=0){var s,r;null===(r=(s=this._platformLocation).historyGo)||void 0===r||r.call(s,e)}}return t.\u0275fac=function(e){return new(e||t)(rn(Qu),rn(av,8))},t.\u0275prov=T({token:t,factory:t.\u0275fac}),t})(),GF=(()=>{class t extends cd{constructor(e,s){super(),this._platformLocation=e,this._baseHref="",this._removeListenerFns=[],null!=s&&(this._baseHref=s)}ngOnDestroy(){for(;this._removeListenerFns.length;)this._removeListenerFns.pop()()}onPopState(e){this._removeListenerFns.push(this._platformLocation.onPopState(e),this._platformLocation.onHashChange(e))}getBaseHref(){return this._baseHref}path(e=!1){let s=this._platformLocation.hash;return null==s&&(s="#"),s.length>0?s.substring(1):s}prepareExternalUrl(e){const s=iv(this._baseHref,e);return s.length>0?"#"+s:s}pushState(e,s,r,o){let i=this.prepareExternalUrl(r+Nl(o));0==i.length&&(i=this._platformLocation.pathname),this._platformLocation.pushState(e,s,i)}replaceState(e,s,r,o){let i=this.prepareExternalUrl(r+Nl(o));0==i.length&&(i=this._platformLocation.pathname),this._platformLocation.replaceState(e,s,i)}forward(){this._platformLocation.forward()}back(){this._platformLocation.back()}historyGo(e=0){var s,r;null===(r=(s=this._platformLocation).historyGo)||void 0===r||r.call(s,e)}}return t.\u0275fac=function(e){return new(e||t)(rn(Qu),rn(av,8))},t.\u0275prov=T({token:t,factory:t.\u0275fac}),t})(),lv=(()=>{class t{constructor(e,s){this._subject=new po,this._urlChangeListeners=[],this._platformStrategy=e;const r=this._platformStrategy.getBaseHref();this._platformLocation=s,this._baseHref=$1(L1(r)),this._platformStrategy.onPopState(o=>{this._subject.emit({url:this.path(!0),pop:!0,state:o.state,type:o.type})})}path(e=!1){return this.normalize(this._platformStrategy.path(e))}getState(){return this._platformLocation.getState()}isCurrentPathEqualTo(e,s=""){return this.path()==this.normalize(e+Nl(s))}normalize(e){return t.stripTrailingSlash(function KF(t,n){return t&&n.startsWith(t)?n.substring(t.length):n}(this._baseHref,L1(e)))}prepareExternalUrl(e){return e&&"/"!==e[0]&&(e="/"+e),this._platformStrategy.prepareExternalUrl(e)}go(e,s="",r=null){this._platformStrategy.pushState(r,"",e,s),this._notifyUrlChangeListeners(this.prepareExternalUrl(e+Nl(s)),r)}replaceState(e,s="",r=null){this._platformStrategy.replaceState(r,"",e,s),this._notifyUrlChangeListeners(this.prepareExternalUrl(e+Nl(s)),r)}forward(){this._platformStrategy.forward()}back(){this._platformStrategy.back()}historyGo(e=0){var s,r;null===(r=(s=this._platformStrategy).historyGo)||void 0===r||r.call(s,e)}onUrlChange(e){this._urlChangeListeners.push(e),this._urlChangeSubscription||(this._urlChangeSubscription=this.subscribe(s=>{this._notifyUrlChangeListeners(s.url,s.state)}))}_notifyUrlChangeListeners(e="",s){this._urlChangeListeners.forEach(r=>r(e,s))}subscribe(e,s,r){return this._subject.subscribe({next:e,error:s,complete:r})}}return t.normalizeQueryParams=Nl,t.joinWithSlash=iv,t.stripTrailingSlash=$1,t.\u0275fac=function(e){return new(e||t)(rn(cd),rn(Qu))},t.\u0275prov=T({token:t,factory:function(){return function HF(){return new lv(rn(cd),rn(Qu))}()},providedIn:"root"}),t})();function L1(t){return t.replace(/\/index.html$/,"")}let lB=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Sr({type:t}),t.\u0275inj=j({}),t})();let hB=(()=>{class t{}return t.\u0275prov=T({token:t,providedIn:"root",factory:()=>new fB(rn(Io),window)}),t})();class fB{constructor(n,e){this.document=n,this.window=e,this.offset=()=>[0,0]}setOffset(n){this.offset=Array.isArray(n)?()=>n:n}getScrollPosition(){return this.supportsScrolling()?[this.window.pageXOffset,this.window.pageYOffset]:[0,0]}scrollToPosition(n){this.supportsScrolling()&&this.window.scrollTo(n[0],n[1])}scrollToAnchor(n){if(!this.supportsScrolling())return;const e=function pB(t,n){const e=t.getElementById(n)||t.getElementsByName(n)[0];if(e)return e;if("function"==typeof t.createTreeWalker&&t.body&&(t.body.createShadowRoot||t.body.attachShadow)){const s=t.createTreeWalker(t.body,NodeFilter.SHOW_ELEMENT);let r=s.currentNode;for(;r;){const o=r.shadowRoot;if(o){const i=o.getElementById(n)||o.querySelector(`[name="${n}"]`);if(i)return i}r=s.nextNode()}}return null}(this.document,n);e&&(this.scrollToElement(e),e.focus())}setHistoryScrollRestoration(n){if(this.supportScrollRestoration()){const e=this.window.history;e&&e.scrollRestoration&&(e.scrollRestoration=n)}}scrollToElement(n){const e=n.getBoundingClientRect(),s=e.left+this.window.pageXOffset,r=e.top+this.window.pageYOffset,o=this.offset();this.window.scrollTo(s-o[0],r-o[1])}supportScrollRestoration(){try{if(!this.supportsScrolling())return!1;const n=J1(this.window.history)||J1(Object.getPrototypeOf(this.window.history));return!(!n||!n.writable&&!n.set)}catch(n){return!1}}supportsScrolling(){try{return!!this.window&&!!this.window.scrollTo&&"pageXOffset"in this.window}catch(n){return!1}}}function J1(t){return Object.getOwnPropertyDescriptor(t,"scrollRestoration")}class bv extends class gB extends class BF{}{constructor(){super(...arguments),this.supportsDOMEvents=!0}}{static makeCurrent(){!function LF(t){Jp||(Jp=t)}(new bv)}onAndCancel(n,e,s){return n.addEventListener(e,s,!1),()=>{n.removeEventListener(e,s,!1)}}dispatchEvent(n,e){n.dispatchEvent(e)}remove(n){n.parentNode&&n.parentNode.removeChild(n)}createElement(n,e){return(e=e||this.getDefaultDocument()).createElement(n)}createHtmlDocument(){return document.implementation.createHTMLDocument("fakeTitle")}getDefaultDocument(){return document}isElementNode(n){return n.nodeType===Node.ELEMENT_NODE}isShadowRoot(n){return n instanceof DocumentFragment}getGlobalEventTarget(n,e){return"window"===e?window:"document"===e?n:"body"===e?n.body:null}getBaseHref(n){const e=function yB(){return Hh=Hh||document.querySelector("base"),Hh?Hh.getAttribute("href"):null}();return null==e?null:function vB(t){lm=lm||document.createElement("a"),lm.setAttribute("href",t);const n=lm.pathname;return"/"===n.charAt(0)?n:`/${n}`}(e)}resetBaseElement(){Hh=null}getUserAgent(){return window.navigator.userAgent}getCookie(n){return function NL(t,n){n=encodeURIComponent(n);for(const e of t.split(";")){const s=e.indexOf("="),[r,o]=-1==s?[e,""]:[e.slice(0,s),e.slice(s+1)];if(r.trim()===n)return decodeURIComponent(o)}return null}(document.cookie,n)}}let lm,Hh=null;const q1=new Zt("TRANSITION_ID"),EB=[{provide:Gy,useFactory:function xB(t,n,e){return()=>{e.get(Hy).donePromise.then(()=>{const s=uu(),r=n.querySelectorAll(`style[ng-transition="${t}"]`);for(let o=0;o<r.length;o++)s.remove(r[o])})}},deps:[q1,Io,ho],multi:!0}];class Cv{static init(){!function hF(t){Jy=t}(new Cv)}addToWindow(n){Gn.getAngularTestability=(s,r=!0)=>{const o=n.findTestabilityInTree(s,r);if(null==o)throw new Error("Could not find testability for element.");return o},Gn.getAllAngularTestabilities=()=>n.getAllTestabilities(),Gn.getAllAngularRootElements=()=>n.getAllRootElements(),Gn.frameworkStabilizers||(Gn.frameworkStabilizers=[]),Gn.frameworkStabilizers.push(s=>{const r=Gn.getAllAngularTestabilities();let o=r.length,i=!1;const a=function(l){i=i||l,o--,0==o&&s(i)};r.forEach(function(l){l.whenStable(a)})})}findTestabilityInTree(n,e,s){if(null==e)return null;const r=n.getTestability(e);return null!=r?r:s?uu().isShadowRoot(e)?this.findTestabilityInTree(n,e.host,!0):this.findTestabilityInTree(n,e.parentElement,!0):null}}let _B=(()=>{class t{build(){return new XMLHttpRequest}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275prov=T({token:t,factory:t.\u0275fac}),t})();const um=new Zt("EventManagerPlugins");let cm=(()=>{class t{constructor(e,s){this._zone=s,this._eventNameToPlugin=new Map,e.forEach(r=>r.manager=this),this._plugins=e.slice().reverse()}addEventListener(e,s,r){return this._findPluginFor(s).addEventListener(e,s,r)}addGlobalEventListener(e,s,r){return this._findPluginFor(s).addGlobalEventListener(e,s,r)}getZone(){return this._zone}_findPluginFor(e){const s=this._eventNameToPlugin.get(e);if(s)return s;const r=this._plugins;for(let o=0;o<r.length;o++){const i=r[o];if(i.supports(e))return this._eventNameToPlugin.set(e,i),i}throw new Error(`No event manager plugin found for event ${e}`)}}return t.\u0275fac=function(e){return new(e||t)(rn(um),rn(Vr))},t.\u0275prov=T({token:t,factory:t.\u0275fac}),t})();class eI{constructor(n){this._doc=n}addGlobalEventListener(n,e,s){const r=uu().getGlobalEventTarget(this._doc,n);if(!r)throw new Error(`Unsupported event target ${r} for event ${e}`);return this.addEventListener(r,e,s)}}let tI=(()=>{class t{constructor(){this._stylesSet=new Set}addStyles(e){const s=new Set;e.forEach(r=>{this._stylesSet.has(r)||(this._stylesSet.add(r),s.add(r))}),this.onStylesAdded(s)}onStylesAdded(e){}getAllStyles(){return Array.from(this._stylesSet)}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275prov=T({token:t,factory:t.\u0275fac}),t})(),Kh=(()=>{class t extends tI{constructor(e){super(),this._doc=e,this._hostNodes=new Map,this._hostNodes.set(e.head,[])}_addStylesToHost(e,s,r){e.forEach(o=>{const i=this._doc.createElement("style");i.textContent=o,r.push(s.appendChild(i))})}addHost(e){const s=[];this._addStylesToHost(this._stylesSet,e,s),this._hostNodes.set(e,s)}removeHost(e){const s=this._hostNodes.get(e);s&&s.forEach(nI),this._hostNodes.delete(e)}onStylesAdded(e){this._hostNodes.forEach((s,r)=>{this._addStylesToHost(e,r,s)})}ngOnDestroy(){this._hostNodes.forEach(e=>e.forEach(nI))}}return t.\u0275fac=function(e){return new(e||t)(rn(Io))},t.\u0275prov=T({token:t,factory:t.\u0275fac}),t})();function nI(t){uu().remove(t)}const Dv={svg:"http://www.w3.org/2000/svg",xhtml:"http://www.w3.org/1999/xhtml",xlink:"http://www.w3.org/1999/xlink",xml:"http://www.w3.org/XML/1998/namespace",xmlns:"http://www.w3.org/2000/xmlns/",math:"http://www.w3.org/1998/MathML/"},Iv=/%COMP%/g;function dm(t,n,e){for(let s=0;s<n.length;s++){let r=n[s];Array.isArray(r)?dm(t,r,e):(r=r.replace(Iv,t),e.push(r))}return e}function oI(t){return n=>{if("__ngUnwrap__"===n)return t;!1===t(n)&&(n.preventDefault(),n.returnValue=!1)}}let Tv=(()=>{class t{constructor(e,s,r){this.eventManager=e,this.sharedStylesHost=s,this.appId=r,this.rendererByCompId=new Map,this.defaultRenderer=new wv(e)}createRenderer(e,s){if(!e||!s)return this.defaultRenderer;switch(s.encapsulation){case wr.Emulated:{let r=this.rendererByCompId.get(s.id);return r||(r=new wB(this.eventManager,this.sharedStylesHost,s,this.appId),this.rendererByCompId.set(s.id,r)),r.applyToHost(e),r}case 1:case wr.ShadowDom:return new SB(this.eventManager,this.sharedStylesHost,e,s);default:if(!this.rendererByCompId.has(s.id)){const r=dm(s.id,s.styles,[]);this.sharedStylesHost.addStyles(r),this.rendererByCompId.set(s.id,this.defaultRenderer)}return this.defaultRenderer}}begin(){}end(){}}return t.\u0275fac=function(e){return new(e||t)(rn(cm),rn(Kh),rn(Vh))},t.\u0275prov=T({token:t,factory:t.\u0275fac}),t})();class wv{constructor(n){this.eventManager=n,this.data=Object.create(null),this.destroyNode=null}destroy(){}createElement(n,e){return e?document.createElementNS(Dv[e]||e,n):document.createElement(n)}createComment(n){return document.createComment(n)}createText(n){return document.createTextNode(n)}appendChild(n,e){n.appendChild(e)}insertBefore(n,e,s){n&&n.insertBefore(e,s)}removeChild(n,e){n&&n.removeChild(e)}selectRootElement(n,e){let s="string"==typeof n?document.querySelector(n):n;if(!s)throw new Error(`The selector "${n}" did not match any elements`);return e||(s.textContent=""),s}parentNode(n){return n.parentNode}nextSibling(n){return n.nextSibling}setAttribute(n,e,s,r){if(r){e=r+":"+e;const o=Dv[r];o?n.setAttributeNS(o,e,s):n.setAttribute(e,s)}else n.setAttribute(e,s)}removeAttribute(n,e,s){if(s){const r=Dv[s];r?n.removeAttributeNS(r,e):n.removeAttribute(`${s}:${e}`)}else n.removeAttribute(e)}addClass(n,e){n.classList.add(e)}removeClass(n,e){n.classList.remove(e)}setStyle(n,e,s,r){r&(Bo.DashCase|Bo.Important)?n.style.setProperty(e,s,r&Bo.Important?"important":""):n.style[e]=s}removeStyle(n,e,s){s&Bo.DashCase?n.style.removeProperty(e):n.style[e]=""}setProperty(n,e,s){n[e]=s}setValue(n,e){n.nodeValue=e}listen(n,e,s){return"string"==typeof n?this.eventManager.addGlobalEventListener(n,e,oI(s)):this.eventManager.addEventListener(n,e,oI(s))}}class wB extends wv{constructor(n,e,s,r){super(n),this.component=s;const o=dm(r+"-"+s.id,s.styles,[]);e.addStyles(o),this.contentAttr=function DB(t){return"_ngcontent-%COMP%".replace(Iv,t)}(r+"-"+s.id),this.hostAttr=function IB(t){return"_nghost-%COMP%".replace(Iv,t)}(r+"-"+s.id)}applyToHost(n){super.setAttribute(n,this.hostAttr,"")}createElement(n,e){const s=super.createElement(n,e);return super.setAttribute(s,this.contentAttr,""),s}}class SB extends wv{constructor(n,e,s,r){super(n),this.sharedStylesHost=e,this.hostEl=s,this.shadowRoot=s.attachShadow({mode:"open"}),this.sharedStylesHost.addHost(this.shadowRoot);const o=dm(r.id,r.styles,[]);for(let i=0;i<o.length;i++){const a=document.createElement("style");a.textContent=o[i],this.shadowRoot.appendChild(a)}}nodeOrShadowRoot(n){return n===this.hostEl?this.shadowRoot:n}destroy(){this.sharedStylesHost.removeHost(this.shadowRoot)}appendChild(n,e){return super.appendChild(this.nodeOrShadowRoot(n),e)}insertBefore(n,e,s){return super.insertBefore(this.nodeOrShadowRoot(n),e,s)}removeChild(n,e){return super.removeChild(this.nodeOrShadowRoot(n),e)}parentNode(n){return this.nodeOrShadowRoot(super.parentNode(this.nodeOrShadowRoot(n)))}}let NB=(()=>{class t extends eI{constructor(e){super(e)}supports(e){return!0}addEventListener(e,s,r){return e.addEventListener(s,r,!1),()=>this.removeEventListener(e,s,r)}removeEventListener(e,s,r){return e.removeEventListener(s,r)}}return t.\u0275fac=function(e){return new(e||t)(rn(Io))},t.\u0275prov=T({token:t,factory:t.\u0275fac}),t})();const aI=["alt","control","meta","shift"],OB={"\b":"Backspace","\t":"Tab","\x7f":"Delete","\x1b":"Escape",Del:"Delete",Esc:"Escape",Left:"ArrowLeft",Right:"ArrowRight",Up:"ArrowUp",Down:"ArrowDown",Menu:"ContextMenu",Scroll:"ScrollLock",Win:"OS"},lI={A:"1",B:"2",C:"3",D:"4",E:"5",F:"6",G:"7",H:"8",I:"9",J:"*",K:"+",M:"-",N:".",O:"/","`":"0","\x90":"NumLock"},RB={alt:t=>t.altKey,control:t=>t.ctrlKey,meta:t=>t.metaKey,shift:t=>t.shiftKey};let MB=(()=>{class t extends eI{constructor(e){super(e)}supports(e){return null!=t.parseEventName(e)}addEventListener(e,s,r){const o=t.parseEventName(s),i=t.eventCallback(o.fullKey,r,this.manager.getZone());return this.manager.getZone().runOutsideAngular(()=>uu().onAndCancel(e,o.domEventName,i))}static parseEventName(e){const s=e.toLowerCase().split("."),r=s.shift();if(0===s.length||"keydown"!==r&&"keyup"!==r)return null;const o=t._normalizeKey(s.pop());let i="";if(aI.forEach(l=>{const c=s.indexOf(l);c>-1&&(s.splice(c,1),i+=l+".")}),i+=o,0!=s.length||0===o.length)return null;const a={};return a.domEventName=r,a.fullKey=i,a}static getEventFullKey(e){let s="",r=function kB(t){let n=t.key;if(null==n){if(n=t.keyIdentifier,null==n)return"Unidentified";n.startsWith("U+")&&(n=String.fromCharCode(parseInt(n.substring(2),16)),3===t.location&&lI.hasOwnProperty(n)&&(n=lI[n]))}return OB[n]||n}(e);return r=r.toLowerCase()," "===r?r="space":"."===r&&(r="dot"),aI.forEach(o=>{o!=r&&RB[o](e)&&(s+=o+".")}),s+=r,s}static eventCallback(e,s,r){return o=>{t.getEventFullKey(o)===e&&r.runGuarded(()=>s(o))}}static _normalizeKey(e){return"esc"===e?"escape":e}}return t.\u0275fac=function(e){return new(e||t)(rn(Io))},t.\u0275prov=T({token:t,factory:t.\u0275fac}),t})();const LB=v1(PF,"browser",[{provide:jy,useValue:"browser"},{provide:u1,useValue:function PB(){bv.makeCurrent(),Cv.init()},multi:!0},{provide:Io,useFactory:function FB(){return function De(t){Ee=t}(document),document},deps:[]}]),BB=[{provide:ty,useValue:"root"},{provide:_h,useFactory:function $B(){return new _h},deps:[]},{provide:um,useClass:NB,multi:!0,deps:[Io,Vr,jy]},{provide:um,useClass:MB,multi:!0,deps:[Io]},{provide:Tv,useClass:Tv,deps:[cm,Kh,Vh]},{provide:TD,useExisting:Tv},{provide:tI,useExisting:Kh},{provide:Kh,useClass:Kh,deps:[Io]},{provide:Qy,useClass:Qy,deps:[Vr]},{provide:cm,useClass:cm,deps:[um,Vr]},{provide:class mB{},useClass:_B,deps:[]}];let UB=(()=>{class t{constructor(e){if(e)throw new Error("BrowserModule has already been loaded. If you need access to common directives such as NgIf and NgFor from a lazy loaded module, import CommonModule instead.")}static withServerTransition(e){return{ngModule:t,providers:[{provide:Vh,useValue:e.appId},{provide:q1,useExisting:Vh},EB]}}}return t.\u0275fac=function(e){return new(e||t)(rn(t,12))},t.\u0275mod=Sr({type:t}),t.\u0275inj=j({providers:BB,imports:[lB,$F]}),t})();"undefined"!=typeof window&&window;let dI=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275prov=T({token:t,factory:function(e){let s=null;return s=e?new(e||t):rn(hI),s},providedIn:"root"}),t})(),hI=(()=>{class t extends dI{constructor(e){super(),this._doc=e}sanitize(e,s){if(null==s)return null;switch(e){case ys.NONE:return s;case ys.HTML:return Ua(s,"HTML")?Lo(s):i_(this._doc,String(s)).toString();case ys.STYLE:return Ua(s,"Style")?Lo(s):s;case ys.SCRIPT:if(Ua(s,"Script"))return Lo(s);throw new Error("unsafe value used in a script context");case ys.URL:return JE(s),Ua(s,"URL")?Lo(s):yh(String(s));case ys.RESOURCE_URL:if(Ua(s,"ResourceURL"))return Lo(s);throw new Error("unsafe value used in a resource URL context (see https://g.co/ng/security#xss)");default:throw new Error(`Unexpected SecurityContext ${e} (see https://g.co/ng/security#xss)`)}}bypassSecurityTrustHtml(e){return function QO(t){return new KO(t)}(e)}bypassSecurityTrustStyle(e){return function JO(t){return new jO(t)}(e)}bypassSecurityTrustScript(e){return function qO(t){return new XO(t)}(e)}bypassSecurityTrustUrl(e){return function eR(t){return new ZO(t)}(e)}bypassSecurityTrustResourceUrl(e){return function tR(t){return new YO(t)}(e)}}return t.\u0275fac=function(e){return new(e||t)(rn(Io))},t.\u0275prov=T({token:t,factory:function(e){let s=null;return s=e?new e:function YB(t){return new hI(t.get(Io))}(rn(ho)),s},providedIn:"root"}),t})();function xn(...t){return Qn(t,Oo(t))}class qi extends Dt{constructor(n){super(),this._value=n}get value(){return this.getValue()}_subscribe(n){const e=super._subscribe(n);return!e.closed&&n.next(this._value),e}getValue(){const{hasError:n,thrownError:e,_value:s}=this;if(n)throw e;return this._throwIfClosed(),s}next(n){super.next(this._value=n)}}const{isArray:QB}=Array,{getPrototypeOf:JB,prototype:qB,keys:e3}=Object;const{isArray:s3}=Array;function Nv(...t){const n=Oo(t),e=function Hr(t){return U(wi(t))?t.pop():void 0}(t),{args:s,keys:r}=function t3(t){if(1===t.length){const n=t[0];if(QB(n))return{args:n,keys:null};if(function n3(t){return t&&"object"==typeof t&&JB(t)===qB}(n)){const e=e3(n);return{args:e.map(s=>n[s]),keys:e}}}return{args:t,keys:null}}(t);if(0===s.length)return Qn([],n);const o=new Ne(function a3(t,n,e=Oe){return s=>{fI(n,()=>{const{length:r}=t,o=new Array(r);let i=r,a=r;for(let l=0;l<r;l++)fI(n,()=>{const c=Qn(t[l],n);let d=!1;c.subscribe(Ht(s,f=>{o[l]=f,d||(d=!0,a--),a||s.next(e(o.slice()))},()=>{--i||s.complete()}))},s)},s)}}(s,n,r?i=>function i3(t,n){return t.reduce((e,s,r)=>(e[s]=n[r],e),{})}(r,i):Oe));return e?o.pipe(function o3(t){return St(n=>function r3(t,n){return s3(n)?t(...n):t(n)}(t,n))}(e)):o}function fI(t,n,e){t?Rs(e,t,n):n()}function hm(t,n){const e=U(t)?t:()=>t,s=r=>r.error(e());return new Ne(n?r=>n.schedule(s,0,r):s)}const fm=W(t=>function(){t(this),this.name="EmptyError",this.message="no elements in sequence"});function Av(...t){return function l3(){return Pr(1)}()(Qn(t,Oo(t)))}function Ov(t){return new Ne(n=>{Os(t()).subscribe(n)})}function pI(){return Vt((t,n)=>{let e=null;t._refCount++;const s=Ht(n,void 0,void 0,void 0,()=>{if(!t||t._refCount<=0||0<--t._refCount)return void(e=null);const r=t._connection,o=e;e=null,r&&(!o||r===o)&&r.unsubscribe(),n.unsubscribe()});t.subscribe(s),s.closed||(e=t.connect())})}class u3 extends Ne{constructor(n,e){super(),this.source=n,this.subjectFactory=e,this._subject=null,this._refCount=0,this._connection=null,Et(n)&&(this.lift=n.lift)}_subscribe(n){return this.getSubject().subscribe(n)}getSubject(){const n=this._subject;return(!n||n.isStopped)&&(this._subject=this.subjectFactory()),this._subject}_teardown(){this._refCount=0;const{_connection:n}=this;this._subject=this._connection=null,null==n||n.unsubscribe()}connect(){let n=this._connection;if(!n){n=this._connection=new k;const e=this.getSubject();n.add(this.source.subscribe(Ht(e,void 0,()=>{this._teardown(),e.complete()},s=>{this._teardown(),e.error(s)},()=>this._teardown()))),n.closed&&(this._connection=null,n=k.EMPTY)}return n}refCount(){return pI()(this)}}function Ol(t,n){return Vt((e,s)=>{let r=null,o=0,i=!1;const a=()=>i&&!r&&s.complete();e.subscribe(Ht(s,l=>{null==r||r.unsubscribe();let c=0;const d=o++;Os(t(l,d)).subscribe(r=Ht(s,f=>s.next(n?n(l,f,d,c++):f),()=>{r=null,a()}))},()=>{i=!0,a()}))})}function pm(t){return t<=0?()=>$r:Vt((n,e)=>{let s=0;n.subscribe(Ht(e,r=>{++s<=t&&(e.next(r),t<=s&&e.complete())}))})}function d3(t,n,e,s,r){return(o,i)=>{let a=e,l=n,c=0;o.subscribe(Ht(i,d=>{const f=c++;l=a?t(l,d,f):(a=!0,d),s&&i.next(l)},r&&(()=>{a&&i.next(l),i.complete()})))}}function mI(t,n){return Vt(d3(t,n,arguments.length>=2,!0))}function dd(t,n){return Vt((e,s)=>{let r=0;e.subscribe(Ht(s,o=>t.call(n,o,r++)&&s.next(o)))})}function du(t){return Vt((n,e)=>{let o,s=null,r=!1;s=n.subscribe(Ht(e,void 0,void 0,i=>{o=Os(t(i,du(t)(n))),s?(s.unsubscribe(),s=null,o.subscribe(e)):r=!0})),r&&(s.unsubscribe(),s=null,o.subscribe(e))})}function jh(t,n){return U(n)?Yn(t,n,1):Yn(t,1)}function Rv(t){return t<=0?()=>$r:Vt((n,e)=>{let s=[];n.subscribe(Ht(e,r=>{s.push(r),t<s.length&&s.shift()},()=>{for(const r of s)e.next(r);e.complete()},void 0,()=>{s=null}))})}function gI(t=h3){return Vt((n,e)=>{let s=!1;n.subscribe(Ht(e,r=>{s=!0,e.next(r)},()=>s?e.complete():e.error(t())))})}function h3(){return new fm}function yI(t){return Vt((n,e)=>{let s=!1;n.subscribe(Ht(e,r=>{s=!0,e.next(r)},()=>{s||e.next(t),e.complete()}))})}function hd(t,n){const e=arguments.length>=2;return s=>s.pipe(t?dd((r,o)=>t(r,o,s)):Oe,pm(1),e?yI(n):gI(()=>new fm))}function Vo(t,n,e){const s=U(t)||n||e?{next:t,error:n,complete:e}:t;return s?Vt((r,o)=>{var i;null===(i=s.subscribe)||void 0===i||i.call(s);let a=!0;r.subscribe(Ht(o,l=>{var c;null===(c=s.next)||void 0===c||c.call(s,l),o.next(l)},()=>{var l;a=!1,null===(l=s.complete)||void 0===l||l.call(s),o.complete()},l=>{var c;a=!1,null===(c=s.error)||void 0===c||c.call(s,l),o.error(l)},()=>{var l,c;a&&(null===(l=s.unsubscribe)||void 0===l||l.call(s)),null===(c=s.finalize)||void 0===c||c.call(s)}))}):Oe}class Rl{constructor(n,e){this.id=n,this.url=e}}class Mv extends Rl{constructor(n,e,s="imperative",r=null){super(n,e),this.navigationTrigger=s,this.restoredState=r}toString(){return`NavigationStart(id: ${this.id}, url: '${this.url}')`}}class Xh extends Rl{constructor(n,e,s){super(n,e),this.urlAfterRedirects=s}toString(){return`NavigationEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}')`}}class vI extends Rl{constructor(n,e,s){super(n,e),this.reason=s}toString(){return`NavigationCancel(id: ${this.id}, url: '${this.url}')`}}class m3 extends Rl{constructor(n,e,s){super(n,e),this.error=s}toString(){return`NavigationError(id: ${this.id}, url: '${this.url}', error: ${this.error})`}}class g3 extends Rl{constructor(n,e,s,r){super(n,e),this.urlAfterRedirects=s,this.state=r}toString(){return`RoutesRecognized(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`}}class y3 extends Rl{constructor(n,e,s,r){super(n,e),this.urlAfterRedirects=s,this.state=r}toString(){return`GuardsCheckStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`}}class v3 extends Rl{constructor(n,e,s,r,o){super(n,e),this.urlAfterRedirects=s,this.state=r,this.shouldActivate=o}toString(){return`GuardsCheckEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state}, shouldActivate: ${this.shouldActivate})`}}class x3 extends Rl{constructor(n,e,s,r){super(n,e),this.urlAfterRedirects=s,this.state=r}toString(){return`ResolveStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`}}class E3 extends Rl{constructor(n,e,s,r){super(n,e),this.urlAfterRedirects=s,this.state=r}toString(){return`ResolveEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`}}class xI{constructor(n){this.route=n}toString(){return`RouteConfigLoadStart(path: ${this.route.path})`}}class EI{constructor(n){this.route=n}toString(){return`RouteConfigLoadEnd(path: ${this.route.path})`}}class _3{constructor(n){this.snapshot=n}toString(){return`ChildActivationStart(path: '${this.snapshot.routeConfig&&this.snapshot.routeConfig.path||""}')`}}class b3{constructor(n){this.snapshot=n}toString(){return`ChildActivationEnd(path: '${this.snapshot.routeConfig&&this.snapshot.routeConfig.path||""}')`}}class C3{constructor(n){this.snapshot=n}toString(){return`ActivationStart(path: '${this.snapshot.routeConfig&&this.snapshot.routeConfig.path||""}')`}}class D3{constructor(n){this.snapshot=n}toString(){return`ActivationEnd(path: '${this.snapshot.routeConfig&&this.snapshot.routeConfig.path||""}')`}}class _I{constructor(n,e,s){this.routerEvent=n,this.position=e,this.anchor=s}toString(){return`Scroll(anchor: '${this.anchor}', position: '${this.position?`${this.position[0]}, ${this.position[1]}`:null}')`}}const An="primary";class I3{constructor(n){this.params=n||{}}has(n){return Object.prototype.hasOwnProperty.call(this.params,n)}get(n){if(this.has(n)){const e=this.params[n];return Array.isArray(e)?e[0]:e}return null}getAll(n){if(this.has(n)){const e=this.params[n];return Array.isArray(e)?e:[e]}return[]}get keys(){return Object.keys(this.params)}}function fd(t){return new I3(t)}const bI="ngNavigationCancelingError";function kv(t){const n=Error("NavigationCancelingError: "+t);return n[bI]=!0,n}function w3(t,n,e){const s=e.path.split("/");if(s.length>t.length||"full"===e.pathMatch&&(n.hasChildren()||s.length<t.length))return null;const r={};for(let o=0;o<s.length;o++){const i=s[o],a=t[o];if(i.startsWith(":"))r[i.substring(1)]=a;else if(i!==a.path)return null}return{consumed:t.slice(0,s.length),posParams:r}}function ja(t,n){const e=t?Object.keys(t):void 0,s=n?Object.keys(n):void 0;if(!e||!s||e.length!=s.length)return!1;let r;for(let o=0;o<e.length;o++)if(r=e[o],!CI(t[r],n[r]))return!1;return!0}function CI(t,n){if(Array.isArray(t)&&Array.isArray(n)){if(t.length!==n.length)return!1;const e=[...t].sort(),s=[...n].sort();return e.every((r,o)=>s[o]===r)}return t===n}function DI(t){return Array.prototype.concat.apply([],t)}function II(t){return t.length>0?t[t.length-1]:null}function zr(t,n){for(const e in t)t.hasOwnProperty(e)&&n(t[e],e)}function Xa(t){return sC(t)?t:kp(t)?Qn(Promise.resolve(t)):xn(t)}const A3={exact:function SI(t,n,e){if(!qu(t.segments,n.segments)||!mm(t.segments,n.segments,e)||t.numberOfChildren!==n.numberOfChildren)return!1;for(const s in n.children)if(!t.children[s]||!SI(t.children[s],n.children[s],e))return!1;return!0},subset:NI},TI={exact:function O3(t,n){return ja(t,n)},subset:function R3(t,n){return Object.keys(n).length<=Object.keys(t).length&&Object.keys(n).every(e=>CI(t[e],n[e]))},ignored:()=>!0};function wI(t,n,e){return A3[e.paths](t.root,n.root,e.matrixParams)&&TI[e.queryParams](t.queryParams,n.queryParams)&&!("exact"===e.fragment&&t.fragment!==n.fragment)}function NI(t,n,e){return AI(t,n,n.segments,e)}function AI(t,n,e,s){if(t.segments.length>e.length){const r=t.segments.slice(0,e.length);return!(!qu(r,e)||n.hasChildren()||!mm(r,e,s))}if(t.segments.length===e.length){if(!qu(t.segments,e)||!mm(t.segments,e,s))return!1;for(const r in n.children)if(!t.children[r]||!NI(t.children[r],n.children[r],s))return!1;return!0}{const r=e.slice(0,t.segments.length),o=e.slice(t.segments.length);return!!(qu(t.segments,r)&&mm(t.segments,r,s)&&t.children[An])&&AI(t.children[An],n,o,s)}}function mm(t,n,e){return n.every((s,r)=>TI[e](t[r].parameters,s.parameters))}class Ju{constructor(n,e,s){this.root=n,this.queryParams=e,this.fragment=s}get queryParamMap(){return this._queryParamMap||(this._queryParamMap=fd(this.queryParams)),this._queryParamMap}toString(){return P3.serialize(this)}}class $n{constructor(n,e){this.segments=n,this.children=e,this.parent=null,zr(e,(s,r)=>s.parent=this)}hasChildren(){return this.numberOfChildren>0}get numberOfChildren(){return Object.keys(this.children).length}toString(){return gm(this)}}class Zh{constructor(n,e){this.path=n,this.parameters=e}get parameterMap(){return this._parameterMap||(this._parameterMap=fd(this.parameters)),this._parameterMap}toString(){return PI(this)}}function qu(t,n){return t.length===n.length&&t.every((e,s)=>e.path===n[s].path)}class OI{}class RI{parse(n){const e=new G3(n);return new Ju(e.parseRootSegment(),e.parseQueryParams(),e.parseFragment())}serialize(n){const e=`/${Yh(n.root,!0)}`,s=function L3(t){const n=Object.keys(t).map(e=>{const s=t[e];return Array.isArray(s)?s.map(r=>`${ym(e)}=${ym(r)}`).join("&"):`${ym(e)}=${ym(s)}`}).filter(e=>!!e);return n.length?`?${n.join("&")}`:""}(n.queryParams);return`${e}${s}${"string"==typeof n.fragment?`#${function $3(t){return encodeURI(t)}(n.fragment)}`:""}`}}const P3=new RI;function gm(t){return t.segments.map(n=>PI(n)).join("/")}function Yh(t,n){if(!t.hasChildren())return gm(t);if(n){const e=t.children[An]?Yh(t.children[An],!1):"",s=[];return zr(t.children,(r,o)=>{o!==An&&s.push(`${o}:${Yh(r,!1)}`)}),s.length>0?`${e}(${s.join("//")})`:e}{const e=function k3(t,n){let e=[];return zr(t.children,(s,r)=>{r===An&&(e=e.concat(n(s,r)))}),zr(t.children,(s,r)=>{r!==An&&(e=e.concat(n(s,r)))}),e}(t,(s,r)=>r===An?[Yh(t.children[An],!1)]:[`${r}:${Yh(s,!1)}`]);return 1===Object.keys(t.children).length&&null!=t.children[An]?`${gm(t)}/${e[0]}`:`${gm(t)}/(${e.join("//")})`}}function MI(t){return encodeURIComponent(t).replace(/%40/g,"@").replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",")}function ym(t){return MI(t).replace(/%3B/gi,";")}function Pv(t){return MI(t).replace(/\(/g,"%28").replace(/\)/g,"%29").replace(/%26/gi,"&")}function vm(t){return decodeURIComponent(t)}function kI(t){return vm(t.replace(/\+/g,"%20"))}function PI(t){return`${Pv(t.path)}${function F3(t){return Object.keys(t).map(n=>`;${Pv(n)}=${Pv(t[n])}`).join("")}(t.parameters)}`}const B3=/^[^\/()?;=#]+/;function xm(t){const n=t.match(B3);return n?n[0]:""}const U3=/^[^=?&#]+/,z3=/^[^&#]+/;class G3{constructor(n){this.url=n,this.remaining=n}parseRootSegment(){return this.consumeOptional("/"),""===this.remaining||this.peekStartsWith("?")||this.peekStartsWith("#")?new $n([],{}):new $n([],this.parseChildren())}parseQueryParams(){const n={};if(this.consumeOptional("?"))do{this.parseQueryParam(n)}while(this.consumeOptional("&"));return n}parseFragment(){return this.consumeOptional("#")?decodeURIComponent(this.remaining):null}parseChildren(){if(""===this.remaining)return{};this.consumeOptional("/");const n=[];for(this.peekStartsWith("(")||n.push(this.parseSegment());this.peekStartsWith("/")&&!this.peekStartsWith("//")&&!this.peekStartsWith("/(");)this.capture("/"),n.push(this.parseSegment());let e={};this.peekStartsWith("/(")&&(this.capture("/"),e=this.parseParens(!0));let s={};return this.peekStartsWith("(")&&(s=this.parseParens(!1)),(n.length>0||Object.keys(e).length>0)&&(s[An]=new $n(n,e)),s}parseSegment(){const n=xm(this.remaining);if(""===n&&this.peekStartsWith(";"))throw new Error(`Empty path url segment cannot have parameters: '${this.remaining}'.`);return this.capture(n),new Zh(vm(n),this.parseMatrixParams())}parseMatrixParams(){const n={};for(;this.consumeOptional(";");)this.parseParam(n);return n}parseParam(n){const e=xm(this.remaining);if(!e)return;this.capture(e);let s="";if(this.consumeOptional("=")){const r=xm(this.remaining);r&&(s=r,this.capture(s))}n[vm(e)]=vm(s)}parseQueryParam(n){const e=function V3(t){const n=t.match(U3);return n?n[0]:""}(this.remaining);if(!e)return;this.capture(e);let s="";if(this.consumeOptional("=")){const i=function W3(t){const n=t.match(z3);return n?n[0]:""}(this.remaining);i&&(s=i,this.capture(s))}const r=kI(e),o=kI(s);if(n.hasOwnProperty(r)){let i=n[r];Array.isArray(i)||(i=[i],n[r]=i),i.push(o)}else n[r]=o}parseParens(n){const e={};for(this.capture("(");!this.consumeOptional(")")&&this.remaining.length>0;){const s=xm(this.remaining),r=this.remaining[s.length];if("/"!==r&&")"!==r&&";"!==r)throw new Error(`Cannot parse url '${this.url}'`);let o;s.indexOf(":")>-1?(o=s.substr(0,s.indexOf(":")),this.capture(o),this.capture(":")):n&&(o=An);const i=this.parseChildren();e[o]=1===Object.keys(i).length?i[An]:new $n([],i),this.consumeOptional("//")}return e}peekStartsWith(n){return this.remaining.startsWith(n)}consumeOptional(n){return!!this.peekStartsWith(n)&&(this.remaining=this.remaining.substring(n.length),!0)}capture(n){if(!this.consumeOptional(n))throw new Error(`Expected "${n}".`)}}class $I{constructor(n){this._root=n}get root(){return this._root.value}parent(n){const e=this.pathFromRoot(n);return e.length>1?e[e.length-2]:null}children(n){const e=$v(n,this._root);return e?e.children.map(s=>s.value):[]}firstChild(n){const e=$v(n,this._root);return e&&e.children.length>0?e.children[0].value:null}siblings(n){const e=Fv(n,this._root);return e.length<2?[]:e[e.length-2].children.map(r=>r.value).filter(r=>r!==n)}pathFromRoot(n){return Fv(n,this._root).map(e=>e.value)}}function $v(t,n){if(t===n.value)return n;for(const e of n.children){const s=$v(t,e);if(s)return s}return null}function Fv(t,n){if(t===n.value)return[n];for(const e of n.children){const s=Fv(t,e);if(s.length)return s.unshift(n),s}return[]}class Ml{constructor(n,e){this.value=n,this.children=e}toString(){return`TreeNode(${this.value})`}}function pd(t){const n={};return t&&t.children.forEach(e=>n[e.value.outlet]=e),n}class FI extends $I{constructor(n,e){super(n),this.snapshot=e,Lv(this,n)}toString(){return this.snapshot.toString()}}function LI(t,n){const e=function H3(t,n){const i=new Em([],{},{},"",{},An,n,null,t.root,-1,{});return new UI("",new Ml(i,[]))}(t,n),s=new qi([new Zh("",{})]),r=new qi({}),o=new qi({}),i=new qi({}),a=new qi(""),l=new md(s,r,i,a,o,An,n,e.root);return l.snapshot=e.root,new FI(new Ml(l,[]),e)}class md{constructor(n,e,s,r,o,i,a,l){this.url=n,this.params=e,this.queryParams=s,this.fragment=r,this.data=o,this.outlet=i,this.component=a,this._futureSnapshot=l}get routeConfig(){return this._futureSnapshot.routeConfig}get root(){return this._routerState.root}get parent(){return this._routerState.parent(this)}get firstChild(){return this._routerState.firstChild(this)}get children(){return this._routerState.children(this)}get pathFromRoot(){return this._routerState.pathFromRoot(this)}get paramMap(){return this._paramMap||(this._paramMap=this.params.pipe(St(n=>fd(n)))),this._paramMap}get queryParamMap(){return this._queryParamMap||(this._queryParamMap=this.queryParams.pipe(St(n=>fd(n)))),this._queryParamMap}toString(){return this.snapshot?this.snapshot.toString():`Future(${this._futureSnapshot})`}}function BI(t,n="emptyOnly"){const e=t.pathFromRoot;let s=0;if("always"!==n)for(s=e.length-1;s>=1;){const r=e[s],o=e[s-1];if(r.routeConfig&&""===r.routeConfig.path)s--;else{if(o.component)break;s--}}return function K3(t){return t.reduce((n,e)=>({params:Object.assign(Object.assign({},n.params),e.params),data:Object.assign(Object.assign({},n.data),e.data),resolve:Object.assign(Object.assign({},n.resolve),e._resolvedData)}),{params:{},data:{},resolve:{}})}(e.slice(s))}class Em{constructor(n,e,s,r,o,i,a,l,c,d,f){this.url=n,this.params=e,this.queryParams=s,this.fragment=r,this.data=o,this.outlet=i,this.component=a,this.routeConfig=l,this._urlSegment=c,this._lastPathIndex=d,this._resolve=f}get root(){return this._routerState.root}get parent(){return this._routerState.parent(this)}get firstChild(){return this._routerState.firstChild(this)}get children(){return this._routerState.children(this)}get pathFromRoot(){return this._routerState.pathFromRoot(this)}get paramMap(){return this._paramMap||(this._paramMap=fd(this.params)),this._paramMap}get queryParamMap(){return this._queryParamMap||(this._queryParamMap=fd(this.queryParams)),this._queryParamMap}toString(){return`Route(url:'${this.url.map(s=>s.toString()).join("/")}', path:'${this.routeConfig?this.routeConfig.path:""}')`}}class UI extends $I{constructor(n,e){super(e),this.url=n,Lv(this,e)}toString(){return VI(this._root)}}function Lv(t,n){n.value._routerState=t,n.children.forEach(e=>Lv(t,e))}function VI(t){const n=t.children.length>0?` { ${t.children.map(VI).join(", ")} } `:"";return`${t.value}${n}`}function Bv(t){if(t.snapshot){const n=t.snapshot,e=t._futureSnapshot;t.snapshot=e,ja(n.queryParams,e.queryParams)||t.queryParams.next(e.queryParams),n.fragment!==e.fragment&&t.fragment.next(e.fragment),ja(n.params,e.params)||t.params.next(e.params),function S3(t,n){if(t.length!==n.length)return!1;for(let e=0;e<t.length;++e)if(!ja(t[e],n[e]))return!1;return!0}(n.url,e.url)||t.url.next(e.url),ja(n.data,e.data)||t.data.next(e.data)}else t.snapshot=t._futureSnapshot,t.data.next(t._futureSnapshot.data)}function Uv(t,n){const e=ja(t.params,n.params)&&function M3(t,n){return qu(t,n)&&t.every((e,s)=>ja(e.parameters,n[s].parameters))}(t.url,n.url);return e&&!(!t.parent!=!n.parent)&&(!t.parent||Uv(t.parent,n.parent))}function Qh(t,n,e){if(e&&t.shouldReuseRoute(n.value,e.value.snapshot)){const s=e.value;s._futureSnapshot=n.value;const r=function X3(t,n,e){return n.children.map(s=>{for(const r of e.children)if(t.shouldReuseRoute(s.value,r.value.snapshot))return Qh(t,s,r);return Qh(t,s)})}(t,n,e);return new Ml(s,r)}{if(t.shouldAttach(n.value)){const o=t.retrieve(n.value);if(null!==o){const i=o.route;return i.value._futureSnapshot=n.value,i.children=n.children.map(a=>Qh(t,a)),i}}const s=function Z3(t){return new md(new qi(t.url),new qi(t.params),new qi(t.queryParams),new qi(t.fragment),new qi(t.data),t.outlet,t.component,t)}(n.value),r=n.children.map(o=>Qh(t,o));return new Ml(s,r)}}function _m(t){return"object"==typeof t&&null!=t&&!t.outlets&&!t.segmentPath}function Jh(t){return"object"==typeof t&&null!=t&&t.outlets}function Vv(t,n,e,s,r){let o={};if(s&&zr(s,(a,l)=>{o[l]=Array.isArray(a)?a.map(c=>`${c}`):`${a}`}),t===n)return new Ju(e,o,r);const i=zI(t,n,e);return new Ju(i,o,r)}function zI(t,n,e){const s={};return zr(t.children,(r,o)=>{s[o]=r===n?e:zI(r,n,e)}),new $n(t.segments,s)}class WI{constructor(n,e,s){if(this.isAbsolute=n,this.numberOfDoubleDots=e,this.commands=s,n&&s.length>0&&_m(s[0]))throw new Error("Root segment cannot have matrix parameters");const r=s.find(Jh);if(r&&r!==II(s))throw new Error("{outlets:{}} has to be the last command")}toRoot(){return this.isAbsolute&&1===this.commands.length&&"/"==this.commands[0]}}class zv{constructor(n,e,s){this.segmentGroup=n,this.processChildren=e,this.index=s}}function GI(t,n,e){if(t||(t=new $n([],{})),0===t.segments.length&&t.hasChildren())return bm(t,n,e);const s=function tU(t,n,e){let s=0,r=n;const o={match:!1,pathIndex:0,commandIndex:0};for(;r<t.segments.length;){if(s>=e.length)return o;const i=t.segments[r],a=e[s];if(Jh(a))break;const l=`${a}`,c=s<e.length-1?e[s+1]:null;if(r>0&&void 0===l)break;if(l&&c&&"object"==typeof c&&void 0===c.outlets){if(!KI(l,c,i))return o;s+=2}else{if(!KI(l,{},i))return o;s++}r++}return{match:!0,pathIndex:r,commandIndex:s}}(t,n,e),r=e.slice(s.commandIndex);if(s.match&&s.pathIndex<t.segments.length){const o=new $n(t.segments.slice(0,s.pathIndex),{});return o.children[An]=new $n(t.segments.slice(s.pathIndex),t.children),bm(o,0,r)}return s.match&&0===r.length?new $n(t.segments,{}):s.match&&!t.hasChildren()?Wv(t,n,e):s.match?bm(t,0,r):Wv(t,n,e)}function bm(t,n,e){if(0===e.length)return new $n(t.segments,{});{const s=function eU(t){return Jh(t[0])?t[0].outlets:{[An]:t}}(e),r={};return zr(s,(o,i)=>{"string"==typeof o&&(o=[o]),null!==o&&(r[i]=GI(t.children[i],n,o))}),zr(t.children,(o,i)=>{void 0===s[i]&&(r[i]=o)}),new $n(t.segments,r)}}function Wv(t,n,e){const s=t.segments.slice(0,n);let r=0;for(;r<e.length;){const o=e[r];if(Jh(o)){const l=nU(o.outlets);return new $n(s,l)}if(0===r&&_m(e[0])){s.push(new Zh(t.segments[n].path,HI(e[0]))),r++;continue}const i=Jh(o)?o.outlets[An]:`${o}`,a=r<e.length-1?e[r+1]:null;i&&a&&_m(a)?(s.push(new Zh(i,HI(a))),r+=2):(s.push(new Zh(i,{})),r++)}return new $n(s,{})}function nU(t){const n={};return zr(t,(e,s)=>{"string"==typeof e&&(e=[e]),null!==e&&(n[s]=Wv(new $n([],{}),0,e))}),n}function HI(t){const n={};return zr(t,(e,s)=>n[s]=`${e}`),n}function KI(t,n,e){return t==e.path&&ja(n,e.parameters)}class rU{constructor(n,e,s,r){this.routeReuseStrategy=n,this.futureState=e,this.currState=s,this.forwardEvent=r}activate(n){const e=this.futureState._root,s=this.currState?this.currState._root:null;this.deactivateChildRoutes(e,s,n),Bv(this.futureState.root),this.activateChildRoutes(e,s,n)}deactivateChildRoutes(n,e,s){const r=pd(e);n.children.forEach(o=>{const i=o.value.outlet;this.deactivateRoutes(o,r[i],s),delete r[i]}),zr(r,(o,i)=>{this.deactivateRouteAndItsChildren(o,s)})}deactivateRoutes(n,e,s){const r=n.value,o=e?e.value:null;if(r===o)if(r.component){const i=s.getContext(r.outlet);i&&this.deactivateChildRoutes(n,e,i.children)}else this.deactivateChildRoutes(n,e,s);else o&&this.deactivateRouteAndItsChildren(e,s)}deactivateRouteAndItsChildren(n,e){n.value.component&&this.routeReuseStrategy.shouldDetach(n.value.snapshot)?this.detachAndStoreRouteSubtree(n,e):this.deactivateRouteAndOutlet(n,e)}detachAndStoreRouteSubtree(n,e){const s=e.getContext(n.value.outlet),r=s&&n.value.component?s.children:e,o=pd(n);for(const i of Object.keys(o))this.deactivateRouteAndItsChildren(o[i],r);if(s&&s.outlet){const i=s.outlet.detach(),a=s.children.onOutletDeactivated();this.routeReuseStrategy.store(n.value.snapshot,{componentRef:i,route:n,contexts:a})}}deactivateRouteAndOutlet(n,e){const s=e.getContext(n.value.outlet),r=s&&n.value.component?s.children:e,o=pd(n);for(const i of Object.keys(o))this.deactivateRouteAndItsChildren(o[i],r);s&&s.outlet&&(s.outlet.deactivate(),s.children.onOutletDeactivated(),s.attachRef=null,s.resolver=null,s.route=null)}activateChildRoutes(n,e,s){const r=pd(e);n.children.forEach(o=>{this.activateRoutes(o,r[o.value.outlet],s),this.forwardEvent(new D3(o.value.snapshot))}),n.children.length&&this.forwardEvent(new b3(n.value.snapshot))}activateRoutes(n,e,s){const r=n.value,o=e?e.value:null;if(Bv(r),r===o)if(r.component){const i=s.getOrCreateContext(r.outlet);this.activateChildRoutes(n,e,i.children)}else this.activateChildRoutes(n,e,s);else if(r.component){const i=s.getOrCreateContext(r.outlet);if(this.routeReuseStrategy.shouldAttach(r.snapshot)){const a=this.routeReuseStrategy.retrieve(r.snapshot);this.routeReuseStrategy.store(r.snapshot,null),i.children.onOutletReAttached(a.contexts),i.attachRef=a.componentRef,i.route=a.route.value,i.outlet&&i.outlet.attach(a.componentRef,a.route.value),Bv(a.route.value),this.activateChildRoutes(n,null,i.children)}else{const a=function oU(t){for(let n=t.parent;n;n=n.parent){const e=n.routeConfig;if(e&&e._loadedConfig)return e._loadedConfig;if(e&&e.component)return null}return null}(r.snapshot),l=a?a.module.componentFactoryResolver:null;i.attachRef=null,i.route=r,i.resolver=l,i.outlet&&i.outlet.activateWith(r,l),this.activateChildRoutes(n,null,i.children)}}else this.activateChildRoutes(n,null,s)}}class Gv{constructor(n,e){this.routes=n,this.module=e}}function hu(t){return"function"==typeof t}function ec(t){return t instanceof Ju}const qh=Symbol("INITIAL_VALUE");function ef(){return Ol(t=>Nv(t.map(n=>n.pipe(pm(1),function c3(...t){const n=Oo(t);return Vt((e,s)=>{(n?Av(t,e,n):Av(t,e)).subscribe(s)})}(qh)))).pipe(mI((n,e)=>{let s=!1;return e.reduce((r,o,i)=>r!==qh?r:(o===qh&&(s=!0),s||!1!==o&&i!==e.length-1&&!ec(o)?r:o),n)},qh),dd(n=>n!==qh),St(n=>ec(n)?n:!0===n),pm(1)))}class dU{constructor(){this.outlet=null,this.route=null,this.resolver=null,this.children=new nf,this.attachRef=null}}class nf{constructor(){this.contexts=new Map}onChildOutletCreated(n,e){const s=this.getOrCreateContext(n);s.outlet=e,this.contexts.set(n,s)}onChildOutletDestroyed(n){const e=this.getContext(n);e&&(e.outlet=null,e.attachRef=null)}onOutletDeactivated(){const n=this.contexts;return this.contexts=new Map,n}onOutletReAttached(n){this.contexts=n}getOrCreateContext(n){let e=this.getContext(n);return e||(e=new dU,this.contexts.set(n,e)),e}getContext(n){return this.contexts.get(n)||null}}let jI=(()=>{class t{constructor(e,s,r,o,i){this.parentContexts=e,this.location=s,this.resolver=r,this.changeDetector=i,this.activated=null,this._activatedRoute=null,this.activateEvents=new po,this.deactivateEvents=new po,this.attachEvents=new po,this.detachEvents=new po,this.name=o||An,e.onChildOutletCreated(this.name,this)}ngOnDestroy(){this.parentContexts.onChildOutletDestroyed(this.name)}ngOnInit(){if(!this.activated){const e=this.parentContexts.getContext(this.name);e&&e.route&&(e.attachRef?this.attach(e.attachRef,e.route):this.activateWith(e.route,e.resolver||null))}}get isActivated(){return!!this.activated}get component(){if(!this.activated)throw new Error("Outlet is not activated");return this.activated.instance}get activatedRoute(){if(!this.activated)throw new Error("Outlet is not activated");return this._activatedRoute}get activatedRouteData(){return this._activatedRoute?this._activatedRoute.snapshot.data:{}}detach(){if(!this.activated)throw new Error("Outlet is not activated");this.location.detach();const e=this.activated;return this.activated=null,this._activatedRoute=null,this.detachEvents.emit(e.instance),e}attach(e,s){this.activated=e,this._activatedRoute=s,this.location.insert(e.hostView),this.attachEvents.emit(e.instance)}deactivate(){if(this.activated){const e=this.component;this.activated.destroy(),this.activated=null,this._activatedRoute=null,this.deactivateEvents.emit(e)}}activateWith(e,s){if(this.isActivated)throw new Error("Cannot activate an already activated outlet");this._activatedRoute=e;const i=(s=s||this.resolver).resolveComponentFactory(e._futureSnapshot.routeConfig.component),a=this.parentContexts.getOrCreateContext(this.name).children,l=new hU(e,a,this.location.injector);this.activated=this.location.createComponent(i,this.location.length,l),this.changeDetector.markForCheck(),this.activateEvents.emit(this.activated.instance)}}return t.\u0275fac=function(e){return new(e||t)(Yt(nf),Yt(Zi),Yt($h),function Cn(t){return function re(t,n){if("class"===n)return t.classes;if("style"===n)return t.styles;const e=t.attrs;if(e){const s=e.length;let r=0;for(;r<s;){const o=e[r];if(lp(o))break;if(0===o)r+=2;else if("number"==typeof o)for(r++;r<s&&"string"==typeof e[r];)r++;else{if(o===n)return e[r+1];r+=2}}}return null}(tr(),t)}("name"),Yt(tv))},t.\u0275dir=or({type:t,selectors:[["router-outlet"]],outputs:{activateEvents:"activate",deactivateEvents:"deactivate",attachEvents:"attach",detachEvents:"detach"},exportAs:["outlet"]}),t})();class hU{constructor(n,e,s){this.route=n,this.childContexts=e,this.parent=s}get(n,e){return n===md?this.route:n===nf?this.childContexts:this.parent.get(n,e)}}let XI=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275cmp=jr({type:t,selectors:[["ng-component"]],decls:1,vars:0,template:function(e,s){1&e&&Nh(0,"router-outlet")},directives:[jI],encapsulation:2}),t})();function ZI(t,n=""){for(let e=0;e<t.length;e++){const s=t[e];fU(s,pU(n,s))}}function fU(t,n){t.children&&ZI(t.children,n)}function pU(t,n){return n?t||n.path?t&&!n.path?`${t}/`:!t&&n.path?n.path:`${t}/${n.path}`:"":t}function Hv(t){const n=t.children&&t.children.map(Hv),e=n?Object.assign(Object.assign({},t),{children:n}):Object.assign({},t);return!e.component&&(n||e.loadChildren)&&e.outlet&&e.outlet!==An&&(e.component=XI),e}function hi(t){return t.outlet||An}function YI(t,n){const e=t.filter(s=>hi(s)===n);return e.push(...t.filter(s=>hi(s)!==n)),e}const QI={matched:!1,consumedSegments:[],remainingSegments:[],parameters:{},positionalParamSegments:{}};function Cm(t,n,e){var s;if(""===n.path)return"full"===n.pathMatch&&(t.hasChildren()||e.length>0)?Object.assign({},QI):{matched:!0,consumedSegments:[],remainingSegments:e,parameters:{},positionalParamSegments:{}};const o=(n.matcher||w3)(e,t,n);if(!o)return Object.assign({},QI);const i={};zr(o.posParams,(l,c)=>{i[c]=l.path});const a=o.consumed.length>0?Object.assign(Object.assign({},i),o.consumed[o.consumed.length-1].parameters):i;return{matched:!0,consumedSegments:o.consumed,remainingSegments:e.slice(o.consumed.length),parameters:a,positionalParamSegments:null!==(s=o.posParams)&&void 0!==s?s:{}}}function Dm(t,n,e,s,r="corrected"){if(e.length>0&&function yU(t,n,e){return e.some(s=>Im(t,n,s)&&hi(s)!==An)}(t,e,s)){const i=new $n(n,function gU(t,n,e,s){const r={};r[An]=s,s._sourceSegment=t,s._segmentIndexShift=n.length;for(const o of e)if(""===o.path&&hi(o)!==An){const i=new $n([],{});i._sourceSegment=t,i._segmentIndexShift=n.length,r[hi(o)]=i}return r}(t,n,s,new $n(e,t.children)));return i._sourceSegment=t,i._segmentIndexShift=n.length,{segmentGroup:i,slicedSegments:[]}}if(0===e.length&&function vU(t,n,e){return e.some(s=>Im(t,n,s))}(t,e,s)){const i=new $n(t.segments,function mU(t,n,e,s,r,o){const i={};for(const a of s)if(Im(t,e,a)&&!r[hi(a)]){const l=new $n([],{});l._sourceSegment=t,l._segmentIndexShift="legacy"===o?t.segments.length:n.length,i[hi(a)]=l}return Object.assign(Object.assign({},r),i)}(t,n,e,s,t.children,r));return i._sourceSegment=t,i._segmentIndexShift=n.length,{segmentGroup:i,slicedSegments:e}}const o=new $n(t.segments,t.children);return o._sourceSegment=t,o._segmentIndexShift=n.length,{segmentGroup:o,slicedSegments:e}}function Im(t,n,e){return(!(t.hasChildren()||n.length>0)||"full"!==e.pathMatch)&&""===e.path}function JI(t,n,e,s){return!!(hi(t)===s||s!==An&&Im(n,e,t))&&("**"===t.path||Cm(n,t,e).matched)}function qI(t,n,e){return 0===n.length&&!t.children[e]}class Tm{constructor(n){this.segmentGroup=n||null}}class eT{constructor(n){this.urlTree=n}}function sf(t){return hm(new Tm(t))}function tT(t){return hm(new eT(t))}class bU{constructor(n,e,s,r,o){this.configLoader=e,this.urlSerializer=s,this.urlTree=r,this.config=o,this.allowRedirects=!0,this.ngModule=n.get(wl)}apply(){const n=Dm(this.urlTree.root,[],[],this.config).segmentGroup,e=new $n(n.segments,n.children);return this.expandSegmentGroup(this.ngModule,this.config,e,An).pipe(St(o=>this.createUrlTree(Kv(o),this.urlTree.queryParams,this.urlTree.fragment))).pipe(du(o=>{if(o instanceof eT)return this.allowRedirects=!1,this.match(o.urlTree);throw o instanceof Tm?this.noMatchError(o):o}))}match(n){return this.expandSegmentGroup(this.ngModule,this.config,n.root,An).pipe(St(r=>this.createUrlTree(Kv(r),n.queryParams,n.fragment))).pipe(du(r=>{throw r instanceof Tm?this.noMatchError(r):r}))}noMatchError(n){return new Error(`Cannot match any routes. URL Segment: '${n.segmentGroup}'`)}createUrlTree(n,e,s){const r=n.segments.length>0?new $n([],{[An]:n}):n;return new Ju(r,e,s)}expandSegmentGroup(n,e,s,r){return 0===s.segments.length&&s.hasChildren()?this.expandChildren(n,e,s).pipe(St(o=>new $n([],o))):this.expandSegment(n,s,e,s.segments,r,!0)}expandChildren(n,e,s){const r=[];for(const o of Object.keys(s.children))"primary"===o?r.unshift(o):r.push(o);return Qn(r).pipe(jh(o=>{const i=s.children[o],a=YI(e,o);return this.expandSegmentGroup(n,a,i,o).pipe(St(l=>({segment:l,outlet:o})))}),mI((o,i)=>(o[i.outlet]=i.segment,o),{}),function f3(t,n){const e=arguments.length>=2;return s=>s.pipe(t?dd((r,o)=>t(r,o,s)):Oe,Rv(1),e?yI(n):gI(()=>new fm))}())}expandSegment(n,e,s,r,o,i){return Qn(s).pipe(jh(a=>this.expandSegmentAgainstRoute(n,e,s,a,r,o,i).pipe(du(c=>{if(c instanceof Tm)return xn(null);throw c}))),hd(a=>!!a),du((a,l)=>{if(a instanceof fm||"EmptyError"===a.name)return qI(e,r,o)?xn(new $n([],{})):sf(e);throw a}))}expandSegmentAgainstRoute(n,e,s,r,o,i,a){return JI(r,e,o,i)?void 0===r.redirectTo?this.matchSegmentAgainstRoute(n,e,r,o,i):a&&this.allowRedirects?this.expandSegmentAgainstRouteUsingRedirect(n,e,s,r,o,i):sf(e):sf(e)}expandSegmentAgainstRouteUsingRedirect(n,e,s,r,o,i){return"**"===r.path?this.expandWildCardWithParamsAgainstRouteUsingRedirect(n,s,r,i):this.expandRegularSegmentAgainstRouteUsingRedirect(n,e,s,r,o,i)}expandWildCardWithParamsAgainstRouteUsingRedirect(n,e,s,r){const o=this.applyRedirectCommands([],s.redirectTo,{});return s.redirectTo.startsWith("/")?tT(o):this.lineralizeSegments(s,o).pipe(Yn(i=>{const a=new $n(i,{});return this.expandSegment(n,a,e,i,r,!1)}))}expandRegularSegmentAgainstRouteUsingRedirect(n,e,s,r,o,i){const{matched:a,consumedSegments:l,remainingSegments:c,positionalParamSegments:d}=Cm(e,r,o);if(!a)return sf(e);const f=this.applyRedirectCommands(l,r.redirectTo,d);return r.redirectTo.startsWith("/")?tT(f):this.lineralizeSegments(r,f).pipe(Yn(p=>this.expandSegment(n,e,s,p.concat(c),i,!1)))}matchSegmentAgainstRoute(n,e,s,r,o){if("**"===s.path)return s.loadChildren?(s._loadedConfig?xn(s._loadedConfig):this.configLoader.load(n.injector,s)).pipe(St(f=>(s._loadedConfig=f,new $n(r,{})))):xn(new $n(r,{}));const{matched:i,consumedSegments:a,remainingSegments:l}=Cm(e,s,r);return i?this.getChildConfig(n,s,r).pipe(Yn(d=>{const f=d.module,p=d.routes,{segmentGroup:m,slicedSegments:y}=Dm(e,a,l,p),_=new $n(m.segments,m.children);if(0===y.length&&_.hasChildren())return this.expandChildren(f,p,_).pipe(St(F=>new $n(a,F)));if(0===p.length&&0===y.length)return xn(new $n(a,{}));const x=hi(s)===o;return this.expandSegment(f,_,p,y,x?An:o,!0).pipe(St(C=>new $n(a.concat(C.segments),C.children)))})):sf(e)}getChildConfig(n,e,s){return e.children?xn(new Gv(e.children,n)):e.loadChildren?void 0!==e._loadedConfig?xn(e._loadedConfig):this.runCanLoadGuards(n.injector,e,s).pipe(Yn(r=>r?this.configLoader.load(n.injector,e).pipe(St(o=>(e._loadedConfig=o,o))):function EU(t){return hm(kv(`Cannot load children because the guard of the route "path: '${t.path}'" returned false`))}(e))):xn(new Gv([],n))}runCanLoadGuards(n,e,s){const r=e.canLoad;return r&&0!==r.length?xn(r.map(i=>{const a=n.get(i);let l;if(function aU(t){return t&&hu(t.canLoad)}(a))l=a.canLoad(e,s);else{if(!hu(a))throw new Error("Invalid CanLoad guard");l=a(e,s)}return Xa(l)})).pipe(ef(),Vo(i=>{if(!ec(i))return;const a=kv(`Redirecting to "${this.urlSerializer.serialize(i)}"`);throw a.url=i,a}),St(i=>!0===i)):xn(!0)}lineralizeSegments(n,e){let s=[],r=e.root;for(;;){if(s=s.concat(r.segments),0===r.numberOfChildren)return xn(s);if(r.numberOfChildren>1||!r.children[An])return hm(new Error(`Only absolute redirects can have named outlets. redirectTo: '${n.redirectTo}'`));r=r.children[An]}}applyRedirectCommands(n,e,s){return this.applyRedirectCreatreUrlTree(e,this.urlSerializer.parse(e),n,s)}applyRedirectCreatreUrlTree(n,e,s,r){const o=this.createSegmentGroup(n,e.root,s,r);return new Ju(o,this.createQueryParams(e.queryParams,this.urlTree.queryParams),e.fragment)}createQueryParams(n,e){const s={};return zr(n,(r,o)=>{if("string"==typeof r&&r.startsWith(":")){const a=r.substring(1);s[o]=e[a]}else s[o]=r}),s}createSegmentGroup(n,e,s,r){const o=this.createSegments(n,e.segments,s,r);let i={};return zr(e.children,(a,l)=>{i[l]=this.createSegmentGroup(n,a,s,r)}),new $n(o,i)}createSegments(n,e,s,r){return e.map(o=>o.path.startsWith(":")?this.findPosParam(n,o,r):this.findOrReturn(o,s))}findPosParam(n,e,s){const r=s[e.path.substring(1)];if(!r)throw new Error(`Cannot redirect to '${n}'. Cannot find '${e.path}'.`);return r}findOrReturn(n,e){let s=0;for(const r of e){if(r.path===n.path)return e.splice(s),r;s++}return n}}function Kv(t){const n={};for(const s of Object.keys(t.children)){const o=Kv(t.children[s]);(o.segments.length>0||o.hasChildren())&&(n[s]=o)}return function CU(t){if(1===t.numberOfChildren&&t.children[An]){const n=t.children[An];return new $n(t.segments.concat(n.segments),n.children)}return t}(new $n(t.segments,n))}class nT{constructor(n){this.path=n,this.route=this.path[this.path.length-1]}}class wm{constructor(n,e){this.component=n,this.route=e}}function IU(t,n,e){const s=t._root;return rf(s,n?n._root:null,e,[s.value])}function Sm(t,n,e){const s=function wU(t){if(!t)return null;for(let n=t.parent;n;n=n.parent){const e=n.routeConfig;if(e&&e._loadedConfig)return e._loadedConfig}return null}(n);return(s?s.module.injector:e).get(t)}function rf(t,n,e,s,r={canDeactivateChecks:[],canActivateChecks:[]}){const o=pd(n);return t.children.forEach(i=>{(function SU(t,n,e,s,r={canDeactivateChecks:[],canActivateChecks:[]}){const o=t.value,i=n?n.value:null,a=e?e.getContext(t.value.outlet):null;if(i&&o.routeConfig===i.routeConfig){const l=function NU(t,n,e){if("function"==typeof e)return e(t,n);switch(e){case"pathParamsChange":return!qu(t.url,n.url);case"pathParamsOrQueryParamsChange":return!qu(t.url,n.url)||!ja(t.queryParams,n.queryParams);case"always":return!0;case"paramsOrQueryParamsChange":return!Uv(t,n)||!ja(t.queryParams,n.queryParams);default:return!Uv(t,n)}}(i,o,o.routeConfig.runGuardsAndResolvers);l?r.canActivateChecks.push(new nT(s)):(o.data=i.data,o._resolvedData=i._resolvedData),rf(t,n,o.component?a?a.children:null:e,s,r),l&&a&&a.outlet&&a.outlet.isActivated&&r.canDeactivateChecks.push(new wm(a.outlet.component,i))}else i&&of(n,a,r),r.canActivateChecks.push(new nT(s)),rf(t,null,o.component?a?a.children:null:e,s,r)})(i,o[i.value.outlet],e,s.concat([i.value]),r),delete o[i.value.outlet]}),zr(o,(i,a)=>of(i,e.getContext(a),r)),r}function of(t,n,e){const s=pd(t),r=t.value;zr(s,(o,i)=>{of(o,r.component?n?n.children.getContext(i):null:n,e)}),e.canDeactivateChecks.push(new wm(r.component&&n&&n.outlet&&n.outlet.isActivated?n.outlet.component:null,r))}class LU{}function sT(t){return new Ne(n=>n.error(t))}class UU{constructor(n,e,s,r,o,i){this.rootComponentType=n,this.config=e,this.urlTree=s,this.url=r,this.paramsInheritanceStrategy=o,this.relativeLinkResolution=i}recognize(){const n=Dm(this.urlTree.root,[],[],this.config.filter(i=>void 0===i.redirectTo),this.relativeLinkResolution).segmentGroup,e=this.processSegmentGroup(this.config,n,An);if(null===e)return null;const s=new Em([],Object.freeze({}),Object.freeze(Object.assign({},this.urlTree.queryParams)),this.urlTree.fragment,{},An,this.rootComponentType,null,this.urlTree.root,-1,{}),r=new Ml(s,e),o=new UI(this.url,r);return this.inheritParamsAndData(o._root),o}inheritParamsAndData(n){const e=n.value,s=BI(e,this.paramsInheritanceStrategy);e.params=Object.freeze(s.params),e.data=Object.freeze(s.data),n.children.forEach(r=>this.inheritParamsAndData(r))}processSegmentGroup(n,e,s){return 0===e.segments.length&&e.hasChildren()?this.processChildren(n,e):this.processSegment(n,e,e.segments,s)}processChildren(n,e){const s=[];for(const o of Object.keys(e.children)){const i=e.children[o],a=YI(n,o),l=this.processSegmentGroup(a,i,o);if(null===l)return null;s.push(...l)}const r=rT(s);return function VU(t){t.sort((n,e)=>n.value.outlet===An?-1:e.value.outlet===An?1:n.value.outlet.localeCompare(e.value.outlet))}(r),r}processSegment(n,e,s,r){for(const o of n){const i=this.processSegmentAgainstRoute(o,e,s,r);if(null!==i)return i}return qI(e,s,r)?[]:null}processSegmentAgainstRoute(n,e,s,r){if(n.redirectTo||!JI(n,e,s,r))return null;let o,i=[],a=[];if("**"===n.path){const m=s.length>0?II(s).parameters:{};o=new Em(s,m,Object.freeze(Object.assign({},this.urlTree.queryParams)),this.urlTree.fragment,aT(n),hi(n),n.component,n,oT(e),iT(e)+s.length,lT(n))}else{const m=Cm(e,n,s);if(!m.matched)return null;i=m.consumedSegments,a=m.remainingSegments,o=new Em(i,m.parameters,Object.freeze(Object.assign({},this.urlTree.queryParams)),this.urlTree.fragment,aT(n),hi(n),n.component,n,oT(e),iT(e)+i.length,lT(n))}const l=function zU(t){return t.children?t.children:t.loadChildren?t._loadedConfig.routes:[]}(n),{segmentGroup:c,slicedSegments:d}=Dm(e,i,a,l.filter(m=>void 0===m.redirectTo),this.relativeLinkResolution);if(0===d.length&&c.hasChildren()){const m=this.processChildren(l,c);return null===m?null:[new Ml(o,m)]}if(0===l.length&&0===d.length)return[new Ml(o,[])];const f=hi(n)===r,p=this.processSegment(l,c,d,f?An:r);return null===p?null:[new Ml(o,p)]}}function WU(t){const n=t.value.routeConfig;return n&&""===n.path&&void 0===n.redirectTo}function rT(t){const n=[],e=new Set;for(const s of t){if(!WU(s)){n.push(s);continue}const r=n.find(o=>s.value.routeConfig===o.value.routeConfig);void 0!==r?(r.children.push(...s.children),e.add(r)):n.push(s)}for(const s of e){const r=rT(s.children);n.push(new Ml(s.value,r))}return n.filter(s=>!e.has(s))}function oT(t){let n=t;for(;n._sourceSegment;)n=n._sourceSegment;return n}function iT(t){let n=t,e=n._segmentIndexShift?n._segmentIndexShift:0;for(;n._sourceSegment;)n=n._sourceSegment,e+=n._segmentIndexShift?n._segmentIndexShift:0;return e-1}function aT(t){return t.data||{}}function lT(t){return t.resolve||{}}function uT(t){return[...Object.keys(t),...Object.getOwnPropertySymbols(t)]}function jv(t){return Ol(n=>{const e=t(n);return e?Qn(e).pipe(St(()=>n)):xn(n)})}class QU extends class YU{shouldDetach(n){return!1}store(n,e){}shouldAttach(n){return!1}retrieve(n){return null}shouldReuseRoute(n,e){return n.routeConfig===e.routeConfig}}{}const Xv=new Zt("ROUTES");class cT{constructor(n,e,s,r){this.injector=n,this.compiler=e,this.onLoadStartListener=s,this.onLoadEndListener=r}load(n,e){if(e._loader$)return e._loader$;this.onLoadStartListener&&this.onLoadStartListener(e);const r=this.loadModuleFactory(e.loadChildren).pipe(St(o=>{this.onLoadEndListener&&this.onLoadEndListener(e);const i=o.create(n);return new Gv(DI(i.injector.get(Xv,void 0,bt.Self|bt.Optional)).map(Hv),i)}),du(o=>{throw e._loader$=void 0,o}));return e._loader$=new u3(r,()=>new Dt).pipe(pI()),e._loader$}loadModuleFactory(n){return Xa(n()).pipe(Yn(e=>e instanceof ND?xn(e):Qn(this.compiler.compileModuleAsync(e))))}}class qU{shouldProcessUrl(n){return!0}extract(n){return n}merge(n,e){return n}}function eV(t){throw t}function tV(t,n,e){return n.parse("/")}function dT(t,n){return xn(null)}const nV={paths:"exact",fragment:"ignored",matrixParams:"ignored",queryParams:"exact"},sV={paths:"subset",fragment:"ignored",matrixParams:"ignored",queryParams:"subset"};let zo=(()=>{class t{constructor(e,s,r,o,i,a,l){this.rootComponentType=e,this.urlSerializer=s,this.rootContexts=r,this.location=o,this.config=l,this.lastSuccessfulNavigation=null,this.currentNavigation=null,this.disposed=!1,this.navigationId=0,this.currentPageId=0,this.isNgZoneEnabled=!1,this.events=new Dt,this.errorHandler=eV,this.malformedUriErrorHandler=tV,this.navigated=!1,this.lastSuccessfulId=-1,this.hooks={beforePreactivation:dT,afterPreactivation:dT},this.urlHandlingStrategy=new qU,this.routeReuseStrategy=new QU,this.onSameUrlNavigation="ignore",this.paramsInheritanceStrategy="emptyOnly",this.urlUpdateStrategy="deferred",this.relativeLinkResolution="corrected",this.canceledNavigationResolution="replace",this.ngModule=i.get(wl),this.console=i.get(d1);const f=i.get(Vr);this.isNgZoneEnabled=f instanceof Vr&&Vr.isInAngularZone(),this.resetConfig(l),this.currentUrlTree=function N3(){return new Ju(new $n([],{}),{},null)}(),this.rawUrlTree=this.currentUrlTree,this.browserUrlTree=this.currentUrlTree,this.configLoader=new cT(i,a,p=>this.triggerEvent(new xI(p)),p=>this.triggerEvent(new EI(p))),this.routerState=LI(this.currentUrlTree,this.rootComponentType),this.transitions=new qi({id:0,targetPageId:0,currentUrlTree:this.currentUrlTree,currentRawUrl:this.currentUrlTree,extractedUrl:this.urlHandlingStrategy.extract(this.currentUrlTree),urlAfterRedirects:this.urlHandlingStrategy.extract(this.currentUrlTree),rawUrl:this.currentUrlTree,extras:{},resolve:null,reject:null,promise:Promise.resolve(!0),source:"imperative",restoredState:null,currentSnapshot:this.routerState.snapshot,targetSnapshot:null,currentRouterState:this.routerState,targetRouterState:null,guards:{canActivateChecks:[],canDeactivateChecks:[]},guardsResult:null}),this.navigations=this.setupNavigations(this.transitions),this.processNavigations()}get browserPageId(){var e;return null===(e=this.location.getState())||void 0===e?void 0:e.\u0275routerPageId}setupNavigations(e){const s=this.events;return e.pipe(dd(r=>0!==r.id),St(r=>Object.assign(Object.assign({},r),{extractedUrl:this.urlHandlingStrategy.extract(r.rawUrl)})),Ol(r=>{let o=!1,i=!1;return xn(r).pipe(Vo(a=>{this.currentNavigation={id:a.id,initialUrl:a.currentRawUrl,extractedUrl:a.extractedUrl,trigger:a.source,extras:a.extras,previousNavigation:this.lastSuccessfulNavigation?Object.assign(Object.assign({},this.lastSuccessfulNavigation),{previousNavigation:null}):null}}),Ol(a=>{const l=this.browserUrlTree.toString(),c=!this.navigated||a.extractedUrl.toString()!==l||l!==this.currentUrlTree.toString();if(("reload"===this.onSameUrlNavigation||c)&&this.urlHandlingStrategy.shouldProcessUrl(a.rawUrl))return hT(a.source)&&(this.browserUrlTree=a.extractedUrl),xn(a).pipe(Ol(f=>{const p=this.transitions.getValue();return s.next(new Mv(f.id,this.serializeUrl(f.extractedUrl),f.source,f.restoredState)),p!==this.transitions.getValue()?$r:Promise.resolve(f)}),function DU(t,n,e,s){return Ol(r=>function _U(t,n,e,s,r){return new bU(t,n,e,s,r).apply()}(t,n,e,r.extractedUrl,s).pipe(St(o=>Object.assign(Object.assign({},r),{urlAfterRedirects:o}))))}(this.ngModule.injector,this.configLoader,this.urlSerializer,this.config),Vo(f=>{this.currentNavigation=Object.assign(Object.assign({},this.currentNavigation),{finalUrl:f.urlAfterRedirects})}),function GU(t,n,e,s,r){return Yn(o=>function BU(t,n,e,s,r="emptyOnly",o="legacy"){try{const i=new UU(t,n,e,s,r,o).recognize();return null===i?sT(new LU):xn(i)}catch(i){return sT(i)}}(t,n,o.urlAfterRedirects,e(o.urlAfterRedirects),s,r).pipe(St(i=>Object.assign(Object.assign({},o),{targetSnapshot:i}))))}(this.rootComponentType,this.config,f=>this.serializeUrl(f),this.paramsInheritanceStrategy,this.relativeLinkResolution),Vo(f=>{if("eager"===this.urlUpdateStrategy){if(!f.extras.skipLocationChange){const m=this.urlHandlingStrategy.merge(f.urlAfterRedirects,f.rawUrl);this.setBrowserUrl(m,f)}this.browserUrlTree=f.urlAfterRedirects}const p=new g3(f.id,this.serializeUrl(f.extractedUrl),this.serializeUrl(f.urlAfterRedirects),f.targetSnapshot);s.next(p)}));if(c&&this.rawUrlTree&&this.urlHandlingStrategy.shouldProcessUrl(this.rawUrlTree)){const{id:p,extractedUrl:m,source:y,restoredState:_,extras:x}=a,D=new Mv(p,this.serializeUrl(m),y,_);s.next(D);const C=LI(m,this.rootComponentType).snapshot;return xn(Object.assign(Object.assign({},a),{targetSnapshot:C,urlAfterRedirects:m,extras:Object.assign(Object.assign({},x),{skipLocationChange:!1,replaceUrl:!1})}))}return this.rawUrlTree=a.rawUrl,a.resolve(null),$r}),jv(a=>{const{targetSnapshot:l,id:c,extractedUrl:d,rawUrl:f,extras:{skipLocationChange:p,replaceUrl:m}}=a;return this.hooks.beforePreactivation(l,{navigationId:c,appliedUrlTree:d,rawUrlTree:f,skipLocationChange:!!p,replaceUrl:!!m})}),Vo(a=>{const l=new y3(a.id,this.serializeUrl(a.extractedUrl),this.serializeUrl(a.urlAfterRedirects),a.targetSnapshot);this.triggerEvent(l)}),St(a=>Object.assign(Object.assign({},a),{guards:IU(a.targetSnapshot,a.currentSnapshot,this.rootContexts)})),function AU(t,n){return Yn(e=>{const{targetSnapshot:s,currentSnapshot:r,guards:{canActivateChecks:o,canDeactivateChecks:i}}=e;return 0===i.length&&0===o.length?xn(Object.assign(Object.assign({},e),{guardsResult:!0})):function OU(t,n,e,s){return Qn(t).pipe(Yn(r=>function FU(t,n,e,s,r){const o=n&&n.routeConfig?n.routeConfig.canDeactivate:null;return o&&0!==o.length?xn(o.map(a=>{const l=Sm(a,n,r);let c;if(function cU(t){return t&&hu(t.canDeactivate)}(l))c=Xa(l.canDeactivate(t,n,e,s));else{if(!hu(l))throw new Error("Invalid CanDeactivate guard");c=Xa(l(t,n,e,s))}return c.pipe(hd())})).pipe(ef()):xn(!0)}(r.component,r.route,e,n,s)),hd(r=>!0!==r,!0))}(i,s,r,t).pipe(Yn(a=>a&&function iU(t){return"boolean"==typeof t}(a)?function RU(t,n,e,s){return Qn(n).pipe(jh(r=>Av(function kU(t,n){return null!==t&&n&&n(new _3(t)),xn(!0)}(r.route.parent,s),function MU(t,n){return null!==t&&n&&n(new C3(t)),xn(!0)}(r.route,s),function $U(t,n,e){const s=n[n.length-1],o=n.slice(0,n.length-1).reverse().map(i=>function TU(t){const n=t.routeConfig?t.routeConfig.canActivateChild:null;return n&&0!==n.length?{node:t,guards:n}:null}(i)).filter(i=>null!==i).map(i=>Ov(()=>xn(i.guards.map(l=>{const c=Sm(l,i.node,e);let d;if(function uU(t){return t&&hu(t.canActivateChild)}(c))d=Xa(c.canActivateChild(s,t));else{if(!hu(c))throw new Error("Invalid CanActivateChild guard");d=Xa(c(s,t))}return d.pipe(hd())})).pipe(ef())));return xn(o).pipe(ef())}(t,r.path,e),function PU(t,n,e){const s=n.routeConfig?n.routeConfig.canActivate:null;if(!s||0===s.length)return xn(!0);const r=s.map(o=>Ov(()=>{const i=Sm(o,n,e);let a;if(function lU(t){return t&&hu(t.canActivate)}(i))a=Xa(i.canActivate(n,t));else{if(!hu(i))throw new Error("Invalid CanActivate guard");a=Xa(i(n,t))}return a.pipe(hd())}));return xn(r).pipe(ef())}(t,r.route,e))),hd(r=>!0!==r,!0))}(s,o,t,n):xn(a)),St(a=>Object.assign(Object.assign({},e),{guardsResult:a})))})}(this.ngModule.injector,a=>this.triggerEvent(a)),Vo(a=>{if(ec(a.guardsResult)){const c=kv(`Redirecting to "${this.serializeUrl(a.guardsResult)}"`);throw c.url=a.guardsResult,c}const l=new v3(a.id,this.serializeUrl(a.extractedUrl),this.serializeUrl(a.urlAfterRedirects),a.targetSnapshot,!!a.guardsResult);this.triggerEvent(l)}),dd(a=>!!a.guardsResult||(this.restoreHistory(a),this.cancelNavigationTransition(a,""),!1)),jv(a=>{if(a.guards.canActivateChecks.length)return xn(a).pipe(Vo(l=>{const c=new x3(l.id,this.serializeUrl(l.extractedUrl),this.serializeUrl(l.urlAfterRedirects),l.targetSnapshot);this.triggerEvent(c)}),Ol(l=>{let c=!1;return xn(l).pipe(function HU(t,n){return Yn(e=>{const{targetSnapshot:s,guards:{canActivateChecks:r}}=e;if(!r.length)return xn(e);let o=0;return Qn(r).pipe(jh(i=>function KU(t,n,e,s){return function jU(t,n,e,s){const r=uT(t);if(0===r.length)return xn({});const o={};return Qn(r).pipe(Yn(i=>function XU(t,n,e,s){const r=Sm(t,n,s);return Xa(r.resolve?r.resolve(n,e):r(n,e))}(t[i],n,e,s).pipe(Vo(a=>{o[i]=a}))),Rv(1),Yn(()=>uT(o).length===r.length?xn(o):$r))}(t._resolve,t,n,s).pipe(St(o=>(t._resolvedData=o,t.data=Object.assign(Object.assign({},t.data),BI(t,e).resolve),null)))}(i.route,s,t,n)),Vo(()=>o++),Rv(1),Yn(i=>o===r.length?xn(e):$r))})}(this.paramsInheritanceStrategy,this.ngModule.injector),Vo({next:()=>c=!0,complete:()=>{c||(this.restoreHistory(l),this.cancelNavigationTransition(l,"At least one route resolver didn't emit any value."))}}))}),Vo(l=>{const c=new E3(l.id,this.serializeUrl(l.extractedUrl),this.serializeUrl(l.urlAfterRedirects),l.targetSnapshot);this.triggerEvent(c)}))}),jv(a=>{const{targetSnapshot:l,id:c,extractedUrl:d,rawUrl:f,extras:{skipLocationChange:p,replaceUrl:m}}=a;return this.hooks.afterPreactivation(l,{navigationId:c,appliedUrlTree:d,rawUrlTree:f,skipLocationChange:!!p,replaceUrl:!!m})}),St(a=>{const l=function j3(t,n,e){const s=Qh(t,n._root,e?e._root:void 0);return new FI(s,n)}(this.routeReuseStrategy,a.targetSnapshot,a.currentRouterState);return Object.assign(Object.assign({},a),{targetRouterState:l})}),Vo(a=>{this.currentUrlTree=a.urlAfterRedirects,this.rawUrlTree=this.urlHandlingStrategy.merge(a.urlAfterRedirects,a.rawUrl),this.routerState=a.targetRouterState,"deferred"===this.urlUpdateStrategy&&(a.extras.skipLocationChange||this.setBrowserUrl(this.rawUrlTree,a),this.browserUrlTree=a.urlAfterRedirects)}),((t,n,e)=>St(s=>(new rU(n,s.targetRouterState,s.currentRouterState,e).activate(t),s)))(this.rootContexts,this.routeReuseStrategy,a=>this.triggerEvent(a)),Vo({next(){o=!0},complete(){o=!0}}),function p3(t){return Vt((n,e)=>{try{n.subscribe(e)}finally{e.add(t)}})}(()=>{var a;o||i||this.cancelNavigationTransition(r,`Navigation ID ${r.id} is not equal to the current navigation id ${this.navigationId}`),(null===(a=this.currentNavigation)||void 0===a?void 0:a.id)===r.id&&(this.currentNavigation=null)}),du(a=>{if(i=!0,function T3(t){return t&&t[bI]}(a)){const l=ec(a.url);l||(this.navigated=!0,this.restoreHistory(r,!0));const c=new vI(r.id,this.serializeUrl(r.extractedUrl),a.message);s.next(c),l?setTimeout(()=>{const d=this.urlHandlingStrategy.merge(a.url,this.rawUrlTree),f={skipLocationChange:r.extras.skipLocationChange,replaceUrl:"eager"===this.urlUpdateStrategy||hT(r.source)};this.scheduleNavigation(d,"imperative",null,f,{resolve:r.resolve,reject:r.reject,promise:r.promise})},0):r.resolve(!1)}else{this.restoreHistory(r,!0);const l=new m3(r.id,this.serializeUrl(r.extractedUrl),a);s.next(l);try{r.resolve(this.errorHandler(a))}catch(c){r.reject(c)}}return $r}))}))}resetRootComponentType(e){this.rootComponentType=e,this.routerState.root.component=this.rootComponentType}setTransition(e){this.transitions.next(Object.assign(Object.assign({},this.transitions.value),e))}initialNavigation(){this.setUpLocationChangeListener(),0===this.navigationId&&this.navigateByUrl(this.location.path(!0),{replaceUrl:!0})}setUpLocationChangeListener(){this.locationSubscription||(this.locationSubscription=this.location.subscribe(e=>{const s="popstate"===e.type?"popstate":"hashchange";"popstate"===s&&setTimeout(()=>{var r;const o={replaceUrl:!0},i=(null===(r=e.state)||void 0===r?void 0:r.navigationId)?e.state:null;if(i){const l=Object.assign({},i);delete l.navigationId,delete l.\u0275routerPageId,0!==Object.keys(l).length&&(o.state=l)}const a=this.parseUrl(e.url);this.scheduleNavigation(a,s,i,o)},0)}))}get url(){return this.serializeUrl(this.currentUrlTree)}getCurrentNavigation(){return this.currentNavigation}triggerEvent(e){this.events.next(e)}resetConfig(e){ZI(e),this.config=e.map(Hv),this.navigated=!1,this.lastSuccessfulId=-1}ngOnDestroy(){this.dispose()}dispose(){this.transitions.complete(),this.locationSubscription&&(this.locationSubscription.unsubscribe(),this.locationSubscription=void 0),this.disposed=!0}createUrlTree(e,s={}){const{relativeTo:r,queryParams:o,fragment:i,queryParamsHandling:a,preserveFragment:l}=s,c=r||this.routerState.root,d=l?this.currentUrlTree.fragment:i;let f=null;switch(a){case"merge":f=Object.assign(Object.assign({},this.currentUrlTree.queryParams),o);break;case"preserve":f=this.currentUrlTree.queryParams;break;default:f=o||null}return null!==f&&(f=this.removeEmptyProps(f)),function Y3(t,n,e,s,r){if(0===e.length)return Vv(n.root,n.root,n.root,s,r);const o=function Q3(t){if("string"==typeof t[0]&&1===t.length&&"/"===t[0])return new WI(!0,0,t);let n=0,e=!1;const s=t.reduce((r,o,i)=>{if("object"==typeof o&&null!=o){if(o.outlets){const a={};return zr(o.outlets,(l,c)=>{a[c]="string"==typeof l?l.split("/"):l}),[...r,{outlets:a}]}if(o.segmentPath)return[...r,o.segmentPath]}return"string"!=typeof o?[...r,o]:0===i?(o.split("/").forEach((a,l)=>{0==l&&"."===a||(0==l&&""===a?e=!0:".."===a?n++:""!=a&&r.push(a))}),r):[...r,o]},[]);return new WI(e,n,s)}(e);if(o.toRoot())return Vv(n.root,n.root,new $n([],{}),s,r);const i=function J3(t,n,e){if(t.isAbsolute)return new zv(n.root,!0,0);if(-1===e.snapshot._lastPathIndex){const o=e.snapshot._urlSegment;return new zv(o,o===n.root,0)}const s=_m(t.commands[0])?0:1;return function q3(t,n,e){let s=t,r=n,o=e;for(;o>r;){if(o-=r,s=s.parent,!s)throw new Error("Invalid number of '../'");r=s.segments.length}return new zv(s,!1,r-o)}(e.snapshot._urlSegment,e.snapshot._lastPathIndex+s,t.numberOfDoubleDots)}(o,n,t),a=i.processChildren?bm(i.segmentGroup,i.index,o.commands):GI(i.segmentGroup,i.index,o.commands);return Vv(n.root,i.segmentGroup,a,s,r)}(c,this.currentUrlTree,e,f,null!=d?d:null)}navigateByUrl(e,s={skipLocationChange:!1}){const r=ec(e)?e:this.parseUrl(e),o=this.urlHandlingStrategy.merge(r,this.rawUrlTree);return this.scheduleNavigation(o,"imperative",null,s)}navigate(e,s={skipLocationChange:!1}){return function rV(t){for(let n=0;n<t.length;n++){const e=t[n];if(null==e)throw new Error(`The requested path contains ${e} segment at index ${n}`)}}(e),this.navigateByUrl(this.createUrlTree(e,s),s)}serializeUrl(e){return this.urlSerializer.serialize(e)}parseUrl(e){let s;try{s=this.urlSerializer.parse(e)}catch(r){s=this.malformedUriErrorHandler(r,this.urlSerializer,e)}return s}isActive(e,s){let r;if(r=!0===s?Object.assign({},nV):!1===s?Object.assign({},sV):s,ec(e))return wI(this.currentUrlTree,e,r);const o=this.parseUrl(e);return wI(this.currentUrlTree,o,r)}removeEmptyProps(e){return Object.keys(e).reduce((s,r)=>{const o=e[r];return null!=o&&(s[r]=o),s},{})}processNavigations(){this.navigations.subscribe(e=>{this.navigated=!0,this.lastSuccessfulId=e.id,this.currentPageId=e.targetPageId,this.events.next(new Xh(e.id,this.serializeUrl(e.extractedUrl),this.serializeUrl(this.currentUrlTree))),this.lastSuccessfulNavigation=this.currentNavigation,e.resolve(!0)},e=>{this.console.warn(`Unhandled Navigation Error: ${e}`)})}scheduleNavigation(e,s,r,o,i){var a,l;if(this.disposed)return Promise.resolve(!1);let c,d,f;i?(c=i.resolve,d=i.reject,f=i.promise):f=new Promise((y,_)=>{c=y,d=_});const p=++this.navigationId;let m;return"computed"===this.canceledNavigationResolution?(0===this.currentPageId&&(r=this.location.getState()),m=r&&r.\u0275routerPageId?r.\u0275routerPageId:o.replaceUrl||o.skipLocationChange?null!==(a=this.browserPageId)&&void 0!==a?a:0:(null!==(l=this.browserPageId)&&void 0!==l?l:0)+1):m=0,this.setTransition({id:p,targetPageId:m,source:s,restoredState:r,currentUrlTree:this.currentUrlTree,currentRawUrl:this.rawUrlTree,rawUrl:e,extras:o,resolve:c,reject:d,promise:f,currentSnapshot:this.routerState.snapshot,currentRouterState:this.routerState}),f.catch(y=>Promise.reject(y))}setBrowserUrl(e,s){const r=this.urlSerializer.serialize(e),o=Object.assign(Object.assign({},s.extras.state),this.generateNgRouterState(s.id,s.targetPageId));this.location.isCurrentPathEqualTo(r)||s.extras.replaceUrl?this.location.replaceState(r,"",o):this.location.go(r,"",o)}restoreHistory(e,s=!1){var r,o;if("computed"===this.canceledNavigationResolution){const i=this.currentPageId-e.targetPageId;"popstate"!==e.source&&"eager"!==this.urlUpdateStrategy&&this.currentUrlTree!==(null===(r=this.currentNavigation)||void 0===r?void 0:r.finalUrl)||0===i?this.currentUrlTree===(null===(o=this.currentNavigation)||void 0===o?void 0:o.finalUrl)&&0===i&&(this.resetState(e),this.browserUrlTree=e.currentUrlTree,this.resetUrlToCurrentUrlTree()):this.location.historyGo(i)}else"replace"===this.canceledNavigationResolution&&(s&&this.resetState(e),this.resetUrlToCurrentUrlTree())}resetState(e){this.routerState=e.currentRouterState,this.currentUrlTree=e.currentUrlTree,this.rawUrlTree=this.urlHandlingStrategy.merge(this.currentUrlTree,e.rawUrl)}resetUrlToCurrentUrlTree(){this.location.replaceState(this.urlSerializer.serialize(this.rawUrlTree),"",this.generateNgRouterState(this.lastSuccessfulId,this.currentPageId))}cancelNavigationTransition(e,s){const r=new vI(e.id,this.serializeUrl(e.extractedUrl),s);this.triggerEvent(r),e.resolve(!1)}generateNgRouterState(e,s){return"computed"===this.canceledNavigationResolution?{navigationId:e,\u0275routerPageId:s}:{navigationId:e}}}return t.\u0275fac=function(e){fy()},t.\u0275prov=T({token:t,factory:t.\u0275fac}),t})();function hT(t){return"imperative"!==t}class fT{}class pT{preload(n,e){return xn(null)}}let mT=(()=>{class t{constructor(e,s,r,o){this.router=e,this.injector=r,this.preloadingStrategy=o,this.loader=new cT(r,s,l=>e.triggerEvent(new xI(l)),l=>e.triggerEvent(new EI(l)))}setUpPreloading(){this.subscription=this.router.events.pipe(dd(e=>e instanceof Xh),jh(()=>this.preload())).subscribe(()=>{})}preload(){const e=this.injector.get(wl);return this.processRoutes(e,this.router.config)}ngOnDestroy(){this.subscription&&this.subscription.unsubscribe()}processRoutes(e,s){const r=[];for(const o of s)if(o.loadChildren&&!o.canLoad&&o._loadedConfig){const i=o._loadedConfig;r.push(this.processRoutes(i.module,i.routes))}else o.loadChildren&&!o.canLoad?r.push(this.preloadConfig(e,o)):o.children&&r.push(this.processRoutes(e,o.children));return Qn(r).pipe(Pr(),St(o=>{}))}preloadConfig(e,s){return this.preloadingStrategy.preload(s,()=>(s._loadedConfig?xn(s._loadedConfig):this.loader.load(e.injector,s)).pipe(Yn(o=>(s._loadedConfig=o,this.processRoutes(o.module,o.routes)))))}}return t.\u0275fac=function(e){return new(e||t)(rn(zo),rn(h1),rn(ho),rn(fT))},t.\u0275prov=T({token:t,factory:t.\u0275fac}),t})(),Qv=(()=>{class t{constructor(e,s,r={}){this.router=e,this.viewportScroller=s,this.options=r,this.lastId=0,this.lastSource="imperative",this.restoredId=0,this.store={},r.scrollPositionRestoration=r.scrollPositionRestoration||"disabled",r.anchorScrolling=r.anchorScrolling||"disabled"}init(){"disabled"!==this.options.scrollPositionRestoration&&this.viewportScroller.setHistoryScrollRestoration("manual"),this.routerEventsSubscription=this.createScrollEvents(),this.scrollEventsSubscription=this.consumeScrollEvents()}createScrollEvents(){return this.router.events.subscribe(e=>{e instanceof Mv?(this.store[this.lastId]=this.viewportScroller.getScrollPosition(),this.lastSource=e.navigationTrigger,this.restoredId=e.restoredState?e.restoredState.navigationId:0):e instanceof Xh&&(this.lastId=e.id,this.scheduleScrollEvent(e,this.router.parseUrl(e.urlAfterRedirects).fragment))})}consumeScrollEvents(){return this.router.events.subscribe(e=>{e instanceof _I&&(e.position?"top"===this.options.scrollPositionRestoration?this.viewportScroller.scrollToPosition([0,0]):"enabled"===this.options.scrollPositionRestoration&&this.viewportScroller.scrollToPosition(e.position):e.anchor&&"enabled"===this.options.anchorScrolling?this.viewportScroller.scrollToAnchor(e.anchor):"disabled"!==this.options.scrollPositionRestoration&&this.viewportScroller.scrollToPosition([0,0]))})}scheduleScrollEvent(e,s){this.router.triggerEvent(new _I(e,"popstate"===this.lastSource?this.store[this.restoredId]:null,s))}ngOnDestroy(){this.routerEventsSubscription&&this.routerEventsSubscription.unsubscribe(),this.scrollEventsSubscription&&this.scrollEventsSubscription.unsubscribe()}}return t.\u0275fac=function(e){fy()},t.\u0275prov=T({token:t,factory:t.\u0275fac}),t})();const tc=new Zt("ROUTER_CONFIGURATION"),gT=new Zt("ROUTER_FORROOT_GUARD"),lV=[lv,{provide:OI,useClass:RI},{provide:zo,useFactory:function fV(t,n,e,s,r,o,i={},a,l){const c=new zo(null,t,n,e,s,r,DI(o));return a&&(c.urlHandlingStrategy=a),l&&(c.routeReuseStrategy=l),function pV(t,n){t.errorHandler&&(n.errorHandler=t.errorHandler),t.malformedUriErrorHandler&&(n.malformedUriErrorHandler=t.malformedUriErrorHandler),t.onSameUrlNavigation&&(n.onSameUrlNavigation=t.onSameUrlNavigation),t.paramsInheritanceStrategy&&(n.paramsInheritanceStrategy=t.paramsInheritanceStrategy),t.relativeLinkResolution&&(n.relativeLinkResolution=t.relativeLinkResolution),t.urlUpdateStrategy&&(n.urlUpdateStrategy=t.urlUpdateStrategy),t.canceledNavigationResolution&&(n.canceledNavigationResolution=t.canceledNavigationResolution)}(i,c),i.enableTracing&&c.events.subscribe(d=>{var f,p;null===(f=console.group)||void 0===f||f.call(console,`Router Event: ${d.constructor.name}`),console.log(d.toString()),console.log(d),null===(p=console.groupEnd)||void 0===p||p.call(console)}),c},deps:[OI,nf,lv,ho,h1,Xv,tc,[class JU{},new su],[class ZU{},new su]]},nf,{provide:md,useFactory:function mV(t){return t.routerState.root},deps:[zo]},mT,pT,class aV{preload(n,e){return e().pipe(du(()=>xn(null)))}},{provide:tc,useValue:{enableTracing:!1}}];function uV(){return new y1("Router",zo)}let yT=(()=>{class t{constructor(e,s){}static forRoot(e,s){return{ngModule:t,providers:[lV,vT(e),{provide:gT,useFactory:hV,deps:[[zo,new su,new mh]]},{provide:tc,useValue:s||{}},{provide:cd,useFactory:dV,deps:[Qu,[new gp(av),new su],tc]},{provide:Qv,useFactory:cV,deps:[zo,hB,tc]},{provide:fT,useExisting:s&&s.preloadingStrategy?s.preloadingStrategy:pT},{provide:y1,multi:!0,useFactory:uV},[Jv,{provide:Gy,multi:!0,useFactory:gV,deps:[Jv]},{provide:xT,useFactory:yV,deps:[Jv]},{provide:c1,multi:!0,useExisting:xT}]]}}static forChild(e){return{ngModule:t,providers:[vT(e)]}}}return t.\u0275fac=function(e){return new(e||t)(rn(gT,8),rn(zo,8))},t.\u0275mod=Sr({type:t}),t.\u0275inj=j({}),t})();function cV(t,n,e){return e.scrollOffset&&n.setOffset(e.scrollOffset),new Qv(t,n,e)}function dV(t,n,e={}){return e.useHash?new GF(t,n):new F1(t,n)}function hV(t){return"guarded"}function vT(t){return[{provide:us,multi:!0,useValue:t},{provide:Xv,multi:!0,useValue:t}]}let Jv=(()=>{class t{constructor(e){this.injector=e,this.initNavigation=!1,this.destroyed=!1,this.resultOfPreactivationDone=new Dt}appInitializer(){return this.injector.get(VF,Promise.resolve(null)).then(()=>{if(this.destroyed)return Promise.resolve(!0);let s=null;const r=new Promise(a=>s=a),o=this.injector.get(zo),i=this.injector.get(tc);return"disabled"===i.initialNavigation?(o.setUpLocationChangeListener(),s(!0)):"enabled"===i.initialNavigation||"enabledBlocking"===i.initialNavigation?(o.hooks.afterPreactivation=()=>this.initNavigation?xn(null):(this.initNavigation=!0,s(!0),this.resultOfPreactivationDone),o.initialNavigation()):s(!0),r})}bootstrapListener(e){const s=this.injector.get(tc),r=this.injector.get(mT),o=this.injector.get(Qv),i=this.injector.get(zo),a=this.injector.get(qy);e===a.components[0]&&(("enabledNonBlocking"===s.initialNavigation||void 0===s.initialNavigation)&&i.initialNavigation(),r.setUpPreloading(),o.init(),i.resetRootComponentType(a.componentTypes[0]),this.resultOfPreactivationDone.next(null),this.resultOfPreactivationDone.complete())}ngOnDestroy(){this.destroyed=!0}}return t.\u0275fac=function(e){return new(e||t)(rn(ho))},t.\u0275prov=T({token:t,factory:t.\u0275fac}),t})();function gV(t){return t.appInitializer.bind(t)}function yV(t){return t.bootstrapListener.bind(t)}const xT=new Zt("Router Initializer"),xV=[];let EV=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Sr({type:t}),t.\u0275inj=j({imports:[[yT.forRoot(xV)],yT]}),t})();var u=h(569),on=h(5861);function Lt(t,n){Array.isArray(t)||(t=[t]),t.forEach(e=>{null!=e&&u.util.assert("complex64"!==e.dtype,()=>`${n} does not support complex64 tensors in the CPU backend.`)})}const _V=u.kernel_impls.whereImpl;let bV=(()=>{class t extends u.KernelBackend{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new u.DataStorage(this,(0,u.engine)())}nextDataId(){return t.nextDataId++}write(e,s,r){this.firstUse&&(this.firstUse=!1,(0,u.env)().get("IS_NODE")&&u.backend_util.warn("\n============================\nHi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. \n============================"));const o={id:this.nextDataId()};return this.data.set(o,{values:e,dtype:r,refCount:1}),o}makeTensorInfo(e,s,r){let o;if("string"===s&&null!=r&&r.length>0&&u.util.isString(r[0])){const i=r.map(a=>u.util.encodeString(a));o=this.write(i,e,s)}else o=this.write(r,e,s);return{dataId:o,shape:e,dtype:s}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){this.data.get(e).refCount++}decRef(e){this.data.has(e)&&this.data.get(e).refCount--}move(e,s,r,o,i){this.data.set(e,{values:s,dtype:o,refCount:i})}numDataIds(){return this.data.numDataIds()}read(e){var s=this;return(0,on.Z)(function*(){return s.readSync(e)})()}readSync(e){const{dtype:s,complexTensorInfos:r}=this.data.get(e);if("complex64"===s){const o=this.readSync(r.real.dataId),i=this.readSync(r.imag.dataId);return u.backend_util.mergeRealAndImagArrays(o,i)}return this.data.get(e).values}bufferSync(e){const s=this.readSync(e.dataId);if("string"===e.dtype)try{const r=s.map(o=>u.util.decodeString(o));return(0,u.buffer)(e.shape,e.dtype,r)}catch(r){throw new Error("Failed to decode encoded string bytes into utf-8")}return(0,u.buffer)(e.shape,e.dtype,s)}makeOutput(e,s,r){return(0,u.engine)().makeTensorFromTensorInfo(this.makeTensorInfo(s,r,e),this)}disposeData(e,s=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!s&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:r}=this.data.get(e);null!=r&&(this.disposeData(r.real.dataId,!0),this.disposeData(r.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}time(e){return(0,on.Z)(function*(){const s=u.util.now();return e(),{kernelMs:u.util.now()-s}})()}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){Lt([e],"where");const s=this.readSync(e.dataId);return _V(e.shape,s)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}return t.nextDataId=0,t})();function Jn(t,n,e){return({inputs:s,attrs:r,backend:o})=>{const{x:i}=s;if(Lt(i,t),"string"===i.dtype||"string"===e)throw new Error("unaryKernelFunc does not support string input/output");const a=o,l=a.data.get(i.dataId).values,c=u.util.sizeFromShape(i.shape),d=e||i.dtype,f=u.util.getArrayFromDType(d,c);for(let p=0;p<c;++p)f[p]=n(l[p],r);return a.makeTensorInfo(i.shape,d,f)}}function yd(t,n,e){return({inputs:s,attrs:r,backend:o})=>{const{x:i}=s;if(Lt(i,t),"string"===i.dtype||"string"===e)throw new Error("unaryKernelFunc does not support string input/output");const a=o,l=a.data.get(i.dataId).values,c=e||i.dtype,d=n(l,c,r);return a.makeTensorInfo(i.shape,c,d)}}(0,u.registerBackend)("cpu",()=>new bV,1);const ET=Jn(u.Elu,t=>t>=0?t:Math.exp(t)-1),DV={kernelName:u.Elu,backendName:"cpu",kernelFunc:ET};function Za(t){const{inputs:n,backend:e}=t,{x:s}=n;return e.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const IV={kernelName:u.Identity,backendName:"cpu",kernelFunc:Za};function _T(t){const{inputs:n,backend:e,attrs:s}=t,{x:r}=n,{alpha:o}=s;Lt([r],"leakyRelu");const i=u.util.sizeFromShape(r.shape),a=e.data.get(r.dataId).values,l=u.util.getTypedArrayFromDType("float32",i);for(let c=0;c<a.length;c++)l[c]=a[c]<0?o*a[c]:a[c];return e.makeTensorInfo(r.shape,"float32",l)}const TV={kernelName:u.LeakyRelu,backendName:"cpu",kernelFunc:_T};function sr(t){return(n,e,s,r,o)=>{const i=u.backend_util.assertAndGetBroadcastShape(n,e),a=i.length,l=u.util.computeStrides(i),c=u.util.sizeFromShape(i),d=u.util.getTypedArrayFromDType(o,c),f=n.length,p=e.length,m=u.util.computeStrides(n),y=u.util.computeStrides(e),_=u.backend_util.getBroadcastDims(n,i),x=u.backend_util.getBroadcastDims(e,i);if(_.length+x.length===0)for(let D=0;D<d.length;++D)d[D]=t(s[D%s.length],r[D%r.length]);else for(let D=0;D<d.length;++D){const C=u.util.indexToLoc(D,a,l),F=C.slice(-f);_.forEach(ve=>F[ve]=0);const B=u.util.locToIndex(F,f,m),Z=C.slice(-p);x.forEach(ve=>Z[ve]=0);const ce=u.util.locToIndex(Z,p,y);d[D]=t(s[B],r[ce])}return[d,i]}}const wV=sr((t,n)=>t<0?n*t:t);function bT(t){const{inputs:n,backend:e}=t,{x:s,alpha:r}=n;Lt([s,r],"prelu");const o=e.data.get(s.dataId).values,i=e.data.get(r.dataId).values,[a,l]=wV(s.shape,r.shape,o,i,"float32");return e.makeTensorInfo(l,"float32",a)}const SV={kernelName:u.Prelu,backendName:"cpu",kernelFunc:bT},CT=Jn(u.Relu,t=>Math.max(0,t)),NV={kernelName:u.Relu,backendName:"cpu",kernelFunc:CT},DT=Jn(u.Relu6,t=>Math.min(Math.max(0,t),6)),AV={kernelName:u.Relu6,backendName:"cpu",kernelFunc:DT};function fu(t){return(n,e,s)=>{const r=u.util.getTypedArrayFromDType(e,n.length);for(let o=0;o<n.length;++o)r[o]=t(n[o],s);return r}}const OV=fu(t=>1/(1+Math.exp(-t))),IT=Jn(u.Sigmoid,t=>1/(1+Math.exp(-t))),RV={kernelName:u.Sigmoid,backendName:"cpu",kernelFunc:IT};function Nm(t,n,e,s,r){if("linear"===e)return Za({inputs:{x:n},backend:t});if("relu"===e)return CT({inputs:{x:n},backend:t});if("elu"===e)return ET({inputs:{x:n},backend:t});if("relu6"===e)return DT({inputs:{x:n},backend:t});if("prelu"===e)return bT({inputs:{x:n,alpha:s},backend:t});if("leakyrelu"===e)return _T({inputs:{x:n},backend:t,attrs:{alpha:r}});if("sigmoid"===e)return IT({inputs:{x:n},backend:t});throw new Error(`Activation ${e} has not been implemented for the CPU backend.`)}function wo(t){const{inputs:n,backend:e}=t,{real:s,imag:r}=n,o=e.data.get(s.dataId).values,i=e.data.get(r.dataId).values,a=e.makeTensorInfo(s.shape,"complex64");return e.data.get(a.dataId).complexTensorInfos={real:e.makeTensorInfo(s.shape,"float32",o),imag:e.makeTensorInfo(r.shape,"float32",i)},a}const MV={kernelName:u.Complex,backendName:"cpu",kernelFunc:wo};function Am(t,n,e="float32"){if("complex64"===e)return wo({inputs:{real:Am(t,n,"float32"),imag:Am(t,n,"float32")},backend:t});const s=u.util.makeZerosTypedArray(u.util.sizeFromShape(n),e);return t.makeTensorInfo(n,e,s)}function nc(t){const{inputs:n,backend:e}=t,{input:s}=n,r=e.data.get(s.dataId).complexTensorInfos.real,o=e.data.get(r.dataId).values;return e.makeTensorInfo(r.shape,r.dtype,o)}const kV={kernelName:u.Real,backendName:"cpu",kernelFunc:nc};function TT(t,n,e,s){if("int32"===s)return[n,"int32",Int32Array.from(t)];if("bool"===s){const r=u.util.toTypedArray([0],e),[o,i]=sr((a,l)=>a!==l?1:0)(n,[],t,r,"bool");return[i,"bool",o]}throw new Error(`Error in Cast: failed to cast ${e} to ${s}`)}function pu(t){const{inputs:n,backend:e,attrs:s}=t,{x:r}=n,{dtype:o}=s;if("complex64"===o){if("complex64"===r.dtype)return Za({inputs:{x:r},backend:e});const d=Am(e,r.shape,r.dtype),f=pu({inputs:{x:r},backend:e,attrs:{dtype:"float32"}}),p=wo({inputs:{real:f,imag:d},backend:e});return e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(f),p}if("complex64"===r.dtype){const d=nc({inputs:{input:r},backend:e}),f=pu({inputs:{x:d},backend:e,attrs:{dtype:o}});return e.disposeIntermediateTensorInfo(d),f}if(!u.util.hasEncodingLoss(r.dtype,o)){const d=Za({inputs:{x:r},backend:e});return{dataId:d.dataId,shape:d.shape,dtype:o}}const i=e.data.get(r.dataId).values,[a,l,c]=TT(i,r.shape,r.dtype,o);return e.makeTensorInfo(a,l,c)}const PV={kernelName:u.Cast,backendName:"cpu",kernelFunc:pu};function br(t,n,e,s){return null==e?({inputs:r,backend:o})=>{const{a:i,b:a}=r,l=o;Lt([i,a],t);const c=l.data.get(i.dataId).values,d=l.data.get(a.dataId).values,f="string"===i.dtype?u.backend_util.fromUint8ToStringArray(c):c,p="string"===i.dtype?u.backend_util.fromUint8ToStringArray(d):d,m=s||i.dtype,[y,_]=n(i.shape,a.shape,f,p,m);return l.makeTensorInfo(_,m,y)}:({inputs:r,backend:o})=>{const{a:i,b:a}=r,l=o;if("complex64"===i.dtype||"complex64"===a.dtype){const c=pu({inputs:{x:i},backend:l,attrs:{dtype:"complex64"}}),d=l.data.get(c.dataId),p=d.complexTensorInfos.imag,m=l.data.get(d.complexTensorInfos.real.dataId).values,y=l.data.get(p.dataId).values,_=pu({inputs:{x:a},backend:l,attrs:{dtype:"complex64"}}),x=l.data.get(_.dataId),C=x.complexTensorInfos.imag,F=l.data.get(x.complexTensorInfos.real.dataId).values,B=l.data.get(C.dataId).values,[Z,ce,ve]=e(i.shape,a.shape,m,y,F,B),_e=l.makeTensorInfo(ve,"float32",Z),Fe=l.makeTensorInfo(ve,"float32",ce),Le=wo({inputs:{real:_e,imag:Fe},backend:l});return l.disposeIntermediateTensorInfo(c),l.disposeIntermediateTensorInfo(_),l.disposeIntermediateTensorInfo(_e),l.disposeIntermediateTensorInfo(Fe),Le}{const c=l.data.get(i.dataId).values,d=l.data.get(a.dataId).values,f=s||i.dtype,[p,m]=n(i.shape,a.shape,c,d,f);return l.makeTensorInfo(m,f,p)}}}function qv(t){return(n,e,s,r,o,i)=>{const a=u.backend_util.assertAndGetBroadcastShape(n,e),l=u.util.sizeFromShape(a),c=a.length,d=u.util.computeStrides(a),f=u.util.getTypedArrayFromDType("float32",l),p=u.util.getTypedArrayFromDType("float32",l),m=u.backend_util.getBroadcastDims(n,a),y=u.backend_util.getBroadcastDims(e,a),_=u.backend_util.mergeRealAndImagArrays(s,r),x=u.backend_util.mergeRealAndImagArrays(o,i),D=n.length,C=u.util.computeStrides(n),F=e.length,B=u.util.computeStrides(e);if(m.length+y.length===0)for(let Z=0;Z<f.length;Z++){const ce=Z%_.length,ve=Z%x.length,_e=t(_[2*ce],_[2*ce+1],x[2*ve],x[2*ve+1]);f[Z]=_e.real,p[Z]=_e.imag}else for(let Z=0;Z<f.length;Z++){const ce=u.util.indexToLoc(Z,c,d),ve=ce.slice(-D);m.forEach(tt=>ve[tt]=0);const _e=u.util.locToIndex(ve,D,C),Fe=ce.slice(-F);y.forEach(tt=>Fe[tt]=0);const Le=u.util.locToIndex(Fe,F,B),Xe=t(_[2*_e],_[2*_e+1],x[2*Le],x[2*Le+1]);f[Z]=Xe.real,p[Z]=Xe.imag}return[f,p,a]}}const wT=sr((t,n)=>t+n),$V=qv((t,n,e,s)=>({real:t+e,imag:n+s})),vd=br(u.Add,wT,$V),FV={kernelName:u.Add,backendName:"cpu",kernelFunc:vd};function cs(t){const{inputs:n,backend:e,attrs:s}=t,{x:r}=n,{shape:o}=s,i=u.util.sizeFromShape(r.shape),a=u.util.inferFromImplicitShape(o,i),l=u.util.sizeFromShape(a);u.util.assert(i===l,()=>`The new shape (${a}) has ${l} elements and the old shape (${r.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`),e.incRef(r.dataId);const c=e.data.get(r.dataId);if(null!=c.complexTensorInfos){const f=c.complexTensorInfos.imag;c.complexTensorInfos.real.shape=a,f.shape=a}return{dataId:r.dataId,shape:a,dtype:r.dtype}}const LV={kernelName:u.Reshape,backendName:"cpu",kernelFunc:cs};function ST(t){const{inputs:n,backend:e,attrs:s}=t,{a:r,b:o}=n,{transposeA:i,transposeB:a}=s;Lt([r,o],"matMul");const l=r.shape.length,c=o.shape.length,d=i?r.shape[l-2]:r.shape[l-1],f=a?o.shape[c-1]:o.shape[c-2],p=i?r.shape[l-1]:r.shape[l-2],m=a?o.shape[c-2]:o.shape[c-1],y=r.shape.slice(0,-2),_=o.shape.slice(0,-2),x=u.util.sizeFromShape(y),D=u.util.sizeFromShape(_),F=u.broadcast_util.assertAndGetBroadcastShape(r.shape.slice(0,-2),o.shape.slice(0,-2)).concat([p,m]);u.util.assert(d===f,()=>`Error in matMul: inner shapes (${d}) and (${f}) of Tensors with shapes ${r.shape} and ${o.shape} and transposeA=${i} and transposeB=${a} must match.`);const Z=a?[D,m,f]:[D,f,m],ce=cs({inputs:{x:r},backend:e,attrs:{shape:i?[x,d,p]:[x,p,d]}}),ve=cs({inputs:{x:o},backend:e,attrs:{shape:Z}}),_e=i?ce.shape[1]:ce.shape[2],Fe=i?ce.shape[2]:ce.shape[1],Le=a?ve.shape[1]:ve.shape[2],Xe=Math.max(x,D),tt=e.data.get(ce.dataId).values,nt=e.data.get(ve.dataId).values,st=u.util.computeStrides(ce.shape),Je=u.util.computeStrides(ve.shape),[qe,lt,Me]=i?[st[0],1,st[1]]:[st[0],st[1],1],[$e,Ge,Ze]=a?[1,Je[1],Je[0]]:[Je[1],1,Je[0]],et=Fe*Le,ut=(0,u.buffer)([Xe,Fe,Le],ce.dtype),Ct=ut.values,vt=e.blockSize;for(let wt=0;wt<Xe;wt++)for(let Ot=0;Ot<Fe;Ot+=vt)for(let jt=0;jt<Le;jt+=vt)for(let Gt=0;Gt<_e;Gt+=vt){const un=Math.min(Ot+vt,Fe),On=Math.min(jt+vt,Le),es=Math.min(Gt+vt,_e);for(let fs=Ot;fs<un;fs++)for(let Es=jt;Es<On;Es++){let As=0;for(let ns=Gt;ns<es;ns++){const Ws=Math.min(wt,x-1)*qe,Ys=Math.min(wt,D-1)*Ze;As+=tt[Ws+fs*lt+ns*Me]*nt[ns*$e+Es*Ge+Ys]}Ct[wt*et+(fs*Le+Es)]+=As}}return e.disposeIntermediateTensorInfo(ce),e.disposeIntermediateTensorInfo(ve),e.makeTensorInfo(F,ut.dtype,ut.values)}const BV={kernelName:u.BatchMatMul,backendName:"cpu",kernelFunc:ST},VV={kernelName:u._FusedMatMul,backendName:"cpu",kernelFunc:function UV(t){const{inputs:n,backend:e,attrs:s}=t,{a:r,b:o,bias:i,preluActivationWeights:a}=n,{transposeA:l,transposeB:c,activation:d,leakyreluAlpha:f}=s;let p,m,y;const _=[];p=ST({inputs:{a:r,b:o},attrs:{transposeA:l,transposeB:c},backend:e}),i&&(m=vd({inputs:{a:p,b:i},backend:e}),_.push(p),p=m),d&&(y=Nm(e,p,d,a,f),_.push(p),p=y);for(const D of _)e.disposeIntermediateTensorInfo(D);return p}};function NT(t){const n=new Float32Array(t.length);for(let e=0;e<t.length;++e)n[e]=Math.abs(t[e]);return n}const WV={kernelName:u.Abs,backendName:"cpu",kernelFunc:t=>{const{x:n}=t.inputs,e=t.backend;Lt(n,"abs");let s=new Float32Array(u.util.sizeFromShape(n.shape));return s=NT(e.data.get(n.dataId).values),e.makeOutput(s,n.shape,n.dtype)}},GV=Jn(u.Acos,t=>Math.acos(t)),HV={kernelName:u.Acos,backendName:"cpu",kernelFunc:GV},KV=Jn(u.Acosh,t=>Math.acosh(t)),jV={kernelName:u.Acosh,backendName:"cpu",kernelFunc:KV},ZV={kernelName:u.AddN,backendName:"cpu",kernelFunc:function XV(t){const{inputs:n,backend:e}=t,s=n;Lt(n,"addN");const r=s.map(a=>e.data.get(a.dataId).values),o=(0,u.buffer)(s[0].shape,s[0].dtype),i=o.values;for(let a=0;a<s.length;a++){const l=r[a];for(let c=0;c<i.length;c++)i[c]+=l[c]}return e.makeTensorInfo(o.shape,o.dtype,o.values)}};function ex(t,n,e,s,r){const o=n.length,i=u.util.sizeFromShape(n),a=u.util.computeStrides(n),l=u.util.computeStrides(r),c=u.util.getTypedArrayFromDType(e,u.util.sizeFromShape(r));for(let d=0;d<i;++d){const f=u.util.indexToLoc(d,o,a),p=new Array(f.length);for(let y=0;y<p.length;y++)p[y]=f[s[y]];c[u.util.locToIndex(p,o,l)]=t[d]}return c}function go(t){const{inputs:n,attrs:e,backend:s}=t,{x:r}=n,{perm:o}=e;Lt(r,"transpose");const a=new Array(r.shape.length);for(let f=0;f<a.length;f++)a[f]=r.shape[o[f]];const c=ex(s.data.get(r.dataId).values,r.shape,r.dtype,o,a);return{dataId:s.write(c,a,r.dtype),shape:a,dtype:r.dtype}}const YV={kernelName:u.Transpose,backendName:"cpu",kernelFunc:go},JV={kernelName:u.All,backendName:"cpu",kernelFunc:function QV(t){const{inputs:n,backend:e,attrs:s}=t,{x:r}=n,{axis:o,keepDims:i}=s;Lt(r,"all");const a=u.util.parseAxisParam(o,r.shape);let l=a;const c=u.backend_util.getAxesPermutation(l,r.shape.length);let d=r;null!=c&&(d=go({inputs:{x:r},backend:e,attrs:{perm:c}}),l=u.backend_util.getInnerMostAxes(l.length,r.shape.length)),u.backend_util.assertAxesAreInnerMostDims("all",l,d.shape.length);const[f,p]=u.backend_util.computeOutAndReduceShapes(d.shape,l),m=u.util.sizeFromShape(p),y=u.util.makeZerosTypedArray(u.util.sizeFromShape(f),d.dtype),_=e.data.get(d.dataId).values;for(let D=0;D<y.length;++D){const C=D*m;let F=_[C];for(let B=0;B<m;++B){const Z=_[C+B];F=F&&Z}y[D]=F}null!=c&&e.disposeIntermediateTensorInfo(d);const x=e.makeTensorInfo(f,d.dtype,y);if(i){const C=cs({inputs:{x},backend:e,attrs:{shape:u.backend_util.expandShapeToKeepDim(f,a)}});return e.disposeIntermediateTensorInfo(x),C}return x}},ez={kernelName:u.Any,backendName:"cpu",kernelFunc:function qV(t){const{inputs:n,backend:e,attrs:s}=t,{x:r}=n,{axis:o,keepDims:i}=s;Lt(r,"any");const a=u.util.parseAxisParam(o,r.shape);let l=a;const c=u.backend_util.getAxesPermutation(l,r.shape.length);let d=r;null!=c&&(d=go({inputs:{x:r},backend:e,attrs:{perm:c}}),l=u.backend_util.getInnerMostAxes(l.length,r.shape.length)),u.backend_util.assertAxesAreInnerMostDims("any",l,d.shape.length);const[f,p]=u.backend_util.computeOutAndReduceShapes(d.shape,l),m=u.util.sizeFromShape(p),y=u.util.makeZerosTypedArray(u.util.sizeFromShape(f),d.dtype),_=e.data.get(d.dataId).values;for(let D=0;D<y.length;++D){const C=D*m;let F=_[C];for(let B=0;B<m;++B){const Z=_[C+B];F=F||Z}y[D]=F}null!=c&&e.disposeIntermediateTensorInfo(d);const x=e.makeTensorInfo(f,d.dtype,y);if(i){const C=cs({inputs:{x},backend:e,attrs:{shape:u.backend_util.expandShapeToKeepDim(f,a)}});return e.disposeIntermediateTensorInfo(x),C}return x}},nz={kernelName:u.ArgMax,backendName:"cpu",kernelFunc:function tz(t){const{inputs:n,backend:e,attrs:s}=t,{x:r}=n,{axis:o}=s;Lt(r,"argMax");let i=u.util.parseAxisParam(o,r.shape);const a=u.backend_util.getAxesPermutation(i,r.shape.length);let l=r;const c=[];null!=a&&(l=go({inputs:{x:r},backend:e,attrs:{perm:a}}),c.push(l),i=u.backend_util.getInnerMostAxes(i.length,l.shape.length)),i=[i[0]],u.backend_util.assertAxesAreInnerMostDims("argMax",i,l.shape.length);const[d,f]=u.backend_util.computeOutAndReduceShapes(l.shape,i),p=u.util.sizeFromShape(d),m=u.util.makeZerosTypedArray(p,"int32"),y=u.util.sizeFromShape(f),_=e.data.get(l.dataId).values;for(let x=0;x<m.length;++x){const D=x*y;let C=_[D],F=0;for(let B=0;B<y;++B){const Z=_[D+B];Z>C&&(C=Z,F=B)}m[x]=F}return c.forEach(x=>e.disposeIntermediateTensorInfo(x)),e.makeTensorInfo(d,"int32",m)}},rz={kernelName:u.ArgMin,backendName:"cpu",kernelFunc:function sz(t){const{inputs:n,backend:e,attrs:s}=t,{x:r}=n,{axis:o}=s;Lt(r,"argMin");let i=u.util.parseAxisParam(o,r.shape);const a=u.backend_util.getAxesPermutation(i,r.shape.length);let l=r;const c=[];null!=a&&(l=go({inputs:{x:r},backend:e,attrs:{perm:a}}),c.push(l),i=u.backend_util.getInnerMostAxes(i.length,l.shape.length)),i=[i[0]],u.backend_util.assertAxesAreInnerMostDims("argMin",i,l.shape.length);const[d,f]=u.backend_util.computeOutAndReduceShapes(l.shape,i),p=u.util.sizeFromShape(d),m=u.util.makeZerosTypedArray(p,"int32"),y=u.util.sizeFromShape(f),_=e.data.get(l.dataId).values;for(let x=0;x<m.length;++x){const D=x*y;let C=_[D],F=0;for(let B=0;B<y;++B){const Z=_[D+B];Z<C&&(C=Z,F=B)}m[x]=F}return c.forEach(x=>e.disposeIntermediateTensorInfo(x)),e.makeTensorInfo(d,"int32",m)}},oz=Jn(u.Asin,t=>Math.asin(t)),iz={kernelName:u.Asin,backendName:"cpu",kernelFunc:oz},az=Jn(u.Asinh,t=>Math.asinh(t)),lz={kernelName:u.Asinh,backendName:"cpu",kernelFunc:az},uz=Jn(u.Atan,t=>Math.atan(t)),cz={kernelName:u.Atan,backendName:"cpu",kernelFunc:uz},dz=sr((t,n)=>Math.atan2(t,n)),hz=br(u.Atan2,dz),fz={kernelName:u.Atan2,backendName:"cpu",kernelFunc:hz},pz=Jn(u.Atanh,t=>Math.atanh(t)),mz={kernelName:u.Atanh,backendName:"cpu",kernelFunc:pz};function tx(t,n,e,s,r,o){const i=r.strideHeight,a=r.strideWidth,l=r.dilationHeight,c=r.dilationWidth,d=r.effectiveFilterHeight,f=r.effectiveFilterWidth,p=r.padInfo.top,m=r.padInfo.left,y="max"===o?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,_=(0,u.buffer)(r.outShape,e),x=_.values,D=r.outShape[1]*r.outShape[2]*r.outShape[3],C=r.outShape[2]*r.outShape[3],F=r.outShape[3];for(let B=0;B<r.batchSize;++B){const Z=B*D,ce=B*s[0];for(let ve=0;ve<r.inChannels;++ve)for(let _e=0;_e<r.outHeight;++_e){const Fe=_e*i-p,Le=Math.max(0,Fe),Xe=Math.min(r.inHeight,d+Fe),tt=Z+_e*C;for(let nt=0;nt<r.outWidth;++nt){const st=nt*a-m,Je=Math.max(0,st),qe=Math.min(r.inWidth,f+st);let lt=y,Me=0,$e=0;for(let Ze=Le;Ze<Xe;Ze+=l){const et=ce+Ze*s[1];for(let ut=Je;ut<qe;ut+=c){const vt=t[et+ut*s[2]+ve];"max"===o&&vt>lt?lt=vt:"avg"===o&&(Me+=vt,$e++)}if(isNaN(lt))break}x[tt+nt*F+ve]="avg"===o?Me/$e:lt}}}return _}function AT(t,n,e,s,r=!1,o=!1){const i=(0,u.buffer)(s.outShape,"int32"),a=s.strideHeight,l=s.strideWidth,c=s.dilationHeight,d=s.dilationWidth,f=s.effectiveFilterHeight,p=s.effectiveFilterWidth,m=s.padInfo.top,y=s.padInfo.left,_=(0,u.buffer)(n,e,t);for(let x=0;x<s.batchSize;++x)for(let D=0;D<s.inChannels;++D)for(let C=0;C<s.outHeight;++C){const F=C*a-m;let B=F;for(;B<0;)B+=c;const Z=Math.min(s.inHeight,f+F);for(let ce=0;ce<s.outWidth;++ce){const ve=ce*l-y;let _e=ve;for(;_e<0;)_e+=d;const Fe=Math.min(s.inWidth,p+ve);let Le=Number.NEGATIVE_INFINITY,Xe=-1;for(let tt=B;tt<Z;tt+=c){const nt=tt-F;for(let st=_e;st<Fe;st+=d){const Je=st-ve,qe=_.get(x,tt,st,D);qe>Le&&(Le=qe,Xe=r?o?((x*s.inHeight+tt)*s.inWidth+st)*s.inChannels+D:(tt*s.inWidth+st)*s.inChannels+D:nt*p+Je)}}i.set(Xe,x,C,ce,D)}}return i}function OT(t,n,e,s,r,o){const i=r.strideDepth,a=r.strideHeight,l=r.strideWidth,c=r.dilationDepth,d=r.dilationHeight,f=r.dilationWidth,p=r.effectiveFilterDepth,m=r.effectiveFilterHeight,y=r.effectiveFilterWidth,_=r.padInfo.front,x=r.padInfo.top,D=r.padInfo.left,C="max"===o?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,F=(0,u.buffer)(r.outShape,e),B=F.values,Z=r.outShape[1]*r.outShape[2]*r.outShape[3]*r.outShape[4],ce=r.outShape[2]*r.outShape[3]*r.outShape[4],ve=r.outShape[3]*r.outShape[4],_e=r.outShape[4];for(let Fe=0;Fe<r.batchSize;++Fe){const Le=Fe*Z,Xe=Fe*s[0];for(let tt=0;tt<r.inChannels;++tt)for(let nt=0;nt<r.outDepth;++nt){const st=nt*i-_;let Je=st;for(;Je<0;)Je+=c;const qe=Math.min(r.inDepth,p+st),lt=Le+nt*ce;for(let Me=0;Me<r.outHeight;++Me){const $e=Me*a-x;let Ge=$e;for(;Ge<0;)Ge+=d;const Ze=Math.min(r.inHeight,m+$e),et=lt+Me*ve;for(let ut=0;ut<r.outWidth;++ut){const Ct=ut*l-D;let vt=Ct;for(;vt<0;)vt+=f;const wt=Math.min(r.inWidth,y+Ct),Ot=et+ut*_e;let jt=C,Gt=0,un=0;for(let es=Je;es<qe;es+=c){const fs=Xe+es*s[1];for(let Es=Ge;Es<Ze;Es+=d){const As=fs+Es*s[2];for(let ns=vt;ns<wt;ns+=f){const Ys=t[As+ns*s[3]+tt];if("max"===o&&Ys>jt?jt=Ys:"avg"===o&&(Gt+=Ys,un++),isNaN(jt))break}if(isNaN(jt))break}if(isNaN(jt))break}B[Ot+tt]="avg"===o?Gt/un:jt}}}}return F}const vz={kernelName:u.AvgPool,backendName:"cpu",kernelFunc:function yz(t){const{inputs:n,backend:e,attrs:s}=t,{x:r}=n;Lt(r,"avgPool");const{filterSize:o,strides:i,pad:a,dimRoundingMode:l}=s;u.util.assert(u.backend_util.eitherStridesOrDilationsAreOne(i,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`);const d=u.backend_util.computePool2DInfo(r.shape,o,i,1,a,l);let f;if(1===d.filterWidth&&1===d.filterHeight&&u.util.arraysEqual(d.inShape,d.outShape))f=Za({inputs:{x:r},backend:e});else{const p=e.data.get(r.dataId).values,m=u.util.computeStrides(r.shape),y=tx(p,0,r.dtype,m,d,"avg");f=e.makeTensorInfo(d.outShape,r.dtype,y.values)}return f}},Ez={kernelName:u.AvgPool3D,backendName:"cpu",kernelFunc:function xz(t){const{inputs:n,backend:e,attrs:s}=t,{x:r}=n,{filterSize:o,strides:i,pad:a,dimRoundingMode:l,dataFormat:c}=s;Lt(r,"avgPool3d");const d=u.backend_util.computePool3DInfo(r.shape,o,i,1,a,l,c),p=OT(e.data.get(r.dataId).values,0,r.dtype,u.util.computeStrides(r.shape),d,"avg");return e.makeTensorInfo(p.shape,"float32",p.values)}},bz={kernelName:u.AvgPool3DGrad,backendName:"cpu",kernelFunc:function _z(t){const{inputs:n,backend:e,attrs:s}=t,{dy:r,input:o}=n,{filterSize:i,strides:a,pad:l,dimRoundingMode:c}=s;Lt([r,o],"avgPool3DGrad");const d=u.backend_util.computePool3DInfo(o.shape,i,a,1,l,c),f=d.strideDepth,p=d.strideHeight,m=d.strideWidth,y=d.filterDepth,_=d.filterHeight,x=d.filterWidth,D=d.dilationDepth,C=d.dilationHeight,F=d.dilationWidth,B=d.effectiveFilterDepth,Z=d.effectiveFilterHeight,ce=d.effectiveFilterWidth,ve=B-1-d.padInfo.front,_e=ce-1-d.padInfo.left,Fe=Z-1-d.padInfo.top,Le=(0,u.buffer)(o.shape,"float32"),Xe=1/(y*_*x),tt=e.bufferSync(r);for(let nt=0;nt<d.batchSize;++nt)for(let st=0;st<d.inChannels;++st)for(let Je=0;Je<d.inDepth;++Je)for(let qe=0;qe<d.inHeight;++qe)for(let lt=0;lt<d.inWidth;++lt){const Me=Je-ve,$e=qe-Fe,Ge=lt-_e;let Ze=0;for(let et=0;et<B;et+=D){const ut=(Me+et)/f;if(!(ut<0||ut>=d.outDepth||Math.floor(ut)!==ut))for(let Ct=0;Ct<Z;Ct+=C){const vt=($e+Ct)/p;if(!(vt<0||vt>=d.outHeight||Math.floor(vt)!==vt))for(let wt=0;wt<ce;wt+=F){const Ot=(Ge+wt)/m;Ot<0||Ot>=d.outWidth||Math.floor(Ot)!==Ot||(Ze+=tt.get(nt,ut,vt,Ot,st))}}}Le.set(Ze*Xe,nt,Je,qe,lt,st)}return e.makeTensorInfo(Le.shape,Le.dtype,Le.values)}},Dz={kernelName:u.AvgPoolGrad,backendName:"cpu",kernelFunc:function Cz(t){const{inputs:n,backend:e,attrs:s}=t,{dy:r,input:o}=n,i=o;Lt([r,o],"avgPoolGrad");const{filterSize:a,strides:l,pad:c}=s,d=u.backend_util.computePool2DInfo(i.shape,a,l,1,c),f=d.strideHeight,p=d.strideWidth,m=d.filterHeight,y=d.filterWidth,_=d.dilationHeight,x=d.dilationWidth,D=d.effectiveFilterHeight,C=d.effectiveFilterWidth,F=C-1-d.padInfo.left,B=D-1-d.padInfo.top,Z=(0,u.buffer)(i.shape,"float32"),ce=1/(m*y),ve=e.data.get(r.dataId).values,_e=(0,u.buffer)(r.shape,"float32",ve);for(let Fe=0;Fe<d.batchSize;++Fe)for(let Le=0;Le<d.inChannels;++Le)for(let Xe=0;Xe<d.inHeight;++Xe)for(let tt=0;tt<d.inWidth;++tt){const nt=Xe-B,st=tt-F;let Je=0;for(let qe=0;qe<D;qe+=_){const lt=(nt+qe)/f;if(!(lt<0||lt>=d.outHeight||Math.floor(lt)!==lt))for(let Me=0;Me<C;Me+=x){const $e=(st+Me)/p;$e<0||$e>=d.outWidth||Math.floor($e)!==$e||(Je+=_e.get(Fe,lt,$e,Le))}}Z.set(Je*ce,Fe,Xe,tt,Le)}return e.makeTensorInfo(Z.shape,Z.dtype,Z.values)}},Tz={kernelName:u.FusedBatchNorm,backendName:"cpu",kernelFunc:function Iz(t){const{inputs:n,backend:e,attrs:s}=t,{x:r,scale:o,offset:i,mean:a,variance:l}=n;u.util.assert(a.shape.length===l.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),u.util.assert(null==i||a.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),u.util.assert(null==o||a.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),Lt([r,a,l,o,i],"batchNorm");let{varianceEpsilon:c}=s;null==c&&(c=.001);const d=e.data.get(r.dataId).values,f=e.data.get(a.dataId).values,p=e.data.get(l.dataId).values,m=o?e.data.get(o.dataId).values:new Float32Array([1]),y=i?e.data.get(i.dataId).values:new Float32Array([0]),_=new Float32Array(d.length),x=y.length,D=m.length,C=p.length,F=f.length;let B=0,Z=0,ce=0,ve=0;for(let _e=0;_e<d.length;++_e)_[_e]=y[B++]+(d[_e]-f[Z++])*m[ce++]/Math.sqrt(p[ve++]+c),B>=x&&(B=0),Z>=F&&(Z=0),ce>=D&&(ce=0),ve>=C&&(ve=0);return e.makeTensorInfo(r.shape,r.dtype,_)}};function RT(t,n,e,s,r){const o=u.slice_util.isSliceContinous(s,n,e),i=u.util.sizeFromShape(e),a=u.util.computeStrides(s);if(o){const f=u.slice_util.computeFlatOffset(n,a);return"string"===r?t.slice(f,f+i):t.subarray(f,f+i)}const l="string"===r?u.backend_util.fromUint8ToStringArray(t):t,c=(0,u.buffer)(s,r,l),d=(0,u.buffer)(e,r);for(let f=0;f<d.size;++f){const p=d.indexToLoc(f),m=p.map((y,_)=>y+n[_]);d.set(c.get(...m),...p)}return"string"===r?u.backend_util.fromStringArrayToUint8(d.values):d.values}function sc(t){const{inputs:n,backend:e,attrs:s}=t,{x:r}=n,{begin:o,size:i}=s;Lt(r,"slice");const[a,l]=u.slice_util.parseSliceParams(r,o,i);u.slice_util.assertParamsValid(r,a,l);const d=RT(e.data.get(r.dataId).values,a,l,r.shape,r.dtype);return e.makeTensorInfo(l,r.dtype,d)}const wz={kernelName:u.Slice,backendName:"cpu",kernelFunc:sc},Nz={kernelName:u.BatchToSpaceND,backendName:"cpu",kernelFunc:function Sz(t){const{inputs:n,backend:e,attrs:s}=t,{x:r}=n,{blockShape:o,crops:i}=s;Lt([r],"batchToSpaceND");const a=o.reduce((D,C)=>D*C),l=u.backend_util.getReshaped(r.shape,o,a),c=u.backend_util.getPermuted(l.length,o.length),d=u.backend_util.getReshapedPermuted(r.shape,o,a),f=u.backend_util.getSliceBeginCoords(i,o.length),p=u.backend_util.getSliceSize(d,i,o.length),m=cs({inputs:{x:r},backend:e,attrs:{shape:l}}),y=go({inputs:{x:m},backend:e,attrs:{perm:c}}),_=cs({inputs:{x:y},backend:e,attrs:{shape:d}}),x=sc({inputs:{x:_},backend:e,attrs:{begin:f,size:p}});return e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(y),e.disposeIntermediateTensorInfo(_),x}};function nx(t,n,e,s,r){const o=u.util.sizeFromShape(s),i=u.util.makeZerosTypedArray(r,e);for(let a=0;a<t.length;a++){const l=t[a];if(l<0)throw new Error("Input x must be non-negative!");l>=r||(i[l]+=o>0?n[a]:1)}return i}function MT(t,n,e,s=!1){const r=t.shape[0],o=t.shape[1],i=(0,u.buffer)([r,e],n.dtype);for(let a=0;a<r;a++)for(let l=0;l<o;l++){const c=t.get(a,l);if(c<0)throw new Error("Input x must be non-negative!");c>=e||i.set(s?1:n.size>0?i.get(a,c)+n.get(a,l):i.get(a,c)+1,a,c)}return i}const Oz={kernelName:u.Bincount,backendName:"cpu",kernelFunc:function Az(t){const{inputs:n,backend:e,attrs:s}=t,{x:r,weights:o}=n,{size:i}=s,c=nx(e.data.get(r.dataId).values,e.data.get(o.dataId).values,o.dtype,o.shape,i);return e.makeTensorInfo([i],o.dtype,c)}},Mz={kernelName:u.BroadcastArgs,backendName:"cpu",kernelFunc:function Rz(t){const{inputs:n,backend:e}=t,{s0:s,s1:r}=n,o=e.data.get(s.dataId).values,i=e.data.get(r.dataId).values,a=u.backend_util.assertAndGetBroadcastShape(Array.from(o),Array.from(i));return e.makeTensorInfo([a.length],"int32",Int32Array.from(a))}},kT=fu(t=>Math.ceil(t)),kz=yd(u.Ceil,kT),Pz={kernelName:u.Ceil,backendName:"cpu",kernelFunc:kz},$z=Jn(u.ClipByValue,(t,n)=>t>n.clipValueMax?n.clipValueMax:t<n.clipValueMin?n.clipValueMin:t),Fz={kernelName:u.ClipByValue,backendName:"cpu",kernelFunc:$z},Bz={kernelName:u.ComplexAbs,backendName:"cpu",kernelFunc:t=>{const{x:n}=t.inputs,e=t.backend,s=new Float32Array(u.util.sizeFromShape(n.shape)),r=e.data.get(n.dataId),i=r.complexTensorInfos.imag,a=e.data.get(r.complexTensorInfos.real.dataId).values,l=e.data.get(i.dataId).values;for(let c=0;c<a.length;c++)s[c]=Math.hypot(a[c],l[c]);return e.makeOutput(s,n.shape,"float32")}};function PT(t,n,e,s){const r=u.util.getArrayFromDType(e,u.util.sizeFromShape(n));if(s&&"string"!==e){let o=0;t.forEach(i=>{const a=u.util.sizeFromShape(i.shape);r.set(i.vals,o),o+=a})}else{let o=0;t.forEach(i=>{const a="string"===e?u.backend_util.fromUint8ToStringArray(i.vals):i.vals;let l=0;for(let c=0;c<i.shape[0];++c){const d=c*n[1]+o;for(let f=0;f<i.shape[1];++f)r[d+f]=a[l++]}o+=i.shape[1]})}return r}function xd(t){const{inputs:n,backend:e}=t,{input:s}=n,r=e.data.get(s.dataId).complexTensorInfos.imag,o=e.data.get(r.dataId).values;return e.makeTensorInfo(r.shape,r.dtype,o)}const Uz={kernelName:u.Imag,backendName:"cpu",kernelFunc:xd};function Ed(t){const{inputs:n,backend:e,attrs:s}=t,{axis:r}=s,o=u.util.parseAxisParam(r,n[0].shape)[0],i=n.map(_=>_.shape);u.backend_util.assertParamsConsistent(i,o);let a=u.backend_util.computeOutShape(n.map(_=>_.shape),o);if(0===u.util.sizeFromShape(a))return e.makeTensorInfo(a,n[0].dtype,[]);const l=n.filter(_=>u.util.sizeFromShape(_.shape)>0);if(1===l.length)return Za({inputs:{x:l[0]},backend:e});if("complex64"===l[0].dtype){const _=l.map(B=>nc({inputs:{input:B},backend:e})),x=l.map(B=>xd({inputs:{input:B},backend:e})),D=Ed({inputs:_,backend:e,attrs:{axis:o}}),C=Ed({inputs:x,backend:e,attrs:{axis:o}}),F=wo({inputs:{real:D,imag:C},backend:e});return _.forEach(B=>e.disposeIntermediateTensorInfo(B)),x.forEach(B=>e.disposeIntermediateTensorInfo(B)),e.disposeIntermediateTensorInfo(D),e.disposeIntermediateTensorInfo(C),F}const c=l.map(_=>{const x=u.util.sizeFromShape(_.shape.slice(o));return cs({inputs:{x:_},backend:e,attrs:{shape:[-1,x]}})}),d=c.map(_=>({vals:e.data.get(_.dataId).values,shape:_.shape}));a=u.backend_util.computeOutShape(c.map(_=>_.shape),1);const p=PT(d,a,n[0].dtype,1===c[0].shape[0]),m=u.backend_util.computeOutShape(l.map(_=>_.shape),o),y=e.makeTensorInfo(m,n[0].dtype,p);return c.forEach(_=>e.disposeIntermediateTensorInfo(_)),y}const Vz={kernelName:u.Concat,backendName:"cpu",kernelFunc:Ed};function $T(t){const{inputs:n,backend:e,attrs:s}=t,{x:r,filter:o}=n,{strides:i,pad:a,dataFormat:l,dilations:c,dimRoundingMode:d}=s;Lt([r,o],"conv2d");const f=u.backend_util.convertConv2DDataFormat(l),p=u.backend_util.computeConv2DInfo(r.shape,o.shape,i,c,a,d,!1,f),m=p.filterHeight,y=p.filterWidth,_=p.dilationHeight,x=p.dilationWidth,D=p.padInfo.left,C=p.padInfo.top,F="channelsLast"===p.dataFormat,B=new u.TensorBuffer(p.outShape,r.dtype),Z=u.util.computeStrides(r.shape),ce=u.util.computeStrides(o.shape),ve=Z[0],_e=F?Z[1]:Z[2],Fe=F?Z[2]:1,Le=F?1:Z[1],Xe=B.strides[0],tt=F?B.strides[1]:B.strides[2],nt=F?B.strides[2]:1,st=F?1:B.strides[1],Je=e.data.get(r.dataId).values,qe=e.data.get(o.dataId).values,lt=B.values;for(let Me=0;Me<p.batchSize;++Me){const $e=Me*ve,Ge=Me*Xe;for(let Ze=0;Ze<p.outHeight;++Ze){const et=Ge+Ze*tt,ut=Ze*p.strideHeight-C;for(let Ct=0;Ct<m;++Ct){const vt=ut+Ct*_;if(vt<0||vt>=p.inHeight)continue;const wt=Ct*ce[0],Ot=$e+vt*_e;for(let jt=0;jt<p.outWidth;++jt){const Gt=et+jt*nt,un=jt*p.strideWidth-D;for(let On=0;On<y;++On){const es=un+On*x;if(es<0||es>=p.inWidth)continue;const Es=Ot+es*Fe;let As=wt+On*ce[1];for(let ns=0;ns<p.inChannels;++ns){const Ws=Je[Es+ns*Le];for(let Ys=0;Ys<p.outChannels;++Ys)lt[Gt+Ys*st]+=Ws*qe[As+Ys];As+=p.outChannels}}}}}}return e.makeTensorInfo(B.shape,B.dtype,lt)}const zz={kernelName:u.Conv2D,backendName:"cpu",kernelFunc:$T},Gz={kernelName:u.Conv2DBackpropFilter,backendName:"cpu",kernelFunc:function Wz(t){const{inputs:n,backend:e,attrs:s}=t,{x:r,dy:o}=n,{strides:i,pad:a,dataFormat:l,dimRoundingMode:c,filterShape:d}=s;Lt([r,o],"conv2dBackpropFilter");const f=u.backend_util.convertConv2DDataFormat(l),p=u.backend_util.computeConv2DInfo(r.shape,d,i,1,a,c,!1,f),{strideHeight:m,strideWidth:y,filterHeight:_,filterWidth:x}=p,D="channelsLast"===p.dataFormat,C=new u.TensorBuffer(p.filterShape,"float32"),F=p.padInfo.left,B=p.padInfo.top,Z=e.data.get(r.dataId).values,ce=e.data.get(o.dataId).values,ve=new u.TensorBuffer(r.shape,r.dtype,Z),_e=new u.TensorBuffer(o.shape,o.dtype,ce);for(let Fe=0;Fe<_;++Fe){const Le=Math.max(0,Math.ceil((B-Fe)/m)),Xe=Math.min(p.outHeight,(p.inHeight+B-Fe)/m);for(let tt=0;tt<x;++tt){const nt=Math.max(0,Math.ceil((F-tt)/y)),st=Math.min(p.outWidth,(p.inWidth+F-tt)/y);for(let Je=0;Je<p.inChannels;++Je)for(let qe=0;qe<p.outChannels;++qe){let lt=0;for(let Me=0;Me<p.batchSize;++Me)for(let $e=Le;$e<Xe;++$e){const Ge=Fe+$e*m-B;for(let Ze=nt;Ze<st;++Ze){const et=tt+Ze*y-F;lt+=D?ve.get(Me,Ge,et,Je)*_e.get(Me,$e,Ze,qe):ve.get(Me,Je,Ge,et)*_e.get(Me,qe,$e,Ze)}}C.set(lt,Fe,tt,Je,qe)}}}return e.makeTensorInfo(C.shape,C.dtype,C.values)}},Kz={kernelName:u.Conv2DBackpropInput,backendName:"cpu",kernelFunc:function Hz(t){const{inputs:n,backend:e,attrs:s}=t,{dy:r,filter:o}=n,{inputShape:i,strides:a,pad:l,dataFormat:c,dimRoundingMode:d}=s;Lt([r,o],"conv2dBackpropInput");const f=u.util.computeStrides(o.shape),p=u.util.computeStrides(r.shape);let m=u.backend_util.convertConv2DDataFormat(c);const y=u.backend_util.computeConv2DInfo(i,o.shape,a,1,l,d,!1,m),_=new u.TensorBuffer(y.inShape,"float32"),x=_.values,D=e.data.get(r.dataId).values,C=e.data.get(o.dataId).values,[F,B,Z]=f,{batchSize:ce,filterHeight:ve,filterWidth:_e,inChannels:Fe,inHeight:Le,inWidth:Xe,outChannels:tt,outHeight:nt,outWidth:st,strideHeight:Je,strideWidth:qe}=y;m=y.dataFormat;const lt=ve-1-y.padInfo.top,Me=_e-1-y.padInfo.left,$e="channelsLast"===m,Ge=_.strides[0],Ze=$e?_.strides[1]:_.strides[2],et=$e?_.strides[2]:1,ut=$e?1:_.strides[1],Ct=p[0],vt=$e?p[1]:p[2],wt=$e?p[2]:1,Ot=$e?1:p[1];for(let jt=0;jt<ce;++jt)for(let Gt=0;Gt<Fe;++Gt)for(let un=0;un<Le;++un){const On=un-lt,es=Math.max(0,Math.ceil(On/Je)),fs=Math.min(nt,(ve+On)/Je);for(let Es=0;Es<Xe;++Es){const As=Es-Me,ns=Math.max(0,Math.ceil(As/qe)),Ws=Math.min(st,(_e+As)/qe);let Ys=0;for(let Or=es;Or<fs;++Or){const Su=Or*Je-On;for(let Xo=ns;Xo<Ws;++Xo){const ua=Ct*jt+vt*Or+wt*Xo,Ul=F*(ve-1-Su)+B*(_e-1-(Xo*qe-As))+Z*Gt;for(let Nu=0;Nu<tt;++Nu)Ys+=D[ua+Ot*Nu]*C[Ul+Nu]}}x[Ge*jt+Ze*un+et*Es+ut*Gt]=Ys}}return e.makeTensorInfo(_.shape,_.dtype,_.values)}},Xz={kernelName:u.Conv3D,backendName:"cpu",kernelFunc:function jz(t){const{inputs:n,backend:e,attrs:s}=t,{x:r,filter:o}=n,{strides:i,pad:a,dilations:l}=s;Lt([r,o],"conv3d");const c=u.backend_util.computeConv3DInfo(r.shape,o.shape,i,l,a),{filterDepth:d,filterHeight:f,filterWidth:p,dilationDepth:m,dilationHeight:y,dilationWidth:_,padInfo:x}=c,D=x.front,C=x.left,F=x.top,B=new u.TensorBuffer(c.outShape,r.dtype),Z=e.data.get(r.dataId).values,ce=e.data.get(o.dataId).values,ve=B.values,_e=u.util.computeStrides(r.shape),Fe=u.util.computeStrides(o.shape);for(let Le=0;Le<c.batchSize;++Le){const Xe=Le*_e[0],tt=Le*B.strides[0];for(let nt=0;nt<c.outDepth;++nt){const st=tt+nt*B.strides[1],Je=nt*c.strideDepth-D;for(let qe=0;qe<d;++qe){const lt=Je+qe*m;if(lt<0||lt>=c.inDepth)continue;const Me=qe*Fe[0],$e=Xe+lt*_e[1];for(let Ge=0;Ge<c.outHeight;++Ge){const Ze=st+Ge*B.strides[2],et=Ge*c.strideHeight-F;for(let ut=0;ut<f;++ut){const Ct=et+ut*y;if(Ct<0||Ct>=c.inHeight)continue;const vt=Me+ut*Fe[1],wt=$e+Ct*_e[2];for(let Ot=0;Ot<c.outWidth;++Ot){const jt=Ze+Ot*c.outChannels,Gt=Ot*c.strideWidth-C;for(let un=0;un<p;++un){const On=Gt+un*_;if(On<0||On>=c.inWidth)continue;const fs=wt+On*c.inChannels;let Es=vt+un*Fe[2];for(let As=0;As<c.inChannels;++As){const ns=Z[fs+As];for(let Ws=0;Ws<c.outChannels;++Ws)ve[jt+Ws]+=ns*ce[Es+Ws];Es+=c.outChannels}}}}}}}}return e.makeTensorInfo(B.shape,B.dtype,B.values)}},Yz={kernelName:u.Conv3DBackpropFilterV2,backendName:"cpu",kernelFunc:function Zz(t){const{inputs:n,backend:e,attrs:s}=t,{x:r,dy:o}=n,{strides:i,pad:a,filterShape:l}=s;Lt([r,o],"conv3dBackpropFilterV2");const c=u.util.computeStrides(r.shape),d=u.util.computeStrides(o.shape),f=u.backend_util.computeConv3DInfo(r.shape,l,i,1,a),p=f.strideDepth,m=f.strideHeight,y=f.strideWidth,_=f.filterDepth,x=f.filterHeight,D=f.filterWidth,C=new u.TensorBuffer(f.filterShape,"float32"),F=C.values,[B,Z,ce,ve]=C.strides,_e=e.data.get(o.dataId).values,[Fe,Le,Xe,tt]=d,nt=e.data.get(r.dataId).values,[st,Je,qe,lt]=c,Me=f.padInfo.front,$e=f.padInfo.left,Ge=f.padInfo.top;for(let Ze=0;Ze<_;++Ze){const et=Math.max(0,Math.ceil((Me-Ze)/p)),ut=Math.min(f.outDepth,(f.inDepth+Me-Ze)/p),Ct=Ze*B;for(let vt=0;vt<x;++vt){const wt=Math.max(0,Math.ceil((Ge-vt)/m)),Ot=Math.min(f.outHeight,(f.inHeight+Ge-vt)/m),jt=vt*Z+Ct;for(let Gt=0;Gt<D;++Gt){const un=Math.max(0,Math.ceil(($e-Gt)/y)),On=Math.min(f.outWidth,(f.inWidth+$e-Gt)/y),es=Gt*ce+jt;for(let fs=0;fs<f.inChannels;++fs){const Es=fs*ve+es;for(let As=0;As<f.outChannels;++As){let ns=0;for(let Ws=0;Ws<f.batchSize;++Ws){const Ys=Ws*st,Bl=Ws*Fe;for(let Or=et;Or<ut;++Or){const Xo=(Ze+Or*p-Me)*Je+Ys,yc=Or*Le+Bl;for(let ua=wt;ua<Ot;++ua){const Nu=(vt+ua*m-Ge)*qe+Xo,Au=ua*Xe+yc;for(let Ou=un;Ou<On;++Ou)ns+=nt[(Gt+Ou*y-$e)*lt+Nu+fs]*_e[Ou*tt+Au+As]}}}F[Es+As]=ns}}}}}return e.makeTensorInfo(C.shape,C.dtype,C.values)}},Jz={kernelName:u.Conv3DBackpropInputV2,backendName:"cpu",kernelFunc:function Qz(t){const{inputs:n,backend:e,attrs:s}=t,{dy:r,filter:o}=n,{pad:i,strides:a,inputShape:l}=s;Lt([r],"conv3dBackpropInputV2");const c=u.util.computeStrides(r.shape),d=u.util.computeStrides(o.shape),f=u.backend_util.computeConv3DInfo(l,o.shape,a,1,i),p=new u.TensorBuffer(f.inShape,"float32"),m=p.values,[y,_,x,D]=p.strides,C=e.data.get(r.dataId).values,[F,B,Z,ce]=c,ve=e.data.get(o.dataId).values,[_e,Fe,Le,Xe]=d,{batchSize:tt,filterDepth:nt,filterHeight:st,filterWidth:Je,inChannels:qe,inDepth:lt,inHeight:Me,inWidth:$e,outChannels:Ge,outDepth:Ze,outHeight:et,outWidth:ut,strideDepth:Ct,strideHeight:vt,strideWidth:wt}=f,Ot=nt-1-f.padInfo.front,jt=st-1-f.padInfo.top,Gt=Je-1-f.padInfo.left;for(let un=0;un<tt;++un)for(let On=0;On<qe;++On)for(let es=0;es<lt;++es){const fs=es-Ot,Es=Math.max(0,Math.ceil(fs/Ct)),As=Math.min(Ze,(nt+fs)/Ct);for(let ns=0;ns<Me;++ns){const Ws=ns-jt,Ys=Math.max(0,Math.ceil(Ws/vt)),Bl=Math.min(et,(st+Ws)/vt);for(let Or=0;Or<$e;++Or){const Su=Or-Gt,Xo=Math.max(0,Math.ceil(Su/wt)),yc=Math.min(ut,(Je+Su)/wt);let ua=0;for(let Ul=Es;Ul<As;++Ul){const Nu=Ul*Ct-fs;for(let Au=Ys;Au<Bl;++Au){const Ou=Au*vt-Ws;for(let Ff=Xo;Ff<yc;++Ff){const OE=F*un+B*Ul+Z*Au+ce*Ff,die=_e*(nt-1-Nu)+Fe*(st-1-Ou)+Le*(Je-1-(Ff*wt-Su))+Xe*On;for(let Mg=0;Mg<Ge;++Mg)ua+=C[OE+Mg]*ve[die+Mg]}}}m[y*un+_*es+x*ns+D*Or+On]=ua}}}return e.makeTensorInfo(p.shape,p.dtype,p.values)}},qz=Jn(u.Cos,t=>Math.cos(t)),eW={kernelName:u.Cos,backendName:"cpu",kernelFunc:qz},tW=Jn(u.Cosh,t=>Math.cosh(t)),nW={kernelName:u.Cosh,backendName:"cpu",kernelFunc:tW},rW={kernelName:u.CropAndResize,backendName:"cpu",kernelFunc:function sW(t){const{inputs:n,backend:e,attrs:s}=t,{image:r,boxes:o,boxInd:i}=n,{cropSize:a,method:l,extrapolationValue:c}=s,[d,f,p,m]=r.shape,y=o.shape[0],[_,x]=a,D=(0,u.buffer)([y,_,x,m],"float32"),C=e.data.get(o.dataId).values,F=e.data.get(i.dataId).values,B=e.data.get(r.dataId).values,Z=u.util.computeStrides(r.shape),ce=u.util.computeStrides(D.shape);for(let ve=0;ve<y;ve++){const _e=4*ve,Fe=C[_e],Le=C[_e+1],Xe=C[_e+2],tt=C[_e+3],nt=F[ve];if(nt>=d)continue;const st=_>1?(Xe-Fe)*(f-1)/(_-1):0,Je=x>1?(tt-Le)*(p-1)/(x-1):0;for(let qe=0;qe<_;qe++){const lt=_>1?Fe*(f-1)+qe*st:.5*(Fe+Xe)*(f-1);if(lt<0||lt>f-1)for(let Me=0;Me<x;Me++)for(let $e=0;$e<m;$e++)D.values[$e+Me*ce[2]+qe*ce[1]+ve*ce[0]]=c;else if("bilinear"===l){const Me=Math.floor(lt),$e=Math.ceil(lt),Ge=lt-Me;for(let Ze=0;Ze<x;Ze++){const et=x>1?Le*(p-1)+Ze*Je:.5*(Le+tt)*(p-1);if(et<0||et>p-1){for(let wt=0;wt<m;wt++)D.values[wt+Ze*ce[2]+qe*ce[1]+ve*ce[0]]=c;continue}const ut=Math.floor(et),Ct=Math.ceil(et),vt=et-ut;for(let wt=0;wt<m;wt++){let Ot=wt+ut*Z[2]+Me*Z[1]+nt*Z[0];const jt=B[Ot];Ot=wt+Ct*Z[2]+Me*Z[1]+nt*Z[0];const Gt=B[Ot];Ot=wt+ut*Z[2]+$e*Z[1]+nt*Z[0];const un=B[Ot];Ot=wt+Ct*Z[2]+$e*Z[1]+nt*Z[0];const On=B[Ot],es=jt+(Gt-jt)*vt;Ot=wt+Ze*ce[2]+qe*ce[1]+ve*ce[0],D.values[Ot]=es+(un+(On-un)*vt-es)*Ge}}}else for(let Me=0;Me<x;++Me){const $e=x>1?Le*(p-1)+Me*Je:.5*(Le+tt)*(p-1);if($e<0||$e>p-1){for(let et=0;et<m;et++)D.values[et+Me*ce[2]+qe*ce[1]+ve*ce[0]]=c;continue}const Ge=Math.round($e),Ze=Math.round(lt);for(let et=0;et<m;et++)D.values[et+Me*ce[2]+qe*ce[1]+ve*ce[0]]=B[et+Ge*Z[2]+Ze*Z[1]+nt*Z[0]]}}}return e.makeTensorInfo(D.shape,D.dtype,D.values)}},iW={kernelName:u.Cumprod,backendName:"cpu",kernelFunc:function oW(t){const{inputs:n,backend:e,attrs:s}=t,{x:r}=n,{axis:o,exclusive:i,reverse:a}=s;Lt(r,"cumprod");const l=u.backend_util.getAxesPermutation([o],r.shape.length);let c=r;null!=l&&(c=go({inputs:{x:r},backend:e,attrs:{perm:l}}));const d=u.backend_util.getInnerMostAxes(1,r.shape.length)[0];if(d!==c.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${c.shape.length-1} but got axis=${d}`);const f=(0,u.upcastType)(c.dtype,"int32"),p=u.util.makeOnesTypedArray(u.util.sizeFromShape(c.shape),f),m=e.data.get(c.dataId).values,y=c.shape[c.shape.length-1],_=a?(D,C)=>D+y-C-1:(D,C)=>D+C;for(let D=0;D<m.length;D+=y)for(let C=0;C<y;C++){const F=_(D,C);if(0===C)p[F]=i?1:m[F];else{const B=_(D,C-1);p[F]=i?m[B]*p[B]:m[F]*p[B]}}const x=e.makeTensorInfo(c.shape,f,p);if(null!=l){const C=go({inputs:{x},backend:e,attrs:{perm:u.backend_util.getUndoAxesPermutation(l)}});return e.disposeIntermediateTensorInfo(x),e.disposeIntermediateTensorInfo(c),C}return x}},lW={kernelName:u.Cumsum,backendName:"cpu",kernelFunc:function aW(t){const{inputs:n,backend:e,attrs:s}=t,{x:r}=n,{axis:o,exclusive:i,reverse:a}=s;Lt(r,"cumsum");const l=u.backend_util.getAxesPermutation([o],r.shape.length);let c=r;null!=l&&(c=go({inputs:{x:r},backend:e,attrs:{perm:l}}));const d=u.backend_util.getInnerMostAxes(1,r.shape.length)[0];if(d!==c.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${c.shape.length-1} but got axis=${d}`);const f=(0,u.upcastType)(c.dtype,"int32"),p=u.util.makeZerosTypedArray(u.util.sizeFromShape(c.shape),f),m=e.data.get(c.dataId).values,y=c.shape[c.shape.length-1],_=a?(D,C)=>D+y-C-1:(D,C)=>D+C;for(let D=0;D<m.length;D+=y)for(let C=0;C<y;C++){const F=_(D,C);if(0===C)p[F]=i?0:m[F];else{const B=_(D,C-1);p[F]=i?m[B]+p[B]:m[F]+p[B]}}const x=e.makeTensorInfo(c.shape,f,p);if(null!=l){const C=go({inputs:{x},backend:e,attrs:{perm:u.backend_util.getUndoAxesPermutation(l)}});return e.disposeIntermediateTensorInfo(x),e.disposeIntermediateTensorInfo(c),C}return x}},cW={kernelName:u.DenseBincount,backendName:"cpu",kernelFunc:function uW(t){const{inputs:n,backend:e,attrs:s}=t,{x:r,weights:o}=n,{size:i,binaryOutput:a}=s;if(1===r.shape.length){const d=nx(e.data.get(r.dataId).values,e.data.get(o.dataId).values,o.dtype,o.shape,i);return e.makeTensorInfo([i],o.dtype,d)}if(2===r.shape.length){const d=MT(e.bufferSync(r),e.bufferSync(o),i,a);return e.makeTensorInfo(d.shape,o.dtype,d.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}},hW={kernelName:u.DepthToSpace,backendName:"cpu",kernelFunc:function dW(t){const{inputs:n,backend:e,attrs:s}=t,{x:r}=n,{blockSize:o,dataFormat:i}=s;u.util.assert("NHWC"===i,()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`);const a=r.shape[0],l=r.shape[1],c=r.shape[2],d=r.shape[3],f=l*o,p=c*o,m=d/(o*o),y=e.data.get(r.dataId).values,_=new Float32Array(a*f*p*m);let x=0;for(let D=0;D<a;++D)for(let C=0;C<f;++C){const F=Math.floor(C/o),B=C%o;for(let Z=0;Z<p;++Z){const ce=Math.floor(Z/o),_e=(B*o+Z%o)*m;for(let Fe=0;Fe<m;++Fe)_[x++]=y[Fe+_e+d*(ce+c*(F+l*D))]}}return e.makeTensorInfo([a,f,p,m],r.dtype,_)}};function FT(t){const{inputs:n,backend:e,attrs:s}=t,{x:r,filter:o}=n,{strides:i,pad:a,dilations:l,dimRoundingMode:c}=s;Lt([r,o],"depthwiseConv2DNative");const d=u.util.computeStrides(r.shape),f=u.util.computeStrides(o.shape);let p=l;null==p&&(p=[1,1]),u.util.assert(u.backend_util.eitherStridesOrDilationsAreOne(i,p),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${p}'`);const m=u.backend_util.computeConv2DInfo(r.shape,o.shape,i,p,a,c,!0),{filterHeight:y,filterWidth:_,dilationHeight:x,dilationWidth:D,padInfo:C}=m,F=C.left,B=C.top,Z=m.outChannels/m.inChannels,ce=new u.TensorBuffer(m.outShape,r.dtype),ve=e.data.get(r.dataId).values,_e=e.data.get(o.dataId).values,Fe=ce.values;for(let Le=0;Le<m.batchSize;++Le){const Xe=Le*d[0],tt=Le*ce.strides[0];for(let nt=0;nt<m.outHeight;++nt){const st=tt+nt*ce.strides[1],Je=nt*m.strideHeight-B;for(let qe=0;qe<y;++qe){const lt=Je+qe*x;if(lt<0||lt>=m.inHeight)continue;const Me=qe*f[0],$e=Xe+lt*d[1];for(let Ge=0;Ge<m.outWidth;++Ge){const Ze=st+Ge*ce.strides[2],et=Ge*m.strideWidth-F;for(let ut=0;ut<_;++ut){const Ct=et+ut*D;if(Ct<0||Ct>=m.inWidth)continue;const wt=$e+Ct*m.inChannels;let Ot=Ze,jt=Me+ut*f[1];for(let Gt=0;Gt<m.inChannels;++Gt){const un=ve[wt+Gt];for(let On=0;On<Z;++On)Fe[Ot+On]+=un*_e[jt+On];Ot+=Z,jt+=Z}}}}}}return e.makeTensorInfo(ce.shape,ce.dtype,ce.values)}const fW={kernelName:u.DepthwiseConv2dNative,backendName:"cpu",kernelFunc:FT},mW={kernelName:u.DepthwiseConv2dNativeBackpropFilter,backendName:"cpu",kernelFunc:function pW(t){const{inputs:n,backend:e,attrs:s}=t,{x:r,dy:o}=n,{strides:i,dilations:a,pad:l,dimRoundingMode:c,filterShape:d}=s;Lt([r,o],"depthwiseConv2dNativeBackpropFilter");const f=u.backend_util.computeConv2DInfo(r.shape,d,i,a,l,c,!0),{strideHeight:p,strideWidth:m,filterHeight:y,filterWidth:_}=f,x=new u.TensorBuffer(f.filterShape,"float32"),D=f.padInfo.left,C=f.padInfo.top,F=f.outChannels/f.inChannels,B=e.data.get(r.dataId).values,Z=new u.TensorBuffer(r.shape,r.dtype,B),ce=e.data.get(o.dataId).values,ve=new u.TensorBuffer(o.shape,o.dtype,ce);for(let _e=0;_e<y;++_e){const Fe=Math.max(0,Math.ceil((C-_e)/p)),Le=Math.min(f.outHeight,(f.inHeight+C-_e)/p);for(let Xe=0;Xe<_;++Xe){const tt=Math.max(0,Math.ceil((D-Xe)/m)),nt=Math.min(f.outWidth,(f.inWidth+D-Xe)/m);for(let st=0;st<f.outChannels;++st){const Je=Math.trunc(st/F),qe=st%F;let lt=0;for(let Me=0;Me<f.batchSize;++Me)for(let $e=Fe;$e<Le;++$e){const Ge=_e+$e*p-C;for(let Ze=tt;Ze<nt;++Ze)lt+=Z.get(Me,Ge,Xe+Ze*m-D,Je)*ve.get(Me,$e,Ze,st)}x.set(lt,_e,Xe,Je,qe)}}}return e.makeTensorInfo(x.shape,x.dtype,x.values)}},yW={kernelName:u.DepthwiseConv2dNativeBackpropInput,backendName:"cpu",kernelFunc:function gW(t){const{inputs:n,backend:e,attrs:s}=t,{dy:r,filter:o}=n,{strides:i,dilations:a,pad:l,dimRoundingMode:c,inputShape:d}=s;Lt([r,o],"depthwiseConv2DNativeBackpropInput");const f=u.util.computeStrides(r.shape),p=u.util.computeStrides(o.shape),m=u.backend_util.computeConv2DInfo(d,o.shape,i,a,l,c,!0),y=new u.TensorBuffer(m.inShape,"float32"),_=y.values,[x,D,C]=y.strides,F=e.data.get(r.dataId).values,[B,Z,ce]=f,ve=e.data.get(o.dataId).values,[_e,Fe,Le]=p,{batchSize:Xe,filterHeight:tt,filterWidth:nt,inChannels:st,inHeight:Je,inWidth:qe,outChannels:lt,outHeight:Me,outWidth:$e,strideHeight:Ge,strideWidth:Ze}=m,et=tt-1-m.padInfo.top,ut=nt-1-m.padInfo.left,Ct=lt/st;for(let vt=0;vt<Xe;++vt)for(let wt=0;wt<st;++wt)for(let Ot=0;Ot<Je;++Ot){const jt=Ot-et,Gt=Math.max(0,Math.ceil(jt/Ge)),un=Math.min(Me,(tt+jt)/Ge);for(let On=0;On<qe;++On){const es=On-ut,fs=Math.max(0,Math.ceil(es/Ze)),Es=Math.min($e,(nt+es)/Ze);let As=0;for(let ns=Gt;ns<un;++ns){const Ws=ns*Ge-jt;for(let Ys=fs;Ys<Es;++Ys){const Or=B*vt+Z*ns+ce*Ys,Su=_e*(tt-1-Ws)+Fe*(nt-1-(Ys*Ze-es))+Le*wt;for(let Xo=0;Xo<Ct;++Xo)As+=F[Or+(wt*Ct+Xo)]*ve[Su+Xo]}}_[x*vt+D*Ot+C*On+wt]=As}}return e.makeTensorInfo(y.shape,y.dtype,y.values)}},xW={kernelName:u.Diag,backendName:"cpu",kernelFunc:function vW(t){const{inputs:n,backend:e}=t,{x:s}=n,r=u.util.sizeFromShape(s.shape),o=e.data.get(s.dataId).values,i=(0,u.buffer)([r,r],s.dtype),a=i.values;for(let c=0;c<o.length;c++)a[c*r+c]=o[c];const l=[...s.shape,...s.shape];return e.makeTensorInfo(l,i.dtype,i.values)}},EW={kernelName:u.Dilation2D,backendName:"cpu",kernelFunc:({inputs:t,backend:n,attrs:e})=>{const{x:s,filter:r}=t,{strides:o,pad:i,dilations:a}=e,l=n,c=l.data.get(s.dataId).values,d=s.shape.length,f=l.data.get(r.dataId).values,p=r.shape.length,{batchSize:m,inHeight:y,inWidth:_,inChannels:x,outHeight:D,outWidth:C,padInfo:F,strideHeight:B,strideWidth:Z,filterHeight:ce,filterWidth:ve,dilationHeight:_e,dilationWidth:Fe,outShape:Le}=u.backend_util.computeDilation2DInfo(s.shape,r.shape,o,i,"NHWC",a),Xe=u.util.sizeFromShape(Le),tt=Le.length,nt=u.util.getArrayFromDType(s.dtype,Xe);for(let Je=0;Je<m;++Je)for(let qe=0;qe<D;++qe){const lt=qe*B-F.top;for(let Me=0;Me<C;++Me){const $e=Me*Z-F.left;for(let Ge=0;Ge<x;++Ge){let Ze=Number.MIN_SAFE_INTEGER;for(let ut=0;ut<ce;++ut){const Ct=lt+ut*_e;if(Ct>=0&&Ct<y)for(let vt=0;vt<ve;++vt){const wt=$e+vt*Fe;if(wt>=0&&wt<_){const Ot=u.util.locToIndex([Je,Ct,wt,Ge],d,u.util.computeStrides(s.shape)),jt=u.util.locToIndex([ut,vt,Ge],p,u.util.computeStrides(r.shape)),Gt=c[Ot]+f[jt];Gt>Ze&&(Ze=Gt)}}}nt[u.util.locToIndex([Je,qe,Me,Ge],tt,u.util.computeStrides(Le))]=Ze}}}return{dataId:l.write(u.util.toTypedArray(nt,s.dtype),Le,s.dtype),shape:Le,dtype:s.dtype}}},_W={kernelName:u.Dilation2DBackpropFilter,backendName:"cpu",kernelFunc:({inputs:t,backend:n,attrs:e})=>{const{x:s,filter:r,dy:o}=t,{strides:i,pad:a,dilations:l}=e,c=n,d=u.util.toNestedArray(s.shape,c.data.get(s.dataId).values),f=u.util.toNestedArray(r.shape,c.data.get(r.dataId).values),{batchSize:p,inHeight:m,inWidth:y,inChannels:_,outHeight:x,outWidth:D,padInfo:C,strideHeight:F,strideWidth:B,filterHeight:Z,filterWidth:ce,dilationHeight:ve,dilationWidth:_e,outShape:Fe}=u.backend_util.computeDilation2DInfo(s.shape,r.shape,i,a,"NHWC",l);u.util.assert(o.rank===Fe.length,()=>`Error in ${u.Dilation2DBackpropFilter}, dy must have the same rank as output ${Fe.length}, but got ${o.rank}`);const Le=u.util.toNestedArray(Fe,c.data.get(o.dataId).values),Xe=u.util.makeZerosNestedTypedArray(r.shape,r.dtype);for(let nt=0;nt<p;++nt)for(let st=0;st<x;++st){const Je=st*F-C.top;for(let qe=0;qe<D;++qe){const lt=qe*B-C.left;for(let Me=0;Me<_;++Me){let $e=Number.MIN_SAFE_INTEGER,Ge=0,Ze=0;for(let et=0;et<Z;++et){const ut=Je+et*ve;if(ut>=0&&ut<m)for(let Ct=0;Ct<ce;++Ct){const vt=lt+Ct*_e;if(vt>=0&&vt<y){const wt=d[nt][ut][vt][Me]+f[et][Ct][Me];wt>$e&&($e=wt,Ge=et,Ze=Ct)}}}Xe[Ge][Ze][Me]+=Le[nt][st][qe][Me]}}}return{dataId:c.write(u.util.toTypedArray(Xe,s.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},bW={kernelName:u.Dilation2DBackpropInput,backendName:"cpu",kernelFunc:({inputs:t,backend:n,attrs:e})=>{const{x:s,filter:r,dy:o}=t,{strides:i,pad:a,dilations:l}=e,c=n,d=u.util.toNestedArray(s.shape,c.data.get(s.dataId).values),f=u.util.toNestedArray(r.shape,c.data.get(r.dataId).values),{batchSize:p,inHeight:m,inWidth:y,inChannels:_,outHeight:x,outWidth:D,padInfo:C,strideHeight:F,strideWidth:B,filterHeight:Z,filterWidth:ce,dilationHeight:ve,dilationWidth:_e,outShape:Fe}=u.backend_util.computeDilation2DInfo(s.shape,r.shape,i,a,"NHWC",l);u.util.assert(o.rank===Fe.length,()=>`Error in ${u.Dilation2DBackpropInput}, dy must have the same rank as output ${Fe.length}, but got ${o.rank}`);const Le=u.util.toNestedArray(Fe,c.data.get(o.dataId).values),Xe=u.util.makeZerosNestedTypedArray(s.shape,s.dtype);for(let nt=0;nt<p;++nt)for(let st=0;st<x;++st){const Je=st*F-C.top;for(let qe=0;qe<D;++qe){const lt=qe*B-C.left;for(let Me=0;Me<_;++Me){let $e=Number.MIN_SAFE_INTEGER,Ge=Je<0?0:Je,Ze=lt<0?0:lt;for(let et=0;et<Z;++et){const ut=Je+et*ve;if(ut>=0&&ut<m)for(let Ct=0;Ct<ce;++Ct){const vt=lt+Ct*_e;if(vt>=0&&vt<y){const wt=d[nt][ut][vt][Me]+f[et][Ct][Me];wt>$e&&($e=wt,Ge=ut,Ze=vt)}}}Xe[nt][Ge][Ze][Me]+=Le[nt][st][qe][Me]}}}return{dataId:c.write(u.util.toTypedArray(Xe,s.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},sx=sr((t,n)=>t*n),CW=qv((t,n,e,s)=>({real:t*e-n*s,imag:t*s+n*e})),Om=br(u.Multiply,sx,CW),DW={kernelName:u.Multiply,backendName:"cpu",kernelFunc:Om};function af(t){const{inputs:n,backend:e,attrs:s}=t,{x:r}=n,{axis:o,keepDims:i}=s;let a;Lt(r,"sum"),a="bool"===r.dtype?pu({inputs:{x:r},backend:e,attrs:{dtype:"int32"}}):Za({inputs:{x:r},backend:e});const l=a.shape.length,c=u.util.parseAxisParam(o,a.shape),d=u.backend_util.getAxesPermutation(c,l);let f=c,p=a;null!=d&&(p=go({inputs:{x:a},backend:e,attrs:{perm:d}}),f=u.backend_util.getInnerMostAxes(f.length,l)),u.backend_util.assertAxesAreInnerMostDims("sum",f,p.shape.length);const[m,y]=u.backend_util.computeOutAndReduceShapes(p.shape,f);let x=Am(e,m,u.backend_util.upcastType(p.dtype,"int32"));const D=u.util.sizeFromShape(y),C=e.data.get(x.dataId).values,F=e.data.get(p.dataId).values;for(let B=0;B<C.length;++B){const Z=B*D;let ce=0;for(let ve=0;ve<D;++ve)ce+=F[Z+ve];C[B]=ce}if(i){const Z=x;x=cs({inputs:{x},backend:e,attrs:{shape:u.backend_util.expandShapeToKeepDim(x.shape,c)}}),e.disposeIntermediateTensorInfo(Z)}return e.disposeIntermediateTensorInfo(a),null!=d&&e.disposeIntermediateTensorInfo(p),x}const IW={kernelName:u.Sum,backendName:"cpu",kernelFunc:af},wW={kernelName:u.Einsum,backendName:"cpu",kernelFunc:function TW(t){const{inputs:n,backend:e,attrs:s}=t,{equation:r}=s,o=n,{allDims:i,summedDims:a,idDims:l}=u.backend_util.decodeEinsumEquation(r,o.length);u.backend_util.checkEinsumDimSizes(i.length,l,o);const{path:c,steps:d}=u.backend_util.getEinsumComputePath(a,l),f=d.length;let p=null,m=i.length;const y=[];for(let _=0;_<f;++_){for(const x of d[_]){const{permutationIndices:D,expandDims:C}=u.backend_util.getEinsumPermutation(m,l[x]);let F;u.backend_util.isIdentityPermutation(D)?F=o[x]:(F=go({inputs:{x:o[x]},backend:e,attrs:{perm:D}}),y.push(F));const B=F.shape.slice();for(let Z=0;Z<C.length;++Z)B.splice(C[Z],0,1);u.util.arraysEqual(F.shape,B)||(F=cs({inputs:{x:F},backend:e,attrs:{shape:B}}),y.push(F)),null===p?p=F:(p=Om({inputs:{a:F,b:p},backend:e}),y.push(p))}_<f-1&&(c[_]>=0&&(p=af({inputs:{x:p},backend:e,attrs:{axis:c[_]-(i.length-m),keepDims:!1}}),y.push(p)),m--)}for(const _ of y)_!==p&&e.disposeIntermediateTensorInfo(_);return p}},NW={kernelName:u.EluGrad,backendName:"cpu",kernelFunc:function SW(t){const{inputs:n,backend:e}=t,{dy:s,y:r}=n;Lt([s,r],"eluGrad");const o=new Float32Array(u.util.sizeFromShape(r.shape)),i=e.data.get(r.dataId).values,a=e.data.get(s.dataId).values;for(let l=0;l<i.length;++l){const c=i[l];o[l]=c>=1?a[l]:a[l]*(c+1)}return e.makeTensorInfo(r.shape,"float32",o)}},LT=sr((t,n)=>t===n?1:0),BT=br(u.Equal,LT,null,"bool"),AW={kernelName:u.Equal,backendName:"cpu",kernelFunc:BT},OW=u.backend_util.ERF_P,RW=u.backend_util.ERF_A1,MW=u.backend_util.ERF_A2,kW=u.backend_util.ERF_A3,PW=u.backend_util.ERF_A4,$W=u.backend_util.ERF_A5,FW=Jn(u.Erf,t=>{const n=Math.sign(t),e=Math.abs(t),s=1/(1+OW*e);return n*(1-(((($W*s+PW)*s+kW)*s+MW)*s+RW)*s*Math.exp(-e*e))}),LW={kernelName:u.Erf,backendName:"cpu",kernelFunc:FW},UT=fu(t=>Math.exp(t)),VT=yd(u.Exp,UT,"float32"),BW={kernelName:u.Exp,backendName:"cpu",kernelFunc:VT};function Rm(t){const{inputs:n,backend:e,attrs:s}=t,{input:r}=n,{dim:o}=s,i=r.shape.length,a=r.shape.slice();let l=o;return o<0&&(u.util.assert(-(i+1)<=o,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),l=i+o+1),a.splice(l,0,1),cs({inputs:{x:r},backend:e,attrs:{shape:a}})}const UW={kernelName:u.ExpandDims,backendName:"cpu",kernelFunc:Rm},zT=fu(t=>Math.expm1(t)),VW=yd(u.Expm1,zT),zW={kernelName:u.Expm1,backendName:"cpu",kernelFunc:VW},WW=sr((t,n)=>t/n),rx=br(u.RealDiv,WW),ox={kernelName:u.RealDiv,backendName:"cpu",kernelFunc:rx},WT=sr((t,n)=>t-n),GW=qv((t,n,e,s)=>({real:t-e,imag:n-s})),ix=br(u.Sub,WT,GW),HW={kernelName:u.Sub,backendName:"cpu",kernelFunc:ix};function GT(t,n,e){const s=t.shape,r=s[0],o=s[1],i=e.data.get(t.dataId),a=i.complexTensorInfos.real,l=i.complexTensorInfos.imag,c=[r,o],d=u.util.sizeFromShape(c),f=u.util.getTypedArrayFromDType("float32",d),p=u.util.getTypedArrayFromDType("float32",d);for(let x=0;x<r;x++){const D=sc({inputs:{x:a},backend:e,attrs:{begin:[x,0],size:[1,o]}}),C=sc({inputs:{x:l},backend:e,attrs:{begin:[x,0],size:[1,o]}}),F=wo({inputs:{real:D,imag:C},backend:e}),{real:B,imag:Z}=KW(F,n,e),ce=u.backend_util.mergeRealAndImagArrays(B,Z);for(let ve=0;ve<o;ve++){const _e=u.backend_util.getComplexWithIndex(ce,ve);f[x*o+ve]=_e.real,p[x*o+ve]=_e.imag}e.disposeIntermediateTensorInfo(D),e.disposeIntermediateTensorInfo(C),e.disposeIntermediateTensorInfo(F)}const m=e.makeTensorInfo(c,"float32",f),y=e.makeTensorInfo(c,"float32",p),_=wo({inputs:{real:m,imag:y},backend:e});return e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(y),_}function KW(t,n,e){const s=u.util.sizeFromShape(t.shape),r=e.data.get(t.dataId),o=e.data.get(r.complexTensorInfos.real.dataId).values,i=e.data.get(r.complexTensorInfos.imag.dataId).values;if(function jW(t){return 0==(t&t-1)}(s)){const a=ax(o,i,s,n,e),l=[t.shape[0],t.shape[1]];if(n){const c=e.makeTensorInfo(l,"float32",a.real),d=e.makeTensorInfo(l,"float32",a.imag),f=e.makeTensorInfo([],"float32",u.util.createScalarValue(s,"float32")),p=Za({inputs:{x:f},backend:e}),m=ox.kernelFunc({inputs:{a:c,b:f},backend:e}),y=ox.kernelFunc({inputs:{a:d,b:p},backend:e}),_=e.data.get(m.dataId).values,x=e.data.get(y.dataId).values;return e.disposeIntermediateTensorInfo(c),e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(y),{real:_,imag:x}}return a}{const l=function XW(t,n,e){const s=new Float32Array(2*n);for(let r=0;r<n;r++){let o=0,i=0;for(let a=0;a<n;a++){const l=u.backend_util.exponent(r*a,n,e),c=u.backend_util.getComplexWithIndex(t,a);o+=c.real*l.real-c.imag*l.imag,i+=c.real*l.imag+c.imag*l.real}e&&(o/=n,i/=n),u.backend_util.assignToTypedArray(s,o,i,r)}return s}(u.backend_util.mergeRealAndImagArrays(o,i),s,n);return u.backend_util.splitRealAndImagArrays(l)}}function ax(t,n,e,s,r){if(1===e)return{real:t,imag:n};const o=u.backend_util.mergeRealAndImagArrays(t,n),i=e/2,a=u.backend_util.complexWithEvenIndex(o),l=a.real,c=a.imag,d=[l.length],f=r.makeTensorInfo(d,"float32",l),p=r.makeTensorInfo(d,"float32",c),m=wo({inputs:{real:f,imag:p},backend:r}),y=u.backend_util.complexWithOddIndex(o),_=y.real,x=y.imag,D=[_.length],C=r.makeTensorInfo(D,"float32",_),F=r.makeTensorInfo(D,"float32",x),B=wo({inputs:{real:C,imag:F},backend:r}),Z=ax(l,c,i,s,r),ce=Z.real,ve=Z.imag,_e=[ce.length],Fe=r.makeTensorInfo(_e,"float32",ce),Le=r.makeTensorInfo(_e,"float32",ve),Xe=wo({inputs:{real:Fe,imag:Le},backend:r}),tt=ax(_,x,i,s,r),nt=tt.real,st=tt.imag,Je=[nt.length],qe=r.makeTensorInfo(Je,"float32",nt),lt=r.makeTensorInfo(Je,"float32",st),Me=wo({inputs:{real:qe,imag:lt},backend:r}),$e=u.backend_util.exponents(e,s),Ge=[$e.real.length],Ze=r.makeTensorInfo(Ge,"float32",$e.real),et=r.makeTensorInfo(Ge,"float32",$e.imag),ut=wo({inputs:{real:Ze,imag:et},backend:r}),Ct=Om({inputs:{a:ut,b:Me},backend:r}),vt=vd({inputs:{a:Xe,b:Ct},backend:r}),wt=ix({inputs:{a:Xe,b:Ct},backend:r}),Ot=nc({inputs:{input:vt},backend:r}),jt=nc({inputs:{input:wt},backend:r}),Gt=xd({inputs:{input:vt},backend:r}),un=xd({inputs:{input:wt},backend:r}),On=Ed({inputs:[Ot,jt],backend:r,attrs:{axis:0}}),es=Ed({inputs:[Gt,un],backend:r,attrs:{axis:0}}),fs=r.data.get(On.dataId).values,Es=r.data.get(es.dataId).values;return r.disposeIntermediateTensorInfo(f),r.disposeIntermediateTensorInfo(p),r.disposeIntermediateTensorInfo(m),r.disposeIntermediateTensorInfo(C),r.disposeIntermediateTensorInfo(F),r.disposeIntermediateTensorInfo(B),r.disposeIntermediateTensorInfo(Fe),r.disposeIntermediateTensorInfo(Le),r.disposeIntermediateTensorInfo(Xe),r.disposeIntermediateTensorInfo(qe),r.disposeIntermediateTensorInfo(lt),r.disposeIntermediateTensorInfo(Me),r.disposeIntermediateTensorInfo(Ze),r.disposeIntermediateTensorInfo(et),r.disposeIntermediateTensorInfo(ut),r.disposeIntermediateTensorInfo(Ct),r.disposeIntermediateTensorInfo(vt),r.disposeIntermediateTensorInfo(wt),r.disposeIntermediateTensorInfo(Ot),r.disposeIntermediateTensorInfo(Gt),r.disposeIntermediateTensorInfo(jt),r.disposeIntermediateTensorInfo(un),r.disposeIntermediateTensorInfo(On),r.disposeIntermediateTensorInfo(es),{real:fs,imag:Es}}const YW={kernelName:u.FFT,backendName:"cpu",kernelFunc:function ZW(t){const{inputs:n,backend:e}=t,{input:s}=n,r=u.util.sizeFromShape(s.shape),o=s.shape[s.shape.length-1],a=cs({inputs:{x:s},backend:e,attrs:{shape:[r/o,o]}}),l=GT(a,!1,e),c=cs({inputs:{x:l},backend:e,attrs:{shape:s.shape}});return e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(l),c}};function lx(t){const{backend:n,attrs:e}=t,{shape:s,value:r,dtype:o}=e,i=o||u.util.inferDtype(r),a=u.util.getArrayFromDType(i,u.util.sizeFromShape(s));return function JW(t,n,e){t.fill(n)}(a,r),n.makeTensorInfo(s,i,a)}const QW={kernelName:u.Fill,backendName:"cpu",kernelFunc:lx},qW={kernelName:u.FlipLeftRight,backendName:"cpu",kernelFunc:({inputs:t,backend:e})=>{const{image:s}=t,r=e,o=u.util.getTypedArrayFromDType(s.dtype,u.util.sizeFromShape(s.shape)),[i,a,l,c]=s.shape,d=r.data.get(s.dataId).values;for(let p=0;p<i;p++){const m=p*l*a*c;for(let y=0;y<a;y++){const _=y*(l*c);for(let x=0;x<l;x++){const D=x*c;for(let C=0;C<c;C++){const F=Math.round(l-x-1),B=m+_+D+C;let Z=d[B];F>=0&&F<l&&(Z=d[m+_+F*c+C]),o[B]=Z}}}}return{dataId:r.write(o,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},HT=fu(t=>Math.floor(t)),e4=yd(u.Floor,HT),t4={kernelName:u.Floor,backendName:"cpu",kernelFunc:e4},n4=sr((t,n)=>Math.floor(t/n)),s4=br(u.FloorDiv,n4,null,"int32"),r4={kernelName:u.FloorDiv,backendName:"cpu",kernelFunc:s4},i4={kernelName:u.FusedConv2D,backendName:"cpu",kernelFunc:function o4(t){const{inputs:n,backend:e,attrs:s}=t,{x:r,filter:o,bias:i,preluActivationWeights:a}=n,{strides:l,pad:c,dataFormat:d,dilations:f,dimRoundingMode:p,activation:m,leakyreluAlpha:y}=s;let _=$T({inputs:{x:r,filter:o},backend:e,attrs:{strides:l,pad:c,dataFormat:d,dilations:f,dimRoundingMode:p}});if(i){const x=_;if("NCHW"===d&&1===i.shape.length&&1!==i.shape[0]){const D=cs({inputs:{x:i},backend:e,attrs:{shape:[i.shape[0],1,1]}});_=vd({inputs:{a:_,b:D},backend:e}),e.disposeIntermediateTensorInfo(D)}else _=vd({inputs:{a:_,b:i},backend:e});e.disposeIntermediateTensorInfo(x)}if(m){const x=_;if("NCHW"===d&&"prelu"===m&&1===a.shape.length&&1!==a.shape[0]){const D=cs({inputs:{x:a},backend:e,attrs:{shape:[a.shape[0],1,1]}});_=Nm(e,_,m,D,y),e.disposeIntermediateTensorInfo(D)}else _=Nm(e,_,m,a,y);e.disposeIntermediateTensorInfo(x)}return _}},l4={kernelName:u.FusedDepthwiseConv2D,backendName:"cpu",kernelFunc:function a4(t){const{inputs:n,backend:e,attrs:s}=t,{x:r,filter:o,bias:i,preluActivationWeights:a}=n,{strides:l,pad:c,dataFormat:d,dilations:f,dimRoundingMode:p,activation:m,leakyreluAlpha:y}=s;let _=FT({inputs:{x:r,filter:o},backend:e,attrs:{strides:l,pad:c,dataFormat:d,dilations:f,dimRoundingMode:p}});if(i){const x=_;_=vd({inputs:{a:_,b:i},backend:e}),e.disposeIntermediateTensorInfo(x)}if(m){const x=_;_=Nm(e,_,m,a,y),e.disposeIntermediateTensorInfo(x)}return _}};function KT(t,n,e,s,r,o,i,a,l){const c=(0,u.buffer)([s,o],e);for(let d=0;d<s;d++){const f=[];let p=0;for(let m=0;m<r;m++){const y=t[d*r+m];p+=y*i[m],f.push(y)}if(p<0||p>=l/o)throw new Error(`Invalid indices: ${f} does not index into ${a}`);for(let m=0;m<o;m++)c.values[d*o+m]=n.get(...n.indexToLoc(p*o+m))}return c}const c4={kernelName:u.GatherNd,backendName:"cpu",kernelFunc:function u4(t){const{inputs:n,backend:e}=t,{params:s,indices:r}=n,o=u.util.sizeFromShape(s.shape),i=r.shape,a=i[i.length-1],[l,c,d,f]=u.backend_util.prepareAndValidate(s,r);if(0===c)return e.makeTensorInfo(l,s.dtype,[]);const y=KT(e.data.get(r.dataId).values,e.bufferSync(s),s.dtype,c,a,d,f,s.shape,o);return e.makeTensorInfo(l,s.dtype,y.values)}};function jT(t,n,e){const s=(0,u.buffer)(e,t.dtype);for(let r=0;r<s.size;++r){const i=s.indexToLoc(r).slice(),c=n.locToIndex([i[0],i[2]]);i[2]=n.values[c];const d=t.locToIndex(i);0<=d&&d<t.values.length&&(s.values[r]=t.values[d])}return s}const h4={kernelName:u.GatherV2,backendName:"cpu",kernelFunc:function d4(t){const{inputs:n,backend:e,attrs:s}=t,{x:r,indices:o}=n,{axis:i,batchDims:a}=s;Lt([r,o],"gatherV2");const l=u.util.parseAxisParam(i,r.shape)[0],c=e.data.get(o.dataId).values,d=r.shape[l];for(let B=0;B<c.length;++B){const Z=c[B];u.util.assert(Z<=d-1&&Z>=0,()=>`GatherV2: the index value ${Z} is not in [0, ${d-1}]`)}let f=a;null==a&&(f=0);const p=u.util.sizeFromShape(o.shape),m=u.backend_util.segment_util.collectGatherOpShapeInfo(r,o,l,f),y=cs({inputs:{x:r},backend:e,attrs:{shape:[m.batchSize,m.outerSize,m.dimSize,m.sliceSize]}}),_=cs({inputs:{x:o},backend:e,attrs:{shape:[m.batchSize,p/m.batchSize]}}),x=[m.batchSize,m.outerSize,p/m.batchSize,m.sliceSize],D=e.bufferSync(_),F=jT(e.bufferSync(y),D,x);return e.disposeIntermediateTensorInfo(y),e.disposeIntermediateTensorInfo(_),e.makeTensorInfo(m.outputShape,F.dtype,F.values)}},XT=sr((t,n)=>t>n?1:0),f4=br(u.Greater,XT,null,"bool"),p4={kernelName:u.Greater,backendName:"cpu",kernelFunc:f4},ZT=sr((t,n)=>t>=n?1:0),m4=br(u.GreaterEqual,ZT,null,"bool"),g4={kernelName:u.GreaterEqual,backendName:"cpu",kernelFunc:m4},v4={kernelName:u.IFFT,backendName:"cpu",kernelFunc:function y4(t){const{inputs:n,backend:e}=t,{input:s}=n,r=u.util.sizeFromShape(s.shape),o=s.shape[s.shape.length-1],a=cs({inputs:{x:s},backend:e,attrs:{shape:[r/o,o]}}),l=GT(a,!0,e),c=cs({inputs:{x:l},backend:e,attrs:{shape:s.shape}});return e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(l),c}},x4=Jn(u.IsFinite,t=>Number.isFinite(t)?1:0,"bool"),E4={kernelName:u.IsFinite,backendName:"cpu",kernelFunc:x4},_4=Jn(u.IsInf,t=>Math.abs(t)===1/0?1:0,"bool"),b4={kernelName:u.IsInf,backendName:"cpu",kernelFunc:_4},C4=Jn(u.IsNan,t=>Number.isNaN(t)?1:0,"bool"),D4={kernelName:u.IsNan,backendName:"cpu",kernelFunc:C4},YT=sr((t,n)=>t<n?1:0),I4=br(u.Less,YT,null,"bool"),T4={kernelName:u.Less,backendName:"cpu",kernelFunc:I4},QT=sr((t,n)=>t<=n?1:0),w4=br(u.LessEqual,QT,null,"bool"),S4={kernelName:u.LessEqual,backendName:"cpu",kernelFunc:w4};function JT(t,n,e){const s=(n-t)/(e-1),r=u.util.makeZerosTypedArray(e,"float32");r[0]=t;for(let o=1;o<r.length;o++)r[o]=r[o-1]+s;return r}const A4={kernelName:u.LinSpace,backendName:"cpu",kernelFunc:function N4(t){const{backend:n,attrs:e}=t,{start:s,stop:r,num:o}=e,i=JT(s,r,o);return n.makeTensorInfo([i.length],"float32",i)}},qT=fu(t=>Math.log(t)),O4=yd(u.Log,qT),R4={kernelName:u.Log,backendName:"cpu",kernelFunc:O4},M4=Jn(u.Log1p,t=>Math.log1p(t)),k4={kernelName:u.Log1p,backendName:"cpu",kernelFunc:M4},P4=sr((t,n)=>t&&n),$4=br(u.LogicalAnd,P4,null,"bool"),F4={kernelName:u.LogicalAnd,backendName:"cpu",kernelFunc:$4},L4=Jn(u.LogicalNot,t=>t?0:1,"bool"),B4={kernelName:u.LogicalNot,backendName:"cpu",kernelFunc:L4},U4=sr((t,n)=>t||n),V4=br(u.LogicalOr,U4,null,"bool"),z4={kernelName:u.LogicalOr,backendName:"cpu",kernelFunc:V4},G4={kernelName:u.LRN,backendName:"cpu",kernelFunc:function W4(t){const{inputs:n,backend:e,attrs:s}=t,{x:r}=n,{depthRadius:o,bias:i,alpha:a,beta:l}=s;Lt(r,"LRN");const c=r.shape[3],d=c-1,f=e.data.get(r.dataId).values,p=u.util.sizeFromShape(r.shape),m=new Float32Array(p);function y(_){const x=_%c;let D=_-x+Math.max(0,x-o);const C=_-x+Math.min(x+o,d);let F=0;for(;D<=C;D++){const B=f[D];F+=B*B}return F}for(let _=0;_<p;_++){const x=y(_),D=f[_]*Math.pow(i+a*x,-l);m[_]=D}return e.makeTensorInfo(r.shape,r.dtype,m)}},K4={kernelName:u.LRNGrad,backendName:"cpu",kernelFunc:function H4(t){const{inputs:n,backend:e,attrs:s}=t,{x:r,y:o,dy:i}=n,{depthRadius:a,bias:l,alpha:c,beta:d}=s;Lt(i,"LRNGrad");const f=u.util.sizeFromShape(i.shape),p=i.shape[3],m=e.data.get(i.dataId).values,y=e.data.get(r.dataId).values,_=e.data.get(o.dataId).values,x=new Float32Array(f),D=f;for(let C=0;C<D;C++){const F=C%p,B=C-F+Math.max(0,F-a),Z=C-F+Math.min(p,F+a+1);let ce=0;for(let ve=B;ve<Z;ve++)ce+=Math.pow(y[ve],2);ce=c*ce+l;for(let ve=B;ve<Z;ve++){let _e=-2*c*d*y[ve]*_[C]/ce;C===ve&&(_e+=Math.pow(ce,-d)),_e*=m[C],x[ve]+=_e}}return e.makeTensorInfo(i.shape,r.dtype,x)}};function ew(t,n,e,s){const r=u.util.getTypedArrayFromDType(s,u.util.sizeFromShape(e));for(let o=0;o<r.length;++o){const i=o*n;let a=t[i];for(let l=0;l<n;++l){const c=t[i+l];(Number.isNaN(c)||c>a)&&(a=c)}r[o]=a}return r}function tw(t){const{inputs:n,backend:e,attrs:s}=t,{x:r}=n,{reductionIndices:o,keepDims:i}=s,a=e;let l=r.shape;const c=l.length,d=u.util.parseAxisParam(o,l);let f=d;const p=u.backend_util.getAxesPermutation(f,c);let m=a.data.get(r.dataId).values;if(null!=p){const B=new Array(c);for(let Z=0;Z<B.length;Z++)B[Z]=l[p[Z]];m=ex(m,l,r.dtype,p,B),f=u.backend_util.getInnerMostAxes(f.length,c),l=B}Lt(r,"max"),u.backend_util.assertAxesAreInnerMostDims("max",f,c);const[y,_]=u.backend_util.computeOutAndReduceShapes(l,f),D=ew(m,u.util.sizeFromShape(_),y,r.dtype),C=a.write(D,y,r.dtype);let F=y;return i&&(F=u.backend_util.expandShapeToKeepDim(y,d)),{dataId:C,shape:F,dtype:r.dtype}}const j4={kernelName:u.Max,backendName:"cpu",kernelFunc:tw},nw=sr((t,n)=>Math.max(t,n)),X4=br(u.Maximum,nw),Z4={kernelName:u.Maximum,backendName:"cpu",kernelFunc:X4},Q4={kernelName:u.MaxPool,backendName:"cpu",kernelFunc:function Y4(t){const{inputs:n,backend:e,attrs:s}=t,{x:r}=n;Lt(r,"maxPool");const{filterSize:o,strides:i,pad:a,dimRoundingMode:l}=s;u.util.assert(u.backend_util.eitherStridesOrDilationsAreOne(i,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`);const d=u.backend_util.computePool2DInfo(r.shape,o,i,1,a,l);let f;if(1===d.filterWidth&&1===d.filterHeight&&u.util.arraysEqual(d.inShape,d.outShape))f=Za({inputs:{x:r},backend:e});else{const p=e.data.get(r.dataId).values,m=u.util.computeStrides(r.shape),y=tx(p,0,r.dtype,m,d,"max");f=e.makeTensorInfo(d.outShape,r.dtype,y.values)}return f}},q4={kernelName:u.MaxPool3D,backendName:"cpu",kernelFunc:function J4(t){const{inputs:n,backend:e,attrs:s}=t,{x:r}=n,{filterSize:o,strides:i,pad:a,dimRoundingMode:l,dataFormat:c}=s;Lt(r,"maxPool3d");const d=u.backend_util.computePool3DInfo(r.shape,o,i,1,a,l,c),p=OT(e.data.get(r.dataId).values,0,r.dtype,u.util.computeStrides(r.shape),d,"max");return e.makeTensorInfo(p.shape,"float32",p.values)}},tG={kernelName:u.MaxPool3DGrad,backendName:"cpu",kernelFunc:function eG(t){const{inputs:n,backend:e,attrs:s}=t,{dy:r,input:o}=n,{filterSize:i,strides:a,pad:l,dimRoundingMode:c}=s;Lt([r,o],"maxPool3DGrad");const d=u.backend_util.computePool3DInfo(o.shape,i,a,1,l,c),p=function gz(t,n){const e=(0,u.buffer)(n.outShape,"int32"),s=n.strideDepth,r=n.strideHeight,o=n.strideWidth,i=n.dilationDepth,a=n.dilationHeight,l=n.dilationWidth,c=n.effectiveFilterDepth,d=n.effectiveFilterHeight,f=n.effectiveFilterWidth,p=n.padInfo.front,m=n.padInfo.top,y=n.padInfo.left;for(let _=0;_<n.batchSize;++_)for(let x=0;x<n.inChannels;++x)for(let D=0;D<n.outDepth;++D){const C=D*s-p;let F=C;for(;F<0;)F+=i;const B=Math.min(n.inDepth,c+C);for(let Z=0;Z<n.outHeight;++Z){const ce=Z*r-m;let ve=ce;for(;ve<0;)ve+=a;const _e=Math.min(n.inHeight,d+ce);for(let Fe=0;Fe<n.outWidth;++Fe){const Le=Fe*o-y;let Xe=Le;for(;Xe<0;)Xe+=l;const tt=Math.min(n.inWidth,f+Le);let nt=Number.NEGATIVE_INFINITY,st=-1;for(let Je=F;Je<B;Je+=i){const qe=Je-C;for(let lt=ve;lt<_e;lt+=a){const Me=lt-ce;for(let $e=Xe;$e<tt;$e+=l){const Ge=$e-Le,Ze=t.get(_,Je,lt,$e,x);Ze>=nt&&(nt=Ze,st=qe*d*f+Me*d+Ge)}}}e.set(st,_,D,Z,Fe,x)}}}return e}(e.bufferSync(o),d),m=d.strideDepth,y=d.strideHeight,_=d.strideWidth,x=d.dilationDepth,D=d.dilationHeight,C=d.dilationWidth,F=d.effectiveFilterDepth,B=d.effectiveFilterHeight,Z=d.effectiveFilterWidth,ce=F-1-d.padInfo.front,ve=Z-1-d.padInfo.left,_e=B-1-d.padInfo.top,Fe=(0,u.buffer)(o.shape,"float32"),Le=e.bufferSync(r);for(let Xe=0;Xe<d.batchSize;++Xe)for(let tt=0;tt<d.inChannels;++tt)for(let nt=0;nt<d.inDepth;++nt)for(let st=0;st<d.inHeight;++st)for(let Je=0;Je<d.inWidth;++Je){const qe=nt-ce,lt=st-_e,Me=Je-ve;let $e=0;for(let Ge=0;Ge<F;Ge+=x){const Ze=(qe+Ge)/m;if(!(Ze<0||Ze>=d.outDepth||Math.floor(Ze)!==Ze))for(let et=0;et<B;et+=D){const ut=(lt+et)/y;if(!(ut<0||ut>=d.outHeight||Math.floor(ut)!==ut))for(let Ct=0;Ct<Z;Ct+=C){const vt=(Me+Ct)/_;if(vt<0||vt>=d.outWidth||Math.floor(vt)!==vt)continue;const jt=F*B*Z-1-p.get(Xe,Ze,ut,vt,tt)===Ge*B*Z+et*Z+Ct?1:0;0!==jt&&($e+=Le.get(Xe,Ze,ut,vt,tt)*jt)}}}Fe.set($e,Xe,nt,st,Je,tt)}return e.makeTensorInfo(Fe.shape,Fe.dtype,Fe.values)}},sG={kernelName:u.MaxPoolGrad,backendName:"cpu",kernelFunc:function nG(t){const{inputs:n,backend:e,attrs:s}=t,{dy:r,input:o,output:i}=n,a=o;Lt([o,i],"maxPoolGrad");const{filterSize:l,strides:c,pad:d,dimRoundingMode:f}=s,p=u.backend_util.computePool2DInfo(a.shape,l,c,1,d,f),m=e.data.get(a.dataId).values,y=(0,u.buffer)(p.outShape,a.dtype,AT(m,a.shape,a.dtype,p).values),_=p.strideHeight,x=p.strideWidth,D=p.dilationHeight,C=p.dilationWidth,F=p.effectiveFilterHeight,B=p.effectiveFilterWidth,Z=B-1-p.padInfo.left,ce=F-1-p.padInfo.top,ve=(0,u.buffer)(a.shape,"float32"),_e=e.data.get(r.dataId).values,Fe=(0,u.buffer)(r.shape,"float32",_e);for(let Le=0;Le<p.batchSize;++Le)for(let Xe=0;Xe<p.inChannels;++Xe)for(let tt=0;tt<p.inHeight;++tt)for(let nt=0;nt<p.inWidth;++nt){const st=tt-ce,Je=nt-Z;let qe=0;for(let lt=0;lt<F;lt+=D){const Me=(st+lt)/_;if(!(Me<0||Me>=p.outHeight||Math.floor(Me)!==Me))for(let $e=0;$e<B;$e+=C){const Ge=(Je+$e)/x;if(Ge<0||Ge>=p.outWidth||Math.floor(Ge)!==Ge)continue;const ut=F*B-1-y.get(Le,Me,Ge,Xe)===lt*B+$e?1:0;0!==ut&&(qe+=Fe.get(Le,Me,Ge,Xe)*ut)}}ve.set(qe,Le,tt,nt,Xe)}return e.makeTensorInfo(ve.shape,ve.dtype,ve.values)}},oG={kernelName:u.MaxPoolWithArgmax,backendName:"cpu",kernelFunc:({inputs:t,attrs:n,backend:e})=>{const{x:s}=t,{filterSize:r,strides:o,pad:i,includeBatchInIndex:a}=n,l=e;Lt(s,"MaxPoolWithArgmax");const c=l.data.get(s.dataId).values,d=u.backend_util.computePool2DInfo(s.shape,r,o,[1,1],i),[f,p]=function rG(t,n,e,s,r){const i=tx(t,0,e,u.util.computeStrides(n),r,"max"),a=AT(t,n,e,r,!0,s);return[i.values,a.values]}(c,s.shape,s.dtype,a,d),m=l.write(f,d.outShape,s.dtype),y=l.write(p,d.outShape,s.dtype);return[{dataId:m,shape:d.outShape,dtype:s.dtype},{dataId:y,shape:d.outShape,dtype:"int32"}]}},aG={kernelName:u.Mean,backendName:"cpu",kernelFunc:function iG(t){const{inputs:n,backend:e,attrs:s}=t,{x:r}=n,{axis:o,keepDims:i}=s,a=u.util.parseAxisParam(o,r.shape),c=u.backend_util.computeOutAndReduceShapes(r.shape,a)[1],d=u.util.sizeFromShape(c),f=[],p=e.makeTensorInfo([],"float32",new Float32Array([d]));f.push(p);const m=pu({inputs:{x:r},backend:e,attrs:{dtype:"float32"}});f.push(m);const y=rx({inputs:{a:m,b:p},backend:e});f.push(y);const _=af({inputs:{x:y},backend:e,attrs:{axis:o,keepDims:i}});return f.forEach(x=>e.disposeIntermediateTensorInfo(x)),_}},uG={kernelName:u.Min,backendName:"cpu",kernelFunc:function lG(t){const{inputs:n,backend:e,attrs:s}=t,{x:r}=n,{axis:o,keepDims:i}=s;Lt(r,"min");const a=u.util.parseAxisParam(o,r.shape);let l=a;const c=u.backend_util.getAxesPermutation(l,r.shape.length);let d=r;null!=c&&(d=go({inputs:{x:r},backend:e,attrs:{perm:c}}),l=u.backend_util.getInnerMostAxes(l.length,r.shape.length)),u.backend_util.assertAxesAreInnerMostDims("min",l,d.shape.length);const[f,p]=u.backend_util.computeOutAndReduceShapes(d.shape,l),m=u.util.sizeFromShape(p),y=u.util.makeZerosTypedArray(u.util.sizeFromShape(f),d.dtype),_=e.data.get(d.dataId).values;for(let D=0;D<y.length;++D){const C=D*m;let F=_[C];for(let B=0;B<m;++B){const Z=_[C+B];(Number.isNaN(Z)||Z<F)&&(F=Z)}y[D]=F}null!=c&&e.disposeIntermediateTensorInfo(d);const x=e.makeTensorInfo(f,d.dtype,y);if(i){const C=cs({inputs:{x},backend:e,attrs:{shape:u.backend_util.expandShapeToKeepDim(f,a)}});return e.disposeIntermediateTensorInfo(x),C}return x}},sw=sr((t,n)=>Math.min(t,n)),cG=br(u.Minimum,sw),dG={kernelName:u.Minimum,backendName:"cpu",kernelFunc:cG},fG={kernelName:u.MirrorPad,backendName:"cpu",kernelFunc:function hG(t){const{inputs:n,backend:e,attrs:s}=t,{x:r}=n,{paddings:o,mode:i}=s;Lt(r,"mirrorPad");const a=o.map((F,B)=>F[0]+r.shape[B]+F[1]),l=o.map(F=>F[0]),c=o.map((F,B)=>F[0]+r.shape[B]),d="reflect"===i?0:1,f=e.data.get(r.dataId).values,p=r.shape.length,m=u.util.computeStrides(r.shape),y=u.util.sizeFromShape(a),_=a.length,x=u.util.computeStrides(a),D=u.util.getTypedArrayFromDType(r.dtype,y);for(let F=0;F<y;F++){let B=u.util.indexToLoc(F,_,x);for(let ce=0;ce<_;ce++)B[ce]<l[ce]?B[ce]=2*l[ce]-B[ce]-d:B[ce]>=c[ce]&&(B[ce]=2*(c[ce]-1)-B[ce]+d);B=B.map((ce,ve)=>ce-l[ve]);const Z=u.util.locToIndex(B,p,m);D[F]=f[Z]}return{dataId:e.write(D,a,r.dtype),shape:a,dtype:r.dtype}}},pG=sr((t,n)=>{const e=t%n;return t<0&&n<0||t>=0&&n>=0?e:(e+n)%n}),mG=br(u.Mod,pG),gG={kernelName:u.Mod,backendName:"cpu",kernelFunc:mG};var yG=h(340);function rw(t){const{inputs:n,backend:e,attrs:s}=t,{logits:r}=n,{dim:o}=s,i=r.shape.length;let a=o;if(-1===a&&(a=i-1),a!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${a}`);const l=u.util.parseAxisParam([a],r.shape),c=tw({inputs:{x:r},backend:e,attrs:{reductionIndices:l,keepDims:!1}}),d=u.backend_util.expandShapeToKeepDim(c.shape,l),f=cs({inputs:{x:c},backend:e,attrs:{shape:d}}),p=ix({inputs:{a:r,b:f},backend:e}),m=VT({inputs:{x:p},backend:e}),y=af({inputs:{x:m},backend:e,attrs:{axis:l,keepDims:!1}}),_=cs({inputs:{x:y},backend:e,attrs:{shape:d}}),x=rx({inputs:{a:m,b:_},backend:e});return e.disposeIntermediateTensorInfo(c),e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(y),e.disposeIntermediateTensorInfo(_),x}const vG={kernelName:u.Softmax,backendName:"cpu",kernelFunc:rw},EG={kernelName:u.Multinomial,backendName:"cpu",kernelFunc:function xG(t){const{inputs:n,backend:e,attrs:s}=t,{logits:r}=n,{numSamples:o,seed:i,normalized:a}=s;Lt(r,"multinomial");const l=a?r:rw({inputs:{logits:r},backend:e,attrs:{dim:-1}}),c=l.shape[0],d=l.shape[1],f=e.data.get(l.dataId).values,p=[c,o],m=u.util.makeZerosTypedArray(u.util.sizeFromShape(p),"int32");for(let y=0;y<c;++y){const _=y*d,x=new Float32Array(d-1);x[0]=f[_];for(let F=1;F<x.length;++F)x[F]=x[F-1]+f[_+F];const D=yG.alea(i.toString()),C=y*o;for(let F=0;F<o;++F){const B=D();m[C+F]=x.length;for(let Z=0;Z<x.length;Z++)if(B<x[Z]){m[C+F]=Z;break}}}return a||e.disposeIntermediateTensorInfo(l),e.makeTensorInfo(p,"int32",m)}};function ow(t,n,e){const s=u.util.createScalarValue(-1,e);return sx([],n,s,t,e)}const bG={kernelName:u.Neg,backendName:"cpu",kernelFunc:function _G(t){const{inputs:n,backend:e}=t,{x:s}=n;Lt(s,"neg");const r=e.data.get(s.dataId).values,[o,i]=ow(r,s.shape,s.dtype);return e.makeTensorInfo(i,s.dtype,o)}},CG=u.kernel_impls.nonMaxSuppressionV3Impl,IG={kernelName:u.NonMaxSuppressionV3,backendName:"cpu",kernelFunc:function DG(t){const{inputs:n,backend:e,attrs:s}=t,{boxes:r,scores:o}=n,{maxOutputSize:i,iouThreshold:a,scoreThreshold:l}=s;Lt(r,"NonMaxSuppression");const c=e.data.get(r.dataId).values,d=e.data.get(o.dataId).values,{selectedIndices:f}=CG(c,d,i,a,l);return e.makeTensorInfo([f.length],"int32",new Int32Array(f))}},TG=u.kernel_impls.nonMaxSuppressionV4Impl,SG={kernelName:u.NonMaxSuppressionV4,backendName:"cpu",kernelFunc:function wG(t){const{inputs:n,backend:e,attrs:s}=t,{boxes:r,scores:o}=n,{maxOutputSize:i,iouThreshold:a,scoreThreshold:l,padToMaxOutputSize:c}=s;Lt(r,"NonMaxSuppressionPadded");const d=e.data.get(r.dataId).values,f=e.data.get(o.dataId).values,{selectedIndices:p,validOutputs:m}=TG(d,f,i,a,l,c);return[e.makeTensorInfo([p.length],"int32",new Int32Array(p)),e.makeTensorInfo([],"int32",new Int32Array([m]))]}},NG=u.kernel_impls.nonMaxSuppressionV5Impl,OG={kernelName:u.NonMaxSuppressionV5,backendName:"cpu",kernelFunc:function AG(t){const{inputs:n,backend:e,attrs:s}=t,{boxes:r,scores:o}=n,{maxOutputSize:i,iouThreshold:a,scoreThreshold:l,softNmsSigma:c}=s;Lt(r,"NonMaxSuppressionWithScore");const d=e.data.get(r.dataId).values,f=e.data.get(o.dataId).values,p=i,m=a,y=l,_=c,{selectedIndices:x,selectedScores:D}=NG(d,f,p,m,y,_);return[e.makeTensorInfo([x.length],"int32",new Int32Array(x)),e.makeTensorInfo([D.length],"float32",new Float32Array(D))]}},iw=sr((t,n)=>t!==n?1:0),RG=br(u.NotEqual,iw,null,"bool"),MG={kernelName:u.NotEqual,backendName:"cpu",kernelFunc:RG},PG={kernelName:u.OneHot,backendName:"cpu",kernelFunc:function kG(t){const{inputs:n,backend:e,attrs:s}=t,{indices:r}=n,{dtype:o,depth:i,onValue:a,offValue:l}=s;Lt(r,"oneHot");const c=u.util.sizeFromShape(r.shape),d=new Float32Array(c*i);d.fill(l);const f=e.data.get(r.dataId).values;for(let p=0;p<c;++p)f[p]>=0&&f[p]<i&&(d[p*i+f[p]]=a);return e.makeTensorInfo([...r.shape,i],o,d)}};function Mm(t){const{inputs:n,backend:e}=t,{x:s}=n;if("string"===s.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===s.dtype){const r=nc({inputs:{input:s},backend:e}),o=Mm({inputs:{x:r},backend:e}),i=xd({inputs:{input:s},backend:e}),a=Mm({inputs:{x:i},backend:e}),l=wo({inputs:{real:o,imag:a},backend:e});return e.disposeIntermediateTensorInfo(r),e.disposeIntermediateTensorInfo(o),e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(a),l}return lx({backend:e,attrs:{shape:s.shape,value:0,dtype:s.dtype}})}const $G={kernelName:u.ZerosLike,backendName:"cpu",kernelFunc:Mm},FG={kernelName:u.OnesLike,backendName:"cpu",kernelFunc:function aw(t){const{inputs:n,backend:e}=t,{x:s}=n;if("string"===s.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===s.dtype){const r=nc({inputs:{input:s},backend:e}),o=aw({inputs:{x:r},backend:e}),i=xd({inputs:{input:s},backend:e}),a=Mm({inputs:{x:i},backend:e}),l=wo({inputs:{real:o,imag:a},backend:e});return e.disposeIntermediateTensorInfo(r),e.disposeIntermediateTensorInfo(o),e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(a),l}return lx({backend:e,attrs:{shape:s.shape,value:1,dtype:s.dtype}})}};function lw(t){const{inputs:n,backend:e,attrs:s}=t,{axis:r}=s;if(1===n.length)return Rm({inputs:{input:n[0]},backend:e,attrs:{dim:r}});const o=n[0].shape,i=n[0].dtype;n.forEach(d=>{u.util.assertShapesMatch(o,d.shape,"All tensors passed to stack must have matching shapes"),u.util.assert(i===d.dtype,()=>"All tensors passed to stack must have matching dtypes")});const a=[],c=Ed({inputs:n.map(d=>{const f=Rm({inputs:{input:d},backend:e,attrs:{dim:r}});return a.push(f),f}),backend:e,attrs:{axis:r}});return a.forEach(d=>e.disposeIntermediateTensorInfo(d)),c}const LG={kernelName:u.Pack,backendName:"cpu",kernelFunc:lw},uw={kernelName:u.PadV2,backendName:"cpu",kernelFunc:function BG(t){const{inputs:n,backend:e,attrs:s}=t,{x:r}=n,{paddings:o,constantValue:i}=s;Lt(r,"pad");const a=o.map((C,F)=>C[0]+r.shape[F]+C[1]),l=o.map(C=>C[0]),c=e.data.get(r.dataId).values,d=u.util.sizeFromShape(r.shape),f=r.shape.length,p=u.util.computeStrides(r.shape),m=u.util.sizeFromShape(a),y=a.length,_=u.util.computeStrides(a),x=u.util.getTypedArrayFromDType(r.dtype,m);0!==i&&x.fill(i);for(let C=0;C<d;C++){const B=u.util.indexToLoc(C,f,p).map((ce,ve)=>ce+l[ve]);x[u.util.locToIndex(B,y,_)]=c[C]}return{dataId:e.write(x,a,r.dtype),shape:a,dtype:r.dtype}}},UG=sr((t,n)=>Math.pow(t,n)),VG=br(u.Pow,UG),zG={kernelName:u.Pow,backendName:"cpu",kernelFunc:VG};function cw(t,n,e,s){const[r,o]=u.backend_util.computeOutAndReduceShapes(t,s),i=(0,u.upcastType)(n,"int32"),a=u.util.makeZerosTypedArray(u.util.sizeFromShape(r),i),l=u.util.sizeFromShape(o);for(let c=0;c<a.length;++c){const d=c*l;let f=1;for(let p=0;p<l;++p)f*=e[d+p];a[c]=f}return{outVals:a,outShape:r,outDtype:i}}const GG={kernelName:u.Prod,backendName:"cpu",kernelFunc:function WG(t){const{inputs:n,backend:e,attrs:s}=t,{x:r}=n,{axis:o,keepDims:i}=s;Lt(r,"prod");const a=r.shape.length,l=u.util.parseAxisParam(o,r.shape),c=u.backend_util.getAxesPermutation(l,a);let d=l,f=r;const p=[];null!=c&&(f=go({inputs:{x:r},backend:e,attrs:{perm:c}}),p.push(f),d=u.backend_util.getInnerMostAxes(d.length,a));const m=e.data.get(f.dataId).values,{outVals:y,outShape:_,outDtype:x}=cw(f.shape,f.dtype,m,d);let D=_;return i&&(D=u.backend_util.expandShapeToKeepDim(_,l)),p.forEach(C=>e.disposeIntermediateTensorInfo(C)),e.makeTensorInfo(D,x,y)}};function dw(t,n){const e=t.slice(0,n);for(;e.length<n;)e.push(1);for(let s=n;s<t.length;s++)e[n-1]*=t[s];return e}function hw(t,n,e,s,r,o,i,a){if(0===t.length)throw new Error("paramsNestedSplits must be non empty");if(0===n[0].length)throw new Error("Split tensors must not be scalars");if(function HG(t,n,e){t.forEach((s,r)=>{if(s<0||s>=e){const o=u.util.indexToLoc(r,n.length,u.util.computeStrides(n)).join(",");throw new Error(`indices[${o}] = ${s} is not in [0, ${e})`)}})}(o,i,n[0][0]-1),0===s.length)throw new Error("params.rank must be nonzero");const c=s[0],{outSplits:d,valueSlices:f,numValues:p}=function jG(t,n,e,s){const r=[];let o=0;const a=new Array(n.length-1+e.length).fill(null).map(()=>[0]);!function KG(t,n){for(let e=0;e<t.length;++e){const s=t[e],r=e===t.length-1?n:t[e+1].length;if(0===s.length)throw new Error("Ragged splits may not be empty");if(s[0]<0)throw new Error("Ragged splits must be non-negative");if(s[s.length-1]>r)throw new Error("Ragged splits must not point past values");for(let o=1;o<s.length;++o)if(s[o-1]>s[o])throw new Error("Ragged splits must be sorted in ascending order")}}(e,s);let l=1;for(let c=0;c<n.length-1;++c){l*=n[c];const d=n[c+1];for(let f=1;f<l+1;++f)a[c].push(f*d)}for(let c=0;c<t.length;++c){let d=t[c],f=t[c]+1;for(let p=0;p<e.length;++p){const m=e[p],y=p+n.length-1;if(y>=0){const _=a[y],x=_[_.length-1]-m[d];for(let D=d;D<f;++D)a[y].push(m[D+1]+x)}d=m[d],f=m[f]}f!==d&&(r.push([d,f]),o+=f-d)}return{outSplits:a,valueSlices:r,numValues:o}}(o,i,t,c),m=function XG(t){const n=[];for(let e=0;e<t.length;++e){const r=u.util.getArrayFromDType("int32",t[e].length);n.push(r),t[e].forEach((o,i)=>r[i]=o)}return n}(d),y=function YG(t,n,e,s,r){const o=n.slice();o[0]=r;const i=u.util.getArrayFromDType(e,u.util.sizeFromShape(o)),a=t.length;return function ZG(t,n,e,s,r,o){const i=dw(n,2)[1],a=dw(o,2)[1];let l=0;for(const c of e)for(let d=c[0];d<c[1];++d){for(let f=0;f<s;++f)r[l*a+f]=t[d*i+f];++l}}(t,n,s,0===a?0:a/n[0],i,o),[i,o]}(e,s,r,f,p);return[m,y[0],y[1]]}const JG={kernelName:u.RaggedGather,backendName:"cpu",kernelFunc:function QG(t){const{inputs:n,backend:e,attrs:s}=t,{paramsNestedSplits:r,paramsDenseValues:o,indices:i}=n,l=r.map(D=>e.data.get(D.dataId).values),c=r.map(D=>D.shape),d=e.data.get(o.dataId).values,f=e.data.get(i.dataId).values,[p,m,y]=hw(l,c,d,o.shape,o.dtype,f,i.shape),_=p.map(D=>e.makeTensorInfo([D.length],"int32",D)),x=e.makeTensorInfo(y,o.dtype,m);return _.concat([x])}};var fi=u.backend_util.RowPartitionType;class km{constructor(n,e,s,r,o,i,a,l,c,d){this.shape=n,this.shapeShape=e,this.values=s,this.valuesShape=r,this.valuesDType=o,this.defaultValue=i,this.defaultValueShape=a,this.rowPartitionValues=l,this.rowPartitionValuesShapes=c,this.rowPartitionTypes=u.backend_util.getRowPartitionTypesHelper(d),this.raggedRank=u.backend_util.getRaggedRank(this.rowPartitionTypes)}getRowPartitionTypeByDimension(n){return this.rowPartitionTypes[0]===fi.FIRST_DIM_SIZE?this.rowPartitionTypes[n+1]:this.rowPartitionTypes[n]}getRowPartitionTensor(n){return this.rowPartitionTypes[0]===fi.FIRST_DIM_SIZE?this.rowPartitionValues[n+1]:this.rowPartitionValues[n]}getMaxWidth(n){const e=this.getRowPartitionTensor(n-1);switch(this.getRowPartitionTypeByDimension(n-1)){case fi.VALUE_ROWIDS:return km.getMaxWidthValueRowID(e);case fi.ROW_SPLITS:return km.getMaxWidthRowSplit(e);default:throw new Error(`Cannot handle partition type ${fi[this.getRowPartitionTypeByDimension(n-1)]}`)}}static getMaxWidthRowSplit(n){const e=n.length;if(0===e||1===e)return 0;let s=0;for(let r=0;r<e-1;++r){const o=n[r+1]-n[r];o>s&&(s=o)}return s}static getMaxWidthValueRowID(n){const e=n.length;if(0===e)return 0;let s=0,r=n[0],o=0;for(let i=1;i<e;++i){const a=n[i];a!==r&&(r=a,o=Math.max(i-s,o),s=i)}return Math.max(e-s,o)}tensorShapeFromTensor(n,e,s=!0){if(0===e.length){if(-1===n[0])return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return pw(n,s)}calculateOutputSize(n){const e=this.valuesShape;u.backend_util.validateDefaultValueShape(this.defaultValueShape,e);const r=this.tensorShapeFromTensor(this.shape,this.shapeShape),i=u.backend_util.combineRaggedTensorToTensorShapes(this.raggedRank,r,e);i[0]<0&&(i[0]=n);for(let a=1;a<=this.raggedRank;++a)i[a]<0&&(i[a]=this.getMaxWidth(a));return i}calculateFirstParentOutputIndex(n,e,s){const r=Math.min(n,s),o=[];let i=0;for(let a=0;a<r;++a,i+=e)o.push(i);for(let a=r;a<n;++a)o.push(-1);return u.util.assert(o.length===n,()=>"Final length of result must be equal to firstDimension."),o}calculateOutputIndexRowSplit(n,e,s,r){const o=n.length,i=[];for(let a=0;a<o-1;++a){const l=n[a+1]-n[a];let c=Math.min(r,l),d=e[a];-1===d&&(c=0);for(let f=0;f<c;++f)i.push(d),d+=s;for(let f=0;f<l-c;++f)i.push(-1)}if(o>0&&i.length!==n[o-1])throw new Error("Invalid row split size.");return i}calculateOutputIndexValueRowID(n,e,s,r){const o=n.length,i=[];if(0===o)return[];let a=0,l=n[0];if(l>=e.length)throw new Error(`Got currentValueRowId=${l}, which is not less than ${e.length}`);let c=e[l];i.push(c);for(let d=1;d<o;++d){const f=n[d];if(f===l)c>=0&&(++a,a<r?c+=s:c=-1);else{if(a=0,l=f,f>=e.length)throw new Error(`Got nextValueRowId=${f} which is not less than ${e.length}`);c=e[f]}i.push(c)}if(i.length!==n.length)throw new Error("Invalid row ids.");return i}calculateOutputIndex(n,e,s,r){const o=this.getRowPartitionTensor(n),i=this.getRowPartitionTypeByDimension(n);switch(i){case fi.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(o,e,s,r);case fi.ROW_SPLITS:if(o.length-1>e.length)throw new Error(`Row partition size is greater than output size: ${o.length-1} > ${e.length}`);return this.calculateOutputIndexRowSplit(o,e,s,r);default:throw new Error(`Unsupported partition type: ${fi[i]}`)}}getFirstDimensionSize(){const n=this.rowPartitionValues[0];if(0===this.rowPartitionTypes.length)throw new Error("No row_partition_types given.");const e=this.rowPartitionTypes[0];switch(e){case fi.FIRST_DIM_SIZE:return n[0];case fi.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case fi.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${fi[e]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const e=this.getFirstDimensionSize(),s=this.calculateOutputSize(e),r=new Array(this.raggedRank+1);r[r.length-1]=1;for(let l=r.length-2;l>=0;--l)r[l]=r[l+1]*s[l+1];const o=pw(s,!1),i=u.util.getArrayFromDType(this.valuesDType,u.util.sizeFromShape(o));if(r[0]*s[0]>0){let l=this.calculateFirstParentOutputIndex(e,r[0],s[0]);for(let c=1;c<=this.raggedRank;++c)l=this.calculateOutputIndex(c-1,l,r[c],s[c]);this.setOutput(this.raggedRank,l,i,o)}return[o,i]}setOutput(n,e,s,r){if(0===s.length)return;const o=this.values,i=s;let a=r.slice();a=a.slice(n+1);const l=u.util.sizeFromShape(a),c=e.length;let d=this.defaultValue;if(d.length!==l&&1!==d.length){const y=this.defaultValueShape;(0,u.tidy)(()=>{const _=(0,u.reshape)(d,y);d=(0,u.broadcastTo)(_,a).dataSync()})}let f=0,p=0,m=0;for(let y=0;y<=c;++y){let _=y<c?e[y]:-1;if(_!==m){if(p<m){const x=o.subarray(f*l);fw(i.subarray(p*l),x,(m-p)*l)}if(y>=c&&(_=Math.floor(s.length/l)),_>m)if(1===this.defaultValue.length)i.subarray(m*l,_*l).fill(this.defaultValue[0]),m=_;else for(;_>m;)fw(i.slice(m*l),d,l),++m;_<0?(f=y+1,p=m):(f=y,p=m,m=p+1)}else++m}}}function fw(t,n,e){for(let s=0;s<e;s++)t[s]=n[s]}function pw(t,n){const e=[];for(let s of t){if(s<0){if(!n)throw new Error(`Dimension ${s} must be >= 0`);if(s<-1)throw new Error(`Dimension ${s} must be >= -1`);s=-1}e.push(s)}return e}function mw(t,n,e,s,r,o,i,a,l,c){return new km(t,n,e,s,r,o,i,a,l,c).compute()}const eH={kernelName:u.RaggedTensorToTensor,backendName:"cpu",kernelFunc:function qG(t){const{inputs:n,backend:e,attrs:s}=t,{shape:r,values:o,defaultValue:i,rowPartitionTensors:a}=n,{rowPartitionTypes:l}=s,c=e.data.get(r.dataId).values,d=e.data.get(o.dataId).values,f=e.data.get(i.dataId).values,p=a.map(x=>e.data.get(x.dataId).values),m=a.map(x=>x.shape),[y,_]=mw(c,r.shape,d,o.shape,o.dtype,f,i.shape,p,m,l);return e.makeTensorInfo(y,o.dtype,_)}};function gw(t,n,e,s){if(t===n||t<n&&e<0||n<t&&e>1)return u.util.makeZerosTypedArray(0,s);const a=Math.abs(Math.ceil((n-t)/e)),l=u.util.makeZerosTypedArray(a,s);n<t&&1===e&&(e=-1),l[0]=t;for(let c=1;c<l.length;c++)l[c]=l[c-1]+e;return l}const nH={kernelName:u.Range,backendName:"cpu",kernelFunc:function tH(t){const{backend:n,attrs:e}=t,{start:s,stop:r,dtype:o,step:i}=e,a=gw(s,r,i,o);return n.makeTensorInfo([a.length],o,a)}},sH=Jn(u.Reciprocal,t=>1/t),rH={kernelName:u.Reciprocal,backendName:"cpu",kernelFunc:sH},iH={kernelName:u.ResizeBilinear,backendName:"cpu",kernelFunc:function oH(t){const{inputs:n,backend:e,attrs:s}=t,{images:r}=n,{alignCorners:o,halfPixelCenters:i,size:a}=s;Lt(r,"resizeBilinear");const l=u.util.computeStrides(r.shape),[c,d]=a,[f,p,m,y]=r.shape,_=e.data.get(r.dataId).values,x=new Float32Array(u.util.sizeFromShape([f,c,d,y])),D=[o&&c>1?p-1:p,o&&d>1?m-1:m],C=[o&&c>1?c-1:c,o&&d>1?d-1:d];let F=0;const B=D[0]/C[0],Z=D[1]/C[1];for(let ce=0;ce<f;ce++)for(let ve=0;ve<c;ve++){let _e;_e=i?B*(ve+.5)-.5:B*ve;const Fe=Math.max(0,Math.floor(_e)),Le=_e-Fe,Xe=Math.min(p-1,Math.ceil(_e)),tt=ce*l[0]+Fe*l[1],nt=ce*l[0]+Xe*l[1];for(let st=0;st<d;st++){let Je;Je=i?Z*(st+.5)-.5:Z*st;const qe=Math.max(0,Math.floor(Je)),lt=Je-qe,Me=Math.min(m-1,Math.ceil(Je)),$e=tt+qe*l[2],Ge=nt+qe*l[2],Ze=tt+Me*l[2],et=nt+Me*l[2];for(let ut=0;ut<y;ut++){const Ct=_[$e+ut],vt=_[Ge+ut],jt=Ct+(_[Ze+ut]-Ct)*lt;x[F++]=jt+(vt+(_[et+ut]-vt)*lt-jt)*Le}}}return e.makeTensorInfo([f,c,d,y],"float32",x)}},lH={kernelName:u.ResizeBilinearGrad,backendName:"cpu",kernelFunc:function aH(t){const{inputs:n,backend:e,attrs:s}=t,{images:r,dy:o}=n,{alignCorners:i}=s;Lt([o,r],"resizeBilinearGrad");const a=u.util.computeStrides(r.shape),[l,c,d,f]=r.shape,[,p,m]=o.shape,y=new Float32Array(l*c*d*f),_=[i&&p>1?c-1:c,i&&m>1?d-1:d],x=[i&&p>1?p-1:p,i&&m>1?m-1:m],D=_[0]/x[0],C=_[1]/x[1],F=e.data.get(o.dataId).values;let B=0;for(let Z=0;Z<l;Z++){const ce=Z*a[0];for(let ve=0;ve<p;ve++){const _e=ve*D,Fe=Math.floor(_e),Le=Math.min(Math.ceil(_e),c-1),Xe=ce+Fe*a[1],tt=ce+Le*a[1],nt=_e-Fe,st=1-nt;for(let Je=0;Je<m;Je++){const qe=Je*C,lt=Math.floor(qe),Me=Math.min(Math.ceil(qe),d-1),$e=qe-lt,Ge=1-$e,Ze=Xe+lt*a[2],et=Xe+Me*a[2],ut=tt+lt*a[2],Ct=tt+Me*a[2],vt=st*Ge,wt=st*$e,Ot=nt*Ge,jt=nt*$e;for(let Gt=0;Gt<f;Gt++){const un=F[B++];y[Ze+Gt]+=un*vt,y[et+Gt]+=un*wt,y[ut+Gt]+=un*Ot,y[Ct+Gt]+=un*jt}}}}return e.makeTensorInfo([l,d,c,f],"float32",y)}},cH={kernelName:u.ResizeNearestNeighbor,backendName:"cpu",kernelFunc:function uH(t){const{inputs:n,backend:e,attrs:s}=t,{images:r}=n,{alignCorners:o,halfPixelCenters:i,size:a}=s;Lt(r,"resizeNearestNeighbor");const l=u.util.computeStrides(r.shape),[c,d]=a,[f,p,m,y]=r.shape,_=e.data.get(r.dataId).values,x=new Float32Array(f*c*d*y),D=[o&&c>1?p-1:p,o&&d>1?m-1:m],C=[o&&c>1?c-1:c,o&&d>1?d-1:d],F=D[0]/C[0],B=D[1]/C[1];let Z=0;for(let ce=0;ce<f;ce++){const ve=ce*l[0];for(let _e=0;_e<c;_e++){const Fe=i?F*(_e+.5):F*_e;let Le=Math.min(p-1,o?Math.round(Fe):Math.floor(Fe));i&&(Le=Math.max(0,Le));const Xe=ve+Le*l[1];for(let tt=0;tt<d;tt++){const nt=i?B*(tt+.5):B*tt;let st=Math.min(m-1,o?Math.round(nt):Math.floor(nt));i&&(st=Math.max(0,st));const Je=Xe+st*l[2];for(let qe=0;qe<y;qe++)x[Z++]=_[Je+qe]}}}return e.makeTensorInfo([f,c,d,y],r.dtype,x)}},hH={kernelName:u.ResizeNearestNeighborGrad,backendName:"cpu",kernelFunc:function dH(t){const{inputs:n,backend:e,attrs:s}=t,{images:r,dy:o}=n,{alignCorners:i}=s;Lt([o,r],"resizeNearestNeighborGrad");const a=u.util.computeStrides(r.shape),l=u.util.computeStrides(o.shape),[c,d,f,p]=r.shape,[,m,y]=o.shape,_=new Float32Array(c*d*f*p),x=e.data.get(o.dataId).values,D=[i&&m>1?d-1:d,i&&y>1?f-1:f],C=[i&&m>1?m-1:m,i&&y>1?y-1:y],F=D[0]/C[0],B=D[1]/C[1],Z=1/F,ce=1/B,ve=2*Math.ceil(Z)+2,_e=2*Math.ceil(ce)+2;for(let Fe=0;Fe<c;Fe++){const Le=Fe*a[0];for(let Xe=0;Xe<d;Xe++){const tt=Le+Xe*a[1],nt=Math.floor(Xe*Z),st=Math.floor(nt-ve/2);for(let Je=0;Je<f;Je++){const qe=tt+Je*a[2],lt=Math.floor(Je*ce),Me=Math.floor(lt-_e/2);for(let $e=0;$e<p;$e++){let Ge=0;for(let Ze=0;Ze<ve;Ze++){const et=Ze+st;if(et<0||et>=m)continue;const ut=Le+et*l[1],Ct=et*F;if(Xe===Math.min(d-1,i?Math.round(Ct):Math.floor(Ct)))for(let wt=0;wt<_e;wt++){const Ot=wt+Me;if(Ot<0||Ot>=y)continue;const jt=ut+Ot*l[2],Gt=Ot*B;Je===Math.min(f-1,i?Math.round(Gt):Math.floor(Gt))&&(Ge+=x[jt+$e])}}_[qe+$e]=Ge}}}}return e.makeTensorInfo(r.shape,r.dtype,_)}},pH={kernelName:u.Reverse,backendName:"cpu",kernelFunc:function fH(t){const{inputs:n,backend:e,attrs:s}=t,{x:r}=n,{dims:o}=s;Lt(r,"reverse");const i=r.shape.length,a=u.util.parseAxisParam(o,r.shape);if(0===i)return Za({inputs:{x:r},backend:e});const l=new u.TensorBuffer(r.shape,r.dtype),c=e.bufferSync(r);for(let d=0;d<l.size;d++){const f=l.indexToLoc(d),p=f.slice();a.forEach(m=>p[m]=r.shape[m]-1-p[m]),l.set(c.get(...p),...f)}return e.makeTensorInfo(l.shape,l.dtype,l.values)}},mH={kernelName:u.RotateWithOffset,backendName:"cpu",kernelFunc:({inputs:t,attrs:n,backend:e})=>{const{image:s}=t,{radians:r,fillValue:o,center:i}=n,a=e,l=u.util.getTypedArrayFromDType(s.dtype,u.util.sizeFromShape(s.shape)),[c,d,f,p]=s.shape,[m,y]=u.backend_util.getImageCenter(i,d,f),x=Math.sin(r),D=Math.cos(r),C=a.data.get(s.dataId).values;for(let B=0;B<c;B++){const Z=B*f*d*p;for(let ce=0;ce<d;ce++){const ve=ce*(f*p);for(let _e=0;_e<f;_e++){const Fe=_e*p;for(let Le=0;Le<p;Le++){const Xe=[c,ce,_e,Le],tt=Xe[2],nt=Xe[1];let st=(tt-m)*D-(nt-y)*x,Je=(tt-m)*x+(nt-y)*D;st=Math.round(st+m),Je=Math.round(Je+y);let qe=o;"number"!=typeof o&&(qe=3===Le?255:o[Le]),st>=0&&st<f&&Je>=0&&Je<d&&(qe=C[Z+Je*(f*p)+st*p+Le]),l[Z+ve+Fe+Le]=qe}}}}return{dataId:a.write(l,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},gH=Jn(u.Round,t=>{const n=Math.floor(t);return t-n<.5?Math.floor(t):t-n>.5?Math.ceil(t):n%2==0?n:n+1}),yH={kernelName:u.Round,backendName:"cpu",kernelFunc:gH},yw=fu(t=>1/Math.sqrt(t)),vH=yd(u.Rsqrt,yw),xH={kernelName:u.Rsqrt,backendName:"cpu",kernelFunc:vH};function _d(t,n,e,s,r,o,i,a,l,c){const d=[s/r,r],f=t.values,p=n.values;if(0===s)return(0,u.buffer)(e,n.dtype);const m=(0,u.buffer)(d,n.dtype);"string"==typeof l||"number"==typeof l?m.values.fill(l):"boolean"==typeof l&&m.values.fill(+l);for(let y=0;y<o;y++){const _=[];let x=0;for(let D=0;D<i;D++){const C=f[y*i+D];_.push(C),x+=C*a[D]}if(x<0||x>=s/r)throw new Error(`Invalid indices: ${_} does not index into ${e}`);for(let D=0;D<r;D++)c?m.values[x*r+D]+=p[y*r+D]:m.values[x*r+D]=0===n.rank?p[0]:p[y*r+D]}return m}const _H={kernelName:u.ScatterNd,backendName:"cpu",kernelFunc:function EH(t){const{inputs:n,backend:e,attrs:s}=t,{indices:r,updates:o}=n,{shape:i}=s,{sliceRank:a,numUpdates:l,sliceSize:c,strides:d,outputSize:f}=u.backend_util.calculateShapes(o,r,i),_=_d(e.bufferSync(r),e.bufferSync(o),i,f,c,l,a,d,0,!0);return e.makeTensorInfo(i,_.dtype,_.values)}};function bH(t,n){let e=0,s=t.length,r=0;for(;e<s;)r=Math.floor((e+s)/2),t[r]<n?e=r+1:s=r;return s}function CH(t,n){let e=0,s=t.length,r=0;for(;e<s;)r=Math.floor((e+s)/2),t[r]<=n?e=r+1:s=r;return s}const TH={kernelName:u.SearchSorted,backendName:"cpu",kernelFunc:function IH(t){const{inputs:n,backend:e,attrs:s}=t,{sortedSequence:r,values:o}=n,{side:i}=s,c=function DH(t,n,e,s,r,o){const i=u.util.getArrayFromDType("int32",e*r);for(let a=0;a<e;++a){const l=t.slice(a*s,(a+1)*s),c=a*r;for(let d=0;d<r;++d)i[c+d]="left"===o?bH(l,n[d+c]):CH(l,n[d+c])}return i}(e.data.get(r.dataId).values,e.data.get(o.dataId).values,r.shape[0],r.shape[1],o.shape[1],i);return e.makeTensorInfo(o.shape,"int32",c)}},SH={kernelName:u.Select,backendName:"cpu",kernelFunc:function wH(t){const{inputs:n,backend:e}=t,{condition:s,t:r,e:o}=n;Lt([s,r,o],"select");const i=s.shape.length,a=e.data.get(s.dataId).values,l=e.data.get(r.dataId).values,c=e.data.get(o.dataId).values,d=(0,u.upcastType)(r.dtype,o.dtype),f=u.util.makeZerosTypedArray(u.util.sizeFromShape(r.shape),d);let p=0;const m=0===i||i>1||1===r.shape.length?1:u.util.sizeFromShape(r.shape.slice(1));for(let y=0;y<a.length;y++)for(let _=0;_<m;_++)f[p++]=1===a[y]?l[y]:c[y];return e.makeTensorInfo(r.shape,d,f)}},NH=u.backend_util.SELU_SCALEALPHA,AH=u.backend_util.SELU_SCALE,OH=Jn(u.Selu,t=>t>=0?AH*t:NH*(Math.exp(t)-1)),RH={kernelName:u.Selu,backendName:"cpu",kernelFunc:OH},MH=Jn(u.Sign,t=>t<0?-1:t>0?1:0),kH={kernelName:u.Sign,backendName:"cpu",kernelFunc:MH},PH=Jn(u.Sin,t=>Math.sin(t)),$H={kernelName:u.Sin,backendName:"cpu",kernelFunc:PH},FH=Jn(u.Sinh,t=>Math.sinh(t)),LH={kernelName:u.Sinh,backendName:"cpu",kernelFunc:FH},vw=Math.log(1.1920928955078125e-7)+2,BH=Jn(u.Softplus,t=>{const n=t>-vw,e=t<vw,s=Math.exp(t);let r;return r=e?s:n?t:Math.log(1+s),r}),UH={kernelName:u.Softplus,backendName:"cpu",kernelFunc:BH},zH={kernelName:u.SpaceToBatchND,backendName:"cpu",kernelFunc:function VH(t){const{inputs:n,backend:e,attrs:s}=t,{x:r}=n,{blockShape:o,paddings:i}=s;Lt([r],"spaceToBatchND");const a=u.util.sizeFromShape(o),l=[[0,0]];l.push(...i);for(let ce=1+o.length;ce<r.shape.length;++ce)l.push([0,0]);const c=uw.kernelFunc({inputs:{x:r},backend:e,attrs:{paddings:l,constantValue:0}}),d=u.backend_util.getReshaped(c.shape,o,a,!1),f=u.backend_util.getPermuted(d.length,o.length,!1),p=u.backend_util.getReshapedPermuted(c.shape,o,a,!1),_=cs({inputs:{x:c},backend:e,attrs:{shape:d}}),C=go({inputs:{x:_},backend:e,attrs:{perm:f}}),Z=cs({inputs:{x:C},backend:e,attrs:{shape:p}});return e.disposeIntermediateTensorInfo(c),e.disposeIntermediateTensorInfo(_),e.disposeIntermediateTensorInfo(C),Z}};function xw(t,n,e,s,r,o,i){const a=n[0],l=o[0],c=new Array(l),d=new Array(a),f=n[1];if(0===l){if(0!==a)throw new Error(u.backend_util.getSparseFillEmptyRowsIndicesDenseShapeMismatch(a));return[u.util.getArrayFromDType(e,0),[0,f],u.util.getArrayFromDType(r,0),c,d]}let p=!0,m=0;const y=new Array(l).fill(0);for(let x=0;x<a;++x){const D=t[x*f];if(D<0)throw new Error(u.backend_util.getSparseFillEmptyRowsNegativeIndexErrorMessage(x,D));if(D>=l)throw new Error(u.backend_util.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(x,D,l));++y[D],p=p&&D>=m,m=D}let _=!0;for(let x=0;x<l;++x){const D=0===y[x];c[x]=D,_=_&&!D,y[x]=Math.max(y[x],1),x>0&&(y[x]+=y[x-1])}if(_&&p){const x=t,D=s;for(let C=0;C<a;++C)d[C]=C;return[x,[a,f],D,c,d]}{const x=y[l-1],D=u.util.getArrayFromDType(e,x*f),C=u.util.getArrayFromDType(r,x),F=new Array(l).fill(0);for(let B=0;B<a;++B){const Z=t[B*f],ve=(0===Z?0:y[Z-1])+F[Z];F[Z]++;for(let _e=0;_e<f;++_e)D[ve*f+_e]=t[B*f+_e];C[ve]=s[B],d[B]=ve}for(let B=0;B<l;++B)if(0===F[B]){const ce=0===B?0:y[B-1];D[ce*f+0]=B;for(let ve=1;ve<f;++ve)D[ce*f+ve]=0;C[ce]=i}return[D,[x,f],C,c,d]}}const GH={kernelName:u.SparseFillEmptyRows,backendName:"cpu",kernelFunc:function WH(t){const{inputs:n,backend:e}=t,{indices:s,values:r,denseShape:o,defaultValue:i}=n;if(1!==o.shape.length)throw new Error(`Dense shape must be a vector, saw:\n        ${o.shape}`);if(2!==s.shape.length)throw new Error(`Indices must be a matrix, saw:\n        ${s.shape}`);if(1!==r.shape.length)throw new Error(`Values must be a vector, saw:\n        ${r.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);const a=e.data.get(s.dataId).values,l=e.data.get(r.dataId).values,c=e.data.get(o.dataId).values,d=e.data.get(i.dataId).values[0],[f,p,m,y,_]=xw(a,s.shape,s.dtype,l,r.dtype,c,d);return[e.makeTensorInfo(p,s.dtype,f),e.makeTensorInfo([p[0]],r.dtype,m),e.makeTensorInfo([y.length],"bool",new Uint8Array(y.map(x=>Number(x)))),e.makeTensorInfo([_.length],s.dtype,new Int32Array(_))]}};function Ew(t,n,e,s,r){const o=u.util.sizeFromShape(s),i=n[0],a=r.length,l=[];let c=1,d=-1;for(let x=0;x<a;++x){const D=r[x];if(-1===D){if(-1!==d)throw new Error(u.backend_util.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(d,x));d=x,l.push(1)}else{if(D<0)throw new Error(u.backend_util.getSparseReshapeNegativeOutputDimErrorMessage(x,D));c*=D,l.push(D)}}if(-1!==d){if(c<=0)throw new Error(u.backend_util.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage());const x=Math.trunc(o/c);if(c*x!==o)throw new Error(u.backend_util.getSparseReshapeInputOutputMultipleErrorMessage(s,l));l[d]=x}if(u.util.sizeFromShape(l)!==o)throw new Error(u.backend_util.getSparseReshapeInputOutputMismatchErrorMessage(s,l));const p=s.length,m=[];if(p>0){m[p-1]=1;for(let x=p-2;x>=0;--x)m[x]=m[x+1]*s[x+1]}const y=[];if(a>0){y[a-1]=1;for(let x=a-2;x>=0;--x)y[x]=y[x+1]*l[x+1]}const _=u.util.getArrayFromDType(e,i*a);for(let x=0;x<i;++x){let D=0;for(let C=0;C<p;++C)D+=t[x*p+C]*m[C];for(let C=0;C<a;++C)_[x*a+C]=Math.trunc(D/y[C]),D%=y[C]}return[_,[i,a],l]}const KH={kernelName:u.SparseReshape,backendName:"cpu",kernelFunc:function HH(t){const{inputs:n,backend:e}=t,{inputIndices:s,inputShape:r,newShape:o}=n;if(2!==s.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${s.shape}`);if(1!==r.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${r.shape}`);if(1!==o.shape.length)throw new Error(`Target shape should be a vector but received shape ${o.shape}`);const i=Array.from(e.data.get(r.dataId).values),a=e.data.get(s.dataId).values,l=Array.from(e.data.get(o.dataId).values),[c,d,f]=Ew(a,s.shape,s.dtype,i,l);return[e.makeTensorInfo(d,s.dtype,c),e.makeTensorInfo([f.length],o.dtype,new Int32Array(f))]}};function ux(t,n,e,s,r,o=!1,i=0){const a=s.length,l=[n[0],t.length/n[0]],c=l[1],f=a>0?r[a-1]+1:0;if(f<0)throw new Error(u.backend_util.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());const p=n.slice();p[0]=f;const m=p.reduce((F,B)=>F*B,1),y=u.util.getArrayFromDType(e,m);if(0===a)return f>0&&y.fill(i),[y,p];if(f<=0)throw new Error(u.backend_util.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let _=0,x=1,D=0,C=r[_];for(;;){let F=0;if(x<a){if(F=r[x],C===F){++x;continue}if(C>=F)throw new Error(u.backend_util.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage())}if(C<0||C>=f)throw new Error(u.backend_util.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(C,f));C>D&&y.fill(i,D*c,C*c);for(let B=_;B<x;++B){const Z=s[B];if(Z<0||Z>=l[0])throw new Error(u.backend_util.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(B,s[B],l[0]));for(let ce=0;ce<c;ce++)y[C*c+ce]+=t[Z*c+ce]}if(o)for(let B=0;B<c;B++)y[C*c+B]/=x-_;if(_=x,++x,D=C+1,C=F,x>a)break}return D<f&&y.fill(i,D*c,f*c),[y,p]}const XH={kernelName:u.SparseSegmentMean,backendName:"cpu",kernelFunc:function jH(t){const{inputs:n,backend:e}=t,{data:s,indices:r,segmentIds:o}=n;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error(`Indices should be a vector but received shape\n          ${r.shape}`);if(1!==o.shape.length)throw new Error(`Segment ids should be a vector but received shape\n          ${o.shape}`);if(r.shape[0]!==o.shape[0])throw new Error("segmentIds and indices should have same size.");const i=e.data.get(s.dataId).values,a=e.data.get(r.dataId).values,l=e.data.get(o.dataId).values,[c,d]=ux(i,s.shape,s.dtype,a,l,!0);return e.makeTensorInfo(d,s.dtype,c)}},YH={kernelName:u.SparseSegmentSum,backendName:"cpu",kernelFunc:function ZH(t){const{inputs:n,backend:e}=t,{data:s,indices:r,segmentIds:o}=n;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error(`Indices should be a vector but received shape\n         ${r.shape}`);if(1!==o.shape.length)throw new Error(`Segment ids should be a vector but received shape\n         ${o.shape}`);if(r.shape[0]!==o.shape[0])throw new Error("segmentIds and indices should have same size.");const i=e.data.get(s.dataId).values,a=e.data.get(r.dataId).values,l=e.data.get(o.dataId).values,[c,d]=ux(i,s.shape,s.dtype,a,l);return e.makeTensorInfo(d,s.dtype,c)}},JH={kernelName:u.SparseToDense,backendName:"cpu",kernelFunc:function QH(t){const{inputs:n,backend:e,attrs:s}=t,{sparseIndices:r,sparseValues:o,defaultValue:i}=n,{outputShape:a}=s,{sliceRank:l,numUpdates:c,sliceSize:d,strides:f,outputSize:p}=u.backend_util.calculateShapes(o,r,a),m=!1,y=e.bufferSync(r);let _;switch(o.dtype){case"bool":_=_d(y,e.bufferSync(o),a,p,d,c,l,f,Boolean(e.data.get(i.dataId).values[0]),m);break;case"float32":case"int32":_=_d(y,e.bufferSync(o),a,p,d,c,l,f,e.data.get(i.dataId).values[0],m);break;case"string":_=_d(y,e.bufferSync(o),a,p,d,c,l,f,u.util.decodeString(e.data.get(i.dataId).values[0]),m);break;default:throw new Error(`Unsupported type ${o.dtype}`)}return e.makeTensorInfo(a,_.dtype,_.values)}},e6={kernelName:u.SplitV,backendName:"cpu",kernelFunc:function qH(t){const{inputs:n,backend:e,attrs:s}=t,{x:r}=n,{numOrSizeSplits:o,axis:i}=s,a=u.util.parseAxisParam(i,r.shape)[0],l=u.backend_util.prepareSplitSize(r,o,a),c=new Array(r.shape.length).fill(0),d=r.shape.slice();return l.map(f=>{const p=[...d];p[a]=f;const m=sc({inputs:{x:r},backend:e,attrs:{begin:c,size:p}});return c[a]+=f,m})}},t6=fu(t=>Math.sqrt(t)),n6=Jn(u.Sqrt,t=>Math.sqrt(t)),s6={kernelName:u.Sqrt,backendName:"cpu",kernelFunc:n6},r6={kernelName:u.Square,backendName:"cpu",kernelFunc:({inputs:t,backend:n})=>{const{x:e}=t,s=n;Lt(e,"square");const r=s.data.get(e.dataId).values,o=new Float32Array(r.length);for(let a=0;a<r.length;++a){const l=r[a];o[a]=l*l}return{dataId:s.write(o,e.shape,e.dtype),shape:e.shape,dtype:e.dtype}}},_w=sr((t,n)=>{const e=t-n;return e*e}),o6=br(u.SquaredDifference,_w),i6={kernelName:u.SquaredDifference,backendName:"cpu",kernelFunc:o6},a6=Jn(u.Step,(t,n)=>{const e=n;return isNaN(t)?NaN:t>0?1:e.alpha}),l6={kernelName:u.Step,backendName:"cpu",kernelFunc:a6};function bw(t,n,e,s){const r=(0,u.buffer)(t,n.dtype);for(let o=0;o<r.size;o++){const i=r.indexToLoc(o),a=new Array(i.length);for(let l=0;l<a.length;l++)a[l]=i[l]*e[l]+s[l];r.set(n.get(...a),...i)}return r}const c6={kernelName:u.StridedSlice,backendName:"cpu",kernelFunc:function u6(t){const{inputs:n,backend:e,attrs:s}=t,{x:r}=n,{begin:o,end:i,strides:a,beginMask:l,endMask:c,ellipsisMask:d,newAxisMask:f,shrinkAxisMask:p}=s;Lt(r,"stridedSlice");const{finalShapeSparse:m,finalShape:y,isIdentity:_,sliceDim0:x,isSimpleSlice:D,begin:C,end:F,strides:B}=u.slice_util.sliceInfo(r.shape,o,i,a,l,c,d,f,p);let Z;if(_)Z=cs({inputs:{x:r},backend:e,attrs:{shape:y}});else if(x||D){u.util.assert(r.shape.length>=1,()=>`Input must have rank at least 1, got: ${r.shape.length}`);const ce=u.slice_util.computeOutShape(C,F,B),ve=sc({inputs:{x:r},backend:e,attrs:{begin:C,size:ce}});Z=cs({inputs:{x:ve},backend:e,attrs:{shape:y}}),e.disposeIntermediateTensorInfo(ve)}else{const ve=bw(m,e.bufferSync(r),B,C);Z=e.makeTensorInfo(y,ve.dtype,ve.values)}return Z}};class d6{constructor(n,e,s,r,o,i){this.separator=u.util.encodeString(n),this.nGramWidths=e,this.leftPad=u.util.encodeString(s),this.rightPad=u.util.encodeString(r),this.padWidth=o,this.preserveShort=i}getPadWidth(n){return Math.min(this.padWidth<0?n-1:this.padWidth,n-1)}getNumNGrams(n,e){const s=this.getPadWidth(e);return Math.max(0,n+2*s-e+1)}createNGrams(n,e,s,r,o,i){for(let a=0;a<o;++a){const l=this.getPadWidth(i),c=Math.max(0,l-a),d=Math.max(0,l-(o-(a+1))),f=i-(c+d),p=e+(c>0?0:a-l);let m=0;m+=c*this.leftPad.length;for(let C=0;C<f;++C)m+=n[p+C].length;m+=d*this.rightPad.length,m+=(c+d+f-1)*this.separator.length,s[r+a]=new Uint8Array(m);const _=s[r+a];let x=0;const D=C=>C.forEach(F=>_[x++]=F);for(let C=0;C<c;++C)D(this.leftPad),D(this.separator);for(let C=0;C<f-1;++C)D(n[p+C]),D(this.separator);if(f>0){D(n[p+f-1]);for(let C=0;C<d;++C)D(this.separator),D(this.rightPad)}else{for(let C=0;C<d-1;++C)D(this.rightPad),D(this.separator);D(this.rightPad)}}}compute(n,e){const s=n.length,r=e.length;if(r>0){let l=e[0];if(0!==l)throw new Error(`First split value must be 0, got ${l}`);for(let c=1;c<r;++c){let d=e[c]>=l;if(d=d&&e[c]<=s,!d)throw new Error(`Invalid split value ${e[c]}, must be in [${l}, ${s}]`);l=e[c]}if(l!==s)throw new Error(`Last split value must be data size. Expected ${s}, got ${l}`)}const o=r-1,i=u.util.getArrayFromDType("int32",r);if(0===s||0===r){const l=new Array(s);for(let c=0;c<=o;++c)i[c]=0;return[l,i]}i[0]=0;for(let l=1;l<=o;++l){const c=e[l]-e[l-1];let d=0;this.nGramWidths.forEach(f=>{d+=this.getNumNGrams(c,f)}),this.preserveShort&&c>0&&0===d&&(d=1),i[l]=i[l-1]+d}const a=new Array(i[o]);for(let l=0;l<o;++l){const c=e[l];let d=i[l];if(this.nGramWidths.forEach(f=>{const m=this.getNumNGrams(e[l+1]-e[l],f);this.createNGrams(n,c,a,d,m,f),d+=m}),this.preserveShort&&d===i[l]){const f=e[l+1]-e[l];if(0===f)continue;this.createNGrams(n,c,a,d,1,f+2*this.padWidth)}}return[a,i]}}function Cw(t,n,e,s,r,o,i,a){return new d6(e,s,r,o,i,a).compute(t,n)}const f6={kernelName:u.StringNGrams,backendName:"cpu",kernelFunc:function h6(t){const{inputs:n,backend:e,attrs:s}=t,{separator:r,nGramWidths:o,leftPad:i,rightPad:a,padWidth:l,preserveShortSequences:c}=s,{data:d,dataSplits:f}=n,p=e.data.get(d.dataId).values,m=e.data.get(f.dataId).values,[y,_]=Cw(p,m,r,o,i,a,l,c);return[e.makeTensorInfo([y.length],"string",y),e.makeTensorInfo(f.shape,"int32",_)]}};function p6(t,n,e,s){if(!t.length)return;if(0===n.length){for(let o=0;o<t.length;++o)s.push(t.subarray(o,o+1));return}if(1===n.length){const o=n[0];let i=t.indexOf(o);for(;-1!==i;){const a=t.subarray(0,i);(!e||0!==a.length)&&s.push(a),i=(t=t.subarray(i+1)).indexOf(o)}return void((!e||0!==t.length)&&s.push(t))}let r=0;for(let o=0;o<t.length+1;o++)if(o===t.length||-1!==n.indexOf(t[o])){const i=t.subarray(r,o);(!e||0!==i.length)&&s.push(i),r=o+1}}function Dw(t,n,e){const s=t.length,r=[];let o=0,i=0;const a=new Array(s);for(let p=0;p<s;++p){const m=r.length;p6(t[p],n,e,r);const y=r.length-m;a[p]=y,o+=y,i=Math.max(i,y)}const l=u.util.getArrayFromDType("int32",2*o),c=new Array(o),d=[s,i];let f=0;for(let p=0;p<s;++p)for(let m=0;m<a[p];++m)l[2*f]=p,l[2*f+1]=m,c[f]=r[f],++f;return[l,c,d]}const g6={kernelName:u.StringSplit,backendName:"cpu",kernelFunc:function m6(t){const{inputs:n,backend:e,attrs:s}=t,{skipEmpty:r}=s,{input:o,delimiter:i}=n;if("string"!==o.dtype)throw new Error("Input must be of datatype string");if(1!==o.shape.length)throw new Error(`Input must be a vector, got shape: ${o.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const a=e.data.get(o.dataId).values,l=e.data.get(i.dataId).values[0],[c,d,f]=Dw(a,l,r),p=d.length;return[e.makeTensorInfo([p,2],"int32",c),e.makeTensorInfo([p],"string",d),e.makeTensorInfo([2],"int32",new Int32Array(f))]}};function Iw(t,n){const e=u.util.getArrayFromDType("int32",t.length);for(let s=0;s<t.length;++s)e[s]=u.util.fingerPrint64(t[s]).modulo(n).getLowBitsUnsigned();return e}const v6={kernelName:u.StringToHashBucketFast,backendName:"cpu",kernelFunc:function y6(t){const{inputs:n,backend:e,attrs:s}=t,{numBuckets:r}=s,{input:o}=n;if("string"!==o.dtype)throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");const a=Iw(e.data.get(o.dataId).values,r);return e.makeTensorInfo(o.shape,"int32",a)}},x6=Jn(u.Tan,t=>Math.tan(t)),E6={kernelName:u.Tan,backendName:"cpu",kernelFunc:x6},_6=Jn(u.Tanh,t=>Math.tanh(t));function Tw(t,n){const e=new Array(t.rank);for(let r=0;r<e.length;r++)e[r]=t.shape[r]*n[r];const s=(0,u.buffer)(e,t.dtype);for(let r=0;r<s.values.length;++r){const o=s.indexToLoc(r),i=new Array(t.rank);for(let l=0;l<i.length;l++)i[l]=o[l]%t.shape[l];const a=t.locToIndex(i);s.values[r]=t.values[a]}return s}const lf=(t,n)=>{const e=n.value-t.value;return 0===e?t.index-n.index:e};function ww(t,n,e=0,s=t.length-1){for(;s>e;){if(s-e>600){const a=s-e+1,l=n-e+1,c=Math.log(a),d=.5*Math.exp(2*c/3),f=.5*Math.sqrt(c*d*(a-d)/a)*Math.sign(l-a/2);ww(t,n,Math.max(e,Math.floor(n-l*d/a+f)),Math.min(s,Math.floor(n+(a-l)*d/a+f)))}const r=t[n];let o=e,i=s;for(u.util.swap(t,e,n),lf(t[s],r)>0&&u.util.swap(t,e,s);o<i;){for(u.util.swap(t,o,i),o++,i--;lf(t[o],r)<0;)o+=1;for(;lf(t[i],r)>0;)i-=1}0===lf(t[e],r)?u.util.swap(t,e,i):(i+=1,u.util.swap(t,i,s)),i<=n&&(e=i+1),n<=i&&(s=i-1)}}function Sw(t,n,e,s,r){const o=n[n.length-1],[i,a]=[t.length/o,o],l=u.util.getTypedArrayFromDType(e,i*s),c=u.util.getTypedArrayFromDType("int32",i*s);for(let f=0;f<i;f++){const p=f*a,m=t.subarray(p,p+a);let y=new Array(m.length);m.forEach((C,F)=>y[F]={value:C,index:F}),s<y.length&&(ww(y,s),y=y.slice(0,s)),r&&y.sort(lf);const _=f*s,x=l.subarray(_,_+s),D=c.subarray(_,_+s);for(let C=0;C<s;C++)x[C]=y[C].value,D[C]=y[C].index}const d=n.slice();return d[d.length-1]=s,[(0,u.buffer)(d,e,l),(0,u.buffer)(d,"int32",c)]}function Nw(t,n,e){switch(e){case"reflect":return function N6(t,n){let e=t;if(e<0)if(n<=1)e=0;else{const s=2*n;e<s&&(e=s*Math.trunc(-e/s)+e),e=e<-n?e+s:-e-1}else if(e>n-1)if(n<=1)e=0;else{const s=2*n;e-=s*Math.trunc(e/s),e>=n&&(e=s-e-1)}return u.util.clamp(0,e,n-1)}(t,n);case"wrap":return function A6(t,n){let e=t;return e<0?n<=1?e=0:e+=n*(Math.trunc(-e/(n-1))+1):e>n-1&&(n<=1?e=0:e-=n*Math.trunc(e/(n-1))),u.util.clamp(0,e,n-1)}(t,n);case"nearest":return function R6(t,n){return u.util.clamp(0,t,n-1)}(t,n);default:return function O6(t,n){return t}(t)}}function uf(t,n,e,s,r,o,i,a,l,c,d){return 0<=a&&a<n&&0<=l&&l<e?t[i*s+a*r+l*o+c]:d}function M6(t,n,e,s,r,o,i,a,l,c,d){return uf(t,n,e,s,r,o,i,Math.round(a),Math.round(l),c,d)}function k6(t,n,e,s,r,o,i,a,l,c,d){const f=Math.floor(a),p=Math.floor(l),m=f+1,y=p+1;return(m-a)*((y-l)*uf(t,n,e,s,r,o,i,f,p,c,d)+(l-p)*uf(t,n,e,s,r,o,i,f,y,c,d))+(a-f)*((y-l)*uf(t,n,e,s,r,o,i,m,p,c,d)+(l-p)*uf(t,n,e,s,r,o,i,m,y,c,d))}function Aw(t,n,e,s){const r=u.util.parseAxisParam(n,e)[0],o=[1,e[0],1];for(let y=0;y<r;y++)o[0]*=e[y];o[1]=e[r];for(let y=r+1;y<e.length;y++)o[2]*=e[y];const i={},a=new Int32Array(e[r]),l=new u.TensorBuffer(o,s,t),c=[],d=1===o[0]&&1===o[2];for(let y=0;y<e[r];y++){let _;if(d)_=t[y].toString();else{const x=[];for(let D=0;D<o[0];D++)for(let C=0;C<o[2];C++)x.push(l.get(D,y,C));_=x.join(",")}if(void 0!==i[_])a[y]=i[_];else{const x=Object.keys(i).length;i[_]=x,a[y]=x,c.push(y)}}const f=o.slice();f[1]=Object.keys(i).length;const p=new u.TensorBuffer(f,s);c.forEach((y,_)=>{for(let x=0;x<o[0];x++)for(let D=0;D<o[2];D++)p.set(l.get(x,y,D),x,_,D)});const m=e.slice();return m[r]=f[1],{outputValues:p.values,outputShape:m,indices:a}}const V6=[VV,WV,HV,jV,FV,ZV,JV,ez,nz,rz,iz,lz,cz,fz,mz,vz,Ez,bz,Dz,BV,Tz,Nz,Oz,Mz,PV,Pz,Fz,MV,Bz,Vz,zz,Gz,Kz,Xz,Yz,Jz,eW,nW,rW,iW,lW,cW,hW,fW,mW,yW,xW,EW,_W,bW,wW,DV,NW,AW,LW,BW,UW,zW,YW,QW,qW,t4,r4,i4,l4,c4,h4,p4,g4,IV,v4,Uz,E4,b4,D4,TV,T4,S4,A4,R4,k4,F4,B4,z4,G4,K4,j4,Z4,Q4,q4,tG,sG,oG,aG,uG,dG,fG,gG,EG,DW,bG,IG,SG,OG,MG,PG,FG,LG,uw,zG,SV,GG,JG,eH,nH,kV,ox,rH,NV,AV,LV,iH,lH,cH,hH,pH,mH,yH,xH,_H,TH,SH,RH,RV,kH,$H,LH,wz,vG,UH,zH,GH,KH,XH,YH,JH,e6,s6,r6,i6,l6,c6,f6,g6,v6,HW,IW,E6,{kernelName:u.Tanh,backendName:"cpu",kernelFunc:_6},{kernelName:u.Tile,backendName:"cpu",kernelFunc:function C6(t){const{inputs:n,backend:e,attrs:s}=t,{x:r}=n,{reps:o}=s;Lt(r,"tile");const i=Tw(e.bufferSync(r),o);return e.makeTensorInfo(i.shape,i.dtype,i.values)}},{kernelName:u.TopK,backendName:"cpu",kernelFunc:function I6(t){const{inputs:n,backend:e,attrs:s}=t,{x:r}=n,{k:o,sorted:i}=s;Lt(r,"topk");const a=e.data.get(r.dataId).values,[l,c]=Sw(a,r.shape,r.dtype,o,i);return[e.makeTensorInfo(l.shape,l.dtype,l.values),e.makeTensorInfo(c.shape,c.dtype,c.values)]}},{kernelName:u.Transform,backendName:"cpu",kernelFunc:function w6(t){const{inputs:n,attrs:e,backend:s}=t,{image:r,transforms:o}=n,{interpolation:i,fillMode:a,fillValue:l,outputShape:c}=e,[d,f,p,m]=r.shape,[y,_]=null!=c?c:[f,p],x=[d,y,_,m],D=u.util.computeStrides(r.shape),C=D[0],F=D[1],B=D[2],Z=u.util.computeStrides(x),ce=Z[0],ve=Z[1],_e=Z[2],Fe=u.util.getTypedArrayFromDType(r.dtype,u.util.sizeFromShape(x));Fe.fill(l);const Le=s.data.get(r.dataId).values,Xe=s.data.get(o.dataId).values;for(let nt=0;nt<d;++nt){const st=1===o.shape[0]?Xe:Xe.subarray(8*nt,8*nt+8);for(let Je=0;Je<y;++Je)for(let qe=0;qe<_;++qe)for(let lt=0;lt<m;++lt){let Me;const $e=st[6]*qe+st[7]*Je+1;if(0===$e)continue;const Ze=(st[3]*qe+st[4]*Je+st[5])/$e,et=Nw((st[0]*qe+st[1]*Je+st[2])/$e,p,a),ut=Nw(Ze,f,a);switch(i){case"nearest":Me=M6(Le,f,p,C,F,B,nt,ut,et,lt,l);break;case"bilinear":Me=k6(Le,f,p,C,F,B,nt,ut,et,lt,l);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${i}`)}Fe[nt*ce+Je*ve+qe*_e+lt]=Me}return s.makeTensorInfo(x,r.dtype,Fe)}return{dataId:s.write(Fe,x,r.dtype),shape:r.shape,dtype:r.dtype}}},YV,{kernelName:u.Unique,backendName:"cpu",kernelFunc:function P6(t){const{inputs:n,attrs:e,backend:s}=t,{axis:r}=e,{x:o}=n;Lt(o,"unique");const i=s.data.get(o.dataId).values,{outputValues:a,outputShape:l,indices:c}=Aw(i,r,o.shape,o.dtype);return[s.makeTensorInfo(l,o.dtype,a),s.makeTensorInfo([c.length],"int32",c)]}},{kernelName:u.Unpack,backendName:"cpu",kernelFunc:function F6(t){const{inputs:n,backend:e,attrs:s}=t,{value:r}=n;let{axis:o}=s;o<0&&(o+=r.shape.length);const i=r.shape.length,a=r.shape[o],l=new Array(i-1);let c=0;for(let m=0;m<i;m++)m!==o&&(l[c++]=r.shape[m]);const d=new Array(i).fill(0),f=r.shape.slice();f[o]=1;const p=new Array(a);for(let m=0;m<p.length;m++){d[o]=m;const y=sc({inputs:{x:r},backend:e,attrs:{begin:d,size:f}});p[m]=cs({inputs:{x:y},backend:e,attrs:{shape:l}}),e.disposeIntermediateTensorInfo(y)}return p}},{kernelName:u.UnsortedSegmentSum,backendName:"cpu",kernelFunc:function B6(t){const{inputs:n,backend:e,attrs:s}=t,{x:r,segmentIds:o}=n,{numSegments:i}=s;Lt(r,"unsortedSegmentSum");const c=[],d=[],f=r.shape.length-o.shape.length;let p=o;for(let y=0;y<f;++y){const _=Rm({inputs:{input:p},backend:e,attrs:{dim:y+1}});p=_,d.push(_)}for(let y=0;y<i;++y){const _=u.util.createScalarValue(y,"int32"),x=e.makeTensorInfo([],"int32",_),D=BT({inputs:{a:x,b:p},backend:e}),C=pu({inputs:{x:D},backend:e,attrs:{dtype:"float32"}}),F=Om({inputs:{a:C,b:r},backend:e}),B=af({inputs:{x:F},backend:e,attrs:{axis:0,keepDims:!1}});c.push(B),d.push(x),d.push(D),d.push(C),d.push(F),d.push(B)}const m=lw({inputs:c,backend:e,attrs:{axis:0}});return d.forEach(y=>e.disposeIntermediateTensorInfo(y)),m}},$G];for(const t of V6)(0,u.registerKernel)(t);const mu={},Pm={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function ea(t,n){if(!(t in mu)||null!=n){const s=function G6(t,n){if(1!==t&&2!==t)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const e=null==n?function W6(t){if("undefined"!=typeof OffscreenCanvas&&2===t)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(t):n;return e.addEventListener("webglcontextlost",s=>{s.preventDefault(),delete mu[t]},!1),(0,u.env)().getBool("SOFTWARE_WEBGL_ENABLED")&&(Pm.failIfMajorPerformanceCaveat=!1),1===t?e.getContext("webgl",Pm)||e.getContext("experimental-webgl",Pm):e.getContext("webgl2",Pm)}(t,n);if(null===s)return console.log("Could not get context for WebGL version",t),null;mu[t]=s}const e=mu[t];return null==e||e.isContextLost()?(delete mu[t],ea(t)):(e.disable(e.DEPTH_TEST),e.disable(e.STENCIL_TEST),e.disable(e.BLEND),e.disable(e.DITHER),e.disable(e.POLYGON_OFFSET_FILL),e.disable(e.SAMPLE_COVERAGE),e.enable(e.SCISSOR_TEST),e.enable(e.CULL_FACE),e.cullFace(e.BACK),mu[t])}var bd=(()=>{return(t=bd||(bd={}))[t.DENSE=0]="DENSE",t[t.SHARED_BATCH=1]="SHARED_BATCH",bd;var t})(),So=(()=>{return(t=So||(So={}))[t.RENDER=0]="RENDER",t[t.UPLOAD=1]="UPLOAD",t[t.PIXELS=2]="PIXELS",t[t.DOWNLOAD=3]="DOWNLOAD",So;var t})(),Cr=(()=>{return(t=Cr||(Cr={}))[t.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",t[t.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",t[t.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",t[t.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",t[t.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16",Cr;var t})();function cf(t,n){return[n,t]}function $m(t){const n=u.util.sizeFromShape(t),e=Math.ceil(n/4);return u.util.sizeToSquarishShape(e)}function Cd(t,n){return[Math.max(1,Math.ceil(n/2)),Math.max(1,Math.ceil(t/2))]}function cx(t,n){const e=t;let s,r,o,i,a,l,c,d,f,p;return 2===(0,u.env)().getNumber("WEBGL_VERSION")?(s=e.R32F,r=e.R16F,o=e.RGBA16F,i=e.RGBA32F,a=e.RED,c=4,d=1,f=e.HALF_FLOAT,p=e.FLOAT,l=e.RGBA8):(s=t.RGBA,r=t.RGBA,o=t.RGBA,i=e.RGBA,a=t.RGBA,c=4,d=4,f=null!=n?n.HALF_FLOAT_OES:null,p=t.FLOAT,l=t.RGBA),{internalFormatFloat:s,internalFormatHalfFloat:r,internalFormatPackedHalfFloat:o,internalFormatPackedFloat:i,textureFormatFloat:a,downloadTextureFormat:l,downloadUnpackNumChannels:c,defaultNumChannels:d,textureTypeHalfFloat:f,textureTypeFloat:p}}function Pt(t,n){const e=n();return(0,u.env)().getBool("DEBUG")&&function j6(t){const n=t.getError();if(n!==t.NO_ERROR)throw new Error("WebGL Error: "+function Q6(t,n){switch(n){case t.NO_ERROR:return"NO_ERROR";case t.INVALID_ENUM:return"INVALID_ENUM";case t.INVALID_VALUE:return"INVALID_VALUE";case t.INVALID_OPERATION:return"INVALID_OPERATION";case t.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case t.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case t.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${n}`}}(t,n))}(t),e}function Y6(t){return!!((0,u.env)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===t||5.96e-8<Math.abs(t)&&Math.abs(t)<65504)}function Fm(t,n){return kl(t,()=>t.getExtension(n),'Extension "'+n+'" not supported on this browser.')}const eK=/ERROR: [0-9]+:([0-9]+):/g;function Ow(t,n){const e=eK.exec(n);if(null==e)return console.log(`Couldn't parse line number in error: ${n}`),void console.log(t);const s=+e[1],r=t.split("\n"),o=r.length.toString().length+2,i=r.map((f,p)=>u.util.rightPad((p+1).toString(),o)+f);let a=0;for(let f=0;f<i.length;f++)a=Math.max(i[f].length,a);const l=i.slice(0,s-1),c=i.slice(s-1,s),d=i.slice(s);console.log(l.join("\n")),console.log(n.split("\n")[0]),console.log(`%c ${u.util.rightPad(c[0],a)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(d.join("\n"))}function dx(t,n){if(Pt(t,()=>t.validateProgram(n)),!1===t.getProgramParameter(n,t.VALIDATE_STATUS))throw console.log(t.getProgramInfoLog(n)),new Error("Shader program validation failed.")}function Rw(t,n,e,s,r,o,i){const a=t.getAttribLocation(n,e);return-1!==a&&(Pt(t,()=>t.bindBuffer(t.ARRAY_BUFFER,s)),Pt(t,()=>t.vertexAttribPointer(a,r,t.FLOAT,!1,o,i)),Pt(t,()=>t.enableVertexAttribArray(a)),!0)}function dK(t,n,e,s){Pt(t,()=>function lK(t,n,e){(function kw(t,n){const e=t.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,s=n+t.TEXTURE0;if(s<t.TEXTURE0||s>e)throw new Error(`textureUnit must be in [gl.TEXTURE0, gl.TEXTURE${e}].`)})(t,e),Pt(t,()=>t.activeTexture(t.TEXTURE0+e)),Pt(t,()=>t.bindTexture(t.TEXTURE_2D,n))}(t,n,s)),Pt(t,()=>t.uniform1i(e,s))}function hx(t,n,e){Pt(t,()=>t.bindFramebuffer(t.FRAMEBUFFER,e)),Pt(t,()=>t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,n,0))}function Mw(t,n){Pt(t,()=>t.bindFramebuffer(t.FRAMEBUFFER,n)),Pt(t,()=>t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,null,0))}function Lm(t){const n=t.checkFramebufferStatus(t.FRAMEBUFFER);if(n!==t.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function hK(t,n){switch(n){case t.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case t.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case t.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case t.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${n}`}}(t,n))}function kl(t,n,e){const s=Pt(t,()=>n());if(null==s)throw new Error(e);return s}function Dd(t,n=2){return u.util.sizeFromShape(t.slice(0,t.length-n))}function Id(t){if(0===t.length)throw Error("Cannot get rows and columns of an empty shape array.");return[t.length>1?t[t.length-2]:1,t[t.length-1]]}function fx(t){let n=[1,1,1];return 0===t.length||1===t.length&&1===t[0]||(n=[Dd(t),...Id(t)]),n}function Bm(t){return t%2==0}function Um(t,n){if(t=t.slice(-2),n=n.slice(-2),u.util.arraysEqual(t,n)||!t.length||!n.length||0===t[0]||0===t[1]||0===n[0]||0===n[1])return!0;if(t.length!==n.length){const e=t.slice(-1)[0],s=n.slice(-1)[0];if(e===s||Bm(e)&&Bm(s)&&(1===t[0]||1===n[0]))return!0}return t[1]===n[1]&&Bm(t[0])&&Bm(n[0])}let Vm,zm;function pi(t,n){return null!=t.getExtension(n)}function Pw(t){try{if(null!=ea(t))return!0}catch(n){return console.log("Error when getting WebGL context: ",n),!1}return!1}function px(t){const n=cx(t),e=t.createTexture();t.bindTexture(t.TEXTURE_2D,e),t.texImage2D(t.TEXTURE_2D,0,n.internalFormatFloat,1,1,0,n.textureFormatFloat,n.textureTypeFloat,null);const o=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,o),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,e,0);const i=t.checkFramebufferStatus(t.FRAMEBUFFER)===t.FRAMEBUFFER_COMPLETE;return t.bindTexture(t.TEXTURE_2D,null),t.bindFramebuffer(t.FRAMEBUFFER,null),t.deleteTexture(e),t.deleteFramebuffer(o),i}function df(t,n){Array.isArray(t)||(t=[t]),t.forEach(e=>{null!=e&&u.util.assert("complex64"!==e.dtype,()=>`${n} does not support complex64 tensors in the WebGL backend.`)})}const zt=(0,u.env)();function qr(){let t,n,e,s,r,o,i,a,l,c;return 2===(0,u.env)().getNumber("WEBGL_VERSION")?(t="#version 300 es",n="in",e="out",s="in",r="texture",o="outputColor",i="out vec4 outputColor;",a=(0,u.env)().getBool("WEBGL2_ISNAN_CUSTOM")?"\n      bool isnan_custom(float val) {\n        uint floatToUint = floatBitsToUint(val);\n        return (floatToUint & 0x7fffffffu) > 0x7f800000u;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ":"",l="",c="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(t="",n="attribute",e="varying",s="varying",r="texture2D",o="gl_FragColor",i="",a="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",l="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",c="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:t,attribute:n,varyingVs:e,varyingFs:s,texture2D:r,output:o,defineOutput:i,defineSpecialNaN:a,defineSpecialInf:l,defineRound:c}}function rc(t,n,e="index"){const s=u.util.computeStrides(n);return s.map((r,o)=>`int ${t[o]} = ${e} / ${r}; ${o===s.length-1?`int ${t[o+1]} = ${e} - ${t[o]} * ${r}`:`index -= ${t[o]} * ${r}`};`).join("")}function Wm(t,n,e="index"){const s=u.util.computeStrides(n);return s.map((r,o)=>`int ${t[o]} = ${e} / outShapeStrides[${o}]; ${o===s.length-1?`int ${t[o+1]} = ${e} - ${t[o]} * outShapeStrides[${o}]`:`index -= ${t[o]} * outShapeStrides[${o}]`};`).join("")}function mx(t){const n=u.util.computeStrides(t).map(e=>e.toString());return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${n[0]} + coords.y * ${n[1]} + coords.z;\n  }\n`}zt.registerFlag("HAS_WEBGL",()=>zt.getNumber("WEBGL_VERSION")>0),zt.registerFlag("WEBGL_VERSION",()=>Pw(2)?2:Pw(1)?1:0),zt.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1),zt.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>2===zt.get("WEBGL_VERSION")),zt.registerFlag("WEBGL_CPU_FORWARD",()=>!0),zt.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1),zt.registerFlag("WEBGL_PACK",()=>zt.getBool("HAS_WEBGL")),zt.registerFlag("WEBGL_PACK_NORMALIZATION",()=>zt.getBool("WEBGL_PACK")),zt.registerFlag("WEBGL_PACK_CLIP",()=>zt.getBool("WEBGL_PACK")),zt.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>zt.getBool("WEBGL_PACK")),zt.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>zt.getBool("WEBGL_PACK")),zt.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>zt.getBool("WEBGL_PACK")),zt.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>zt.getBool("WEBGL_PACK")),zt.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>zt.getBool("WEBGL_PACK")),zt.registerFlag("WEBGL_PACK_REDUCE",()=>zt.getBool("WEBGL_PACK")),zt.registerFlag("WEBGL_LAZILY_UNPACK",()=>zt.getBool("WEBGL_PACK")),zt.registerFlag("WEBGL_CONV_IM2COL",()=>zt.getBool("WEBGL_PACK")),zt.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>function pK(t){if(null==Vm){const n=ea(t);Vm=n.getParameter(n.MAX_TEXTURE_SIZE)}return Vm}(zt.getNumber("WEBGL_VERSION"))),zt.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>function mK(t){if(null==zm){const n=ea(t);zm=n.getParameter(n.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,zm)}(zt.getNumber("WEBGL_VERSION"))),zt.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{const t=zt.getNumber("WEBGL_VERSION");return 0===t?0:function gK(t){if(0===t)return 0;let n;const e=ea(t);return n=pi(e,"EXT_disjoint_timer_query_webgl2")&&2===t?2:pi(e,"EXT_disjoint_timer_query")?1:0,n}(t)}),zt.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>zt.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!u.device_util.isMobile()),zt.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>function yK(t){if(0===t)return!1;const n=ea(t);if(1===t){if(!pi(n,"OES_texture_float"))return!1}else if(!pi(n,"EXT_color_buffer_float"))return!1;return px(n)}(zt.getNumber("WEBGL_VERSION"))),zt.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>!zt.getBool("WEBGL_FORCE_F16_TEXTURES")&&zt.getBool("WEBGL_RENDER_FLOAT32_CAPABLE")),zt.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>function vK(t){if(0===t)return!1;const n=ea(t);if(1!==t){if(pi(n,"EXT_color_buffer_float"))return px(n);const s="EXT_color_buffer_half_float";if(pi(n,s)){const r=n.getExtension(s);return function xK(t,n){const e=cx(t,n),s=t.createTexture();t.bindTexture(t.TEXTURE_2D,s),t.texImage2D(t.TEXTURE_2D,0,e.internalFormatHalfFloat,1,1,0,e.textureFormatFloat,e.textureTypeHalfFloat,null);const i=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,i),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,s,0);const a=t.checkFramebufferStatus(t.FRAMEBUFFER)===t.FRAMEBUFFER_COMPLETE;return t.bindTexture(t.TEXTURE_2D,null),t.bindFramebuffer(t.FRAMEBUFFER,null),t.deleteTexture(s),t.deleteFramebuffer(i),a}(n,r)}return!1}return!(!pi(n,"OES_texture_float")||!pi(n,"WEBGL_color_buffer_float"))&&px(n)}(zt.getNumber("WEBGL_VERSION"))),zt.registerFlag("WEBGL_FENCE_API_ENABLED",()=>function EK(t){return 2===t&&null!=ea(t).fenceSync}(zt.getNumber("WEBGL_VERSION"))),zt.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>zt.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0),zt.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,t=>{if(t<0&&-1!==t)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${t}.`)}),zt.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>u.device_util.isMobile()?1:-1,t=>{if(t<0&&-1!==t)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${t}.`)}),zt.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128),zt.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1),zt.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5),zt.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128),zt.registerFlag("WEBGL_EXP_CONV",()=>!1),zt.registerFlag("SOFTWARE_WEBGL_ENABLED",()=>zt.getBool("IS_TEST")),zt.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",()=>1/0),zt.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",()=>!1),zt.registerFlag("WEBGL2_ISNAN_CUSTOM",()=>!1);const $w="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:Fw}=u.backend_util;function CK(t,n,e){const s=[];if(t.forEach(m=>{const y=u.util.sizeFromShape(m.shapeInfo.logicalShape);if(m.shapeInfo.isUniform?s.push(`uniform float ${m.name}${y>1?`[${y}]`:""};`):(s.push(`uniform sampler2D ${m.name};`),s.push(`uniform int offset${m.name};`)),e.enableShapeUniforms){const{uniformShape:_}=yx(e.packedInputs,m.shapeInfo.logicalShape,m.shapeInfo.texShape);switch(_.length){case 1:s.push(`uniform int ${m.name}Shape;`);break;case 2:s.push(`uniform ivec2 ${m.name}Shape;`);break;case 3:s.push(`uniform ivec3 ${m.name}Shape;`);break;case 4:s.push(`uniform ivec4 ${m.name}Shape;`)}s.push(`uniform ivec2 ${m.name}TexShape;`)}}),e.enableShapeUniforms){switch(n.logicalShape.length){case 1:s.push("uniform int outShape;");break;case 2:s.push("uniform ivec2 outShape;"),s.push("uniform int outShapeStrides;");break;case 3:s.push("uniform ivec3 outShape;"),s.push("uniform ivec2 outShapeStrides;");break;case 4:s.push("uniform ivec4 outShape;"),s.push("uniform ivec3 outShapeStrides;")}s.push("uniform ivec2 outTexShape;")}e.customUniforms&&e.customUniforms.forEach(m=>{s.push(`uniform ${m.type} ${m.name}${m.arrayIndex?`[${m.arrayIndex}]`:""};`)});const r=s.join("\n"),o=t.map(m=>function DK(t,n,e=!1,s){let r="";return r+=e?Lw(t,s):Td(t,s),t.shapeInfo.logicalShape.length<=n.logicalShape.length&&(r+=e?function sj(t,n){const e=t.name,s=e.charAt(0).toUpperCase()+e.slice(1),r="get"+s+"AtOutCoords",o=t.shapeInfo.logicalShape.length,i=n.logicalShape.length,a=Fw(t.shapeInfo.logicalShape,n.logicalShape),l=ds(i),c=i-o;let d;const f=["x","y","z","w","u","v"];d=0===o?"":i<2&&a.length>=1?"coords = 0;":a.map(C=>`coords.${f[C+c]} = 0;`).join("\n");let p="";p=i<2&&o>0?"coords":t.shapeInfo.logicalShape.map((C,F)=>`coords.${f[F+c]}`).join(", ");let m="return outputValue;";const _=1===u.util.sizeFromShape(t.shapeInfo.logicalShape),D=1===u.util.sizeFromShape(n.logicalShape);if(1!==o||_||D){if(_&&!D)m=1===i?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(a.length){const C=o-2,F=o-1;a.indexOf(C)>-1&&a.indexOf(F)>-1?m="return vec4(outputValue.x);":a.indexOf(C)>-1?m="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":a.indexOf(F)>-1&&(m="return vec4(outputValue.xx, outputValue.zz);")}}else m="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${r}() {\n      ${l} coords = getOutputCoords();\n      ${d}\n      vec4 outputValue = get${s}(${p});\n      ${m}\n    }\n  `}(t,n):function rj(t,n){const e=t.name,s=e.charAt(0).toUpperCase()+e.slice(1),r="get"+s+"AtOutCoords",a=t.shapeInfo.logicalShape.length,l=n.logicalShape.length;if(!t.shapeInfo.isUniform&&a===l&&null==t.shapeInfo.flatOffset&&u.util.arraysEqual(t.shapeInfo.texShape,n.texShape))return`\n      float ${r}() {\n        return sampleTexture(${e}, resultUV);\n      }\n    `;const c=ds(l),d=Fw(t.shapeInfo.logicalShape,n.logicalShape),f=l-a;let p;const m=["x","y","z","w","u","v"];p=0===a?"":l<2&&d.length>=1?"coords = 0;":d.map(_=>`coords.${m[_+f]} = 0;`).join("\n");let y="";return y=l<2&&a>0?"coords":t.shapeInfo.logicalShape.map((_,x)=>`coords.${m[x+f]}`).join(", "),`\n    float ${r}() {\n      ${c} coords = getOutputCoords();\n      ${p}\n      return get${s}(${y});\n    }\n  `}(t,n)),r}(m,n,e.packedInputs,e.enableShapeUniforms)).join("\n"),i=n.texShape,a=qr(),l=function wK(t){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${t.texture2D}(textureSampler, uv).r;\n    }\n  `}(a);let c,d,f=function AK(t){return`${t.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${t.varyingFs} vec2 resultUV;\n    ${t.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${t.defineSpecialNaN}\n    ${t.defineSpecialInf}\n    ${t.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${OK}\n    ${RK}\n    ${MK}\n  `}(a);return n.isPacked?(c=function IK(t,n,e){switch(t.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function PK(t,n,e){const s=[Math.ceil(n[0]/2),Math.ceil(n[1]/2)];return 1===s[0]?e?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${s[1]}.0);\n      }\n    `:1===s[1]?e?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${s[0]}.0);\n      }\n    `:e?"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${s[0]}, ${s[1]}));\n      return 2 * (resTexRC.x * ${s[1]} + resTexRC.y);\n    }\n  `}(0,n,e);case 2:return function WK(t,n,e){const s=[Math.ceil(n[0]/2),Math.ceil(n[1]/2)];if(u.util.arraysEqual(t,n))return e?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${s[0]}, ${s[1]}));\n      }\n    `;const r=Math.ceil(t[1]/2);return e?"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${s[0]}, ${s[1]}));\n\n      int index = resTexRC.x * ${s[1]} + resTexRC.y;\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(t,n,e);case 3:return function FK(t,n,e){if(e)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";const s=[Math.ceil(n[0]/2),Math.ceil(n[1]/2)],r=Math.ceil(t[2]/2),o=r*Math.ceil(t[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${s[0]}, ${s[1]}));\n      int index = resTexRC.x * ${s[1]} + resTexRC.y;\n\n      int b = index / ${o};\n      index -= b * ${o};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(t,n,e);default:return function BK(t,n,e){if(e)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";const s=[Math.ceil(n[0]/2),Math.ceil(n[1]/2)],r=Math.ceil(t[t.length-1]/2),o=r*Math.ceil(t[t.length-2]/2);let i=o,a="",l="b, r, c";for(let c=2;c<t.length-1;c++)i*=t[t.length-c-1],a=`\n      int b${c} = index / ${i};\n      index -= b${c} * ${i};\n    `+a,l=`b${c}, `+l;return`\n    ivec${t.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${s[0]}, ${s[1]}));\n      int index = resTexRC.x * ${s[1]} + resTexRC.y;\n\n      ${a}\n\n      int b = index / ${o};\n      index -= b * ${o};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec${t.length}(${l});\n    }\n  `}(t,n,e)}}(n.logicalShape,i,e.enableShapeUniforms),d=function NK(t){return`\n    void setOutput(vec4 val) {\n      ${t.output} = val;\n    }\n  `}(a)):(c=function TK(t,n,e){switch(t.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function $K(t,n,e){return 1===n[0]?e?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.x * ${n[1]}.0);\n      }\n    `:1===n[1]?e?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.y * ${n[0]}.0);\n      }\n    `:e?"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      return resTexRC.x * ${n[1]} + resTexRC.y;\n    }\n  `}(0,n,e);case 2:return function GK(t,n,e){return u.util.arraysEqual(t,n)?e?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${n[0]}, ${n[1]}));\n      }\n    `:1===t[1]?e?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${n[0]}, ${n[1]}));\n        int index = resTexRC.x * ${n[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===t[0]?e?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${n[0]}, ${n[1]}));\n        int index = resTexRC.x * ${n[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:e?"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n      int r = index / ${t[1]};\n      int c = index - r * ${t[1]};\n      return ivec2(r, c);\n    }\n  `}(t,n,e);case 3:return function LK(t,n,e){if(e)return`\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ${Wm(["r","c","d"],t)}\n    return ivec3(r, c, d);\n  }\n`;const s=rc(["r","c","d"],t);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n      ${s}\n      return ivec3(r, c, d);\n    }\n  `}(t,n,e);case 4:return function UK(t,n,e){if(e)return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ${Wm(["r","c","d","d2"],t)}\n      return ivec4(r, c, d, d2);\n    }\n  `;const s=rc(["r","c","d","d2"],t);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${n[0]}, ${n[1]}));\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n      ${s}\n      return ivec4(r, c, d, d2);\n    }\n  `}(t,n,e);case 5:return function VK(t,n){const e=rc(["r","c","d","d2","d3"],t);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${n[0]},\n                             ${n[1]}));\n\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n\n      ${e}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(t,n);case 6:return function zK(t,n){const e=rc(["r","c","d","d2","d3","d4"],t);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${n[0]}, ${n[1]}));\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n\n      ${e}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(t,n);default:throw new Error(`${t.length}-D output sampling is not yet supported`)}}(n.logicalShape,i,e.enableShapeUniforms),d=function SK(t){return`\n    void setOutput(float val) {\n      ${t.output} = vec4(val, 0, 0, 0);\n    }\n  `}(a)),e.packedInputs&&(f+=kK),[f,l,d,r,c,o,e.userCode].join("\n")}function Td(t,n=!1){const e=t.shapeInfo.logicalShape;switch(e.length){case 0:return function KK(t,n){const e=t.name,s="get"+e.charAt(0).toUpperCase()+e.slice(1);if(t.shapeInfo.isUniform)return`float ${s}() {return ${e};}`;const[r,o]=t.shapeInfo.texShape;if(1===r&&1===o)return`\n      float ${s}() {\n        return sampleTexture(${e}, halfCR);\n      }\n    `;const i=oc(e);if(n)return`\n    float ${s}() {\n      vec2 uv = uvFromFlat(${e}TexShape[0], ${e}TexShape[1], ${i});\n      return sampleTexture(${e}, uv);\n    }\n  `;const[a,l]=t.shapeInfo.texShape;return`\n    float ${s}() {\n      vec2 uv = uvFromFlat(${a}, ${l}, ${i});\n      return sampleTexture(${e}, uv);\n    }\n  `}(t,n);case 1:return function XK(t,n){const e=t.name,s="get"+e.charAt(0).toUpperCase()+e.slice(1);if(t.shapeInfo.isUniform)return`\n      float ${s}(int index) {\n        ${wd(t)}\n      }\n    `;const r=t.shapeInfo.texShape,o=r[0],i=r[1];if(1===i&&1===o)return`\n      float ${s}(int index) {\n        return sampleTexture(${e}, halfCR);\n      }\n    `;const a=oc(e);return 1===i?n?`\n      float ${s}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${a}) + 0.5) / float(${e}TexShape[0]));\n        return sampleTexture(${e}, uv);\n      }\n    `:`\n      float ${s}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${a}) + 0.5) / ${o}.0);\n        return sampleTexture(${e}, uv);\n      }\n    `:1===o?n?`\n      float ${s}(int index) {\n        vec2 uv = vec2((float(index + ${a}) + 0.5) / float(${e}TexShape[1]), 0.5);\n        return sampleTexture(${e}, uv);\n      }\n    `:`\n      float ${s}(int index) {\n        vec2 uv = vec2((float(index + ${a}) + 0.5) / ${i}.0, 0.5);\n        return sampleTexture(${e}, uv);\n      }\n    `:n?`\n    float ${s}(int index) {\n      vec2 uv = uvFromFlat(${e}TexShape[0], ${e}TexShape[1], index + ${a});\n      return sampleTexture(${e}, uv);\n    }\n  `:`\n    float ${s}(int index) {\n      vec2 uv = uvFromFlat(${o}, ${i}, index + ${a});\n      return sampleTexture(${e}, uv);\n    }\n  `}(t,n);case 2:return function YK(t,n){const e=t.shapeInfo.logicalShape,s=t.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),o=t.shapeInfo.texShape;if(null!=o&&u.util.arraysEqual(e,o))return n?`\n      float ${r}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n    float ${r}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${o[1]}.0, ${o[0]}.0);\n      return sampleTexture(${s}, uv);\n    }\n  `;const{newShape:i,keptDims:a}=u.util.squeezeShape(e);if(i.length<e.length){const m=["row","col"];return`\n      ${Td(Sd(t,i),n)}\n      float ${r}(int row, int col) {\n        return ${r}(${Nd(m,a)});\n      }\n    `}if(t.shapeInfo.isUniform)return`\n      float ${r}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${e[1]}, 1)));\n        ${wd(t)}\n      }\n    `;const c=o[0],d=o[1],f=oc(s);return 1===d?n?`\n      float ${r}(int row, int col) {\n        float index = dot(vec3(row, col, ${f}), vec3(${s}Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(${s}TexShape[0]));\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${f}), vec3(${e[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${c}.0);\n      return sampleTexture(${s}, uv);\n    }\n  `:1===c?n?`\n      float ${r}(int row, int col) {\n        float index = dot(vec3(row, col, ${f}), vec3(${s}Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(${s}TexShape[1]), 0.5);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${f}), vec3(${e[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${d}.0, 0.5);\n      return sampleTexture(${s}, uv);\n    }\n  `:n?`\n      float ${r}(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${s}Shape[1] + col + ${f};\n        vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n  float ${r}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${e[1]} + col + ${f};\n    vec2 uv = uvFromFlat(${c}, ${d}, index);\n    return sampleTexture(${s}, uv);\n  }\n`}(t,n);case 3:return function JK(t,n){const e=t.shapeInfo.logicalShape,s=t.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),o=e[1]*e[2],i=e[2],{newShape:a,keptDims:l}=u.util.squeezeShape(e);if(a.length<e.length){const x=["row","col","depth"];return`\n        ${Td(Sd(t,a),n)}\n        float ${r}(int row, int col, int depth) {\n          return ${r}(${Nd(x,l)});\n        }\n      `}if(t.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${o}, ${i}, 1)));\n        ${wd(t)}\n      }\n    `;const d=t.shapeInfo.texShape,f=d[0],p=d[1],m=t.shapeInfo.flatOffset;if(p===o&&null==m)return n?`\n      float ${r}(int row, int col, int depth) {\n        int stride1 = ${s}Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${s}TexShape[1], ${s}TexShape[0]);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n        float ${r}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${i}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${p}.0, ${f}.0);\n          return sampleTexture(${s}, uv);\n        }\n      `;if(p===i&&null==m)return n?`\n      float ${r}(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(${s}Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n    float ${r}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${e[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${p}.0, ${f}.0);\n      return sampleTexture(${s}, uv);\n    }\n  `;const y=oc(s);return n?`\n    float ${r}(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ${s}Shape[1] * ${s}Shape[2];\n      int stride1 = ${s}Shape[2];\n      int index = row * stride0 + col * stride1 + depth + ${y};\n      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);\n      return sampleTexture(${s}, uv);\n    }\n    `:`\n      float ${r}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${o} + col * ${i} + depth + ${y};\n        vec2 uv = uvFromFlat(${f}, ${p}, index);\n        return sampleTexture(${s}, uv);\n      }\n  `}(t,n);case 4:return function ej(t,n){const e=t.shapeInfo.logicalShape,s=t.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),o=e[3],i=e[2]*o,a=e[1]*i,{newShape:l,keptDims:c}=u.util.squeezeShape(e);if(l.length<e.length){const F=["row","col","depth","depth2"];return`\n      ${Td(Sd(t,l),n)}\n      float ${r}(int row, int col, int depth, int depth2) {\n        return ${r}(${Nd(F,c)});\n      }\n    `}if(t.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${a}, ${i}, ${o}, 1)));\n        ${wd(t)}\n      }\n    `;const d=t.shapeInfo.flatOffset,f=t.shapeInfo.texShape,p=f[0],m=f[1],y=`int stride2 = ${s}Shape[3];`,_=`int stride1 = ${s}Shape[2] * stride2;`,x=`int stride0 = ${s}Shape[1] * stride1;`;if(m===a&&null==d)return n?`\n      float ${r}(int row, int col, int depth, int depth2) {\n        ${y}\n        ${_}\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${s}TexShape[1], ${s}TexShape[0]);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${i}, ${o}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${m}.0, ${p}.0);\n        return sampleTexture(${s}, uv);\n      }\n    `;if(m===o&&null==d)return n?`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${s}Shape[1] * ${s}Shape[2], ${s}Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${s}TexShape[1], ${s}TexShape[0]);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${e[1]*e[2]}, ${e[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${m}.0, ${p}.0);\n        return sampleTexture(${s}, uv);\n      }\n    `;const D=oc(s);return n?`\n    float ${r}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ${y}\n      ${_}\n      ${x}\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index + ${D});\n      return sampleTexture(${s}, uv);\n    }\n  `:`\n    float ${r}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${a} + col * ${i} +\n          depth * ${o} + depth2;\n      vec2 uv = uvFromFlat(${p}, ${m}, index + ${D});\n      return sampleTexture(${s}, uv);\n    }\n  `}(t,n);case 5:return function tj(t){const n=t.shapeInfo.logicalShape,e=t.name,s="get"+e.charAt(0).toUpperCase()+e.slice(1),r=n[4],o=n[3]*r,i=n[2]*o,a=n[1]*i,{newShape:l,keptDims:c}=u.util.squeezeShape(n);if(l.length<n.length){const x=["row","col","depth","depth2","depth3"];return`\n      ${Td(Sd(t,l))}\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        return ${s}(${Nd(x,c)});\n      }\n    `}if(t.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${a}, ${i}, ${o}, ${r})) +\n          depth3;\n        ${wd(t)}\n      }\n    `;const d=t.shapeInfo.flatOffset,f=t.shapeInfo.texShape,p=f[0],m=f[1];if(m===a&&null==d)return`\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${i}, ${o}, ${r}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${m}.0, ${p}.0);\n        return sampleTexture(${e}, uv);\n      }\n    `;if(m===r&&null==d)return`\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${n[1]*n[2]*n[3]},\n               ${n[2]*n[3]}, ${n[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${m}.0, ${p}.0);\n        return sampleTexture(${e}, uv);\n      }\n    `;return`\n    float ${s}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${a} + col * ${i} + depth * ${o} +\n          depth2 * ${r} + depth3 + ${oc(e)};\n      vec2 uv = uvFromFlat(${p}, ${m}, index);\n      return sampleTexture(${e}, uv);\n    }\n  `}(t);case 6:return function nj(t){const n=t.shapeInfo.logicalShape,e=t.name,s="get"+e.charAt(0).toUpperCase()+e.slice(1),{newShape:r,keptDims:o}=u.util.squeezeShape(n);if(r.length<n.length){const D=["row","col","depth","depth2","depth3","depth4"];return`\n      ${Td(Sd(t,r))}\n      float ${s}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${s}(${Nd(D,o)});\n      }\n    `}const i=n[5],a=n[4]*i,l=n[3]*a,c=n[2]*l,d=n[1]*c;if(t.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${d}, ${c}, ${l}, ${a})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${i}, 1)));\n        ${wd(t)}\n      }\n    `;const f=t.shapeInfo.flatOffset,p=t.shapeInfo.texShape,m=p[0],y=p[1];if(y===d&&null==f)return`\n      float ${s}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${c}, ${l}, ${a}, ${i})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${y}.0, ${m}.0);\n        return sampleTexture(${e}, uv);\n      }\n    `;if(y===i&&null==f)return`\n      float ${s}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${n[1]*n[2]*n[3]*n[4]},\n               ${n[2]*n[3]*n[4]},\n               ${n[3]*n[4]},\n               ${n[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${y}.0, ${m}.0);\n        return sampleTexture(${e}, uv);\n      }\n    `;return`\n    float ${s}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${d} + col * ${c} + depth * ${l} +\n          depth2 * ${a} + depth3 * ${i} + depth4 + ${oc(e)};\n      vec2 uv = uvFromFlat(${m}, ${y}, index);\n      return sampleTexture(${e}, uv);\n    }\n  `}(t);default:throw new Error(`${e.length}-D input sampling is not yet supported`)}}function Lw(t,n){switch(t.shapeInfo.logicalShape.length){case 0:return function HK(t){const n=t.name;return`\n    vec4 ${"get"+n.charAt(0).toUpperCase()+n.slice(1)}() {\n      return ${qr().texture2D}(${n}, halfCR);\n    }\n  `}(t);case 1:return function jK(t,n){const e=t.name,s="get"+e.charAt(0).toUpperCase()+e.slice(1),r=t.shapeInfo.texShape,o=qr();if(n)return`\n    vec4 ${s}(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(${e}TexShape[0]) / 2.0), ceil(float(${e}TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ${o.texture2D}(${e}, uv);\n    }\n  `;const i=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];return`\n    vec4 ${s}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${i[0]}, ${i[1]}, index);\n      return ${o.texture2D}(${e}, uv);\n    }\n  `}(t,n);case 2:return function ZK(t,n){const e=t.shapeInfo.logicalShape,s=t.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),o=t.shapeInfo.texShape,i=o[0],a=o[1],l=qr();if(null!=o&&u.util.arraysEqual(e,o))return n?`\n      vec4 ${r}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);\n\n        return ${l.texture2D}(${s}, uv);\n      }\n    `:`\n      vec4 ${r}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${a}.0, ${i}.0);\n\n        return ${l.texture2D}(${s}, uv);\n      }\n    `;if(n)return`\n    vec4 ${r}(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${s}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ${l.texture2D}(${s}, uv);\n    }\n  `;const c=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)];return`\n    vec4 ${r}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${Math.ceil(e[1]/2)}, ${c[0]}, ${c[1]}, row, col);\n      return ${l.texture2D}(${s}, uv);\n    }\n  `}(t,n);case 3:return function QK(t,n){const e=t.shapeInfo.logicalShape,s=t.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),o=t.shapeInfo.texShape,i=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)];if(1===e[0]){const m=[1,2],_=["b","row","col"];return`\n        ${Lw(Sd(t,e.slice(1)),n)}\n        vec4 ${r}(int b, int row, int col) {\n          return ${r}(${Nd(_,m)});\n        }\n      `}const a=qr();if(n)return`\n    vec4 ${r}(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${s}Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${s}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ${a.texture2D}(${s}, uv);\n    }\n  `;const l=i[0],c=i[1],d=Math.ceil(e[2]/2);return`\n    vec4 ${r}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${l}, ${c}, ${d*Math.ceil(e[1]/2)}, ${d}, b, row, col);\n      return ${a.texture2D}(${s}, uv);\n    }\n  `}(t,n);default:return function qK(t,n){const e=t.name,s="get"+e.charAt(0).toUpperCase()+e.slice(1),r=qr();if(n)return`\n    vec4 ${s}(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(${e}Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${e}Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ${e}Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(${e}TexShape[0]) / 2.0), ceil(float(${e}TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${r.texture2D}(${e}, uv);\n    }\n  `;const o=t.shapeInfo.logicalShape,i=o.length,a=t.shapeInfo.texShape,l=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)],c=l[0],d=l[1],f=Math.ceil(o[i-1]/2);let p=f*Math.ceil(o[i-2]/2),m="int b, int row, int col",y=`b * ${p} + (row / 2) * ${f} + (col / 2)`;for(let _=2;_<i-1;_++)m=`int b${_}, `+m,p*=o[i-_-1],y=`b${_} * ${p} + `+y;return`\n    vec4 ${s}(${m}) {\n      int index = ${y};\n      int texR = index / ${d};\n      int texC = index - texR * ${d};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}, ${c});\n      return ${r.texture2D}(${e}, uv);\n    }\n  `}(t,n)}}const OK="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",RK="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",MK="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",kK="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function oc(t){return`offset${t}`}function wd(t){const n=t.name,e=u.util.sizeFromShape(t.shapeInfo.logicalShape);return e<2?`return ${n};`:`\n    for (int i = 0; i < ${e}; i++) {\n      if (i == index) {\n        return ${n}[i];\n      }\n    }\n  `}function ds(t){if(t<=1)return"int";if(2===t)return"ivec2";if(3===t)return"ivec3";if(4===t)return"ivec4";if(5===t)return"ivec5";if(6===t)return"ivec6";throw Error(`GPU for rank ${t} is not yet supported`)}function yx(t,n,e){const{newShape:s,keptDims:r}=u.util.squeezeShape(n),o=n.length,i=t&&3===o&&1===n[0],a=i?n.slice(1):s,l=!t&&o>1&&!u.util.arraysEqual(n,e)&&s.length<o||i;return{useSqueezeShape:l,uniformShape:l?a:n,keptDims:r}}function Sd(t,n){const e=JSON.parse(JSON.stringify(t));return e.shapeInfo.logicalShape=n,e}function Nd(t,n){return n.map(e=>t[e]).join(", ")}function Uw(t,n,e){const s={},r={},o={},i=[];let a,l,c,d=null,f=null;f=t.getUniformLocation(e,"NAN",!1),1===(0,u.env)().getNumber("WEBGL_VERSION")&&(d=t.getUniformLocation(e,"INFINITY",!1));const p=!1;for(let m=0;m<n.variableNames.length;m++){const y=n.variableNames[m];s[y]=t.getUniformLocation(e,y,p),s[`offset${y}`]=t.getUniformLocation(e,`offset${y}`,p),n.enableShapeUniforms&&(r[`${y}Shape`]=t.getUniformLocation(e,`${y}Shape`,p),o[`${y}TexShape`]=t.getUniformLocation(e,`${y}TexShape`,p))}return n.enableShapeUniforms&&(a=t.getUniformLocation(e,"outShape",p),c=t.getUniformLocation(e,"outShapeStrides",p),l=t.getUniformLocation(e,"outTexShape",p)),n.customUniforms&&n.customUniforms.forEach((m,y)=>{i[y]=t.getUniformLocation(e,m.name,p)}),{uniformLocations:s,customUniformLocations:i,infLoc:d,nanLoc:f,inShapesLocations:r,inTexShapesLocations:o,outShapeLocation:a,outShapeStridesLocation:c,outTexShapeLocation:l}}function Vw(t,n){if(t.length!==n.length)throw Error(`Binary was compiled with ${t.length} inputs, but was executed with ${n.length} inputs`);t.forEach((e,s)=>{const r=e.logicalShape,o=n[s],i=o.shape;if(!u.util.arraysEqual(r,i))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${i} must match`);if(e.isUniform&&o.isUniform)return;const a=e.texShape,l=o.isUniform?null:o.texData.texShape;if(!u.util.arraysEqual(a,l))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${a} and ${l} must match`)})}function eo(t){return(0,u.env)().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&t<=4}class lj{constructor(n){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=bd.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const e=qr();this.outputShape=n,this.enableShapeUniforms=eo(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?Wm(["r","c","d"],n):rc(["r","c","d"],n)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${e.output} = result;\n      }\n    `}}class uj{constructor(n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=bd.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const e=qr();this.outputShape=n,this.enableShapeUniforms=eo(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?Wm(["r","c","d"],n):rc(["r","c","d"],n)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${e.output} = result;\n      }\n    `}}class cj{constructor(n){this.variableNames=["A"],this.outTexUsage=So.DOWNLOAD;const e=qr();this.outputShape=n,this.userCode=`\n      ${$w}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${e.output} = encode_float(x);\n      }\n    `}}class dj{constructor(n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=So.DOWNLOAD;const e=qr();this.outputShape=n,this.userCode=`\n      ${$w}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${e.output} = encode_float(x);\n      }\n    `}}class hj{constructor(n,e=!1){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const s=qr();this.outputShape=n,this.enableShapeUniforms=eo(this.outputShape.length);let r="result";e&&(r="floor(result * 255. + 0.5)"),this.userCode=`\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":mx(n)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n\n        int r = flatIndex / texShape[1];\n        int c = imod(flatIndex, texShape[1]);\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n        vec4 values = ${s.texture2D}(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ${s.output} = vec4(${r}, 0., 0., 0.);\n      }\n    `}}class fj{constructor(n,e=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const s=qr();this.outputShape=n,this.enableShapeUniforms=eo(this.outputShape.length);let r="",o="result";e&&(o="floor(result * 255. + 0.5)");for(let i=0;i<=1;i++)for(let a=0;a<=1;a++){const l=2*i+a;r+=`\n          localCoords = coords;\n          if(localCoords[2] + ${a} < ${this.enableShapeUniforms?"outShape[2]":`${n[2]}`}) {\n          localCoords[2] += ${a};\n          if (localCoords[1] + ${i} < ${this.enableShapeUniforms?"outShape[1]":`${n[1]}`}) {\n            localCoords[1] += ${i};\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ${s.texture2D}(A, uv);\n\n            if (offset == 0) {\n              result[${l}] = values[0];\n            } else if (offset == 1) {\n              result[${l}] = values[1];\n            } else if (offset == 2) {\n              result[${l}] = values[2];\n            } else {\n              result[${l}] = values[3];\n            }\n          }\n        }\n        `}this.userCode=`\n        ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":mx(n)}\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ${r}\n\n          ${s.output} = ${o};\n        }\n    `}}function hf(t,n,e,s,r,o){!function iK(t,n){const e=(0,u.env)().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t<=0||n<=0)throw new Error(`Requested texture size [${t}x${n}] is invalid.`);if(t>e||n>e)throw new Error(`Requested texture size [${t}x${n}] greater than WebGL maximum on this browser / GPU [${e}x${e}].`)}(n,e);const i=function oK(t){return kl(t,()=>t.createTexture(),"Unable to create WebGLTexture.")}(t),a=t.TEXTURE_2D;return Pt(t,()=>t.bindTexture(a,i)),Pt(t,()=>t.texParameteri(a,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE)),Pt(t,()=>t.texParameteri(a,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE)),Pt(t,()=>t.texParameteri(a,t.TEXTURE_MIN_FILTER,t.NEAREST)),Pt(t,()=>t.texParameteri(a,t.TEXTURE_MAG_FILTER,t.NEAREST)),1===(0,u.env)().getNumber("WEBGL_VERSION")?Pt(t,()=>t.texImage2D(a,0,s,n,e,0,r,o,null)):Pt(t,()=>t.texStorage2D(a,1,s,n,e)),Pt(t,()=>t.bindTexture(t.TEXTURE_2D,null)),{texture:i,texShape:[e,n]}}function zw(t){return t.internalFormatFloat}function Ww(t){return t.internalFormatHalfFloat}function Gw(t){return t.downloadTextureFormat}function Hw(t){return t.internalFormatPackedFloat}function Kw(t){return t.internalFormatPackedHalfFloat}class vx{constructor(n){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const e=(0,u.env)().getNumber("WEBGL_VERSION");null!=n?(this.gl=n,function z6(t,n){mu[t]=n}(e,n)):this.gl=ea(e);let s="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),1===(0,u.env)().getNumber("WEBGL_VERSION")){const i="OES_texture_half_float";if(this.textureFloatExtension=Fm(this.gl,"OES_texture_float"),pi(this.gl,i))this.textureHalfFloatExtension=Fm(this.gl,i);else if((0,u.env)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(s),pi(this.gl,r))this.colorBufferHalfFloatExtension=Fm(this.gl,r);else if((0,u.env)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(s="EXT_color_buffer_float",pi(this.gl,s))this.colorBufferFloatExtension=this.gl.getExtension(s);else{if(!pi(this.gl,r))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(r)}this.vertexBuffer=function mj(t){return function sK(t,n){const e=kl(t,()=>t.createBuffer(),"Unable to create WebGLBuffer");return Pt(t,()=>t.bindBuffer(t.ARRAY_BUFFER,e)),Pt(t,()=>t.bufferData(t.ARRAY_BUFFER,n,t.STATIC_DRAW)),e}(t,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}(this.gl),this.indexBuffer=function gj(t){return function rK(t,n){const e=kl(t,()=>t.createBuffer(),"Unable to create WebGLBuffer");return Pt(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,e)),Pt(t,()=>t.bufferData(t.ELEMENT_ARRAY_BUFFER,n,t.STATIC_DRAW)),e}(t,new Uint16Array([0,1,2,2,1,3]))}(this.gl),this.framebuffer=function aK(t){return kl(t,()=>t.createFramebuffer(),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=cx(this.gl,this.textureHalfFloatExtension)}get debug(){return(0,u.env)().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const n=this.gl;Pt(n,()=>n.finish()),Pt(n,()=>n.bindFramebuffer(n.FRAMEBUFFER,null)),Pt(n,()=>n.deleteFramebuffer(this.framebuffer)),Pt(n,()=>n.bindBuffer(n.ARRAY_BUFFER,null)),Pt(n,()=>n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,null)),Pt(n,()=>n.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(n,e){return this.throwIfDisposed(),function yj(t,n,e,s){const[r,o]=cf(n,e);return hf(t,r,o,zw(s),s.textureFormatFloat,t.FLOAT)}(this.gl,n,e,this.textureConfig)}createFloat16MatrixTexture(n,e){return this.throwIfDisposed(),function vj(t,n,e,s){const[r,o]=cf(n,e);return hf(t,r,o,Ww(s),s.textureFormatFloat,s.textureTypeHalfFloat)}(this.gl,n,e,this.textureConfig)}createUnsignedBytesMatrixTexture(n,e){return this.throwIfDisposed(),function xj(t,n,e,s){const[r,o]=cf(n,e);return hf(t,r,o,Gw(s),t.RGBA,t.UNSIGNED_BYTE)}(this.gl,n,e,this.textureConfig)}uploadPixelDataToTexture(n,e){this.throwIfDisposed(),function Dj(t,n,e){Pt(t,()=>t.bindTexture(t.TEXTURE_2D,n)),e.data instanceof Uint8Array?2===(0,u.env)().getNumber("WEBGL_VERSION")?Pt(t,()=>t.texSubImage2D(t.TEXTURE_2D,0,0,0,e.width,e.height,t.RGBA,t.UNSIGNED_BYTE,e.data)):Pt(t,()=>t.texImage2D(t.TEXTURE_2D,0,t.RGBA,e.width,e.height,0,t.RGBA,t.UNSIGNED_BYTE,e.data)):2===(0,u.env)().getNumber("WEBGL_VERSION")?Pt(t,()=>t.texSubImage2D(t.TEXTURE_2D,0,0,0,t.RGBA,t.UNSIGNED_BYTE,e)):Pt(t,()=>t.texImage2D(t.TEXTURE_2D,0,t.RGBA,t.RGBA,t.UNSIGNED_BYTE,e)),Pt(t,()=>t.bindTexture(t.TEXTURE_2D,null))}(this.gl,n,e)}uploadDenseMatrixToTexture(n,e,s,r){this.throwIfDisposed(),function Cj(t,n,e,s,r,o){let i,a,l;Pt(t,()=>t.bindTexture(t.TEXTURE_2D,n)),r instanceof Uint8Array?(i=new Uint8Array(e*s*4),a=t.UNSIGNED_BYTE,l=t.RGBA):(i=new Float32Array(e*s*4),a=t.FLOAT,l=o.internalFormatPackedFloat),i.set(r),2===(0,u.env)().getNumber("WEBGL_VERSION")?Pt(t,()=>t.texSubImage2D(t.TEXTURE_2D,0,0,0,e,s,t.RGBA,a,i)):Pt(t,()=>t.texImage2D(t.TEXTURE_2D,0,l,e,s,0,t.RGBA,a,i)),Pt(t,()=>t.bindTexture(t.TEXTURE_2D,null))}(this.gl,n,e,s,r,this.textureConfig)}createFloat16PackedMatrixTexture(n,e){return this.throwIfDisposed(),function _j(t,n,e,s){const[r,o]=Cd(n,e);return hf(t,r,o,Kw(s),t.RGBA,s.textureTypeHalfFloat)}(this.gl,n,e,this.textureConfig)}createPackedMatrixTexture(n,e){return this.throwIfDisposed(),function Ej(t,n,e,s){const[r,o]=Cd(n,e);return hf(t,r,o,Hw(s),t.RGBA,t.FLOAT)}(this.gl,n,e,this.textureConfig)}deleteMatrixTexture(n){this.throwIfDisposed(),this.outputTexture===n&&(Mw(this.gl,this.framebuffer),this.outputTexture=null),Pt(this.gl,()=>this.gl.deleteTexture(n))}downloadByteEncodedFloatMatrixFromOutputTexture(n,e,s){return this.downloadMatrixDriver(n,()=>function wj(t,n,e,s){const[r,o]=cf(n,e),a=new Uint8Array(function H6(t,n){return t*n}(n*e,4));return Pt(t,()=>t.readPixels(0,0,r,o,s.downloadTextureFormat,t.UNSIGNED_BYTE,a)),new Float32Array(a.buffer)}(this.gl,e,s,this.textureConfig))}downloadPackedMatrixFromBuffer(n,e,s,r,o,i){return function Sj(t,n,e,s,r,o,i,a){const l=t,c=new Float32Array(function K6(t,n){const[e,s]=Cd(t,n);return e*s*4}(o,i));return l.bindBuffer(l.PIXEL_PACK_BUFFER,n),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,c),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),c}(this.gl,n,0,0,0,o,i)}downloadFloat32MatrixFromBuffer(n,e){return function Tj(t,n,e){const s=t,r=new Float32Array(e);return s.bindBuffer(s.PIXEL_PACK_BUFFER,n),s.getBufferSubData(s.PIXEL_PACK_BUFFER,0,r),s.bindBuffer(s.PIXEL_PACK_BUFFER,null),r}(this.gl,n,e)}createBufferFromTexture(n,e,s){this.bindTextureToFrameBuffer(n);const r=function Ij(t,n,e,s){const r=t.createBuffer();Pt(t,()=>t.bindBuffer(t.PIXEL_PACK_BUFFER,r));const a=16*n*e;return Pt(t,()=>t.bufferData(t.PIXEL_PACK_BUFFER,a,t.STREAM_READ)),Pt(t,()=>t.readPixels(0,0,e,n,t.RGBA,t.FLOAT,0)),Pt(t,()=>t.bindBuffer(t.PIXEL_PACK_BUFFER,null)),r}(this.gl,e,s);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const n=this.createFence(this.gl);return this.pollFence(n)}createFence(n){let e,s;if((0,u.env)().getBool("WEBGL_FENCE_API_ENABLED")){const r=n,o=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);n.flush(),s=()=>{const i=r.clientWaitSync(o,0,0);return i===r.ALREADY_SIGNALED||i===r.CONDITION_SATISFIED},e=o}else(0,u.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(e=this.beginQuery(),this.endQuery(),s=()=>this.isQueryAvailable(e,(0,u.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):s=()=>!0;return{query:e,isFencePassed:s}}downloadMatrixFromPackedTexture(n,e,s){return this.downloadMatrixDriver(n,()=>function Nj(t,n,e){const s=new Float32Array(n*e*4);return Pt(t,()=>t.readPixels(0,0,e,n,t.RGBA,t.FLOAT,s)),s}(this.gl,e,s))}createProgram(n){this.throwIfDisposed();const e=this.gl;null==this.vertexShader&&(this.vertexShader=function pj(t){const n=qr();return function J6(t,n){const e=kl(t,()=>t.createShader(t.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(Pt(t,()=>t.shaderSource(e,n)),Pt(t,()=>t.compileShader(e)),!1===t.getShaderParameter(e,t.COMPILE_STATUS))throw console.log(t.getShaderInfoLog(e)),new Error("Failed to compile vertex shader.");return e}(t,`${n.version}\n    precision highp float;\n    ${n.attribute} vec3 clipSpacePos;\n    ${n.attribute} vec2 uv;\n    ${n.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}(e));const s=function tK(t){return kl(t,()=>t.createProgram(),"Unable to create WebGLProgram.")}(e);return Pt(e,()=>e.attachShader(s,this.vertexShader)),Pt(e,()=>e.attachShader(s,n)),function nK(t,n){if(Pt(t,()=>t.linkProgram(n)),!(0,u.env)().get("ENGINE_COMPILE_ONLY")&&!1===t.getProgramParameter(n,t.LINK_STATUS))throw console.log(t.getProgramInfoLog(n)),new Error("Failed to link vertex and fragment shaders.")}(e,s),this.debug&&dx(e,s),this.vertexAttrsAreBound||(this.setProgram(s),this.vertexAttrsAreBound=function bj(t,n,e){return Pt(t,()=>t.bindBuffer(t.ARRAY_BUFFER,e)),Rw(t,n,"clipSpacePos",e,3,20,0)&&Rw(t,n,"uv",e,2,20,12)}(e,this.program,this.vertexBuffer)),s}deleteProgram(n){this.throwIfDisposed(),n===this.program&&(this.program=null),null!=n&&Pt(this.gl,()=>this.gl.deleteProgram(n))}setProgram(n){this.throwIfDisposed(),this.program=n,null!=this.program&&this.debug&&dx(this.gl,this.program),Pt(this.gl,()=>this.gl.useProgram(n))}getUniformLocation(n,e,s=!0){return this.throwIfDisposed(),s?function uK(t,n,e){return kl(t,()=>t.getUniformLocation(n,e),'uniform "'+e+'" not present in program.')}(this.gl,n,e):function cK(t,n,e){return t.getUniformLocation(n,e)}(this.gl,n,e)}getAttributeLocation(n,e){return this.throwIfDisposed(),Pt(this.gl,()=>this.gl.getAttribLocation(n,e))}getUniformLocationNoThrow(n,e){return this.throwIfDisposed(),this.gl.getUniformLocation(n,e)}setInputMatrixTexture(n,e,s){this.throwIfDisposed(),this.throwIfNoProgram(),dK(this.gl,n,e,s)}setOutputMatrixTexture(n,e,s){this.setOutputMatrixTextureDriver(n,s,e)}setOutputPackedMatrixTexture(n,e,s){this.throwIfDisposed();const[r,o]=Cd(e,s);this.setOutputMatrixTextureDriver(n,r,o)}setOutputMatrixWriteRegion(n,e,s,r){this.setOutputMatrixWriteRegionDriver(s,n,r,e)}setOutputPackedMatrixWriteRegion(n,e,s,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&dx(this.gl,this.program),Lm(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const n=this.gl;this.debug&&this.debugValidate(),Pt(n,()=>n.drawElements(n.TRIANGLES,6,n.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),Pt(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=Fm(this.gl,2===(0,u.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===(0,u.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const s=this.gl,r=this.getQueryTimerExtensionWebGL2(),o=s.createQuery();return s.beginQuery(r.TIME_ELAPSED_EXT,o),o}const n=this.getQueryTimerExtensionWebGL1(),e=n.createQueryEXT();return n.beginQueryEXT(n.TIME_ELAPSED_EXT,e),e}endQuery(){if(2===(0,u.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,s=this.getQueryTimerExtensionWebGL2();return void e.endQuery(s.TIME_ELAPSED_EXT)}const n=this.getQueryTimerExtensionWebGL1();n.endQueryEXT(n.TIME_ELAPSED_EXT)}waitForQueryAndGetTime(n){var e=this;return(0,on.Z)(function*(){return yield u.util.repeatedTry(()=>e.disposed||e.isQueryAvailable(n,(0,u.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),e.getQueryTime(n,(0,u.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))})()}getQueryTime(n,e){if(0===e)return null;if(2===e){const s=this.gl;return s.getQueryParameter(n,s.QUERY_RESULT)/1e6}{const s=this.getQueryTimerExtensionWebGL1();return s.getQueryObjectEXT(n,s.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(n,e){if(0===e)return!0;if(2===e){const s=this.gl,r=this.getQueryTimerExtensionWebGL2(),o=s.getQueryParameter(n,s.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(r.GPU_DISJOINT_EXT)),o&&!this.disjoint}{const s=this.getQueryTimerExtensionWebGL1(),r=s.getQueryObjectEXT(n,s.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(s.GPU_DISJOINT_EXT)),r&&!this.disjoint}}pollFence(n){return new Promise(e=>{this.addItemToPoll(()=>n.isFencePassed(),()=>e())})}pollItems(){const n=function Aj(t){let n=0;for(;n<t.length&&t[n]();++n);return n-1}(this.itemsToPoll.map(e=>e.isDoneFn));for(let e=0;e<=n;++e){const{resolveFn:s}=this.itemsToPoll[e];s()}this.itemsToPoll=this.itemsToPoll.slice(n+1)}addItemToPoll(n,e){if(this.itemsToPoll.push({isDoneFn:n,resolveFn:e}),this.itemsToPoll.length>1)return;let s;"setTimeoutCustom"in(0,u.env)().platform&&(s=(0,u.env)().platform.setTimeoutCustom.bind((0,u.env)().platform)),u.util.repeatedTry(()=>(this.pollItems(),0===this.itemsToPoll.length),()=>0,null,s)}bindTextureToFrameBuffer(n){this.throwIfDisposed(),hx(this.gl,n,this.framebuffer),this.debug&&Lm(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(hx(this.gl,this.outputTexture,this.framebuffer),this.debug&&Lm(this.gl)):Mw(this.gl,this.framebuffer)}downloadMatrixDriver(n,e){this.bindTextureToFrameBuffer(n);const s=e();return this.unbindTextureToFrameBuffer(),s}setOutputMatrixTextureDriver(n,e,s){this.throwIfDisposed();const r=this.gl;hx(r,n,this.framebuffer),this.debug&&Lm(r),this.outputTexture=n,Pt(r,()=>r.viewport(0,0,e,s)),Pt(r,()=>r.scissor(0,0,e,s))}setOutputMatrixWriteRegionDriver(n,e,s,r){this.throwIfDisposed(),Pt(this.gl,()=>this.gl.scissor(n,e,s,r))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}const{addImpl:Oj,bincountImpl:jw,bincountReduceImpl:Rj,castImpl:Mj,ceilImpl:kj,concatImpl:Pj,equalImpl:$j,expImpl:Fj,expm1Impl:Lj,floorImpl:Bj,gatherNdImpl:Uj,gatherV2Impl:Vj,greaterImpl:zj,greaterEqualImpl:Wj,lessImpl:Gj,lessEqualImpl:Hj,linSpaceImpl:Kj,logImpl:jj,maxImpl:Xj,maximumImpl:Zj,minimumImpl:Yj,multiplyImpl:Qj,negImpl:Jj,notEqualImpl:qj,prodImpl:e8,raggedGatherImpl:t8,raggedTensorToTensorImpl:n8,rangeImpl:s8,rsqrtImpl:r8,scatterImpl:o8,sigmoidImpl:i8,simpleAbsImpl:Xw,sliceImpl:a8,sparseFillEmptyRowsImpl:l8,sparseReshapeImpl:u8,sparseSegmentReductionImpl:Zw,sqrtImpl:c8,stridedSliceImpl:d8,stringNGramsImpl:h8,stringSplitImpl:f8,stringToHashBucketFastImpl:p8,subImpl:m8,tileImpl:g8,topKImpl:y8,transposeImpl:xx,uniqueImpl:v8}=V;function Yw(t,n){return["x","y","z","w","u","v"].slice(0,n).map(e=>`${t}.${e}`)}function to(t,n){return 1===n?[t]:Yw(t,n)}class E8{constructor(n){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=n,this.rank=n.length,this.enableShapeUniforms=eo(this.outputShape.length),0===this.rank)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const e=to("rc",this.rank),s=ds(this.rank),r=this.getOutOfBoundsCondition(e),o=this.getSetup(e),i=this.getOutput(e);this.userCode=`\n        void main() {\n          ${s} rc = getOutputCoords();\n\n          if(${r}) {\n            setOutput(vec4(0));\n          } else {\n            ${o}\n\n            setOutput(vec4(${i}));\n          }\n        }\n      `}}getSourceCoordsArr(n){const e=[];for(let s=0;s<=1;s++)for(let r=0;r<=1;r++){let o=`${0===s?"r":"rp1"}, ${0===r?"c":"cp1"}`;for(let i=2;i<this.rank;i++)o=`${n[n.length-1-i]},`+o;e.push(o)}return e}getOutOfBoundsCondition(n){if(1===this.rank)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let e="";for(let s=this.rank-2;s<this.rank;s++)e+=`${n[s]} >= ${this.enableShapeUniforms?`outShape[${s}]`:this.outputShape[s]}`,s<this.rank-1&&(e+="||");return e}getSetup(n){if(1===this.rank)return"";const e=n.slice(-2);return`\n      int r = ${e[0]};\n      int c = ${e[1]};\n      int rp1 = r + 1;\n      int cp1 = c + 1;\n\n      bool cEdge = cp1 >= ${this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1]};\n      bool rEdge = rp1 >= ${this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2]};\n    `}getOutput(n){const e=this.getSourceCoordsArr(n);return 1===this.rank?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${e[0]}),\n            cEdge ? 0. : getA(${e[1]}),\n            rEdge ? 0. : getA(${e[2]}),\n            rEdge || cEdge ? 0. : getA(${e[3]})`}}class Qw{constructor(n,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=n,this.enableShapeUniforms=eo(this.outputShape.length);let s="";for(let r=0;r<4;r++){let o="thisRC = rc;";r%2==1&&(o+="thisRC.z += 1;"),r>1&&(o+="thisRC.y += 1;"),s+=`\n        ${o}\n        ${r>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${r}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${r>0?"}":""}\n      `}this.userCode=`\n      ${function _8(t,n){return`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${n?function bK(t,n,e="index"){const r=function _K(t,n){const e=t.length,s=t.map(o=>`${n}[${o}]`),r=new Array(e-1);r[e-2]=s[e-1];for(let o=e-3;o>=0;--o)r[o]=`(${r[o+1]} * ${s[o+1]})`;return r}(t.map((o,i)=>i),n);return r.map((o,i)=>`int ${t[i]} = ${e} / ${r[i]}; ${i===r.length-1?`int ${t[i+1]} = ${e} - ${t[i]} * ${r[i]}`:`index -= ${t[i]} * ${r[i]}`};`).join("")}(["r","c","d"],"inputShape"):rc(["r","c","d"],t)}\n      return ivec3(r, c, d);\n    }\n  `}(e,this.enableShapeUniforms)}\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":mx(n)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${this.enableShapeUniforms?"outShape[1]":n[1]};\n        int cols = ${this.enableShapeUniforms?"outShape[2]":n[2]};\n\n        ${s}\n\n        setOutput(result);\n      }\n    `}}class b8{constructor(n){this.gpgpu=n,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(n,e,s){const r=qw(e,s),o=eS(n,r,s);o in this.freeTextures||(this.freeTextures[o]=[]),o in this.usedTextures||(this.usedTextures[o]=[]);const i=Jw(n,r,this.gpgpu.gl,this.gpgpu.textureConfig,s);if(this.freeTextures[o].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=i,this.log();const l=this.freeTextures[o].shift();return this.usedTextures[o].push(l),l}let a;return r===Cr.PACKED_2X2_FLOAT32?a=this.gpgpu.createPackedMatrixTexture(n[0],n[1]):r===Cr.PACKED_2X2_FLOAT16?a=this.gpgpu.createFloat16PackedMatrixTexture(n[0],n[1]):r===Cr.UNPACKED_FLOAT32?a=this.gpgpu.createFloat32MatrixTexture(n[0],n[1]):r===Cr.UNPACKED_FLOAT16?a=this.gpgpu.createFloat16MatrixTexture(n[0],n[1]):r===Cr.PACKED_4X1_UNSIGNED_BYTE&&(a=this.gpgpu.createUnsignedBytesMatrixTexture(n[0],n[1])),this.usedTextures[o].push(a),this.numUsedTextures++,this._numBytesAllocated+=i,this.log(),a}releaseTexture(n,e,s,r){if(null==this.freeTextures)return;const o=qw(s,r),i=eS(e,o,r);i in this.freeTextures||(this.freeTextures[i]=[]);const a=Jw(e,o,this.gpgpu.gl,this.gpgpu.textureConfig,r),l=(0,u.env)().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==l&&this._numBytesAllocated>l?(this.gpgpu.deleteMatrixTexture(n.texture),this._numBytesAllocated-=a):(this.freeTextures[i].push(n),this.numFreeTextures++,this._numBytesFree+=a),this.numUsedTextures--;const c=this.usedTextures[i],d=c.indexOf(n);if(d<0)throw new Error("Cannot release a texture that was never provided by this texture manager");c.splice(d,1),this.log()}log(){if(!this.logEnabled)return;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${this.numFreeTextures+this.numUsedTextures})`);const e=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*e)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const n in this.freeTextures)this.freeTextures[n].forEach(e=>{this.gpgpu.deleteMatrixTexture(e.texture)});for(const n in this.usedTextures)this.usedTextures[n].forEach(e=>{this.gpgpu.deleteMatrixTexture(e.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function Jw(t,n,e,s,r){const o=function D8(t,n){switch(t){case Cr.PACKED_2X2_FLOAT32:return Hw(n);case Cr.PACKED_2X2_FLOAT16:return Kw(n);case Cr.UNPACKED_FLOAT32:return zw(n);case Cr.UNPACKED_FLOAT16:return Ww(n);case Cr.PACKED_4X1_UNSIGNED_BYTE:return Gw(n);default:throw new Error(`Unknown physical texture type ${t}`)}}(n,s);let i;if(r){const[l,c]=Cd(t[0],t[1]);i=l*c}else{const[l,c]=cf(t[0],t[1]);i=l*c}const a=function C8(t,n){if(n===t.R32F)return 4;if(n===t.R16F)return 2;if(n===t.RGBA32F)return 16;if(n===t.RGBA)return 16;if(n===t.RGBA16F)return 8;if(n===t.RGBA8)return 4;throw new Error(`Unknown internal format ${n}`)}(e,o);return i*a}function qw(t,n){if(t===So.UPLOAD)return Cr.PACKED_2X2_FLOAT32;if(t===So.RENDER||null==t)return function I8(t){return(0,u.env)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?t?Cr.PACKED_2X2_FLOAT32:Cr.UNPACKED_FLOAT32:t?Cr.PACKED_2X2_FLOAT16:Cr.UNPACKED_FLOAT16}(n);if(t===So.DOWNLOAD||t===So.PIXELS)return Cr.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${t}`)}function eS(t,n,e){return`${t[0]}_${t[1]}_${n}_${e}`}class Pl{constructor(n,e){this.variableNames=["A"],this.outputShape=n,this.enableShapeUniforms=eo(this.outputShape.length),this.userCode=`\n      float unaryOperation(float x) {\n        ${e}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const tS="return abs(x);",Ad="return x;";class ic{constructor(n,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=eo(this.outputShape.length),this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${e}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class $8{constructor(n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=n,this.enableShapeUniforms=eo(this.outputShape.length);const e=n.length,s=to("rc",e),r=ds(e),o=function x8(t,n){if(1===t)return"rc";let e="";for(let s=0;s<t;s++)e+=n[s],s<t-1&&(e+=",");return e}(e,s),i=s.slice(-2),a=e<=1?"rc":`vec2(${i.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${o});\n\n        setOutput(getChannel(packedInput, ${a}));\n      }\n    `}}const F8=u.kernel_impls.whereImpl,Hm={},V8=(0,u.env)().getNumber("CPU_HANDOFF_SIZE_THRESHOLD");let G8=(()=>{class t extends u.KernelBackend{constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!(0,u.env)().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let s;if(null!=e){if(e instanceof vx)s=e;else{const r=ea((0,u.env)().getNumber("WEBGL_VERSION"),e);s=new vx(r)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const r=ea((0,u.env)().getNumber("WEBGL_VERSION"));s=new vx(r),this.binaryCache=function U8(t){return t in Hm||(Hm[t]={}),Hm[t]}((0,u.env)().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=s,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new b8(this.gpgpu),this.numMBBeforeWarning=function W8(){return null==(0,u.env)().global.screen?1024:(0,u.env)().global.screen.height*(0,u.env)().global.screen.width*window.devicePixelRatio*600/1024/1024}(),this.texData=new u.DataStorage(this,(0,u.engine)())}nextDataId(){return t.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}write(e,s,r){if(((0,u.env)().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||(0,u.env)().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===r&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const o={id:this.nextDataId()};return this.texData.set(o,{shape:s,dtype:r,values:e,usage:So.UPLOAD,refCount:1}),o}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){this.texData.get(e).refCount++}decRef(e){this.texData.has(e)&&this.texData.get(e).refCount--}move(e,s,r,o,i){if((0,u.env)().getBool("DEBUG")&&this.checkNumericalProblems(s),"complex64"===o)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:r,dtype:o,values:s,usage:So.UPLOAD,refCount:i})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const s=this.texData.get(e),{values:r,dtype:o,complexTensorInfos:i,slice:a,shape:l,isPacked:c}=s;if(null!=a){let m;m=c?new ic(l,Ad):new Pl(l,Ad);const y=this.runWebGLProgram(m,[{dataId:e,shape:l,dtype:o}],o),_=this.readSync(y.dataId);return this.disposeIntermediateTensorInfo(y),_}if(null!=r)return this.convertAndCacheOnCPU(e);if("string"===o)return r;const d=null!=this.activeTimers;let f,p;if(d&&(f=u.util.now()),"complex64"===o){const m=this.readSync(i.real.dataId),y=this.readSync(i.imag.dataId);p=u.backend_util.mergeRealAndImagArrays(m,y)}else p=this.getValuesFromTexture(e);return d&&(this.downloadWaitMs+=u.util.now()-f),this.convertAndCacheOnCPU(e,p)}read(e){var s=this;return(0,on.Z)(function*(){if(s.pendingRead.has(e)){const x=s.pendingRead.get(e);return new Promise(D=>x.push(D))}const r=s.texData.get(e),{values:o,shape:i,slice:a,dtype:l,complexTensorInfos:c,isPacked:d}=r;if(null!=a){let x;x=d?new ic(i,Ad):new Pl(i,Ad);const D=s.runWebGLProgram(x,[{dataId:e,shape:i,dtype:l}],l),C=s.read(D.dataId);return s.disposeIntermediateTensorInfo(D),C}if(null!=o)return s.convertAndCacheOnCPU(e);if((0,u.env)().getBool("DEBUG")&&!(0,u.env)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===(0,u.env)().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let p,m,f=null;if("complex64"!==l&&(0,u.env)().get("WEBGL_BUFFER_SUPPORTED")){p=s.decode(e);const x=s.texData.get(p.dataId);f=s.gpgpu.createBufferFromTexture(x.texture.texture,...$m(i))}if(s.pendingRead.set(e,[]),"complex64"!==l&&(yield s.gpgpu.createAndWaitForFence()),"complex64"===l){const x=yield Promise.all([s.read(c.real.dataId),s.read(c.imag.dataId)]);m=u.backend_util.mergeRealAndImagArrays(x[0],x[1])}else if(null==f)m=s.getValuesFromTexture(e);else{const x=u.util.sizeFromShape(i);m=s.gpgpu.downloadFloat32MatrixFromBuffer(f,x)}if(null!=p&&s.disposeIntermediateTensorInfo(p),null!=f){const x=s.gpgpu.gl;Pt(x,()=>x.deleteBuffer(f))}const y=s.convertAndCacheOnCPU(e,m),_=s.pendingRead.get(e);return s.pendingRead.delete(e),_.forEach(x=>x(y)),s.pendingDisposal.has(e)&&(s.pendingDisposal.delete(e),s.disposeData(e)&&(0,u.engine)().removeDataId(e,s),s.pendingDeletes--),y})()}readToGPU(e,s={}){const r=this.texData.get(e),{values:o,shape:i,slice:a,dtype:l,isPacked:c,texture:d}=r;if("complex64"===l)throw new Error("Does not support reading texture for complex64 dtype.");if(null!=a){let y;y=c?new ic(i,Ad):new Pl(i,Ad);const _=this.runWebGLProgram(y,[{dataId:e,shape:i,dtype:l}],l),x=this.readToGPU(_,s);return this.disposeIntermediateTensorInfo(_),x}if(null==d)throw null!=o?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const f=this.decode(e,s.customTexShape),p=(0,u.engine)().makeTensorFromTensorInfo(f),m=this.texData.get(f.dataId);return Object.assign({tensorRef:p},m.texture)}bufferSync(e){const s=this.readSync(e.dataId);if("string"===e.dtype)try{const r=s.map(o=>u.util.decodeString(o));return(0,u.buffer)(e.shape,e.dtype,r)}catch(r){throw new Error("Failed to decode encoded string bytes into utf-8")}return(0,u.buffer)(e.shape,e.dtype,s)}checkNumericalProblems(e){if(null!=e)for(let s=0;s<e.length;s++){const r=e[s];if(!Y6(r))throw(0,u.env)().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${r} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${r} cannot be represented on this device.`)}}getValuesFromTexture(e){const{shape:s,dtype:r,isPacked:o}=this.texData.get(e),i=u.util.sizeFromShape(s);if((0,u.env)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const m=this.decode(e),y=this.texData.get(m.dataId),_=this.gpgpu.downloadMatrixFromPackedTexture(y.texture.texture,...$m(s)).subarray(0,i);return this.disposeIntermediateTensorInfo(m),_}const a=(0,u.env)().getBool("WEBGL_PACK")&&!0===o,l=a?fx(s):s,c=a?new dj(l):new cj(l),d=this.runWebGLProgram(c,[{shape:l,dtype:r,dataId:e}],"float32"),f=this.texData.get(d.dataId),p=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(f.texture.texture,f.texShape[0],f.texShape[1]).subarray(0,i);return this.disposeIntermediateTensorInfo(d),p}timerAvailable(){return(0,u.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){var s=this;const r=this.activeTimers,o=[];let i=!1;null==this.programTimersStack?(this.programTimersStack=o,i=!0):this.activeTimers.push(o),this.activeTimers=o,e();const a=u.util.flatten(this.activeTimers.map(d=>d.query)).filter(d=>null!=d),l=u.util.flatten(this.activeTimers.map(d=>d.name)).filter(d=>null!=d);this.activeTimers=r,i&&(this.programTimersStack=null);const c={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(0,on.Z)(function*(){if((0,u.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const d=yield Promise.all(a);c.kernelMs=u.util.sum(d),c.getExtraProfileInfo=()=>d.map((f,p)=>({name:l[p],ms:f})).map(f=>`${f.name}: ${f.ms}`).join(", ")}else c.kernelMs={error:"WebGL query timers are not supported in this environment."};return s.uploadWaitMs=0,s.downloadWaitMs=0,c})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return(0,u.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:u.util.now(),endMs:null}}endTimer(e){return(0,u.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=u.util.now(),e)}getQueryTime(e){var s=this;return(0,on.Z)(function*(){return(0,u.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?s.gpgpu.waitForQueryAndGetTime(e):e.endMs-e.startMs})()}disposeData(e,s=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(s?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!s&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:r}=this.texData.get(e);return null!=r&&(this.disposeData(r.real.dataId,s),this.disposeData(r.imag.dataId,s)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:s,dtype:r,texShape:o,usage:i,isPacked:a,slice:l}=this.texData.get(e),c=l&&l.origDataId||e,d=this.dataRefCount.get(c);d>1?this.dataRefCount.set(c,d-1):(this.dataRefCount.delete(c),null!=s&&(this.numBytesInGPU-=this.computeBytes(o,r),this.textureManager.releaseTexture(s,o,i,a)));const f=this.texData.get(e);f.texture=null,f.texShape=null,f.isPacked=!1,f.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,s=V8){return(0,u.env)().getBool("WEBGL_CPU_FORWARD")&&e.every(r=>null==this.texData.get(r.dataId).texture&&u.util.sizeFromShape(r.shape)<s)}getGPGPUContext(){return this.gpgpu}where(e){u.backend_util.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const s=e.dataSync();return F8(e.shape,s)}packedUnaryOp(e,s,r){const o=new ic(e.shape,s),i=this.compileAndRun(o,[e],r);return(0,u.engine)().makeTensorFromTensorInfo(i)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const o=Xw(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,o)}if((0,u.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,tS,e.dtype);const s=new Pl(e.shape,tS),r=this.compileAndRun(s,[e]);return(0,u.engine)().makeTensorFromTensorInfo(r)}makeTensorInfo(e,s,r){let o;if("string"===s&&null!=r&&r.length>0&&u.util.isString(r[0])){const i=r.map(a=>u.util.encodeString(a));o=this.write(i,e,s)}else o=this.write(r,e,s);return this.texData.get(o).usage=null,{dataId:o,shape:e,dtype:s}}makeOutput(e,s,r){return(0,u.engine)().makeTensorFromTensorInfo(this.makeTensorInfo(e,s,r),this)}unpackTensor(e){const s=new $8(e.shape);return this.runWebGLProgram(s,[e],e.dtype)}packTensor(e){const s=new E8(e.shape);return this.runWebGLProgram(s,[e],e.dtype,null,!0)}packedReshape(e,s){const r=[Dd(e.shape),...Id(e.shape)],o={dtype:e.dtype,shape:r,dataId:e.dataId},i=[Dd(s),...Id(s)],a=new Qw(i,r),d=this.runWebGLProgram(a,[o],e.dtype,[r],!0);return{dataId:d.dataId,shape:s,dtype:d.dtype}}decode(e,s){const r=this.texData.get(e),{isPacked:o,shape:i,dtype:a}=r;if(null!=s){const m=u.util.sizeFromShape(i);u.util.assert(m<=s[0]*s[1]*4,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.")}const l=fx(i);let c;c=o?new uj(l):new lj(l);const f=[null!=s?s:$m(l)];return{dtype:a,shape:i,dataId:this.runWebGLProgram(c,[{shape:l,dtype:a,dataId:e}],a,f,!0,s).dataId}}runWebGLProgram(e,s,r,o,i=!1,a){const l=this.makeTensorInfo(e.outputShape,r),c=this.texData.get(l.dataId);if(e.packedOutput&&(c.isPacked=!0),e.outPackingScheme===bd.DENSE){const C=null!=a?a:$m(e.outputShape);c.texShape=C.map(F=>2*F)}if(null!=e.outTexUsage&&(c.usage=e.outTexUsage),0===u.util.sizeFromShape(l.shape))return c.values=u.util.getTypedArrayFromDType(l.dtype,0),l;const d=[],f=s.map(C=>{if("complex64"===C.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let F=this.texData.get(C.dataId);if(null==F.texture){if(!e.packedInputs&&u.util.sizeFromShape(C.shape)<=(0,u.env)().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:C.shape,texData:null,isUniform:!0,uniformValues:F.values};e.packedInputs&&(F.isPacked=!0,F.shape=C.shape)}if(this.uploadToGPU(C.dataId),!!F.isPacked!=!!e.packedInputs)C=F.isPacked?this.unpackTensor(C):this.packTensor(C),d.push(C),F=this.texData.get(C.dataId);else if(F.isPacked&&!Um(F.shape,C.shape)){const B=C,Z=C.shape;C.shape=F.shape,C=this.packedReshape(C,Z),d.push(C),F=this.texData.get(C.dataId),B.shape=Z}return{shape:C.shape,texData:F,isUniform:!1}});this.uploadToGPU(l.dataId);const p={shape:l.shape,texData:c,isUniform:!1},m=function aj(t,n,e){let s="";n.concat(e).forEach(i=>{const a=null!=i.texData&&null!=i.texData.slice&&i.texData.slice.flatOffset>0;if(t.enableShapeUniforms&&!i.isUniform){const l=i.texData.texShape,{useSqueezeShape:c,uniformShape:d,keptDims:f}=yx(t.packedInputs,i.shape,l);let p="",m="",y="";if(1===d.length&&t.packedInputs){const Z=[Math.ceil(l[0]/2),Math.ceil(l[1]/2)];p=`${Z[0]>1}_${Z[1]>1}`}else if(2!==d.length||t.packedInputs){if(d.length>2&&!t.packedInputs){const Z=u.util.computeStrides(d);y=`${Z[0]===l[1]}_${Z[Z.length-1]===l[1]}`}}else m=`${d[0]>1}_${d[1]>1}`;const _=i.shape.length,x=2===d.length&&u.util.arraysEqual(i.shape,l),D=1===u.util.sizeFromShape(i.shape),C=u.backend_util.getBroadcastDims(i.shape,e.shape),F=!t.packedInputs&&_===e.shape.length&&u.util.arraysEqual(l,e.texData.texShape);s+=`${_}_${F}_${c?f:""}_${d.length}_${D}_${C}_${x}_${p}_${m}_${y}_${t.packedInputs||d.length>2?"":`${l[0]>1}_${l[1]>1}`}_${a}`}else s+=`${i.shape}_${i.isUniform?"uniform":i.texData.texShape}_${a}`});let o=t.constructor.name;return o+="_"+s+"_"+t.userCode+`${(0,u.env)().getNumber("WEBGL_VERSION")}`,o}(e,f,p),y=this.getAndSaveBinary(m,()=>function oj(t,n,e,s){const r=e.map((d,f)=>{const p={logicalShape:d.shape,texShape:d.isUniform?null:d.texData.texShape,isUniform:d.isUniform,isPacked:!d.isUniform&&d.texData.isPacked,flatOffset:null};return null!=d.texData&&null!=d.texData.slice&&d.texData.slice.flatOffset>0&&(p.flatOffset=d.texData.slice.flatOffset),{name:n.variableNames[f],shapeInfo:p}}),o=r.map(d=>d.shapeInfo),i={logicalShape:s.shape,texShape:s.texData.texShape,isUniform:!1,isPacked:s.texData.isPacked,flatOffset:null},a=CK(r,i,n),l=function q6(t,n){const e=kl(t,()=>t.createShader(t.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(Pt(t,()=>t.shaderSource(e,n)),Pt(t,()=>t.compileShader(e)),(0,u.env)().get("ENGINE_COMPILE_ONLY"))return e;if(!1===t.getShaderParameter(e,t.COMPILE_STATUS))throw Ow(n,t.getShaderInfoLog(e)),new Error("Failed to compile fragment shader.");return e}(t.gl,a),c=t.createProgram(l);return(0,u.env)().get("ENGINE_COMPILE_ONLY")?{program:n,fragmentShader:l,source:a,webGLProgram:c,inShapeInfos:o,outShapeInfo:i,uniformLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,inShapesLocations:null,inTexShapesLocations:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:Object.assign({program:n,fragmentShader:l,source:a,webGLProgram:c,inShapeInfos:o,outShapeInfo:i},Uw(t,n,c))}(this.gpgpu,e,f,p)),_=null!=this.activeTimers;let x;_&&(x=this.startTimer()),(0,u.env)().get("ENGINE_COMPILE_ONLY")||function ij(t,n,e,s,r){n.program.enableShapeUniforms||(Vw(n.inShapeInfos,e),Vw([n.outShapeInfo],[s]));const o=s.texData.texture,i=s.texData.texShape;s.texData.isPacked?t.setOutputPackedMatrixTexture(o.texture,i[0],i[1]):t.setOutputMatrixTexture(o.texture,i[0],i[1]),t.setProgram(n.webGLProgram),1===(0,u.env)().getNumber("WEBGL_VERSION")&&null!==n.infLoc&&t.gl.uniform1f(n.infLoc,1/0),null!==n.nanLoc&&t.gl.uniform1f(n.nanLoc,NaN),e.forEach((l,c)=>{const d=n.program.variableNames[c],f=n.uniformLocations[d],p=n.uniformLocations[`offset${d}`],m=n.inShapesLocations[`${d}Shape`],y=n.inTexShapesLocations[`${d}TexShape`];if(m){const{uniformShape:_}=yx(n.program.packedInputs,l.shape,l.texData.texShape);switch(_.length){case 1:t.gl.uniform1iv(m,new Int32Array(_));break;case 2:t.gl.uniform2iv(m,new Int32Array(_));break;case 3:t.gl.uniform3iv(m,new Int32Array(_));break;case 4:t.gl.uniform4iv(m,new Int32Array(_))}}if(y&&t.gl.uniform2i(y,l.texData.texShape[0],l.texData.texShape[1]),null!=f){if(l.isUniform){if(u.util.sizeFromShape(l.shape)<2)t.gl.uniform1f(f,l.uniformValues[0]);else{let _=l.uniformValues;_ instanceof Float32Array||(_=new Float32Array(_)),t.gl.uniform1fv(f,_)}return}null!=l.texData.slice&&null!=p&&t.gl.uniform1i(p,l.texData.slice.flatOffset),t.setInputMatrixTexture(l.texData.texture.texture,f,c)}});const a=n.outShapeLocation;if(a)switch(s.shape.length){case 1:t.gl.uniform1iv(a,new Int32Array(s.shape));break;case 2:t.gl.uniform2iv(a,new Int32Array(s.shape));break;case 3:t.gl.uniform3iv(a,new Int32Array(s.shape));break;case 4:t.gl.uniform4iv(a,new Int32Array(s.shape))}if(n.outShapeStridesLocation){const l=u.util.computeStrides(s.shape);switch(s.shape.length){case 2:t.gl.uniform1iv(n.outShapeStridesLocation,new Int32Array(l));break;case 3:t.gl.uniform2iv(n.outShapeStridesLocation,new Int32Array(l));break;case 4:t.gl.uniform3iv(n.outShapeStridesLocation,new Int32Array(l))}}n.outTexShapeLocation&&t.gl.uniform2i(n.outTexShapeLocation,s.texData.texShape[0],s.texData.texShape[1]),n.program.customUniforms&&r&&n.program.customUniforms.forEach((l,c)=>{const d=n.customUniformLocations[c],f=r[c];if("float"===l.type)t.gl.uniform1fv(d,f);else if("vec2"===l.type)t.gl.uniform2fv(d,f);else if("vec3"===l.type)t.gl.uniform3fv(d,f);else if("vec4"===l.type)t.gl.uniform4fv(d,f);else if("int"===l.type)t.gl.uniform1iv(d,f);else if("ivec2"===l.type)t.gl.uniform2iv(d,f);else if("ivec3"===l.type)t.gl.uniform3iv(d,f);else{if("ivec4"!==l.type)throw Error(`uniform type ${l.type} is not supported yet.`);t.gl.uniform4iv(d,f)}}),t.executeProgram()}(this.gpgpu,y,f,p,o),d.forEach(C=>this.disposeIntermediateTensorInfo(C)),_&&(x=this.endTimer(x),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(x)}));const D=(0,u.env)().get("WEBGL_FLUSH_THRESHOLD");if(D>0){const C=u.util.now();C-this.lastGlFlushTime>D&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=C)}if(!(0,u.env)().getBool("WEBGL_LAZILY_UNPACK")&&c.isPacked&&!1===i){const C=this.unpackTensor(l);return this.disposeIntermediateTensorInfo(l),C}return l}compileAndRun(e,s,r,o,i=!1){return this.runWebGLProgram(e,s,r=r||s[0].dtype,o,i)}getAndSaveBinary(e,s){return e in this.binaryCache||(this.binaryCache[e]=s()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||((0,u.env)().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(s=>{this.gpgpu.deleteProgram(this.binaryCache[s].webGLProgram),delete this.binaryCache[s]}),this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=(0,u.tidy)(()=>{if(!(0,u.env)().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=(0,u.env)().getBool("DEBUG");(0,u.env)().set("DEBUG",!1);const s=this.abs((0,u.scalar)(1e-8)).dataSync()[0];if((0,u.env)().set("DEBUG",e),s>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){const s=this.texData.get(e),{shape:r,dtype:o,values:i,texture:a,usage:l,isPacked:c}=s;if(null!=a)return;const d=null!=this.activeTimers;let f;d&&(f=u.util.now());let p=s.texShape;if(null==p&&(p=function fK(t,n=!1){let e=(0,u.env)().getNumber("WEBGL_MAX_TEXTURE_SIZE"),s=(0,u.env)().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");s===1/0&&(0,u.env)().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(s=e/2),n&&(e*=2,s*=2,1===(t=t.map((a,l)=>l>=t.length-2?u.util.nearestLargerEven(t[l]):t[l])).length&&(t=[2,t[0]])),2!==t.length&&(t=u.util.squeezeShape(t).newShape);let r=u.util.sizeFromShape(t),o=null;t.length<=1&&r<=e?o=[1,r]:2===t.length&&t[0]<=e&&t[1]<=e?o=t:3===t.length&&t[0]*t[1]<=e&&t[2]<=e?o=[t[0]*t[1],t[2]]:3===t.length&&t[0]<=e&&t[1]*t[2]<=e?o=[t[0],t[1]*t[2]]:4===t.length&&t[0]*t[1]*t[2]<=e&&t[3]<=e?o=[t[0]*t[1]*t[2],t[3]]:4===t.length&&t[0]<=e&&t[1]*t[2]*t[3]<=e&&(o=[t[0],t[1]*t[2]*t[3]]);const i=null!=o&&Math.max(...o)>s&&Math.min(...o)<=(n?2:1)&&Math.min(...o)>0;if(null==o||i)if(n){const a=Dd(t);let l=2,c=2;t.length&&([l,c]=Id(t)),r=a*(l/2)*(c/2),o=u.util.sizeToSquarishShape(r).map(d=>2*d)}else o=u.util.sizeToSquarishShape(r);return o}(r,c),s.texShape=p),null!=i){const m=fx(r);let y,_=p[1],x=p[0];const D=i instanceof Uint8Array||i instanceof Uint8ClampedArray;(c||!D)&&([_,x]=Cd(p[0],p[1])),y=c?new fj(m,D):new hj(m,D);const C=D?[x,_]:p,F=this.makeTensorInfo(C,o),B=this.texData.get(F.dataId);B.usage=D?So.PIXELS:So.UPLOAD,B.texShape=C,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(F.dataId),_,x,i);const ve=this.runWebGLProgram(y,[F],o,[[x,_]],!0),_e=this.texData.get(ve.dataId);s.texShape=_e.texShape,s.isPacked=_e.isPacked,s.usage=_e.usage,(0,u.env)().get("ENGINE_COMPILE_ONLY")?this.disposeData(ve.dataId):(s.texture=_e.texture,s.values=null,this.texData.delete(ve.dataId)),this.disposeIntermediateTensorInfo(F),d&&(this.uploadWaitMs+=u.util.now()-f)}else{const m=this.acquireTexture(p,l,o,c);s.texture=m}}convertAndCacheOnCPU(e,s){const r=this.texData.get(e),{dtype:o}=r;return this.releaseGPUData(e),null!=s&&(r.values=function H8(t,n){if("float32"===n||"complex64"===n)return t;if("int32"===n||"bool"===n){const e="int32"===n?new Int32Array(t.length):new Uint8Array(t.length);for(let s=0;s<e.length;++s)e[s]=Math.round(t[s]);return e}throw new Error(`Unknown dtype ${n}`)}(s,o)),r.values}acquireTexture(e,s,r,o){if(this.numBytesInGPU+=this.computeBytes(e,r),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const i=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${i} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,s,o)}computeBytes(e,s){return e[0]*e[1]*u.util.bytesPerElement(s)}checkCompileCompletion(){for(const[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}checkCompileCompletionAsync(){var e=this;return(0,on.Z)(function*(){const s=[];if(e.gpgpu.parallelCompilationExtension){for(const[,r]of Object.entries(e.binaryCache))s.push(e.checkCompletionAsync_(r));return Promise.all(s)}for(const[,r]of Object.entries(e.binaryCache)){const o=new Promise(i=>{try{e.checkCompletion_(r),i(!0)}catch(a){throw a}});s.push(o)}return Promise.all(s)})()}checkCompletionAsync_(e){var s=this;return(0,on.Z)(function*(){return s.gpgpu.gl.getProgramParameter(e.webGLProgram,s.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?s.checkCompletion_(e):(yield(0,u.nextFrame)(),s.checkCompletionAsync_(e))})()}checkCompletion_(e){if(!1===this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS))throw console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),!1===this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)?(Ow(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(const[,e]of Object.entries(this.binaryCache)){const{uniformLocations:s,customUniformLocations:r,infLoc:o,nanLoc:i,inShapesLocations:a,inTexShapesLocations:l,outShapeLocation:c,outShapeStridesLocation:d,outTexShapeLocation:f}=Uw(this.gpgpu,e.program,e.webGLProgram);e.uniformLocations=s,e.customUniformLocations=r,e.infLoc=o,e.nanLoc=i,e.inShapesLocations=a,e.inTexShapesLocations=l,e.outShapeLocation=c,e.outShapeStridesLocation=d,e.outTexShapeLocation=f}}}return t.nextDataId=0,t})();u.device_util.isBrowser()&&(0,u.registerBackend)("webgl",()=>new G8,2);class Od{constructor(n,e,s){this.variableNames=["A","B"],this.outputShape=u.backend_util.assertAndGetBroadcastShape(e,s),this.enableShapeUniforms=eo(this.outputShape.length),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${n}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}class pf{constructor(n,e,s,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=u.backend_util.assertAndGetBroadcastShape(e,s);const o=this.outputShape.length;this.enableShapeUniforms=eo(o);let i="";if(r)if(0===o||1===u.util.sizeFromShape(this.outputShape))i="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else if(i=`\n          ${ds(o)} coords = getOutputCoords();\n        `,1===o)i+=this.enableShapeUniforms?"\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const l=to("coords",o);i+=this.enableShapeUniforms?`\n            bool nextRowOutOfBounds =\n              (${l[o-2]} + 1) >= outShape[${o} - 2];\n            bool nextColOutOfBounds =\n              (${l[o-1]} + 1) >= outShape[${o} - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `:`\n            bool nextRowOutOfBounds =\n              (${l[o-2]} + 1) >= ${this.outputShape[o-2]};\n            bool nextColOutOfBounds =\n              (${l[o-1]} + 1) >= ${this.outputShape[o-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${n}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${i}\n\n        setOutput(result);\n      }\n    `}}function No(t){const{inputs:n,backend:e}=t,{x:s}=n;return e.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const X8={kernelName:u.Identity,backendName:"webgl",kernelFunc:No};function gu(t){const{inputs:n,backend:e}=t,{real:s,imag:r}=n,o=e.makeTensorInfo(s.shape,"complex64"),i=e.texData.get(o.dataId),a=No({inputs:{x:s},backend:e}),l=No({inputs:{x:r},backend:e});return i.complexTensorInfos={real:a,imag:l},o}const Z8={kernelName:u.Complex,backendName:"webgl",kernelFunc:gu},nS="return (a < 0.) ? b * a : a;",sS="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",Q8={kernelName:u.LeakyRelu,backendName:"webgl",kernelFunc:function Y8(t){const{inputs:n,backend:e,attrs:s}=t,{x:r}=n,{alpha:o}=s,i=e.makeTensorInfo([],"float32",u.util.createScalarValue(o,"float32")),a=(0,u.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new pf(sS,r.shape,i.shape):new Od(nS,r.shape,i.shape),l=e.runWebGLProgram(a,[r,i],"float32");return e.disposeIntermediateTensorInfo(i),l}},rS="return (a < 0.) ? b * a : a;",oS="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",q8={kernelName:u.Prelu,backendName:"webgl",kernelFunc:function J8(t){const{inputs:n,backend:e}=t,{x:s,alpha:r}=n,o=(0,u.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new pf(oS,s.shape,r.shape):new Od(rS,s.shape,r.shape);return e.runWebGLProgram(o,[s,r],"float32")}};function Ln({opSnippet:t,packedOpSnippet:n,cpuKernelImpl:e,dtype:s}){return({inputs:r,backend:o})=>{const{x:i}=r,a=o,l=s||i.dtype;if(a.shouldExecuteOnCPU([i])&&null!=e){const f=a.texData.get(i.dataId),p=e(f.values,l);return a.makeTensorInfo(i.shape,l,p)}let d;return d=(0,u.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=n?new ic(i.shape,n):new Pl(i.shape,t),a.runWebGLProgram(d,[i],l)}}function Ar({opSnippet:t,packedOpSnippet:n,checkOutOfBounds:e=!1,supportsComplex:s=!1,cpuKernelImpl:r,dtype:o}){return({inputs:i,backend:a})=>{const{a:l,b:c}=i,d=a;if(s&&"complex64"===l.dtype){const y=d.texData.get(l.dataId),_=d.texData.get(c.dataId),[x,D]=[[y.complexTensorInfos.real,_.complexTensorInfos.real],[y.complexTensorInfos.imag,_.complexTensorInfos.imag]].map(F=>{const[B,Z]=F,ce={dataId:B.dataId,dtype:B.dtype,shape:l.shape},ve={dataId:Z.dataId,dtype:Z.dtype,shape:c.shape},_e=new Od(t,l.shape,c.shape);return d.runWebGLProgram(_e,[ce,ve],(0,u.upcastType)(B.dtype,Z.dtype))}),C=gu({inputs:{real:x,imag:D},backend:d});return d.disposeIntermediateTensorInfo(x),d.disposeIntermediateTensorInfo(D),C}const f=o||(0,u.upcastType)(l.dtype,c.dtype);if(("string"===l.dtype||"string"===c.dtype||d.shouldExecuteOnCPU([l,c]))&&null!=r){const y=d.texData.get(l.dataId).values,_=d.texData.get(c.dataId).values,x="string"===l.dtype?u.backend_util.fromUint8ToStringArray(y):y,D="string"===l.dtype?u.backend_util.fromUint8ToStringArray(_):_,[C,F]=r(l.shape,c.shape,x,D,f),B=d.makeTensorInfo(F,f);return d.texData.get(B.dataId).values=C,B}let m;return m=(0,u.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=n?new pf(n,l.shape,c.shape,e):new Od(t,l.shape,c.shape),d.runWebGLProgram(m,[l,c],f)}}function mf(t,n=!1){if("linear"===t)return"return x;";if("relu"===t)return n?"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n";if("elu"===t)return n?"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n":"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===t)return n?"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n";if("prelu"===t)return n?oS:rS;if("leakyrelu"===t)return n?sS:nS;if("sigmoid"===t)return"return 1.0 / (1.0 + exp(-1.0 * x));";throw new Error(`Activation ${t} has not been implemented for the WebGL backend.`)}class iS{constructor(n,e,s,r=!1,o=!1,i=!1,a=null,l=!1,c=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=s,this.enableShapeUniforms=eo(this.outputShape.length);const f=Math.ceil((r?n[1]:n[2])/2),p=r?"i * 2, rc.y":"rc.y, i * 2",m=o?"rc.z, i * 2":"i * 2, rc.z",y=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],_=o?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let x="",D="";a&&(x=l?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${a}\n        }`:c?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${a}\n        }`:`vec4 activation(vec4 x) {\n          ${a}\n        }`,D="result = activation(result);");const C=i?"result += getBiasAtOutCoords();":"";i&&this.variableNames.push("bias"),l&&this.variableNames.push("preluActivationWeights"),c&&this.variableNames.push("leakyreluAlpha");let F="rc.x",B="rc.x";n[0]<e[0]?F=`int(min(float(rc.x), ${n[0]-1}.))`:e[0]<n[0]&&(B=`int(min(float(rc.x), ${e[0]-1}.))`),this.userCode=`\n      ${x}\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ${f}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ${f}; i++) {\n          int batchA = ${F};\n          int batchB = ${B};\n          vec4 a = getMatrixA(batchA, ${p});\n          vec4 b = getMatrixB(batchB, ${m});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${y[0]} * ${_[0]});\n          result += (${y[1]} * ${_[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${C}\n\n        ${D}\n\n        setOutput(result);\n      }\n    `}}class lS{constructor(n,e,s){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=u.backend_util.assertAndGetBroadcastShape(e,s),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${n}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const uS="return a * b;";function _x(t){const{inputs:n,backend:e}=t,{a:s,b:r}=n,o=u.backend_util.upcastType(s.dtype,r.dtype);if("complex64"===s.dtype){const a=e.texData.get(s.dataId),l=e.texData.get(r.dataId),c=new lS("return areal * breal - aimag * bimag;",s.shape,r.shape),d=new lS("return areal * bimag + aimag * breal;",s.shape,r.shape),f=[{dataId:a.complexTensorInfos.real.dataId,dtype:a.complexTensorInfos.real.dtype,shape:s.shape},{dataId:a.complexTensorInfos.imag.dataId,dtype:a.complexTensorInfos.imag.dtype,shape:s.shape},{dataId:l.complexTensorInfos.real.dataId,dtype:l.complexTensorInfos.real.dtype,shape:r.shape},{dataId:l.complexTensorInfos.imag.dataId,dtype:l.complexTensorInfos.imag.dtype,shape:r.shape}],p=e.runWebGLProgram(c,f,"float32"),m=e.runWebGLProgram(d,f,"float32"),y=gu({inputs:{real:p,imag:m},backend:e});return e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(m),y}if(e.shouldExecuteOnCPU([s,r])){const a=e.texData.get(s.dataId),l=e.texData.get(r.dataId),[c,d]=Qj(s.shape,r.shape,a.values,l.values,o),f=e.makeTensorInfo(d,o);return e.texData.get(f.dataId).values=c,f}let i;return i=(0,u.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new pf(uS,s.shape,r.shape):new Od(uS,s.shape,r.shape),e.runWebGLProgram(i,[s,r],o)}const e7={kernelName:u.Multiply,backendName:"webgl",kernelFunc:_x};function At(t){const{inputs:n,backend:e,attrs:s}=t,{x:r}=n,{shape:o}=s,i=e,a=u.util.sizeFromShape(r.shape),l=u.util.inferFromImplicitShape(o,a),c=u.util.sizeFromShape(l);u.util.assert(a===c,()=>`The new shape (${l}) has ${c} elements and the old shape (${r.shape}) has ${a} elements. The new shape and old shape must have the same number of elements.`);const d=i.texData.get(r.dataId);return!d.isPacked||Um(r.shape,l)||null!==d.texture&&Um(d.shape,l)?(i.incRef(r.dataId),{dataId:r.dataId,shape:l,dtype:r.dtype}):function t7(t,n,e){const s=[Dd(t.shape),...Id(t.shape)],r={dtype:t.dtype,shape:s,dataId:t.dataId},o=[Dd(n),...Id(n)],i=new Qw(o,s),c=e.runWebGLProgram(i,[r],t.dtype,[s],!0);return{dataId:c.dataId,shape:n,dtype:c.dtype}}(r,l,i)}const n7={kernelName:u.Reshape,backendName:"webgl",kernelFunc:At};class cS{constructor(n,e){this.variableNames=["x"];const{windowSize:s,batchSize:r,inSize:o,outSize:i}=n;this.outputShape=[r,i];const a=4*Math.floor(s/4),l=s%4;let c="sumValue += dot(values, ones);";if(null!=e){const f=1/e;c=`sumValue += dot(values * ${u.util.isInt(f)?f.toPrecision(2):f}, ones);`}let d="";o%s>0&&(d=`\n        if (inIdx < 0 || inIdx >= ${o}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${d}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${s};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${a}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${c}\n        }\n\n        int inIdx = inOffset + ${a};\n        if (${1===l}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${c}\n        } else if (${2===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${c}\n        } else if (${3===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${c}\n        }\n        setOutput(sumValue);\n      }\n    `}}class s7{constructor(n,e){this.variableNames=["x"];const{windowSize:s,batchSize:r,inSize:o,outSize:i}=n;this.outputShape=[r,i];let a="0.0",l="";"prod"===e?a="1.0":"min"===e?(a="1.0 / 1e-20",l="min"):"max"===e&&(a="-1.0 / 1e-20",l="max");let c=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===e?c="sumValue":"prod"===e?c="prodValue":"all"===e?c="allValue":"any"===e&&(c="anyValue");const d=4*Math.floor(s/4),f=s%4;let p=`\n      if (${"sum"===e}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===e}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${l}(values, minMaxValue);\n        if (${"min"===e} || ${"max"===e}) {\n          minMaxValue = ${l}(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    `,m="vec4";"all"===e?(a="1.0",p="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",m="bvec4"):"any"===e&&(a="0.0",p="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",m="bvec4");let y="";o%s>0&&(y=`\n        if (inIdx < 0 || inIdx >= ${o}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${a};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${y}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${s};\n\n        vec4 minMaxValue = vec4(${a});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${d}; i += 4) {\n          int inIdx = inOffset + i;\n          ${m} values = ${m}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${p}\n        }\n\n        int inIdx = inOffset + ${d};\n        if (${1===f}) {\n          ${m} values = ${m}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${p}\n        } else if (${2===f}) {\n          ${m} values = ${m}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${p}\n        } else if (${3===f}) {\n          ${m} values = ${m}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${p}\n        }\n        setOutput(${c});\n      }\n    `}}function ac(t,n,e,s){const r=function r7(t){const n=[];for(;0===n.length||1!==n[n.length-1].outSize;){const e=n.length?n[n.length-1].outSize:t[1],s=u.backend_util.computeOptimalWindowSize(e);n.push({inSize:e,windowSize:s,outSize:Math.ceil(e/s)})}return n}(t.shape);let o=t;for(let i=0;i<r.length;i++){const{inSize:a,windowSize:l,outSize:c}=r[i];let d,f;d="mean"===e?0===i?new cS({windowSize:l,inSize:a,batchSize:t.shape[0],outSize:c},a):new cS({windowSize:l,inSize:a,batchSize:t.shape[0],outSize:c}):new s7({windowSize:l,inSize:a,batchSize:t.shape[0],outSize:c},e),f=o,o=s.runWebGLProgram(d,[o],n),f.dataId!==t.dataId&&s.disposeIntermediateTensorInfo(f)}return o}class o7{constructor(n,e){this.variableNames=["A"];const s=new Array(n.length);for(let i=0;i<s.length;i++)s[i]=n[e[i]];this.outputShape=s,this.rank=s.length;const r=ds(this.rank),o=function i7(t){const n=t.length;if(n>6)throw Error(`Transpose for rank ${n} is not yet supported`);const e=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],s=new Array(n);for(let r=0;r<t.length;r++)s[t[r]]=e[r];return s.join()}(e);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${o}));\n    }\n    `}}class a7{constructor(n,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const s=new Array(n.length);for(let d=0;d<s.length;d++)s[d]=n[e[d]];if(this.outputShape=s,this.rank=s.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=ds(this.rank),o=Yw("rc",this.rank),i=new Array(this.rank);for(let d=0;d<e.length;d++)i[e[d]]=o[d];const a=`vec2(${i.slice(-2).join()})`,l=`++${o[this.rank-1]} < ${s[this.rank-1]}`,c=`getChannel(getA(${i.join()}), ${a})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${c};\n      if(${l}) {\n        result[1] = ${c};\n      }\n      --${o[this.rank-1]};\n      if(++${o[this.rank-2]} < ${s[this.rank-2]}) {\n        result[2] = ${c};\n        if(${l}) {\n          result[3] = ${c};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function Km(t,n,e){const s=(0,u.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new a7(t.shape,n):new o7(t.shape,n);return e.runWebGLProgram(s,[t],t.dtype)}function jm(t){const{inputs:n,backend:e,attrs:s}=t,{x:r}=n,{axis:o,keepDims:i}=s;return function l7(t,n,e,s){const o=t.shape.length,i=u.util.parseAxisParam(n,t.shape);let a=i;const l=u.backend_util.getAxesPermutation(a,o),c=null!=l;let d=t;c&&(d=Km(t,l,s),a=u.backend_util.getInnerMostAxes(a.length,o)),u.backend_util.assertAxesAreInnerMostDims("sum",a,o);const[f,p]=u.backend_util.computeOutAndReduceShapes(d.shape,a);let m=f;e&&(m=u.backend_util.expandShapeToKeepDim(f,i));const y=u.util.sizeFromShape(p),D=At({inputs:{x:d},attrs:{shape:[u.util.sizeFromShape(t.shape)/y,y]},backend:s}),F=ac(D,(0,u.sumOutType)(t.dtype),"sum",s),B=At({inputs:{x:F},attrs:{shape:m},backend:s});return s.disposeIntermediateTensorInfo(D),s.disposeIntermediateTensorInfo(F),c&&s.disposeIntermediateTensorInfo(d),B}(r,o,i,e)}const u7={kernelName:u.Sum,backendName:"webgl",kernelFunc:jm};function no(t){const{inputs:n,backend:e,attrs:s}=t,{x:r}=n,{perm:o}=s,i=e,l=new Array(r.shape.length);for(let d=0;d<l.length;d++)l[d]=r.shape[o[d]];let c;if(i.shouldExecuteOnCPU([r])){const f=i.texData.get(r.dataId).values,p=xx(f,r.shape,r.dtype,o,l);c=i.makeTensorInfo(l,r.dtype),i.texData.get(c.dataId).values=p}else c=Km(r,o,i);return c}const c7={kernelName:u.Transpose,backendName:"webgl",kernelFunc:no};function Xm({a:t,b:n,transposeA:e,transposeB:s,backend:r,bias:o=null,preluActivationWeights:i=null,leakyreluAlpha:a=0,activation:l=null}){const c=t.shape.length,d=n.shape.length,f=e?t.shape[c-2]:t.shape[c-1],p=s?n.shape[d-1]:n.shape[d-2],m=e?t.shape[c-1]:t.shape[c-2],y=s?n.shape[d-2]:n.shape[d-1],_=t.shape.slice(0,-2),x=n.shape.slice(0,-2),D=u.util.sizeFromShape(_),C=u.util.sizeFromShape(x),B=u.broadcast_util.assertAndGetBroadcastShape(t.shape.slice(0,-2),n.shape.slice(0,-2)).concat([m,y]);u.util.assert(f===p,()=>`Error in matMul: inner shapes (${f}) and (${p}) of Tensors with shapes ${t.shape} and ${n.shape} and transposeA=${e} and transposeB=${s} must match.`);const Z=e?[D,f,m]:[D,m,f],ce=s?[C,y,p]:[C,p,y],ve=At({inputs:{x:t},backend:r,attrs:{shape:Z}}),_e=At({inputs:{x:n},backend:r,attrs:{shape:ce}}),Fe=[ve,_e],Le=Math.max(D,C),Xe=e?ve.shape[1]:ve.shape[2],tt=null!=o,nt=null!=i,st="leakyrelu"===l,Je=null!=l?mf(l,!0):null;let lt;if((1===m||1===y)&&Xe>1e3&&!1===(tt||nt||st||null!=Je)){let $e=ve,Ge=_e;e&&($e=no({inputs:{x:ve},backend:r,attrs:{perm:[0,2,1]}}),Fe.push($e)),s&&(Ge=no({inputs:{x:_e},backend:r,attrs:{perm:[0,2,1]}}),Fe.push(Ge));const et=1===y;let ut=$e;1!==y&&(ut=At({inputs:{x:$e},backend:r,attrs:{shape:[Le,Xe,1]}}),Fe.push(ut));const Ct=1===y?2:1;let vt=Ge;et&&(vt=At({inputs:{x:Ge},backend:r,attrs:{shape:[Le,1,Xe]}}),Fe.push(vt));const wt=_x({inputs:{a:ut,b:vt},backend:r});lt=jm({inputs:{x:wt},backend:r,attrs:{axis:Ct,keepDims:!0}}),Fe.push(wt)}else{const $e=(0,u.upcastType)(t.dtype,n.dtype),Ge=new iS(Z,ce,[Le,m,y],e,s,tt,Je,nt,st),Ze=[ve,_e];if(null!=o&&Ze.push(o),nt&&Ze.push(i),st){const et=r.makeTensorInfo([],"float32",u.util.createScalarValue(a,"float32"));Ze.push(et),Fe.push(et)}lt=r.runWebGLProgram(Ge,Ze,$e)}const Me=At({inputs:{x:lt},backend:r,attrs:{shape:B}});Fe.push(lt);for(const $e of Fe)r.disposeIntermediateTensorInfo($e);return Me}const h7={kernelName:u._FusedMatMul,backendName:"webgl",kernelFunc:function d7(t){const{inputs:n,backend:e,attrs:s}=t,{a:r,b:o,bias:i,preluActivationWeights:a}=n,{transposeA:l,transposeB:c,activation:d,leakyreluAlpha:f}=s;return Xm({a:r,b:o,transposeA:l,transposeB:c,backend:e,bias:i,preluActivationWeights:a,leakyreluAlpha:f,activation:d})}},hS="return abs(x);",p7={kernelName:u.Abs,backendName:"webgl",kernelFunc:function f7(t){const{inputs:n,backend:e}=t,{x:s}=n;if(e.shouldExecuteOnCPU([s])&&"complex64"!==s.dtype){const o=e.texData.get(s.dataId),i=Xw(o.values);return e.makeTensorInfo(s.shape,s.dtype,i)}let r;return r=(0,u.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new ic(s.shape,hS):new Pl(s.shape,hS),e.runWebGLProgram(r,[s],s.dtype)}},g7=Ln({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),y7={kernelName:u.Acos,backendName:"webgl",kernelFunc:g7},x7=Ln({opSnippet:"if (isnan(x)) return x;\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),E7={kernelName:u.Acosh,backendName:"webgl",kernelFunc:x7},fS="return a + b;",_7=Ar({opSnippet:fS,packedOpSnippet:fS,supportsComplex:!0,cpuKernelImpl:Oj}),b7={kernelName:u.Add,backendName:"webgl",kernelFunc:_7};class C7{constructor(n,e){this.outputShape=[],this.outputShape=n,this.variableNames=e.map((o,i)=>`T${i}`);const s=[];this.variableNames.forEach(o=>{s.push(`float v${o} = get${o}AtOutCoords();`)});const r=this.variableNames.map(o=>`v${o}`).join(" + ");this.userCode=`\n      void main() {\n        ${s.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}class D7{constructor(n,e){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.variableNames=e.map((o,i)=>`T${i}`);const s=[];this.variableNames.forEach(o=>{s.push(`vec4 v${o} = get${o}AtOutCoords();`)});const r=this.variableNames.map(o=>`v${o}`).join(" + ");this.userCode=`\n      void main() {\n        ${s.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}const I7={kernelName:u.AddN,backendName:"webgl",kernelFunc:function Zm(t){const{inputs:n,backend:e}=t,s=n;if(1===s.length)return No({inputs:{x:s[0]},backend:e});if(s.length>(0,u.env)().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const l=Math.floor(s.length/2),c=Zm({inputs:s.slice(0,l),backend:e}),d=Zm({inputs:s.slice(l),backend:e});return Zm({inputs:[c,d],backend:e})}const r=s.map(l=>l.dtype).reduce((l,c)=>(0,u.upcastType)(l,c)),o=s.map(l=>l.shape),a=(0,u.env)().getBool("WEBGL_PACK")?new D7(s[0].shape,o):new C7(s[0].shape,o);return e.runWebGLProgram(a,s,r)}},w7={kernelName:u.All,backendName:"webgl",kernelFunc:function T7(t){const{inputs:n,backend:e,attrs:s}=t,{x:r}=n,{axis:o,keepDims:i}=s,a=r.shape.length,l=u.util.parseAxisParam(o,r.shape);let c=l;const d=u.backend_util.getAxesPermutation(c,a);let f=r;null!=d&&(f=no({inputs:{x:r},backend:e,attrs:{perm:d}}),c=u.backend_util.getInnerMostAxes(c.length,a)),u.backend_util.assertAxesAreInnerMostDims("all",c,a);const[p,m]=u.backend_util.computeOutAndReduceShapes(f.shape,c),_=At({inputs:{x:f},backend:e,attrs:{shape:[-1,u.util.sizeFromShape(m)]}}),x=ac(_,_.dtype,"all",e);let D;return D=At(i?{inputs:{x},backend:e,attrs:{shape:u.backend_util.expandShapeToKeepDim(p,l)}}:{inputs:{x},backend:e,attrs:{shape:p}}),e.disposeIntermediateTensorInfo(_),e.disposeIntermediateTensorInfo(x),null!=d&&e.disposeIntermediateTensorInfo(f),D}},N7={kernelName:u.Any,backendName:"webgl",kernelFunc:function S7(t){const{inputs:n,backend:e,attrs:s}=t,{x:r}=n,{axis:o,keepDims:i}=s,a=r.shape.length,l=u.util.parseAxisParam(o,r.shape);let c=l;const d=u.backend_util.getAxesPermutation(c,a);let f=r;null!=d&&(f=no({inputs:{x:r},backend:e,attrs:{perm:d}}),c=u.backend_util.getInnerMostAxes(c.length,a)),u.backend_util.assertAxesAreInnerMostDims("any",c,a);const[p,m]=u.backend_util.computeOutAndReduceShapes(f.shape,c),_=At({inputs:{x:f},backend:e,attrs:{shape:[-1,u.util.sizeFromShape(m)]}}),x=ac(_,_.dtype,"any",e);let D;return D=At(i?{inputs:{x},backend:e,attrs:{shape:u.backend_util.expandShapeToKeepDim(p,l)}}:{inputs:{x},backend:e,attrs:{shape:p}}),e.disposeIntermediateTensorInfo(_),e.disposeIntermediateTensorInfo(x),null!=d&&e.disposeIntermediateTensorInfo(f),D}};class A7{constructor(n,e,s){this.variableNames=["A"];const{windowSize:r,batchSize:o,outSize:i}=n;s||this.variableNames.push("bestIndicesA"),this.outputShape=[o,i],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${s?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));"};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${"max"===e?">":"<"} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}class O7{constructor(n,e,s,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,u.util.assert(n.length>2,()=>`Packed arg${s.charAt(0).toUpperCase()+s.slice(1)} supports only inputs with rank above 2.`);const i=Math.ceil(n[n.length-1]/e);this.outputShape=n.slice(0,-1),i>1&&this.outputShape.push(i),r||this.variableNames.push("bestIndicesA");const a=this.outputShape,l=a.length,c=ds(l),d=to("coords",l);let f,p;if(1===i){p=l+1;const _e=ds(p);f=`\n        ${_e} sourceLocR = ${_e}(${d.join()}, 0);\n        ++${d[l-1]};\n        ${_e} sourceLocG = ${_e}(${d.join()}, 0);\n        ++${d[l-2]};\n        ${_e} sourceLocA = ${_e}(${d.join()}, 0);\n        --${d[l-1]};\n        ${_e} sourceLocB = ${_e}(${d.join()}, 0);\n        --${d[l-2]};`}else p=l,f=`\n        ${c} sourceLocR = coords;\n        ++${d[l-1]};\n        ${c} sourceLocG = coords;\n        ++${d[l-2]};\n        ${c} sourceLocA = coords;\n        --${d[l-1]};\n        ${c} sourceLocB = coords;\n        --${d[l-2]};`;const m=["x","y","z","w","u","v"].slice(0,p),y="."+m[p-1],_=m.map(_e=>"int "+_e),x=to("sourceLocR",p-1).concat("inIdx.r"),D=to("sourceLocG",p-1).concat("inIdx.g"),C=to("sourceLocB",p-1).concat("inIdx.b"),F=to("sourceLocA",p-1).concat("inIdx.a"),B="max"===s?"greaterThan":"lessThan",Z=r?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${x.join()}),\n                             getBestIndicesAChannel(${D.join()}),\n                             getBestIndicesAChannel(${C.join()}),\n                             getBestIndicesAChannel(${F.join()})));`,ce=`vec4(\n            getAChannel(${x.join()}),\n            hasNextCol ? getAChannel(${D.join()}) : 0.,\n            hasNextRow ? getAChannel(${C.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${F.join()}) : 0.)`,ve=r?"":`\n      float getBestIndicesAChannel(${_.join()}) {\n        return getChannel(getBestIndicesA(${m.join()}),\n                                          vec2(${m.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${_.join()}) {\n        return getChannel(getA(${m.join()}),\n                               vec2(${m.slice(-2).join()}));\n      }\n      ${ve}\n      void main() {\n        ${c} coords = getOutputCoords();\n        bool hasNextCol = ${d[l-1]} < ${a[l-1]-1};\n        bool hasNextRow = ${d[l-2]} < ${a[l-2]-1};\n        ${f}\n        ivec4 srcIdx = ivec4(sourceLocR${y}, sourceLocG${y},\n          sourceLocB${y}, sourceLocA${y}) * ${e};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${ce};\n\n        for (int i = 0; i < ${e}; i++) {\n          inIdx = srcIdx;\n          ${Z}\n          vec4 candidate = ${ce};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${B}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}function pS(t,n,e,s=null){let r=n.shape[0],o=n.shape[1];null!=s&&(r=s.shape[0],o=s.shape[1]);const i=u.backend_util.computeOptimalWindowSize(o),a={windowSize:i,inSize:o,batchSize:r,outSize:Math.ceil(o/i)},l=new A7(a,e,null==s),c=[n];null!=s&&c.push(s);const d=t.runWebGLProgram(l,c,"int32");if(1===d.shape[1])return d;const f=pS(t,n,e,d);return t.disposeIntermediateTensorInfo(d),f}function mS(t,n,e,s=null){const r=null!=s?s.shape:n.shape,i=u.backend_util.computeOptimalWindowSize(r[r.length-1]),a=new O7(r,i,e,null==s),c=t.runWebGLProgram(a,null==s?[n]:[n,s],"int32");if(c.shape.length===n.shape.length){const d=mS(t,n,e,c);return t.disposeIntermediateTensorInfo(c),d}return c}function gS(t,n,e,s){const r=[e];if(u.backend_util.assertAxesAreInnerMostDims("arg"+s.charAt(0).toUpperCase()+s.slice(1),r,n.shape.length),!(0,u.env)().getBool("WEBGL_PACK_REDUCE")||n.shape.length<=2){const o=[],i=t.texData.get(n.dataId);let l=n;null!==i&&i.isPacked&&(l=t.unpackTensor(n),o.push(l));const[c,d]=u.backend_util.computeOutAndReduceShapes(l.shape,r),f=u.util.sizeFromShape(d),p=At({inputs:{x:l},backend:t,attrs:{shape:[-1,f]}});o.push(p);const m=pS(t,p,s);o.push(m);const y=At({inputs:{x:m},backend:t,attrs:{shape:c}});return o.forEach(_=>t.disposeIntermediateTensorInfo(_)),y}return mS(t,n,s)}const M7={kernelName:u.ArgMax,backendName:"webgl",kernelFunc:function R7(t){const{inputs:n,backend:e,attrs:s}=t,{x:r}=n,{axis:o}=s;let i=u.util.parseAxisParam(o,r.shape);const a=u.backend_util.getAxesPermutation(i,r.shape.length);let l=r;const c=[];null!=a&&(l=no({inputs:{x:r},backend:e,attrs:{perm:a}}),c.push(l),i=u.backend_util.getInnerMostAxes(i.length,l.shape.length)),u.backend_util.assertAxesAreInnerMostDims("argMax",[i[0]],l.shape.length);const d=gS(e,l,i[0],"max");return c.forEach(f=>e.disposeIntermediateTensorInfo(f)),d}},P7={kernelName:u.ArgMin,backendName:"webgl",kernelFunc:function k7(t){const{inputs:n,backend:e,attrs:s}=t,{x:r}=n,{axis:o}=s;let i=u.util.parseAxisParam(o,r.shape);const a=u.backend_util.getAxesPermutation(i,r.shape.length);let l=r;const c=[];null!=a&&(l=no({inputs:{x:r},backend:e,attrs:{perm:a}}),c.push(l),i=u.backend_util.getInnerMostAxes(i.length,l.shape.length)),u.backend_util.assertAxesAreInnerMostDims("argMin",[i[0]],l.shape.length);const d=gS(e,l,i[0],"min");return c.forEach(f=>e.disposeIntermediateTensorInfo(f)),d}},F7=Ln({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),L7={kernelName:u.Asin,backendName:"webgl",kernelFunc:F7},U7=Ln({opSnippet:"if (isnan(x)) return x;return log(x + sqrt(x * x + 1.0));"}),V7={kernelName:u.Asinh,backendName:"webgl",kernelFunc:U7},W7=Ln({opSnippet:"if (isnan(x)) return x;\n  return atan(x);\n"}),G7={kernelName:u.Atan,backendName:"webgl",kernelFunc:W7},j7=Ar({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  \n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n\n  return result;\n"}),X7={kernelName:u.Atan2,backendName:"webgl",kernelFunc:j7},Y7=Ln({opSnippet:"if (isnan(x)) return x;\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),Q7={kernelName:u.Atanh,backendName:"webgl",kernelFunc:Y7};class gf{constructor(n,e,s,r=!1,o=!1){if(this.variableNames=["x"],"avg"===e&&s)throw new Error("Cannot compute positions for average pool.");const i=n.filterWidth,a=n.strideHeight,l=n.strideWidth,c=n.dilationHeight,d=n.dilationWidth,f=n.effectiveFilterHeight,p=n.effectiveFilterWidth,m=n.padInfo.top,y=n.padInfo.left;this.outputShape=n.outShape;const _="avg"===e;let C="0.0";if(_||(C="-1.0 / 1e-20"),s)return void(this.userCode=`\n        const ivec2 strides = ivec2(${a}, ${l});\n        const ivec2 pads = ivec2(${m}, ${y});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${f};\n              wR += ${c}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${n.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${p};\n                wC += ${d}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${n.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value >= currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?o?`((batch  * ${n.inHeight} + xR) * ${n.inWidth} + xC) * ${n.inChannels} + d`:`(xR * ${n.inWidth} + xC) * ${n.inChannels} + d`:`wR * ${p} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `);let B=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===e&&(B="avgValue / count");const Z=4*Math.floor(i/4),ce=i%4,ve=`\n      if (${_}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${a}, ${l});\n      const ivec2 pads = ivec2(${m}, ${y});\n      const float initializationValue = ${C};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${n.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${C});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${f};\n            wR += ${c}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${n.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${Z}; wC += 4) {\n            int xC = xCCorner + wC * ${d};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${d}, d),\n              getValue(batch, xR, xC + 2 * ${d}, d),\n              getValue(batch, xR, xC + 3 * ${d}, d)\n            );\n\n            ${ve}\n          }\n\n          int xC = xCCorner + ${Z};\n          if (${1===ce}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${ve}\n          } else if (${2===ce}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${d}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${ve}\n          } else if (${3===ce}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${d}, d),\n              getValue(batch, xR, xC + 2 * ${d}, d),\n              initializationValue\n            );\n\n            ${ve}\n          }\n        }\n        setOutput(${B});\n      }\n    `}}class bx{constructor(n,e,s,r=!1,o=!1){if(this.variableNames=["x"],"avg"===e&&s)throw new Error("Cannot compute positions for average pool.");const i=n.filterWidth,a=n.strideDepth,l=n.strideHeight,c=n.strideWidth,d=n.dilationDepth,f=n.dilationHeight,p=n.dilationWidth,m=n.effectiveFilterDepth,y=n.effectiveFilterHeight,_=n.effectiveFilterWidth,x=n.padInfo.front,D=n.padInfo.top,C=n.padInfo.left;this.outputShape=n.outShape;const F="avg"===e;let B="0.0";if(F||(B="-1.0 / 1e-20"),s)return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${a}, ${l}, ${c});\n        const ivec3 pads = ivec3(${x}, ${D}, ${C});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${m};\n              wD += ${d}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${n.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${y};\n                wR += ${f}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${n.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${_};\n                  wC += ${p}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${n.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value >= currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?o?`(((batch * ${n.inDepth} + xD) * ${n.inHeight} + xR) * ${n.inWidth} + xC) * ${n.inChannels} + ch`:`((xD * ${n.inHeight} + xR) * ${n.inWidth} + xC) * ${n.inChannels} + ch`:`wD * ${y} * ${_} +\n                      wR * ${_} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `);let ce=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===e&&(ce="avgValue / count");const ve=4*Math.floor(i/4),_e=i%4,Fe=`\n      if (${F}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${a}, ${l}, ${c});\n      const ivec3 pads = ivec3(${x}, ${D}, ${C});\n      const float initializationValue = ${B};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${n.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${B});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${m};\n            wD += ${d}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${n.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${y};\n            wR += ${f}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${n.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${ve}; wC += 4) {\n              int xC = xCCorner + wC * ${p};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${p}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${p}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${p}, ch)\n              );\n\n              ${Fe}\n            }\n\n            int xC = xCCorner + ${ve};\n            if (${1===_e}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${Fe}\n            } else if (${2===_e}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${p}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${Fe}\n            } else if (${3===_e}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${p}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${p}, ch),\n                initializationValue\n              );\n\n              ${Fe}\n            }\n          }\n          setOutput(${ce});\n        }\n      }\n    `}}const q7={kernelName:u.AvgPool,backendName:"webgl",kernelFunc:function J7(t){const{inputs:n,backend:e,attrs:s}=t,{x:r}=n;df(r,"avgPool");const{filterSize:o,strides:i,pad:a,dimRoundingMode:l}=s;u.util.assert(u.backend_util.eitherStridesOrDilationsAreOne(i,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`);const d=u.backend_util.computePool2DInfo(r.shape,o,i,1,a,l);if(1===d.filterWidth&&1===d.filterHeight&&u.util.arraysEqual(d.inShape,d.outShape))return No({inputs:{x:r},backend:e});const f=new gf(d,"avg",!1);return e.runWebGLProgram(f,[r],"float32")}},t5={kernelName:u.AvgPool3D,backendName:"webgl",kernelFunc:function e5(t){const{inputs:n,backend:e,attrs:s}=t,{x:r}=n,{filterSize:o,strides:i,pad:a,dimRoundingMode:l,dataFormat:c}=s,f=u.backend_util.computePool3DInfo(r.shape,o,i,[1,1,1],a,l,c),p=new bx(f,"avg",!1);return e.runWebGLProgram(p,[r],"float32")}};class n5{constructor(n){this.variableNames=["dy"],this.outputShape=n.inShape;const l=n.effectiveFilterHeight,c=n.effectiveFilterWidth;this.userCode=`\n      const ivec2 pads = ivec2(${l-1-n.padInfo.top}, ${c-1-n.padInfo.left});\n      const float avgMultiplier = float(${1/(n.filterHeight*n.filterWidth)});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${l};\n            wR += ${n.dilationHeight}) {\n          float dyR = float(dyRCorner + wR) / ${n.strideHeight}.0;\n\n          if (dyR < 0.0 || dyR >= ${n.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${c};\n            wC+= ${n.dilationWidth}) {\n            float dyC = float(dyCCorner + wC) / ${n.strideWidth}.0;\n\n            if (dyC < 0.0 || dyC >= ${n.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class s5{constructor(n){this.variableNames=["dy"],this.outputShape=n.inShape;const f=n.effectiveFilterDepth,p=n.effectiveFilterHeight,m=n.effectiveFilterWidth;this.userCode=`\n      const ivec3 pads = ivec3(${f-1-n.padInfo.front}, ${p-1-n.padInfo.top}, ${m-1-n.padInfo.left});\n      const float avgMultiplier = float(${1/(n.filterDepth*n.filterHeight*n.filterWidth)});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${f};\n            wD += ${n.dilationDepth}) {\n          float dyD = float(dyDCorner + wD) / ${n.strideDepth}.0;\n\n          if (dyD < 0.0 || dyD >= ${n.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${p};\n              wR += ${n.dilationHeight}) {\n            float dyR = float(dyRCorner + wR) / ${n.strideHeight}.0;\n\n            if (dyR < 0.0 || dyR >= ${n.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${m};\n                wC += ${n.dilationWidth}) {\n              float dyC = float(dyCCorner + wC) / ${n.strideWidth}.0;\n\n              if (dyC < 0.0 || dyC >= ${n.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const o5={kernelName:u.AvgPool3DGrad,backendName:"webgl",kernelFunc:function r5(t){const{inputs:n,backend:e,attrs:s}=t,{dy:r,input:o}=n,i=o,{filterSize:a,strides:l,pad:c,dimRoundingMode:d}=s,p=u.backend_util.computePool3DInfo(i.shape,a,l,[1,1,1],c,d),m=new s5(p);return e.runWebGLProgram(m,[r],i.dtype)}},a5={kernelName:u.AvgPoolGrad,backendName:"webgl",kernelFunc:function i5(t){const{inputs:n,backend:e,attrs:s}=t,{dy:r,input:o}=n,i=o;df([r,o],"avgPoolGrad");const{filterSize:a,strides:l,pad:c}=s,d=u.backend_util.computePool2DInfo(i.shape,a,l,1,c),f=new n5(d);return e.runWebGLProgram(f,[r],i.dtype)}},u5={kernelName:u.BatchMatMul,backendName:"webgl",kernelFunc:function l5(t){const{inputs:n,backend:e,attrs:s}=t,{a:r,b:o}=n,{transposeA:i,transposeB:a}=s;return Xm({a:r,b:o,transposeA:i,transposeB:a,backend:e})}};class c5{constructor(n,e,s,r,o,i){this.outputShape=[],this.variableNames=["x","mean","variance"],u.backend_util.assertAndGetBroadcastShape(n,e),u.backend_util.assertAndGetBroadcastShape(n,s);let a="0.0";null!=r&&(u.backend_util.assertAndGetBroadcastShape(n,r),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let l="1.0";null!=o&&(u.backend_util.assertAndGetBroadcastShape(n,o),this.variableNames.push("scale"),l="getScaleAtOutCoords()"),this.outputShape=n,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${a};\n        float scale = ${l};\n        float inv = scale * inversesqrt(variance + float(${i}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class d5{constructor(n,e,s,r,o,i){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],u.backend_util.assertAndGetBroadcastShape(n,e),u.backend_util.assertAndGetBroadcastShape(n,s);let a="vec4(0.0)";null!=r&&(u.backend_util.assertAndGetBroadcastShape(n,r),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let l="vec4(1.0)";null!=o&&(u.backend_util.assertAndGetBroadcastShape(n,o),this.variableNames.push("scale"),l="getScaleAtOutCoords()"),this.outputShape=n,this.userCode=`\n      void main() {\n        vec4 offset = ${a};\n        vec4 scale = ${l};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${i}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const f5={kernelName:u.FusedBatchNorm,backendName:"webgl",kernelFunc:({inputs:t,backend:n,attrs:e})=>{const{x:s,mean:r,variance:o,offset:i,scale:a}=t;u.util.assert(r.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),u.util.assert(null==i||r.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),u.util.assert(null==a||r.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:l}=e;null==l&&(l=.001);const c=[s,r,o];let d=null;null!=i&&(d=i.shape,c.push(i));let f=null;null!=a&&(f=a.shape,c.push(a));const p=(0,u.env)().getBool("WEBGL_PACK_NORMALIZATION")?new d5(s.shape,r.shape,o.shape,d,f,l):new c5(s.shape,r.shape,o.shape,d,f,l);return n.runWebGLProgram(p,c,c[0].dtype)}};class p5{constructor(n){this.variableNames=["source"],this.outputShape=n,this.rank=n.length;const e=ds(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const s=function m5(t){if(1===t)return"sourceLoc";if(t<=6)return Cx.slice(0,t).map(n=>"sourceLoc."+n).join(",");throw Error(`Slicing for rank ${t} is not yet supported`)}(this.rank);let r;r=`\n        ${e} sourceLoc;\n        ${e} coords = getOutputCoords();\n        ${n.map((i,a)=>`sourceLoc.${Cx[a]} = start[${a}] + coords.${Cx[a]};`).join("\n")}\n      `,this.userCode=`\n      void main() {\n        ${r}\n        setOutput(getSource(${s}));\n      }\n    `}}const Cx=["x","y","z","w","u","v"];class g5{constructor(n){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.rank=n.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const e=ds(this.rank),s=to("coords",this.rank),r=to("sourceLoc",this.rank),o=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,i=`getChannel(getSource(${r.join()}), ${o})`,a=`\n      result.x = ${i};\n      if (++${s[this.rank-1]} < ${n[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${i};\n        --${r[this.rank-1]};\n      }\n    `,l=1===this.rank?"":`\n      --${s[this.rank-1]};\n      if (++${s[this.rank-2]} < ${n[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${i};\n        if (++${s[this.rank-1]} < ${n[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${i};\n        }\n      }\n    `,c=this.rank<=4?`sourceLoc = coords +\n            ${e}(${n.map((d,f)=>`start[${f}]`).join()});`:n.map((d,f)=>`${r[f]} = ${s[f]} + start[${f}];`).join("\n");this.userCode=`\n      void main() {\n        ${e} coords = getOutputCoords();\n        ${e} sourceLoc;\n        ${c}\n        vec4 result = vec4(0.);\n        ${a}\n        ${l}\n        setOutput(result);\n      }\n    `}}function Md(t){const{inputs:n,backend:e,attrs:s}=t,{x:r}=n,{begin:o,size:i}=s,[a,l]=u.slice_util.parseSliceParams(r,o,i);if(u.slice_util.assertParamsValid(r,a,l),0===u.util.sizeFromShape(l))return e.makeTensorInfo(l,r.dtype,[]);if(e.shouldExecuteOnCPU([r])||"string"===r.dtype){const f=e.texData.get(r.dataId),p=a8(f.values,a,l,r.shape,r.dtype);return e.makeTensorInfo(l,r.dtype,p)}const{isPacked:c}=e.texData.get(r.dataId),d=u.slice_util.isSliceContinous(r.shape,a,l);if(c||!d){const f=(0,u.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new g5(l):new p5(l);return e.runWebGLProgram(f,[r],r.dtype,[a])}return e.uploadToGPU(r.dataId),function y5(t,n,e,s){const r=s.texData.get(t.dataId),o=s.makeTensorInfo(e,t.dtype),i=s.texData.get(o.dataId);Object.assign(i,r),i.refCount=1,i.shape=e,i.dtype=t.dtype;let a=u.slice_util.computeFlatOffset(n,u.util.computeStrides(t.shape));r.slice&&(a+=r.slice.flatOffset),i.slice={flatOffset:a,origDataId:r.slice&&r.slice.origDataId||t.dataId};const l=s.dataRefCount.get(i.slice.origDataId)||1;return s.dataRefCount.set(i.slice.origDataId,l+1),o}(r,a,l,e)}const v5={kernelName:u.Slice,backendName:"webgl",kernelFunc:Md},E5={kernelName:u.BatchToSpaceND,backendName:"webgl",kernelFunc:t=>{const{inputs:n,backend:e,attrs:s}=t,{x:r}=n,{blockShape:o,crops:i}=s;u.util.assert(r.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");const a=o.reduce((C,F)=>C*F),l=u.backend_util.getReshaped(r.shape,o,a),c=u.backend_util.getPermuted(l.length,o.length),d=u.backend_util.getReshapedPermuted(r.shape,o,a),f=u.backend_util.getSliceBeginCoords(i,o.length),p=u.backend_util.getSliceSize(d,i,o.length),m=[],y=At({inputs:{x:r},backend:e,attrs:{shape:l}}),_=no({inputs:{x:y},backend:e,attrs:{perm:c}}),x=At({inputs:{x:_},backend:e,attrs:{shape:d}}),D=Md({inputs:{x},backend:e,attrs:{begin:f,size:p}});return m.push(y),m.push(_),m.push(x),m.forEach(C=>e.disposeIntermediateTensorInfo(C)),D}},b5={kernelName:u.Bincount,backendName:"webgl",kernelFunc:function _5(t){const{inputs:n,backend:e,attrs:s}=t,{x:r,weights:o}=n,{size:i}=s,a=e.readSync(r.dataId),l=e.readSync(o.dataId),c=jw(a,l,o.dtype,o.shape,i);return e.makeTensorInfo([i],o.dtype,c)}},D5={kernelName:u.BroadcastArgs,backendName:"webgl",kernelFunc:function C5(t){const{inputs:n,backend:e}=t,{s0:s,s1:r}=n,o=e.readSync(s.dataId),i=e.readSync(r.dataId),a=u.backend_util.assertAndGetBroadcastShape(Array.from(o),Array.from(i));return e.makeTensorInfo([a.length],"int32",Int32Array.from(a))}},yS=Ar({opSnippet:"return float(a != b);",cpuKernelImpl:qj,dtype:"bool"}),I5={kernelName:u.NotEqual,backendName:"webgl",kernelFunc:yS};function yf(t){const{inputs:n,backend:e}=t,{input:s}=n;return No({inputs:{x:e.texData.get(s.dataId).complexTensorInfos.real},backend:e})}const T5={kernelName:u.Real,backendName:"webgl",kernelFunc:yf},N5={kernelName:u.Cast,backendName:"webgl",kernelFunc:function Dx(t){const{inputs:n,backend:e,attrs:s}=t,{x:r}=n,{dtype:o}=s;if("complex64"===o){if("complex64"===r.dtype)return No({inputs:{x:r},backend:e});const i=u.zeros(r.shape),a=Dx({inputs:{x:r},backend:e,attrs:{dtype:"float32"}}),l=gu({inputs:{real:a,imag:i},backend:e});return i.dispose(),e.disposeIntermediateTensorInfo(a),l}if("complex64"===r.dtype){const i=yf({inputs:{input:r},backend:e}),a=Dx({inputs:{x:i},backend:e,attrs:{dtype:o}});return e.disposeIntermediateTensorInfo(i),a}if(!u.util.hasEncodingLoss(r.dtype,o)){const i=No({inputs:{x:r},backend:e});return{dataId:i.dataId,shape:i.shape,dtype:o}}if(e.shouldExecuteOnCPU([r])){const i=e.texData.get(r.dataId).values,[a,l,c]=Mj(i,r.shape,r.dtype,o);return e.makeTensorInfo(a,l,c)}if("int32"===o)return function S5(t,n){const e=new Pl(t.shape,"return float(int(x));"),s=n.runWebGLProgram(e,[t],"int32");return{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}(r,e);if("bool"===o){const i=e.makeTensorInfo([],"bool",u.util.getTypedArrayFromDType("bool",1)),l=yS({inputs:{a:r,b:i},backend:e});return e.disposeIntermediateTensorInfo(i),l}throw new Error(`Error in Cast: failed to cast ${r.dtype} to ${o}`)}},vS="return ceil(x);",A5=Ln({opSnippet:vS,packedOpSnippet:vS,cpuKernelImpl:kj}),O5={kernelName:u.Ceil,backendName:"webgl",kernelFunc:A5};class R5{constructor(n){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=n,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}}class M5{constructor(n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=n,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}}const P5={kernelName:u.ClipByValue,backendName:"webgl",kernelFunc:function k5(t){const{inputs:n,backend:e,attrs:s}=t,{x:r}=n,{clipValueMin:o,clipValueMax:i}=s;let a;return a=(0,u.env)().getBool("WEBGL_PACK_CLIP")?new M5(r.shape):new R5(r.shape),e.runWebGLProgram(a,[r],r.dtype,[[o],[i]])}};class $5{constructor(n){this.variableNames=["real","imag"],this.outputShape=n,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function xS(t,n){return{dataId:n.dataId,dtype:n.dtype,shape:t.shape}}const L5={kernelName:u.ComplexAbs,backendName:"webgl",kernelFunc:function F5(t){const{inputs:n,backend:e}=t,{x:s}=n,r=e.texData.get(s.dataId),o=new $5(s.shape),i=[xS(s,r.complexTensorInfos.real),xS(s,r.complexTensorInfos.imag)];return e.runWebGLProgram(o,i,i[0].dtype)}};class B5{constructor(n){this.outputShape=[],this.outputShape=u.backend_util.computeOutShape(n,1),this.variableNames=n.map((i,a)=>`T${a}`);const e=new Array(n.length-1);e[0]=n[0][1];for(let i=1;i<e.length;i++)e[i]=e[i-1]+n[i][1];const s=[`if (yC < ${e[0]}) setOutput(getT0(yR, yC));`];for(let i=1;i<e.length;i++)s.push(`else if (yC < ${e[i]}) setOutput(getT${i}(yR, yC-${e[i-1]}));`);s.push(`else setOutput(getT${e.length}(yR, yC-${e[e.length-1]}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${s.join("\n        ")}\n      }\n    `}}class U5{constructor(n,e){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=u.backend_util.computeOutShape(n,e);const s=this.outputShape,r=s.length,o=ds(r),i=to("coords",r),a=["x","y","z","w","u","v"].slice(0,r);this.variableNames=n.map((_,x)=>`T${x}`);const l=new Array(n.length-1);l[0]=n[0][e];for(let _=1;_<l.length;_++)l[_]=l[_-1]+n[_][e];const c=a[e],d=a.slice(-2),f=a.join();let p=`if (${c} < ${l[0]}) {\n        return getChannel(\n            getT0(${f}), vec2(${d.join()}));\n        }`;for(let _=1;_<l.length;_++){const x=l[_-1];p+=`\n        if (${c} < ${l[_]}  && ${c} >= ${l[_-1]}) {\n          return getChannel(\n            getT${_}(${Ym(a,c,x)}),\n            vec2(${Ym(d,c,x)}));\n        }`}const y=l[l.length-1];p+=`\n        return getChannel(\n          getT${l.length}(${Ym(a,c,y)}),\n          vec2(${Ym(d,c,y)}));`,this.userCode=`\n      float getValue(${a.map(_=>"int "+_)}) {\n        ${p}\n      }\n\n      void main() {\n        ${o} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${i}), 0., 0., 0.);\n\n        ${i[r-1]} = ${i[r-1]} + 1;\n        if (${i[r-1]} < ${s[r-1]}) {\n          result.g = getValue(${i});\n        }\n\n        ${i[r-2]} = ${i[r-2]} + 1;\n        if (${i[r-2]} < ${s[r-2]}) {\n          result.a = getValue(${i});\n        }\n\n        ${i[r-1]} = ${i[r-1]} - 1;\n        if (${i[r-2]} < ${s[r-2]} &&\n            ${i[r-1]} < ${s[r-1]}) {\n          result.b = getValue(${i});\n        }\n        setOutput(result);\n      }\n    `}}function Ym(t,n,e){const s=t.indexOf(n);return t.map((o,i)=>i===s?`${o} - ${e}`:o).join()}function Qm(t){const{inputs:n,backend:e}=t,{input:s}=n;return No({inputs:{x:e.texData.get(s.dataId).complexTensorInfos.imag},backend:e})}const V5={kernelName:u.Imag,backendName:"webgl",kernelFunc:Qm};function vf(t,n,e){const s=t[0].dtype;if("complex64"===s){const f=t.map(x=>yf({inputs:{input:x},backend:e})),p=t.map(x=>Qm({inputs:{input:x},backend:e})),m=vf(f,n,e),y=vf(p,n,e),_=gu({inputs:{real:m,imag:y},backend:e});return f.forEach(x=>e.disposeIntermediateTensorInfo(x)),p.forEach(x=>e.disposeIntermediateTensorInfo(x)),e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(y),_}let r=e.shouldExecuteOnCPU(t);if("string"===s&&(r=!0),r){const f=t.map(C=>{const F=u.util.sizeFromShape(C.shape.slice(n));return At({inputs:{x:C},backend:e,attrs:{shape:[-1,F]}})}),p=f.map(C=>({vals:e.readSync(C.dataId),shape:C.shape})),m=u.backend_util.computeOutShape(f.map(C=>C.shape),1),_=Pj(p,m,s,1===f[0].shape[0]),x=u.backend_util.computeOutShape(t.map(C=>C.shape),n),D=e.makeTensorInfo(x,s,_);return f.forEach(C=>e.disposeIntermediateTensorInfo(C)),D}const o=(0,u.env)().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(t.length>o){const f=[];for(let m=0;m<t.length;m+=o){const y=t.slice(m,m+o);f.push(vf(y,n,e))}const p=vf(f,n,e);for(const m of f)e.disposeIntermediateTensorInfo(m);return p}if((0,u.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&t[0].shape.length>1){const f=new U5(t.map(p=>p.shape),n);return e.runWebGLProgram(f,t,s)}const{tensors2D:i,outShape:a}=function z5(t,n,e){const s=u.backend_util.computeOutShape(t.map(o=>o.shape),n);return{tensors2D:t.map(o=>At({inputs:{x:o},attrs:{shape:[-1,u.util.sizeFromShape(o.shape.slice(n))]},backend:e})),outShape:s}}(t,n,e),l=new B5(i.map(f=>f.shape)),c=e.runWebGLProgram(l,i,s);i.forEach(f=>e.disposeIntermediateTensorInfo(f));const d=At({inputs:{x:c},attrs:{shape:a},backend:e});return e.disposeIntermediateTensorInfo(c),d}function ES(t){const{inputs:n,backend:e,attrs:s}=t,{axis:r}=s,o=u.util.parseAxisParam(r,n[0].shape)[0],i=n.map(c=>c.shape);u.backend_util.assertParamsConsistent(i,o);const a=u.backend_util.computeOutShape(n.map(c=>c.shape),o);if(0===u.util.sizeFromShape(a))return e.makeTensorInfo(a,n[0].dtype,[]);const l=n.filter(c=>u.util.sizeFromShape(c.shape)>0);return 1===l.length?No({inputs:{x:l[0]},backend:e}):vf(l,o,e)}const W5={kernelName:u.Concat,backendName:"webgl",kernelFunc:ES};class _S{constructor(n,e=!1,s=null,r=!1,o=!1){this.variableNames=["x","W"],this.outputShape=n.outShape;const i=n.padInfo.top,a=n.padInfo.left,l=n.strideHeight,c=n.strideWidth,d=n.dilationHeight,f=n.dilationWidth,p=n.filterHeight,m=n.filterWidth,y=4*Math.floor(n.inChannels/4),_=n.inChannels%4,x="channelsLast"===n.dataFormat,D=x?1:2,C=x?2:3,F=x?3:1;let B="",Z="";s&&(B=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${s}\n        }`:o?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${s}\n        }`:`\n          float activation(float x) {\n            ${s}\n          }\n        `,Z="result = activation(result);");const ce=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${B}\n\n      const ivec2 strides = ivec2(${l}, ${c});\n      const ivec2 pads = ivec2(${i}, ${a});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${F}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${D}], coords[${C}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${p}; wR++) {\n          int xR = xRCorner + wR * ${d};\n\n          if (xR < 0 || xR >= ${n.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${m}; wC++) {\n            int xC = xCCorner + wC * ${f};\n\n            if (xC < 0 || xC >= ${n.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${y}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${x}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===_}) {\n\n              if (${x}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${y}) *\n                    getW(wR, wC, ${y}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${y}, xR, xC) *\n                    getW(wR, wC, ${y}, d2);\n              }\n\n            } else if (${2===_}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${y}, d2),\n                getW(wR, wC, ${y} + 1, d2)\n              );\n\n              if (${x}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${y}),\n                  getX(batch, xR, xC, ${y} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${y}, xR, xC),\n                  getX(batch, ${y} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===_}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${y}, d2),\n                getW(wR, wC, ${y} + 1, d2),\n                getW(wR, wC, ${y} + 2, d2)\n              );\n\n              if (${x}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${y}),\n                  getX(batch, xR, xC, ${y} + 1),\n                  getX(batch, xR, xC, ${y} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${y}, xR, xC),\n                  getX(batch, ${y} + 1, xR, xC),\n                  getX(batch, ${y} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${ce}\n        ${Z}\n        setOutput(result);\n      }\n    `}}class G5{constructor(n){this.variableNames=["x","W"],this.outputShape=n.outShape;const e=n.padInfo.front,s=n.padInfo.top,r=n.padInfo.left,o=n.strideDepth,i=n.strideHeight,a=n.strideWidth,l=n.dilationDepth,c=n.dilationHeight,d=n.dilationWidth,f=n.filterDepth,p=n.filterHeight,m=n.filterWidth,y=4*Math.floor(n.inChannels/4),_=n.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${o}, ${i}, ${a});\n      const ivec3 pads = ivec3(${e}, ${s}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${f}; wF++) {\n          int xF = xFCorner + wF * ${l};\n\n          if (xF < 0 || xF >= ${n.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${p}; wR++) {\n            int xR = xRCorner + wR * ${c};\n\n            if (xR < 0 || xR >= ${n.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${m}; wC++) {\n              int xC = xCCorner + wC * ${d};\n\n              if (xC < 0 || xC >= ${n.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${y}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===_}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${y}) *\n                  getW(wF, wR, wC, ${y}, d2);\n              } else if (${2===_}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${y}),\n                  getX(batch, xF, xR, xC, ${y} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${y}, d2),\n                  getW(wF, wR, wC, ${y} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===_}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${y}),\n                  getX(batch, xF, xR, xC, ${y} + 1),\n                  getX(batch, xF, xR, xC, ${y} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${y}, d2),\n                  getW(wF, wR, wC, ${y} + 1, d2),\n                  getW(wF, wR, wC, ${y} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class bS{constructor(n,e=!1,s=null,r=!1,o=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=n.outShape,this.enableShapeUniforms=eo(this.outputShape.length);const i=n.padInfo.left,a=n.strideWidth,l=n.dilationWidth,c=n.filterHeight,d=n.filterWidth,f=d;let p="\n       int xR; int xC; int xCOffset;\n       vec4 wTexel; vec4 previous; vec4 final;";for(let x=0;x<d;x++)p+=`\n           vec4 xTexelC${2*x};\n           int xTexelC${2*x}Ready;\n           vec4 xTexelC${2*x+1};\n           int xTexelC${2*x+1}Ready;\n           vec4 xC${x};`;p+=`\n     for (int r = 0; r < ${c}; r++) {\n      for (int d1 = 0; d1 < ${n.inChannels}; d1 += 2) {\n       `;for(let x=0;x<d;x++)p+=`\n           xTexelC${2*x} = vec4(0.0);\n           xTexelC${2*x}Ready = 0;\n           xTexelC${2*x+1} = vec4(0.0);\n           xTexelC${2*x+1}Ready = 0;\n           xC${x} = vec4(0.0);`;p+="\n         xR = xRCorner + r * dilations[0];\n         if (xR >=0 && xR < inDims[0]) {\n       ";for(let x=0;x<(f+1)/2;x++){const D=2*x;if(p+=`\n           xC = xCCorner + ${D*l};\n           `,1===a){if(D<d&&(i%2==1?(p+=`\n                 xCOffset = xC + 1;\n                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${D}Ready == 0) {\n                   xTexelC${D} = getX(batch, xR, xCOffset, d1);\n\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${D}.zw = vec2(0.0);\n                   }\n                   xTexelC${D}Ready = 1;\n                 }\n               `,p+=1===l&&D>0?`\n                 xC${D} = vec4(xTexelC${D-2}.zw, xTexelC${D}.xy);\n                 `:`\n                   xCOffset = xC + 1 - 2;\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       previous.zw = vec2(0.0);\n                     }\n\n                     xC${D} = vec4(previous.zw, xTexelC${D}.xy);\n                   } else {\n                     xC${D} = vec4(0.0, 0.0, xTexelC${D}.xy);\n                   }\n                   `):p+=`\n                 if (xC >= 0 && xC < inDims[1] && xTexelC${D}Ready == 0) {\n                   xTexelC${D} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${D}.zw = vec2(0.0);\n                   }\n                   xTexelC${D}Ready = 1;\n                 }\n\n                 xC${D} = xTexelC${D};\n                 `,D+1<d)){const C=i%2==0?u.util.nearestLargerEven(l):l;l%2==0&&i%2==1||l%2!=0&&i%2!=1?(p+=`\n                   xCOffset = xC + imod(pads[1], 2) + ${C};\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${D+1}Ready == 0) {\n                     xTexelC${D+1} = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       xTexelC${D+1}.zw = vec2(0.0);\n                     }\n                     xTexelC${D+1}Ready = 1;\n                   }\n                   `,p+=l>1?`\n                     xCOffset -= 2;\n                     if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                      previous = getX(batch, xR, xCOffset, d1);\n                      xC${D+1} = vec4(previous.zw, xTexelC${D+1}.xy);\n                     } else {\n                      xC${D+1} = vec4(0.0, 0.0, xTexelC${D+1}.xy);\n                     }\n                     `:`\n                     xC${D+1} = vec4(xTexelC${D}.zw, xTexelC${D+1}.xy);\n                     `):p+=1===C?`\n                     xC${D+1} = xTexelC${D};\n                     `:`\n                     xCOffset = xC + ${C};\n\n                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${D+1}Ready == 0) {\n                       xTexelC${D+1} = getX(batch, xR, xCOffset, d1);\n                       if (xCOffset + 1 >= inDims[1]) {\n                         xTexelC${D+1}.zw = vec2(0.0);\n                       }\n                       xTexelC${D+1}Ready = 1;\n                     }\n\n                     xC${D+1} = xTexelC${D+1};\n                     `}}else D<d&&(i%2==1?(p+=`\n                 xCOffset = xC + 1 - strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${D}Ready == 0) {\n                   xTexelC${D} = getX(batch, xR, xCOffset, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${D}.zw = vec2(0.0);\n                   }\n                   xTexelC${D}Ready = 1;\n                 }\n\n                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${D+1}Ready == 0) {\n                   xTexelC${D+1} = getX(batch, xR, xC + 1, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xC + 2 >= inDims[1]) {\n                     xTexelC${D+1}.zw = vec2(0.0);\n                   }\n                   xTexelC${D+1}Ready = 1;\n                 }\n\n                 xC${D} = vec4(xTexelC${D}.zw, xTexelC${D+1}.zw);\n               `,D+1<d&&(p+=`\n                   final = vec4(0.0);\n                   xCOffset = xC + 1 + strides[1];\n                   if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                     final = getX(batch, xR, xCOffset, d1);\n                   }\n                   xC${D+1} = vec4(xTexelC${D+1}.xy, final.xy);\n                 `)):(p+=`\n                 if(xC >= 0 && xC < inDims[1] && xTexelC${D}Ready == 0) {\n                   xTexelC${D} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${D}.zw = vec2(0.0);\n                   }\n                   xTexelC${D}Ready = 1;\n                 }\n\n                 xCOffset = xC + strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${D+1}Ready == 0) {\n                   xTexelC${D+1} = getX(batch, xR, xCOffset, d1);\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${D+1}.zw = vec2(0.);\n                   }\n                   xTexelC${D+1}Ready = 1;\n                 }\n\n                 xC${D} = vec4(\n                   xTexelC${D}.xy, xTexelC${D+1}.xy);\n               `,D+1<d&&(p+=`\n                   xC${D+1} = vec4(xTexelC${D}.zw, xTexelC${D+1}.zw);\n                 `)));D<d&&(p+=`\n             wTexel = getW(r, ${D}, d1, d2);\n             dotProd += xC${D}.xxzz * vec4(wTexel.xy, wTexel.xy);\n             if(d1 + 1 < ${n.inChannels}) {\n               dotProd += xC${D}.yyww * vec4(wTexel.zw, wTexel.zw);\n             }\n           `,D+1<d&&(p+=`\n               wTexel = getW(r, ${D+1}, d1, d2);\n               dotProd += xC${D+1}.xxzz * vec4(wTexel.xy, wTexel.xy);\n               if(d1 + 1 < ${n.inChannels}) {\n                 dotProd += xC${D+1}.yyww * vec4(wTexel.zw, wTexel.zw);\n               }\n             `))}p+="\n     }\n   ",p+="\n     }\n   ",p+="\n     }\n   ";let m="",y="";s&&(m=r?`vec4 activation(vec4 a) {\n           vec4 b = getPreluActivationWeightsAtOutCoords();\n           ${s}\n         }`:o?`vec4 activation(vec4 a) {\n           vec4 b = getLeakyreluAlphaAtOutCoords();\n           ${s}\n         }`:`vec4 activation(vec4 x) {\n           ${s}\n         }`,y="result = activation(result);");const _=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n       ${m}\n\n       void main() {\n         ivec4 coords = getOutputCoords();\n         int batch = coords.x;\n         ivec2 xRCCorner = coords.yz * strides - pads;\n         int d2 = coords.w;\n         int xRCorner = xRCCorner.x;\n         int xCCorner = xRCCorner.y;\n\n         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n         vec4 dotProd = vec4(0.000000000000001);\n\n         ${p}\n\n         vec4 result = dotProd - vec4(0.000000000000001);\n         ${_}\n         ${y}\n         setOutput(result);\n       }\n     `}}class H5{constructor(n,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=n,this.enableShapeUniforms=eo(this.outputShape.length);const{dataFormat:s}=e,r=qr(),o="channelsLast"===s,i=o?1:2,a=o?2:3,l=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${n[2]} && pos < ${n[1]}) {`;let c="";for(let d=0;d<=1;d++)for(let f=0;f<=1;f++)c+=`\n          blockIndex = rc.z + ${f};\n          pos = rc.y + ${d};\n\n          ${l}\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[${i}] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[${a}] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (${o}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*d+f}] = getChannel(\n                    getA(rc.x, d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*d+f}] = getChannel(\n                    getA(rc.x, ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${c}\n\n        ${r.output} = result;\n      }\n    `}}function Jm(t,n){const e=t.length;return e>=3?n?[...t.slice(0,-3),t[e-3]*t[e-2],t[e-1]]:[...t.slice(0,-3),t[e-3],t[e-2]*t[e-1]]:!n&&1===e&&t[0]>1?[t[0],1]:null}function CS({x:t,filter:n,convInfo:e,backend:s,bias:r=null,preluActivationWeights:o=null,leakyreluAlpha:i=0,activation:a=null}){const l=t.shape,c=s.texData.get(t.dataId),d=e.inChannels,f=l[0]*l[1]*l[2],p=e.outChannels,m="channelsLast"===e.dataFormat;let x;const D=[];if(null!=o){const B=Jm(o.shape,m);null!=B&&(o=At({inputs:{x:o},backend:s,attrs:{shape:B}}),D.push(o))}if(null!=r){const B=Jm(r.shape,m);null!=B&&(r=At({inputs:{x:r},backend:s,attrs:{shape:B}}),D.push(r))}if((1!==f&&1!==p||!(d>1e3))&&c.isPacked&&m&&null!=c.texture&&l[2]%2!=0&&u.util.arraysEqual(c.shape.slice(-3),l.slice(-3))){const Z={dataId:t.dataId,shape:[1,l[0]*l[1]*(l[2]+1),e.inChannels],dtype:t.dtype},ce=c.shape;c.shape=c.shape.slice(),c.shape[c.shape.length-2]++,u.util.assert(Um(c.shape,Z.shape),()=>`packed reshape ${c.shape} to ${Z.shape} isn't free`);const ve=At({inputs:{x:n},backend:s,attrs:{shape:[1,e.inChannels,e.outChannels]}});D.push(ve);const _e=Xm({a:Z,b:ve,backend:s,transposeA:!1,transposeB:!1,bias:r,activation:a,preluActivationWeights:o,leakyreluAlpha:i}),Fe=s.texData.get(_e.dataId);u.util.assert(Fe.isPacked,()=>"batchMatMul result is expected to be packed"),c.shape=ce,Fe.shape=e.outShape,x=No({inputs:{x:_e},backend:s}),x.shape=e.outShape,D.push(_e)}else{const B=e.outHeight*e.outWidth,Z=At({inputs:{x:t},backend:s,attrs:{shape:m?[e.batchSize,B,e.inChannels]:[e.batchSize,e.inChannels,B]}}),ce=At({inputs:{x:n},backend:s,attrs:{shape:[1,e.inChannels,e.outChannels]}}),ve=Xm({a:m?Z:ce,b:m?ce:Z,transposeA:!m,transposeB:!1,backend:s,bias:r,activation:a,preluActivationWeights:o,leakyreluAlpha:i});x=At({inputs:{x:ve},backend:s,attrs:{shape:e.outShape}}),D.push(Z),D.push(ce),D.push(ve)}for(const B of D)s.disposeIntermediateTensorInfo(B);return x}function DS({x:t,filter:n,convInfo:e,backend:s,bias:r=null,preluActivationWeights:o=null,leakyreluAlpha:i=0,activation:a=null}){const{filterWidth:l,filterHeight:c,inChannels:d,outWidth:f,outHeight:p,dataFormat:m}=e,y="channelsLast"===m,_=l*c*d,x=p*f,D=[e.batchSize,_,x],B=[];if(null!=o){const Me=Jm(o.shape,y);null!=Me&&(o=At({inputs:{x:o},backend:s,attrs:{shape:Me}}),B.push(o))}if(null!=r){const Me=Jm(r.shape,y);null!=Me&&(r=At({inputs:{x:r},backend:s,attrs:{shape:Me}}),B.push(r))}const Z=At({inputs:{x:n},backend:s,attrs:{shape:[1,_,u.util.sizeFromShape(n.shape)/_]}});B.push(Z);const ce=new H5(D,e),_e=s.runWebGLProgram(ce,[t],"float32",[t.shape,[e.padInfo.top,e.padInfo.left],[e.strideHeight,e.strideWidth],[e.dilationHeight,e.dilationWidth],[e.inChannels],[e.filterWidth*e.inChannels],[e.outWidth]]),Fe=At({inputs:{x:_e},backend:s,attrs:{shape:D}});B.push(_e),B.push(Fe);const Le=null!=r,Xe=null!=o,tt="leakyrelu"===a,nt=a?mf(a,!0):null,st=new iS(y?Fe.shape:Z.shape,y?Z.shape:Fe.shape,y?[e.batchSize,x,e.outChannels]:[e.batchSize,e.outChannels,x],!0,!1,Le,nt,Xe,tt),Je=y?[Fe,Z]:[Z,Fe];if(r&&Je.push(r),Xe&&Je.push(o),tt){const Me=s.makeTensorInfo([],"float32",u.util.createScalarValue(i,"float32"));Je.push(Me),B.push(Me)}const qe=s.runWebGLProgram(st,Je,"float32"),lt=At({inputs:{x:qe},backend:s,attrs:{shape:e.outShape}});B.push(qe);for(const Me of B)s.disposeIntermediateTensorInfo(Me);return lt}const j5={kernelName:u.Conv2D,backendName:"webgl",kernelFunc:function K5(t){const{inputs:n,backend:e,attrs:s}=t,{x:r,filter:o}=n,{strides:i,pad:a,dataFormat:l,dilations:c,dimRoundingMode:d}=s,f=u.backend_util.convertConv2DDataFormat(l),p=u.backend_util.computeConv2DInfo(r.shape,o.shape,i,c,a,d,!1,f);let m;if(1!==p.filterHeight||1!==p.filterWidth||1!==p.dilationHeight||1!==p.dilationWidth||1!==p.strideHeight||1!==p.strideWidth||"SAME"!==p.padInfo.type&&"VALID"!==p.padInfo.type)if(p.strideWidth<=2&&"channelsLast"===f&&(0,u.env)().getBool("WEBGL_EXP_CONV")){const _=new bS(p);m=e.runWebGLProgram(_,[r,o],"float32",[[p.padInfo.top,p.padInfo.left],[p.strideHeight,p.strideWidth],[p.dilationHeight,p.dilationWidth],[p.inHeight,p.inWidth]])}else if((0,u.env)().getBool("WEBGL_CONV_IM2COL"))m=DS({x:r,filter:o,convInfo:p,backend:e});else{const _=new _S(p);m=e.runWebGLProgram(_,[r,o],"float32")}else m=CS({x:r,filter:o,convInfo:p,backend:e});const y=At({inputs:{x:m},backend:e,attrs:{shape:p.outShape}});return e.disposeIntermediateTensorInfo(m),y}};class X5{constructor(n){this.variableNames=["x","dy"],this.outputShape=n.filterShape,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${n.batchSize}; b++) {\n          for (int yR = 0; yR < ${n.outHeight}; yR++) {\n            int xR = wR + yR * ${n.strideHeight} - ${n.padInfo.top};\n\n            if (xR < 0 || xR >= ${n.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${n.outWidth}; yC++) {\n              int xC = wC + yC * ${n.strideWidth} - ${n.padInfo.left};\n\n              if (xC < 0 || xC >= ${n.inWidth}) {\n                continue;\n              }\n\n              if (${"channelsLast"===n.dataFormat}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Z5{constructor(n){this.variableNames=["dy","W"],this.outputShape=n.inShape;const e=n.filterHeight,s=n.filterWidth,i="channelsLast"===n.dataFormat;this.userCode=`\n      const ivec2 pads = ivec2(${e-1-n.padInfo.top}, ${s-1-n.padInfo.left});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${i?3:1}];\n\n        ivec2 dyCorner = ivec2(coords[${i?1:2}], coords[${i?2:3}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${e}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${n.strideHeight}.0;\n\n          if (dyR < 0.0 || dyR >= ${n.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${e} - 1 - wR;\n\n          for (int wC = 0; wC < ${s}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n.strideWidth}.0;\n\n            if (dyC < 0.0 || dyC >= ${n.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${s} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${n.outChannels}; d2++) {\n\n              if (${i}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Y5{constructor(n){this.variableNames=["x","dy"],this.outputShape=n.filterShape,this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${n.batchSize}; b++) {\n          for (int yF = 0; yF < ${n.outDepth}; yF++) {\n            int xF = wF + yF * ${n.strideDepth} - ${n.padInfo.front};\n\n            if (xF < 0 || xF >= ${n.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${n.outHeight}; yR++) {\n              int xR = wR + yR * ${n.strideHeight} - ${n.padInfo.top};\n\n              if (xR < 0 || xR >= ${n.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${n.outWidth}; yC++) {\n                int xC = wC + yC * ${n.strideWidth} - ${n.padInfo.left};\n\n                if (xC < 0 || xC >= ${n.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Q5{constructor(n){this.variableNames=["dy","W"],this.outputShape=n.inShape;const e=n.filterDepth,s=n.filterHeight,r=n.filterWidth;this.userCode=`\n      const ivec3 pads = ivec3(${e-1-n.padInfo.front}, ${s-1-n.padInfo.top}, ${r-1-n.padInfo.left});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${e}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${n.strideDepth}.0;\n\n          if (dyF < 0.0 || dyF >= ${n.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${e} - 1 - wF;\n\n          for (int wR = 0; wR < ${s}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${n.strideHeight}.0;\n\n            if (dyR < 0.0 || dyR >= ${n.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${s} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${n.strideWidth}.0;\n\n              if (dyC < 0.0 || dyC >= ${n.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${n.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const q5={kernelName:u.Conv2DBackpropFilter,backendName:"webgl",kernelFunc:function J5(t){const{inputs:n,backend:e,attrs:s}=t,{x:r,dy:o}=n,{strides:i,pad:a,dataFormat:l,dimRoundingMode:c,filterShape:d}=s,f=u.backend_util.convertConv2DDataFormat(l),p=u.backend_util.computeConv2DInfo(r.shape,d,i,1,a,c,!1,f),m=new X5(p);return e.runWebGLProgram(m,[r,o],"float32")}},t9={kernelName:u.Conv2DBackpropInput,backendName:"webgl",kernelFunc:function e9(t){const{inputs:n,backend:e,attrs:s}=t,{dy:r,filter:o}=n,{inputShape:i,strides:a,pad:l,dataFormat:c,dimRoundingMode:d}=s,f=u.backend_util.convertConv2DDataFormat(c),p=u.backend_util.computeConv2DInfo(i,o.shape,a,1,l,d,!1,f),m=new Z5(p);return e.runWebGLProgram(m,[r,o],"float32")}},s9={kernelName:u.Conv3D,backendName:"webgl",kernelFunc:function n9(t){const{inputs:n,backend:e,attrs:s}=t,{x:r,filter:o}=n,{strides:i,pad:a,dilations:l}=s,c=u.backend_util.computeConv3DInfo(r.shape,o.shape,i,l,a),d=new G5(c);return e.runWebGLProgram(d,[r,o],"float32")}},o9={kernelName:u.Conv3DBackpropFilterV2,backendName:"webgl",kernelFunc:function r9(t){const{inputs:n,backend:e,attrs:s}=t,{x:r,dy:o}=n,{strides:i,pad:a,filterShape:l}=s,c=u.backend_util.computeConv3DInfo(r.shape,l,i,1,a),d=new Y5(c);return e.runWebGLProgram(d,[r,o],"float32")}},a9={kernelName:u.Conv3DBackpropInputV2,backendName:"webgl",kernelFunc:function i9(t){const{inputs:n,backend:e,attrs:s}=t,{dy:r,filter:o}=n,{pad:i,strides:a,inputShape:l}=s,c=u.backend_util.computeConv3DInfo(l,o.shape,a,1,i),d=new Q5(c);return e.runWebGLProgram(d,[r,o],"float32")}},u9=Ln({opSnippet:"if (isnan(x)) return x;\n  return cos(x);\n"}),c9={kernelName:u.Cos,backendName:"webgl",kernelFunc:u9},d9=Ln({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),h9={kernelName:u.Cosh,backendName:"webgl",kernelFunc:d9};class f9{constructor(n,e,s,r,o){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[i,a,l,c]=n,[d]=e,[f,p]=s;this.outputShape=[d,f,p,c];const m="bilinear"===r?1:0,[y,_]=[a-1+".0",l-1+".0"],[x,D,C]=f>1?[""+(a-1)/(f-1),"(y2-y1) * height_ratio",`y1*${y} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${y}`],[F,B,Z]=p>1?[""+(l-1)/(p-1),"(x2-x1) * width_ratio",`x1*${_} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${_}`];this.userCode=`\n      const float height_ratio = float(${x});\n      const float width_ratio = float(${F});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${i}) {\n          return;\n        }\n\n        float height_scale = ${D};\n        float width_scale = ${B};\n\n        float in_y = ${C};\n        if( in_y < 0.0 || in_y > ${y} ) {\n          setOutput(float(${o}));\n          return;\n        }\n        float in_x = ${Z};\n        if( in_x < 0.0 || in_x > ${_} ) {\n          setOutput(float(${o}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${m} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}const m9={kernelName:u.CropAndResize,backendName:"webgl",kernelFunc:t=>{const{inputs:n,backend:e,attrs:s}=t,{image:r,boxes:o,boxInd:i}=n,{cropSize:a,method:l,extrapolationValue:c}=s,d=new f9(r.shape,o.shape,a,l,c);return e.runWebGLProgram(d,[r,o,i],"float32")}};var kd=(()=>{return(t=kd||(kd={})).Prod="*",t.Sum="+",kd;var t})();class IS{constructor(n,e,s,r){this.op=n,this.outputShape=e,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const o=this.outputShape.length,a=s?this.op===kd.Prod?"1.0":"0.0":`getX(${TS(o,"coords",this.op)})`,l=this.outputShape[this.outputShape.length-1];let c="",d="";s?(c=r?"end != "+(l-1):"end != 0",d=r?"end + 1":"end - 1"):(c=r?`end + pow2 < ${l}`:"end >= pow2",d=r?"end + pow2":"end - pow2"),this.userCode=`\n      void main() {\n        ${ds(o)} coords = getOutputCoords();\n        int end = ${wS(o,"coords",this.op)};\n        float val = ${a};\n        int pow2 = int(pow(2.0, index));\n        if (${c}) {\n          int idx = ${d};\n          ${wS(o,"coords",this.op)} = idx;\n          val ${this.op}= getX(${TS(o,"coords",this.op)});\n        }\n        setOutput(val);\n      }\n    `}}function TS(t,n,e){if(1===t)return`${n}`;if(2===t)return`${n}.x, ${n}.y`;if(3===t)return`${n}.x, ${n}.y, ${n}.z`;if(4===t)return`${n}.x, ${n}.y, ${n}.z, ${n}.w`;throw new Error(`Cumulative ${e} for rank ${t} is not yet supported`)}function wS(t,n,e){if(1===t)return`${n}`;if(2===t)return`${n}.y`;if(3===t)return`${n}.z`;if(4===t)return`${n}.w`;throw new Error(`Cumulative ${e} for rank ${t} is not yet supported`)}function SS(t,n,e,s,r,o){const i=n.shape.length,a=u.backend_util.getAxesPermutation([s],i);let l=n;null!=a&&(l=no({inputs:{x:n},backend:e,attrs:{perm:a}}));const c=u.backend_util.getInnerMostAxes(1,i)[0];if(c!==i-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${n.shape.length-1} but got axis=${s}`);const d=l.shape[c];let f=No({inputs:{x:l},backend:e});for(let p=0;p<=Math.ceil(Math.log2(d))-1;p++){const m=new IS(t,l.shape,!1,o),_=f;f=e.runWebGLProgram(m,[f],f.dtype,[[p]]),e.disposeIntermediateTensorInfo(_)}if(r){const p=new IS(t,l.shape,r,o),m=f;f=e.runWebGLProgram(p,[f],f.dtype),e.disposeIntermediateTensorInfo(m)}if(null!=a){const m=no({inputs:{x:f},backend:e,attrs:{perm:u.backend_util.getUndoAxesPermutation(a)}});return e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(l),m}return f}const y9={kernelName:u.Cumprod,backendName:"webgl",kernelFunc:function g9(t){const{inputs:n,backend:e,attrs:s}=t,{x:r}=n,{axis:o,exclusive:i,reverse:a}=s;return SS(kd.Prod,r,e,o,i,a)}},x9={kernelName:u.Cumsum,backendName:"webgl",kernelFunc:function v9(t){const{inputs:n,backend:e,attrs:s}=t,{x:r}=n,{axis:o,exclusive:i,reverse:a}=s;return SS(kd.Sum,r,e,o,i,a)}},_9={kernelName:u.DenseBincount,backendName:"webgl",kernelFunc:function E9(t){const{inputs:n,backend:e,attrs:s}=t,{x:r,weights:o}=n,{size:i,binaryOutput:a}=s;if(1===r.shape.length){const l=e.readSync(r.dataId),c=e.readSync(o.dataId),d=jw(l,c,o.dtype,o.shape,i);return e.makeTensorInfo([i],o.dtype,d)}if(2===r.shape.length){const l=e.bufferSync(r),c=e.bufferSync(o),d=Rj(l,c,i,a);return e.makeTensorInfo(d.shape,o.dtype,d.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}};class b9{constructor(n,e,s){this.variableNames=["x"],this.outputShape=[],this.outputShape=n,this.blockSize=e,this.dataFormat=s,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${e};\n      int offset_h = imod(h, ${e});\n      int in_w = w / ${e};\n      int offset_w = imod(w, ${e});\n      int offset_d = (offset_h * ${e} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const D9={kernelName:u.DepthToSpace,backendName:"webgl",kernelFunc:function C9(t){const{inputs:n,backend:e,attrs:s}=t,{x:r}=n,{blockSize:o,dataFormat:i}=s,a=r.shape[0],f=("NHWC"===i?r.shape[1]:r.shape[2])*o,p=("NHWC"===i?r.shape[2]:r.shape[3])*o,m=("NHWC"===i?r.shape[3]:r.shape[1])/(o*o),_=new b9("NHWC"===i?[a,f,p,m]:[a,m,f,p],o,i);return e.runWebGLProgram(_,[r],r.dtype)}};class NS{constructor(n,e=!1,s=null,r=!1,o=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=n.outShape,this.enableShapeUniforms=eo(this.outputShape.length);const i=n.filterHeight,a=n.filterWidth,l=n.outChannels/n.inChannels;let c="",d="";s&&(c=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${s}\n        }`:o?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${s}\n        }`:`\n          float activation(float x) {\n            ${s}\n          }\n        `,d="result = activation(result);");const f=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${c}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${l};\n        int q = d2 - d1 * ${l};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${i}; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${a}; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${f}\n        ${d}\n        setOutput(result);\n      }\n    `}}class AS{constructor(n,e=!1,s=null,r=!1,o=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=n.outShape,this.enableShapeUniforms=eo(this.outputShape.length);const i=n.outChannels/n.inChannels,a=n.padInfo.left,l=n.strideWidth,c=n.dilationWidth,d=n.filterHeight,f=n.filterWidth,p=f;let m="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let D=0;D<f;D++)m+=`\n          vec4 xTexelC${2*D};\n          int xTexelC${2*D}Ready;\n          vec4 xTexelC${2*D+1};\n          int xTexelC${2*D+1}Ready;\n          vec4 xC${D};`;m+=`\n    for (int r = 0; r < ${d}; r++) {\n      `;for(let D=0;D<f;D++)m+=`\n          xTexelC${2*D} = vec4(0.0);\n          xTexelC${2*D}Ready = 0;\n          xTexelC${2*D+1} = vec4(0.0);\n          xTexelC${2*D+1}Ready = 0;\n          xC${D} = vec4(0.0);`;m+="\n        xR = xRCorner + r * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      ";for(let D=0;D<(p+1)/2;D++){const C=2*D;if(m+=`\n          xC = xCCorner + ${C*c};\n          `,1===l){if(C<f&&(a%2==1?(m+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${C}Ready == 0) {\n                  xTexelC${C} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${C}.zw = vec2(0.0);\n                  }\n                  xTexelC${C}Ready = 1;\n                }\n              `,m+=1===c&&C>0?`\n                xC${C} = vec4(xTexelC${C-2}.zw, xTexelC${C}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${C} = vec4(previous.zw, xTexelC${C}.xy);\n                  } else {\n                    xC${C} = vec4(0.0, 0.0, xTexelC${C}.xy);\n                  }\n                  `):m+=`\n                if (xC >= 0 && xC < inDims[1] && xTexelC${C}Ready == 0) {\n                  xTexelC${C} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${C}.zw = vec2(0.0);\n                  }\n                  xTexelC${C}Ready = 1;\n                }\n\n                xC${C} = xTexelC${C};\n                `,C+1<f)){const F=a%2==0?u.util.nearestLargerEven(c):c;c%2==0&&a%2==1||c%2!=0&&a%2!=1?(m+=`\n                  xCOffset = xC + imod(pads[1], 2) + ${F};\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${C+1}Ready == 0) {\n                    xTexelC${C+1} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC${C+1}.zw = vec2(0.0);\n                    }\n                    xTexelC${C+1}Ready = 1;\n                  }\n                  `,m+=c>1?`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n                     xC${C+1} = vec4(previous.zw, xTexelC${C+1}.xy);\n                    } else {\n                     xC${C+1} = vec4(0.0, 0.0, xTexelC${C+1}.xy);\n                    }\n                    `:`\n                    xC${C+1} = vec4(xTexelC${C}.zw, xTexelC${C+1}.xy);\n                    `):m+=1===F?`\n                    xC${C+1} = xTexelC${C};\n                    `:`\n                    xCOffset = xC + ${F};\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${C+1}Ready == 0) {\n                      xTexelC${C+1} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC${C+1}.zw = vec2(0.0);\n                      }\n                      xTexelC${C+1}Ready = 1;\n                    }\n\n                    xC${C+1} = xTexelC${C+1};\n                    `}}else C<f&&(a%2==1?(m+=`\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${C}Ready == 0) {\n                  xTexelC${C} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${C}.zw = vec2(0.0);\n                  }\n                  xTexelC${C}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${C+1}Ready == 0) {\n                  xTexelC${C+1} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC${C+1}.zw = vec2(0.0);\n                  }\n                  xTexelC${C+1}Ready = 1;\n                }\n\n                xC${C} = vec4(xTexelC${C}.zw, xTexelC${C+1}.zw);\n              `,C+1<f&&(m+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${C+1} = vec4(xTexelC${C+1}.xy, final.xy);\n                `)):(m+=`\n                if(xC >= 0 && xC < inDims[1] && xTexelC${C}Ready == 0) {\n                  xTexelC${C} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${C}.zw = vec2(0.0);\n                  }\n                  xTexelC${C}Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${C+1}Ready == 0) {\n                  xTexelC${C+1} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${C+1}.zw = vec2(0.);\n                  }\n                  xTexelC${C+1}Ready = 1;\n                }\n\n                xC${C} = vec4(\n                  xTexelC${C}.xy, xTexelC${C+1}.xy);\n              `,C+1<f&&(m+=`\n                  xC${C+1} = vec4(xTexelC${C}.zw, xTexelC${C+1}.zw);\n                `)));C<f&&(m+=`\n            wTexel = getW(r, ${C}, d1, q);\n            dotProd += xC${C} * vec4(wTexel.xz, wTexel.xz);\n          `,C+1<f&&(m+=`\n              wTexel = getW(r, ${C+1}, d1, q);\n              dotProd += xC${C+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}m+="\n    }\n  ",m+="\n      }\n    ";let y="",_="";s&&(y=r?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${s}\n        }`:o?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${s}\n        }`:`vec4 activation(vec4 x) {\n          ${s}\n        }`,_="result = activation(result);");const x=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${y}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${i};\n        int q = d2 - d1 * ${i};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${m}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${x}\n        ${_}\n        setOutput(result);\n      }\n    `}}const T9={kernelName:u.DepthwiseConv2dNative,backendName:"webgl",kernelFunc:function I9(t){const{inputs:n,backend:e,attrs:s}=t,{x:r,filter:o}=n,{strides:i,pad:a,dilations:l,dimRoundingMode:c}=s;let d=l;null==d&&(d=[1,1]),u.util.assert(u.backend_util.eitherStridesOrDilationsAreOne(i,d),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${d}'`);const f=u.backend_util.computeConv2DInfo(r.shape,o.shape,i,d,a,c,!0);let p;return p=(0,u.env)().getBool("WEBGL_PACK_DEPTHWISECONV")&&f.strideWidth<=2&&f.outChannels/f.inChannels==1?new AS(f):new NS(f),e.runWebGLProgram(p,[r,o],"float32",[[f.padInfo.top,f.padInfo.left],[f.strideHeight,f.strideWidth],[f.dilationHeight,f.dilationWidth],[f.inHeight,f.inWidth]])}};class w9{constructor(n){this.variableNames=["x","dy"],this.outputShape=n.filterShape,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${n.outChannels/n.inChannels} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${n.batchSize}; b++) {\n          for (int yR = 0; yR < ${n.outHeight}; yR++) {\n            int xR = wR + yR * ${n.strideHeight} - ${n.padInfo.top};\n\n            if (xR < 0 || xR >= ${n.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${n.outWidth}; yC++) {\n              int xC = wC + yC * ${n.strideWidth} - ${n.padInfo.left};\n\n              if (xC < 0 || xC >= ${n.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class S9{constructor(n){this.variableNames=["dy","W"],this.outputShape=n.inShape;const e=n.filterHeight,s=n.filterWidth,l=n.outChannels/n.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${e-1-n.padInfo.top}, ${s-1-n.padInfo.left});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${e}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${n.strideHeight}.0;\n\n          if (dyR < 0.0 || dyR >= ${n.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${e} - 1 - wR;\n\n          for (int wC = 0; wC < ${s}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n.strideWidth}.0;\n\n            if (dyC < 0.0 || dyC >= ${n.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${s} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${l}; dm++) {\n              int d2 = d1 * ${l} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const A9={kernelName:u.DepthwiseConv2dNativeBackpropFilter,backendName:"webgl",kernelFunc:function N9(t){const{inputs:n,backend:e,attrs:s}=t,{x:r,dy:o}=n,{strides:i,dilations:a,pad:l,dimRoundingMode:c,filterShape:d}=s,f=u.backend_util.computeConv2DInfo(r.shape,d,i,a,l,c,!0),p=new w9(f);return e.runWebGLProgram(p,[r,o],"float32")}},R9={kernelName:u.DepthwiseConv2dNativeBackpropInput,backendName:"webgl",kernelFunc:function O9(t){const{inputs:n,backend:e,attrs:s}=t,{dy:r,filter:o}=n,{strides:i,dilations:a,pad:l,dimRoundingMode:c,inputShape:d}=s,f=u.backend_util.computeConv2DInfo(d,o.shape,i,a,l,c,!0),p=new S9(f);return e.runWebGLProgram(p,[r,o],"float32")}};class M9{constructor(n){this.variableNames=["X"],this.outputShape=[n,n],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const P9={kernelName:u.Diag,backendName:"webgl",kernelFunc:function k9(t){const{inputs:n,backend:e}=t,{x:s}=n,r=[...s.shape,...s.shape],o=u.util.sizeFromShape(s.shape),i=At({inputs:{x:s},backend:e,attrs:{shape:[o]}}),a=new M9(o),l=e.runWebGLProgram(a,[i],i.dtype),c=At({inputs:{x:l},backend:e,attrs:{shape:r}});return e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(l),c}};class $9{constructor(n){this.variableNames=["x","W"],this.outputShape=n.outShape;const{inHeight:e,inWidth:s,padInfo:r,strideHeight:o,strideWidth:i,filterHeight:a,filterWidth:l,dilationHeight:c,dilationWidth:d}=n,{top:f,left:p}=r;this.userCode=`\n      const ivec2 strides = ivec2(${o}, ${i});\n      const ivec2 pads = ivec2(${f}, ${p});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${a}; h++) {\n          int hIn = hBeg + h * ${c};\n\n          if (hIn >= 0 && hIn < ${e}) {\n            for (int w = 0; w < ${l}; w++) {\n              int wIn = wBeg + w * ${d};\n\n              if (wIn >= 0 && wIn < ${s}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}const L9={kernelName:u.Dilation2D,backendName:"webgl",kernelFunc:function F9(t){const{inputs:n,backend:e,attrs:s}=t,{x:r,filter:o}=n,{strides:i,pad:a,dilations:l}=s,c=u.backend_util.computeDilation2DInfo(r.shape,o.shape,i,a,"NHWC",l);let d;const f=new $9(c);d=e.runWebGLProgram(f,[r,o],"float32");const p=At({inputs:{x:d},backend:e,attrs:{shape:c.outShape}});return e.disposeIntermediateTensorInfo(d),p}},U9={kernelName:u.Einsum,backendName:"webgl",kernelFunc:function B9(t){const{inputs:n,backend:e,attrs:s}=t,{equation:r}=s,o=n,{allDims:i,summedDims:a,idDims:l}=u.backend_util.decodeEinsumEquation(r,o.length);u.backend_util.checkEinsumDimSizes(i.length,l,o);const{path:c,steps:d}=u.backend_util.getEinsumComputePath(a,l),f=d.length;let p=null,m=i.length;const y=[];for(let _=0;_<f;++_){for(const x of d[_]){const{permutationIndices:D,expandDims:C}=u.backend_util.getEinsumPermutation(m,l[x]);let F;u.backend_util.isIdentityPermutation(D)?F=o[x]:(F=no({inputs:{x:o[x]},backend:e,attrs:{perm:D}}),y.push(F));const B=F.shape.slice();for(let Z=0;Z<C.length;++Z)B.splice(C[Z],0,1);u.util.arraysEqual(F.shape,B)||(F=At({inputs:{x:F},backend:e,attrs:{shape:B}}),y.push(F)),null===p?p=F:(p=_x({inputs:{a:F,b:p},backend:e}),y.push(p))}_<f-1&&(c[_]>=0&&(p=jm({inputs:{x:p},backend:e,attrs:{axis:c[_]-(i.length-m),keepDims:!1}}),y.push(p)),m--)}for(const _ of y)_!==p&&e.disposeIntermediateTensorInfo(_);return p}},V9=Ln({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),z9={kernelName:u.Elu,backendName:"webgl",kernelFunc:V9},K9={kernelName:u.EluGrad,backendName:"webgl",kernelFunc:t=>{const{inputs:n,backend:e}=t,{dy:s,y:r}=n,o=(0,u.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new pf("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",s.shape,r.shape):new Od("return (b >= 1.0) ? a : a * (b + 1.0);",s.shape,r.shape);return e.runWebGLProgram(o,[s,r],s.dtype)}},j9=Ar({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:$j}),X9={kernelName:u.Equal,backendName:"webgl",kernelFunc:j9},Y9=Ln({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${u.backend_util.ERF_P};\n  float a1 = ${u.backend_util.ERF_A1};\n  float a2 = ${u.backend_util.ERF_A2};\n  float a3 = ${u.backend_util.ERF_A3};\n  float a4 = ${u.backend_util.ERF_A4};\n  float a5 = ${u.backend_util.ERF_A5};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),Q9={kernelName:u.Erf,backendName:"webgl",kernelFunc:Y9},OS=Ln({opSnippet:"if (isnan(x)) return x;\n  return exp(x);\n",packedOpSnippet:"\n  vec4 result = exp(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:Fj,dtype:"float32"}),q9={kernelName:u.Exp,backendName:"webgl",kernelFunc:OS};function Ix(t){const{inputs:n,attrs:e,backend:s}=t,{dim:r}=e,{input:o}=n,i=o.shape.length,a=o.shape.slice();let l=r;return r<0&&(u.util.assert(-(i+1)<=r,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),l=i+r+1),a.splice(l,0,1),At({inputs:{x:o},backend:s,attrs:{shape:a}})}const eX={kernelName:u.ExpandDims,backendName:"webgl",kernelFunc:Ix},RS="return exp(x) - 1.0;",tX=Ln({opSnippet:RS,packedOpSnippet:RS,cpuKernelImpl:Lj}),nX={kernelName:u.Expm1,backendName:"webgl",kernelFunc:tX};class MS{constructor(n,e,s){this.variableNames=["real","imag"];const r=e[1];this.outputShape=e;const o=s?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,i=s?`${r}.0`:"1.0";let a;if("real"===n)a="return real * expR - imag * expI;";else{if("imag"!==n)throw new Error(`FFT component must be either "real" or "imag", got ${n}.`);a="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${o};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${a}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${i};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}function kS(t,n,e){const s=e.texData.get(t.dataId),r=u.util.sizeFromShape(t.shape),o=t.shape[t.shape.length-1],a=At({inputs:{x:t},backend:e,attrs:{shape:[r/o,o]}}),l=a.shape,c=new MS("real",l,n),d=new MS("imag",l,n),f=[{dataId:s.complexTensorInfos.real.dataId,dtype:s.complexTensorInfos.real.dtype,shape:l},{dataId:s.complexTensorInfos.imag.dataId,dtype:s.complexTensorInfos.imag.dtype,shape:l}],p=e.runWebGLProgram(c,f,"float32"),m=e.runWebGLProgram(d,f,"float32"),y=gu({inputs:{real:p,imag:m},backend:e});e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(m);const _=At({inputs:{x:y},backend:e,attrs:{shape:t.shape}});return e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(y),_}const rX={kernelName:u.FFT,backendName:"webgl",kernelFunc:function sX(t){const{inputs:n,backend:e}=t,{input:s}=n;return kS(s,!1,e)}};class oX{constructor(n,e){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=n,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}}function xf(t){const{backend:n,attrs:e}=t,{shape:s,value:r}=e;let{dtype:o}=e;if(o=o||u.util.inferDtype(r),"string"===o){const i=u.util.getArrayFromDType(o,u.util.sizeFromShape(s));return i.fill(r),n.makeTensorInfo(s,o,i)}{const i=new oX(s,r);return n.runWebGLProgram(i,[],o,[[r]])}}const iX={kernelName:u.Fill,backendName:"webgl",kernelFunc:xf};class aX{constructor(n){this.variableNames=["Image"],this.outputShape=[];const e=n[2];this.outputShape=n,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${e} - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${e}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const lX={kernelName:u.FlipLeftRight,backendName:"webgl",kernelFunc:({inputs:t,backend:n})=>{const{image:e}=t,s=n,r=new aX(e.shape);return s.runWebGLProgram(r,[e],e.dtype)}},PS="return floor(x);",uX=Ln({opSnippet:PS,packedOpSnippet:PS,cpuKernelImpl:Bj}),cX={kernelName:u.Floor,backendName:"webgl",kernelFunc:uX},dX=Ar({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),hX={kernelName:u.FloorDiv,backendName:"webgl",kernelFunc:dX};class fX{constructor(n){this.variableNames=["A"];const e=qr(),[s,r]=n;this.outputShape=n,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${s}.0);\n\n        vec4 values = ${e.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class pX{constructor(n){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const e=qr(),[s,r]=n;this.outputShape=n,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${s}.0);\n            vec4 values = ${e.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${e.output} = result;\n      }\n    `}}const mX={kernelName:u.FromPixels,backendName:"webgl",kernelFunc:function gX(t){const{inputs:n,backend:e,attrs:s}=t;let{pixels:r}=n;const{numChannels:o}=s,i="undefined"!=typeof HTMLVideoElement&&r instanceof HTMLVideoElement,a="undefined"!=typeof HTMLImageElement&&r instanceof HTMLImageElement,[l,c]=i?[r.videoWidth,r.videoHeight]:[r.width,r.height],d=[c,l],f=[c,l,o];if(a||i){const _=(0,u.env)().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(null==Pd||_!==Tx)&&(Tx=_,Pd=document.createElement("canvas").getContext("2d",{willReadFrequently:Tx})),Pd.canvas.width=l,Pd.canvas.height=c,Pd.drawImage(r,0,0,l,c),r=Pd.canvas}const p=e.makeTensorInfo(d,"int32");e.texData.get(p.dataId).usage=So.PIXELS,e.gpgpu.uploadPixelDataToTexture(e.getTexture(p.dataId),r);const m=(0,u.env)().getBool("WEBGL_PACK")?new pX(f):new fX(f),y=e.runWebGLProgram(m,[p],"int32");return e.disposeData(p.dataId),y}};let Pd,Tx=(0,u.env)().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");const vX={kernelName:u.FusedConv2D,backendName:"webgl",kernelFunc:function yX(t){const{inputs:n,backend:e,attrs:s}=t,{x:r,filter:o,bias:i,preluActivationWeights:a}=n,{strides:l,pad:c,dataFormat:d,dilations:f,dimRoundingMode:p,activation:m,leakyreluAlpha:y}=s,_=u.backend_util.convertConv2DDataFormat(d),x=u.backend_util.computeConv2DInfo(r.shape,o.shape,l,f,c,p,!1,_);let D;const C=[],F=null!=i,B=null!=a,Z="leakyrelu"===m,ce=()=>{const _e=[r,o],Fe=(Le,Xe)=>{if("NCHW"===Xe&&1===Le.shape.length&&1!==Le.shape[0]){const tt=At({inputs:{x:Le},backend:e,attrs:{shape:[Le.shape[0],1,1]}});return C.push(tt),tt}return Le};if(F&&_e.push(Fe(i,d)),B&&_e.push(Fe(a,d)),Z){const Le=e.makeTensorInfo([],"float32",u.util.createScalarValue(y,"float32"));_e.push(Le),C.push(Le)}return _e};if(1!==x.filterHeight||1!==x.filterWidth||1!==x.dilationHeight||1!==x.dilationWidth||1!==x.strideHeight||1!==x.strideWidth||"SAME"!==x.padInfo.type&&"VALID"!==x.padInfo.type)if(x.strideWidth<=2&&"channelsLast"===_&&(0,u.env)().getBool("WEBGL_EXP_CONV")){const _e=m?mf(m,!0):null,Fe=new bS(x,F,_e,B,Z),Le=[[x.padInfo.top,x.padInfo.left],[x.strideHeight,x.strideWidth],[x.dilationHeight,x.dilationWidth],[x.inHeight,x.inWidth]],Xe=ce();D=e.runWebGLProgram(Fe,Xe,"float32",Le)}else if((0,u.env)().getBool("WEBGL_CONV_IM2COL"))D=DS({x:r,filter:o,convInfo:x,backend:e,bias:i,activation:m,preluActivationWeights:a,leakyreluAlpha:y});else{const _e=m?mf(m,!1):null,Fe=new _S(x,F,_e,B,Z),Le=ce();D=e.runWebGLProgram(Fe,Le,"float32")}else D=CS({x:r,filter:o,convInfo:x,backend:e,bias:i,activation:m,preluActivationWeights:a,leakyreluAlpha:y});const ve=At({inputs:{x:D},backend:e,attrs:{shape:x.outShape}});return C.push(D),C.forEach(_e=>e.disposeIntermediateTensorInfo(_e)),ve}},EX={kernelName:u.FusedDepthwiseConv2D,backendName:"webgl",kernelFunc:function xX(t){const{inputs:n,backend:e,attrs:s}=t,{x:r,filter:o,bias:i,preluActivationWeights:a}=n,{strides:l,pad:c,dilations:d,dimRoundingMode:f,activation:p,leakyreluAlpha:m}=s,y=[];let _=d;null==_&&(_=[1,1]),u.util.assert(u.backend_util.eitherStridesOrDilationsAreOne(l,_),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${_}'`);const x=u.backend_util.computeConv2DInfo(r.shape,o.shape,l,_,c,f,!0),D=(0,u.env)().getBool("WEBGL_PACK_DEPTHWISECONV")&&x.strideWidth<=2&&x.outChannels/x.inChannels==1,C=p?mf(p,D):null,F=[r,o],B=null!=i,Z=null!=a,ce="leakyrelu"===p;if(B&&F.push(i),Z&&F.push(a),ce){const Le=e.makeTensorInfo([],"float32",u.util.createScalarValue(m,"float32"));F.push(Le),y.push(Le)}let ve;ve=D?new AS(x,B,C,Z,ce):new NS(x,B,C,Z,ce);const Fe=e.runWebGLProgram(ve,F,"float32",[[x.padInfo.top,x.padInfo.left],[x.strideHeight,x.strideWidth],[x.dilationHeight,x.dilationWidth],[x.inHeight,x.inWidth]]);return y.forEach(Le=>e.disposeIntermediateTensorInfo(Le)),Fe}};class _X{constructor(n,e,s,r){this.sliceDim=n,this.strides=e,this.paramsShape=r,this.variableNames=["x","indices"],this.outputShape=s;const o=ds(s.length);let i="\n    int index;";for(let a=0;a<this.sliceDim;a++)i+=`\n          index = round(getIndices(coords[0], ${a}));\n          out_of_bounds = out_of_bounds || index < 0;\n          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[a]};\n          flattenIndex += index * ${this.strides[a]};`;this.userCode=`\n         void main() {\n          ${o} coords = getOutputCoords();\n          int flattenIndex = 0;\n          bool out_of_bounds = false;\n\n          ${i}\n\n          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));\n        }\n      `}}const CX={kernelName:u.GatherNd,backendName:"webgl",kernelFunc:function bX(t){const{inputs:n,backend:e}=t,{params:s,indices:r}=n,o=r.shape,i=o[o.length-1],a=u.util.sizeFromShape(s.shape),[l,c,d,f]=u.backend_util.prepareAndValidate(s,r),p=At({inputs:{x:r},backend:e,attrs:{shape:[c,i]}}),m=At({inputs:{x:s},backend:e,attrs:{shape:[u.util.sizeFromShape(s.shape)/d,d]}});if(e.shouldExecuteOnCPU([s,r])||"string"===s.dtype){const D=e.readSync(r.dataId),C=e.bufferSync(s),F=Uj(D,C,s.dtype,c,i,d,f,s.shape,a);return e.makeTensorInfo(l,s.dtype,F.values)}const y=new _X(i,f,[c,d],s.shape),_=e.runWebGLProgram(y,[m,p],m.dtype),x=At({inputs:{x:_},backend:e,attrs:{shape:l}});return e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(_),x}};class DX{constructor(n,e){this.variableNames=["A","indices"],this.outputShape=e,this.rank=e.length;const s=ds(this.rank),r=function IX(t,n){const e=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[];for(let r=0;r<t.length;r++)s.push(2===r?"index":`${e[r]}`);return s.join()}(n);this.userCode=`\n      void main() {\n        ${s} resRC = getOutputCoords();\n        int index = int(getIndices(resRC.x, resRC.z));\n        float inBounds = (index >= 0) && (index < ${n[2]}) ? 1.0 : 0.0;\n        setOutput(inBounds * getA(${r}));\n      }\n    `}}function $S(t){const{inputs:n,backend:e,attrs:s}=t,{x:r,indices:o}=n,{axis:i,batchDims:a}=s,l=u.util.parseAxisParam(i,r.shape)[0];if((0,u.env)().get("DEBUG")){const C=e.readSync(o.dataId),F=r.shape[l];for(let B=0;B<C.length;++B){const Z=C[B];u.util.assert(Z<=F-1&&Z>=0,()=>`GatherV2: the index value ${Z} is not in [0, ${F-1}]`)}}const c=u.backend_util.segment_util.collectGatherOpShapeInfo(r,o,l,a),d=u.util.sizeFromShape(o.shape),f=[],p=At({inputs:{x:r},backend:e,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),m=At({inputs:{x:o},backend:e,attrs:{shape:[c.batchSize,d/c.batchSize]}});f.push(p),f.push(m);const y=[c.batchSize,c.outerSize,d/c.batchSize,c.sliceSize];if(e.shouldExecuteOnCPU([r,o])||"string"===r.dtype){const C=e.bufferSync(m),F=e.bufferSync(p),B=Vj(F,C,y);return f.forEach(Z=>e.disposeIntermediateTensorInfo(Z)),e.makeTensorInfo(c.outputShape,B.dtype,B.values)}const _=new DX(p.shape,y),x=e.runWebGLProgram(_,[p,m],p.dtype);f.push(x);const D=At({inputs:{x},backend:e,attrs:{shape:c.outputShape}});return f.forEach(C=>e.disposeIntermediateTensorInfo(C)),D}const TX={kernelName:u.GatherV2,backendName:"webgl",kernelFunc:$S},wX=Ar({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:zj,dtype:"bool"}),SX={kernelName:u.Greater,backendName:"webgl",kernelFunc:wX},NX=Ar({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:Wj}),AX={kernelName:u.GreaterEqual,backendName:"webgl",kernelFunc:NX},RX={kernelName:u.IFFT,backendName:"webgl",kernelFunc:function OX(t){const{inputs:n,backend:e}=t,{input:s}=n;return kS(s,!0,e)}},MX=Ln({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),kX={kernelName:u.IsFinite,backendName:"webgl",kernelFunc:MX},PX=Ln({opSnippet:"return float(isinf(x));",dtype:"bool"}),$X={kernelName:u.IsInf,backendName:"webgl",kernelFunc:PX},FX=Ln({opSnippet:"return float(isnan(x));",dtype:"bool"}),LX={kernelName:u.IsNan,backendName:"webgl",kernelFunc:FX},BX=Ar({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:Gj,dtype:"bool"}),UX={kernelName:u.Less,backendName:"webgl",kernelFunc:BX},VX=Ar({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:Hj,dtype:"bool"}),zX={kernelName:u.LessEqual,backendName:"webgl",kernelFunc:VX},GX={kernelName:u.LinSpace,backendName:"webgl",kernelFunc:function WX(t){const{backend:n,attrs:e}=t,{start:s,stop:r,num:o}=e,i=Kj(s,r,o);return n.makeTensorInfo([i.length],"float32",i)}},KX=Ln({opSnippet:"if (isnan(x)) return x;\n  return x < 0.0 ? 0./0. : log(x);\n",packedOpSnippet:"\n  vec4 result = log(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);\n  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);\n  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);\n  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);\n  return result;\n",cpuKernelImpl:jj}),jX={kernelName:u.Log,backendName:"webgl",kernelFunc:KX},ZX=Ln({opSnippet:"if (isnan(x)) return x;\n  return log(1.0 + x);\n"}),YX={kernelName:u.Log1p,backendName:"webgl",kernelFunc:ZX},QX=Ar({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),JX={kernelName:u.LogicalAnd,backendName:"webgl",kernelFunc:QX},qX=Ln({opSnippet:"return float(!(x >= 1.0));"}),eZ={kernelName:u.LogicalNot,backendName:"webgl",kernelFunc:qX},tZ=Ar({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),nZ={kernelName:u.LogicalOr,backendName:"webgl",kernelFunc:tZ};class sZ{constructor(n,e,s,r,o){this.variableNames=["x"],this.outputShape=[];const i=e,a=n[3]-1;let l;this.outputShape=n;const c=`float(${s}) + float(${r}) * sum`;l=.5===o?`inversesqrt(${c})`:1===o?`1.0/(${c})`:`exp(log(${c}) * float(-${o}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${i}; j <= ${i}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${a}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${l};\n        setOutput(val);\n      }\n    `}}class rZ{constructor(n,e,s,r,o){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const i=e,a=n[3]-1;let l;this.outputShape=n;const c=`float(${s}) + float(${r}) * sum`;l=.5===o?`inversesqrt(${c})`:1===o?`1.0/(${c})`:`exp(log(${c}) * float(-${o}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${i};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${i}; j <= ${i}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${a}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${l};\n        setOutput(result);\n      }\n    `}}const iZ={kernelName:u.LRN,backendName:"webgl",kernelFunc:t=>{const{inputs:n,backend:e,attrs:s}=t,{x:r}=n,{depthRadius:o,bias:i,alpha:a,beta:l}=s,c=(0,u.env)().getBool("WEBGL_PACK_NORMALIZATION")?new rZ(r.shape,o,i,a,l):new sZ(r.shape,o,i,a,l);return e.runWebGLProgram(c,[r],r.dtype)}};class aZ{constructor(n,e,s,r,o){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=n,this.depth=n[3],this.depthRadius=e,this.bias=s,this.alpha=r,this.beta=o,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${e})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${e} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${s});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${o})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${o});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}const uZ={kernelName:u.LRNGrad,backendName:"webgl",kernelFunc:t=>{const{inputs:n,backend:e,attrs:s}=t,{x:r,y:o,dy:i}=n,{depthRadius:a,bias:l,alpha:c,beta:d}=s,f=new aZ(r.shape,a,l,c,d);return e.runWebGLProgram(f,[r,o,i],r.dtype)}};function FS(t){const{inputs:n,backend:e,attrs:s}=t,{x:r}=n,{reductionIndices:o,keepDims:i}=s,a=r.shape.length,l=u.util.parseAxisParam(o,r.shape);let c=l;const d=u.backend_util.getAxesPermutation(c,a),f=null!=d,p=e.shouldExecuteOnCPU([r]);let m=r;if(f){if(p){const F=e.texData.get(m.dataId).values,B=new Array(a);for(let ve=0;ve<B.length;ve++)B[ve]=r.shape[d[ve]];const Z=xx(F,r.shape,r.dtype,d,B);m=e.makeTensorInfo(B,r.dtype),e.texData.get(m.dataId).values=Z}else m=Km(r,d,e);c=u.backend_util.getInnerMostAxes(c.length,a)}u.backend_util.assertAxesAreInnerMostDims("max",c,a);const[y,_]=u.backend_util.computeOutAndReduceShapes(m.shape,c);let D,x=y;if(i&&(x=u.backend_util.expandShapeToKeepDim(y,l)),p){const F=e.texData.get(m.dataId).values,B=Xj(F,u.util.sizeFromShape(_),x,r.dtype);D=e.makeTensorInfo(x,r.dtype),e.texData.get(D.dataId).values=B}else D=function cZ(t,n,e,s){const r=u.util.sizeFromShape(n),a=At({inputs:{x:t},attrs:{shape:[u.util.sizeFromShape(t.shape)/r,r]},backend:s}),l=ac(a,t.dtype,"max",s),c=At({inputs:{x:l},attrs:{shape:e},backend:s});return s.disposeIntermediateTensorInfo(a),s.disposeIntermediateTensorInfo(l),c}(m,_,x,e);return f&&e.disposeIntermediateTensorInfo(m),D}const dZ={kernelName:u.Max,backendName:"webgl",kernelFunc:FS},pZ=Ar({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  \n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:Zj}),mZ={kernelName:u.Maximum,backendName:"webgl",kernelFunc:pZ},yZ={kernelName:u.MaxPool,backendName:"webgl",kernelFunc:function gZ(t){const{inputs:n,backend:e,attrs:s}=t,{x:r}=n;df(r,"maxPool");const{filterSize:o,strides:i,pad:a,dimRoundingMode:l}=s;u.util.assert(u.backend_util.eitherStridesOrDilationsAreOne(i,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`);const d=u.backend_util.computePool2DInfo(r.shape,o,i,1,a,l);if(1===d.filterWidth&&1===d.filterHeight&&u.util.arraysEqual(d.inShape,d.outShape))return No({inputs:{x:r},backend:e});const f=new gf(d,"max",!1);return e.runWebGLProgram(f,[r],r.dtype)}},xZ={kernelName:u.MaxPool3D,backendName:"webgl",kernelFunc:function vZ(t){const{inputs:n,backend:e,attrs:s}=t,{x:r}=n,{filterSize:o,strides:i,pad:a,dataFormat:l,dimRoundingMode:c}=s,f=u.backend_util.computePool3DInfo(r.shape,o,i,[1,1,1],a,c,l),p=new bx(f,"max",!1);return e.runWebGLProgram(p,[r],r.dtype)}};class EZ{constructor(n){this.variableNames=["dy","maxPos"],this.outputShape=n.inShape;const o=n.effectiveFilterHeight,i=n.effectiveFilterWidth;this.userCode=`\n      const ivec2 pads = ivec2(${o-1-n.padInfo.top}, ${i-1-n.padInfo.left});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n          wR += ${n.dilationHeight}) {\n          float dyR = float(dyRCorner + wR) / ${n.strideHeight}.0;\n\n          if (dyR < 0.0 || dyR >= ${n.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${i}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n.strideWidth}.0;\n\n            if (dyC < 0.0 || dyC >= ${n.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${o*i-1} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${i} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class _Z{constructor(n){this.variableNames=["dy","maxPos"],this.outputShape=n.inShape;const l=n.effectiveFilterDepth,c=n.effectiveFilterHeight,d=n.effectiveFilterWidth;this.userCode=`\n      const ivec3 pads = ivec3(${l-1-n.padInfo.front}, ${c-1-n.padInfo.top}, ${d-1-n.padInfo.left});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${l};\n           wD += ${n.dilationDepth}) {\n          float dyD = float(dyDCorner + wD) / ${n.strideDepth}.0;\n\n          if (dyD < 0.0 || dyD >= ${n.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${c};\n              wR += ${n.dilationHeight}) {\n            float dyR = float(dyRCorner + wR) / ${n.strideHeight}.0;\n\n            if (dyR < 0.0 || dyR >= ${n.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${d};\n                wC += ${n.dilationWidth}) {\n              float dyC = float(dyCCorner + wC) / ${n.strideWidth}.0;\n\n              if (dyC < 0.0 || dyC >= ${n.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${l*c*d-1} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${c} * ${d} +\n                  wR * ${d} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const CZ={kernelName:u.MaxPool3DGrad,backendName:"webgl",kernelFunc:function bZ(t){const{inputs:n,backend:e,attrs:s}=t,{dy:r,input:o}=n,i=o,{filterSize:a,strides:l,pad:c,dimRoundingMode:d}=s,p=u.backend_util.computePool3DInfo(i.shape,a,l,[1,1,1],c,d),m=new bx(p,"max",!0),y=e.runWebGLProgram(m,[i],i.dtype),_=new _Z(p),x=e.runWebGLProgram(_,[r,y],i.dtype);return e.disposeIntermediateTensorInfo(y),x}},IZ={kernelName:u.MaxPoolGrad,backendName:"webgl",kernelFunc:function DZ(t){const{inputs:n,backend:e,attrs:s}=t,{dy:r,input:o,output:i}=n,a=o;df([o,i],"maxPoolGrad");const{filterSize:l,strides:c,pad:d,dimRoundingMode:f}=s,p=u.backend_util.computePool2DInfo(a.shape,l,c,1,d,f),y=new gf(p,"max",!0),_=e.runWebGLProgram(y,[a],a.dtype),x=new EZ(p),D=e.runWebGLProgram(x,[r,_],a.dtype);return e.disposeIntermediateTensorInfo(_),D}},wZ={kernelName:u.MaxPoolWithArgmax,backendName:"webgl",kernelFunc:({inputs:t,attrs:n,backend:e})=>{const{x:s}=t,{filterSize:r,strides:o,pad:i,includeBatchInIndex:a}=n,l=e;u.util.assert(4===s.shape.length,()=>`Error in maxPool: input must be rank 4 but got rank ${s.shape.length}.`);const c=[1,1];u.util.assert(u.backend_util.eitherStridesOrDilationsAreOne(o,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${c}'`);const d=u.backend_util.computePool2DInfo(s.shape,r,o,c,i),[f,p]=function TZ(t,n,e,s){let r=new gf(e,"max",!1);const o=s.runWebGLProgram(r,[t],"float32");return r=new gf(e,"max",!0,!0,n),[o,s.runWebGLProgram(r,[t],"float32")]}(s,a,d,l);return[f,p]}},NZ={kernelName:u.Mean,backendName:"webgl",kernelFunc:({inputs:t,attrs:n,backend:e})=>{const{x:s}=t,{keepDims:r,axis:o}=n,i=e,a=s.shape.length,l=u.util.parseAxisParam(o,s.shape);let c=l;const d=u.backend_util.getAxesPermutation(c,a),f=null!=d,p=i.shouldExecuteOnCPU([s]),m=[];let y=s;if(f){if(p){const B=i.texData.get(y.dataId).values,Z=new Array(a);for(let _e=0;_e<Z.length;_e++)Z[_e]=s.shape[d[_e]];const ce=xx(B,s.shape,s.dtype,d,Z);y=i.makeTensorInfo(Z,s.dtype),i.texData.get(y.dataId).values=ce}else y=Km(s,d,i);m.push(y),c=u.backend_util.getInnerMostAxes(c.length,a)}u.backend_util.assertAxesAreInnerMostDims("sum",c,a);const[_,x]=u.backend_util.computeOutAndReduceShapes(y.shape,c);let D=_;r&&(D=u.backend_util.expandShapeToKeepDim(_,l));const C=function SZ(t,n,e,s){const r=u.util.sizeFromShape(n),a=At({inputs:{x:t},attrs:{shape:[u.util.sizeFromShape(t.shape)/r,r]},backend:s}),l=ac(a,"float32","mean",s),c=At({inputs:{x:l},attrs:{shape:e},backend:s});return s.disposeIntermediateTensorInfo(a),s.disposeIntermediateTensorInfo(l),c}(y,x,D,i);for(const F of m)i.disposeIntermediateTensorInfo(F);return C}},OZ={kernelName:u.Min,backendName:"webgl",kernelFunc:function AZ(t){const{inputs:n,backend:e,attrs:s}=t,{x:r}=n,{axis:o,keepDims:i}=s,a=r.shape.length,l=u.util.parseAxisParam(o,r.shape);let c=l;const d=u.backend_util.getAxesPermutation(c,a);let f=r;null!=d&&(f=no({inputs:{x:r},backend:e,attrs:{perm:d}}),c=u.backend_util.getInnerMostAxes(c.length,r.shape.length)),u.backend_util.assertAxesAreInnerMostDims("min",c,a);const[p,m]=u.backend_util.computeOutAndReduceShapes(f.shape,c),_=At({inputs:{x:f},backend:e,attrs:{shape:[-1,u.util.sizeFromShape(m)]}}),x=ac(_,_.dtype,"min",e);let D;return D=At(i?{inputs:{x},backend:e,attrs:{shape:u.backend_util.expandShapeToKeepDim(p,l)}}:{inputs:{x},backend:e,attrs:{shape:p}}),e.disposeIntermediateTensorInfo(_),e.disposeIntermediateTensorInfo(x),null!=d&&e.disposeIntermediateTensorInfo(f),D}},kZ=Ar({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  \n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:Yj}),PZ={kernelName:u.Minimum,backendName:"webgl",kernelFunc:kZ};class $Z{constructor(n,e,s){this.variableNames=["x"],this.outputShape=e.map((d,f)=>d[0]+n[f]+d[1]);const r=n.length,o=ds(r),i=e.map(d=>d[0]).join(","),a=e.map((d,f)=>d[0]+n[f]).join(","),l=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),c="reflect"===s?0:1;this.userCode=1!==r?`\n      ${o} start = ${o}(${i});\n      ${o} end = ${o}(${a});\n\n      void main() {\n        ${o} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${c};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${c};\n          }\n        }\n        ${o} coords = outC - start;\n        setOutput(getX(${l}));\n      }\n    `:`\n        int start = ${i};\n        int end = ${a};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${c};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${c};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}class FZ{constructor(n,e,s){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.map((y,_)=>y[0]+n[_]+y[1]);const r=n.length,o=ds(r),i=e.map(y=>y[0]).join(","),a=e.map((y,_)=>y[0]+n[_]).join(","),l=to("rc",r),c=to("source",r),d=`${l[r-1]} < ${this.outputShape[r-1]}`,f=1===r?"source":`vec2(${c.slice(-2).join()})`,p="reflect"===s?0:1;let m="";if(1===r){const y=`\n        ${o} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${p};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${p};\n        }\n        source -= start;\n      `;m=`\n        ${o} rc = outputLoc;\n        ${y}\n        result[0] = getChannel(getX(${c.join()}), ${f});\n        ${l[r-1]} += 1;\n        if(${d}) {\n          ${y}\n          result[1] = getChannel(getX(${c.join()}), ${f});\n        }\n      `}else{const y=`\n        ${o} source = rc;\n        ${o} lt = ${o}(lessThan(source, start));\n        ${o} gte = ${o}(greaterThanEqual(source, end));\n        ${o} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${p}) +\n                gte * ((end - 1) * 2 - source + ${p});\n        source -= start;\n      `;m=`\n        ${o} rc = outputLoc;\n        ${y}\n        result[0] = getChannel(getX(${c.join()}), ${f});\n        ${l[r-1]} += 1;\n        if(${d}) {\n          ${y}\n          result[1] = getChannel(getX(${c.join()}), ${f});\n        }\n        rc = outputLoc;\n        ${l[r-2]} += 1;\n        if(${l[r-2]} < ${this.outputShape[r-2]}) {\n          ${y}\n          result[2] = getChannel(getX(${c.join()}), ${f});\n          ${l[r-1]} += 1;\n          if(${d}) {\n            ${y}\n            result[3] = getChannel(getX(${c.join()}), ${f});\n          }\n        }\n      `}this.userCode=`\n      const ${o} start = ${o}(${i});\n      const ${o} end = ${o}(${a});\n\n      void main() {\n        ${o} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${m}\n        setOutput(result);\n      }\n    `}}const BZ={kernelName:u.MirrorPad,backendName:"webgl",kernelFunc:({inputs:t,backend:n,attrs:e})=>{const{x:s}=t,{paddings:r,mode:o}=e,i=(0,u.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new FZ(s.shape,r,o):new $Z(s.shape,r,o);return n.runWebGLProgram(i,[s],s.dtype)}},zZ=Ar({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  bvec4 isNaN = equal(b, vec4(0.0));\n  \n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n\n  return result;\n"}),WZ={kernelName:u.Mod,backendName:"webgl",kernelFunc:zZ};class GZ{constructor(n,e,s){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[n,s],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${e-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${e-1}));\n      }\n    `}}const LS=Ar({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),HZ={kernelName:u.RealDiv,backendName:"webgl",kernelFunc:LS},BS="return a - b;",US=Ar({opSnippet:BS,packedOpSnippet:BS,supportsComplex:!0,cpuKernelImpl:m8}),KZ={kernelName:u.Sub,backendName:"webgl",kernelFunc:US};function VS(t){const{inputs:n,backend:e,attrs:s}=t,{logits:r}=n,{dim:o}=s,i=u.util.parseAxisParam([o],r.shape),a=FS({inputs:{x:r},backend:e,attrs:{reductionIndices:i,keepDims:!1}}),l=u.backend_util.expandShapeToKeepDim(a.shape,i),c=At({inputs:{x:a},backend:e,attrs:{shape:l}}),d=US({inputs:{a:r,b:c},backend:e}),f=OS({inputs:{x:d},backend:e}),p=jm({inputs:{x:f},backend:e,attrs:{axis:i,keepDims:!1}}),m=At({inputs:{x:p},backend:e,attrs:{shape:l}}),y=LS({inputs:{a:f,b:m},backend:e});return e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(c),e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(m),y}const jZ={kernelName:u.Softmax,backendName:"webgl",kernelFunc:VS},ZZ={kernelName:u.Multinomial,backendName:"webgl",kernelFunc:function XZ(t){const{inputs:n,backend:e,attrs:s}=t,{logits:r}=n,{numSamples:o,seed:i,normalized:a}=s,l=a?r:VS({inputs:{logits:r},backend:e,attrs:{dim:r.shape.length-1}}),f=new GZ(l.shape[0],l.shape[1],o),m=e.runWebGLProgram(f,[l],"int32",[[i]]);return a||e.disposeIntermediateTensorInfo(l),m}},qZ={kernelName:u.Neg,backendName:"webgl",kernelFunc:function JZ(t){const{inputs:n,backend:e}=t,{x:s}=n;if(e.shouldExecuteOnCPU([s])){const o=e.texData.get(s.dataId),[i,a]=Jj(o.values,s.shape,s.dtype);return e.makeTensorInfo(a,s.dtype,i)}let r;return r=(0,u.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new ic(s.shape,"\n  vec4 result = -x;\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"):new Pl(s.shape,"if (isnan(x)) return x;\n  return -x;\n"),e.runWebGLProgram(r,[s],s.dtype)}},eY=u.kernel_impls.nonMaxSuppressionV3Impl,nY={kernelName:u.NonMaxSuppressionV3,backendName:"webgl",kernelFunc:function tY(t){u.backend_util.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:n,backend:e,attrs:s}=t,{boxes:r,scores:o}=n,{maxOutputSize:i,iouThreshold:a,scoreThreshold:l}=s,c=e.readSync(r.dataId),d=e.readSync(o.dataId),{selectedIndices:f}=eY(c,d,i,a,l);return e.makeTensorInfo([f.length],"int32",new Int32Array(f))}},sY=u.kernel_impls.nonMaxSuppressionV4Impl,oY={kernelName:u.NonMaxSuppressionV4,backendName:"webgl",kernelFunc:function rY(t){u.backend_util.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:n,backend:e,attrs:s}=t,{boxes:r,scores:o}=n,{maxOutputSize:i,iouThreshold:a,scoreThreshold:l,padToMaxOutputSize:c}=s,d=e.readSync(r.dataId),f=e.readSync(o.dataId),{selectedIndices:p,validOutputs:m}=sY(d,f,i,a,l,c);return[e.makeTensorInfo([p.length],"int32",new Int32Array(p)),e.makeTensorInfo([],"int32",new Int32Array([m]))]}},iY=u.kernel_impls.nonMaxSuppressionV5Impl,lY={kernelName:u.NonMaxSuppressionV5,backendName:"webgl",kernelFunc:function aY(t){u.backend_util.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:n,backend:e,attrs:s}=t,{boxes:r,scores:o}=n,{maxOutputSize:i,iouThreshold:a,scoreThreshold:l,softNmsSigma:c}=s,d=e.readSync(r.dataId),f=e.readSync(o.dataId),p=i,m=a,y=l,_=c,{selectedIndices:x,selectedScores:D}=iY(d,f,p,m,y,_);return[e.makeTensorInfo([x.length],"int32",new Int32Array(x)),e.makeTensorInfo([D.length],"float32",new Float32Array(D))]}};class uY{constructor(n,e,s,r){this.variableNames=["indices"],this.outputShape=[n,e],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${s}),\n                      float(index == coords.y)));\n      }\n    `}}const dY={kernelName:u.OneHot,backendName:"webgl",kernelFunc:t=>{const{inputs:n,backend:e,attrs:s}=t,{indices:r}=n,{dtype:o,depth:i,onValue:a,offValue:l}=s,c=u.util.sizeFromShape(r.shape),d=new uY(c,i,a,l),f=At({inputs:{x:r},backend:e,attrs:{shape:[c]}}),p=e.runWebGLProgram(d,[f],o);e.disposeIntermediateTensorInfo(f);const y=At({inputs:{x:p},backend:e,attrs:{shape:[...r.shape,i]}});return e.disposeIntermediateTensorInfo(p),y}};function qm(t){const{inputs:n,backend:e}=t,{x:s}=n;if("complex64"===s.dtype){const r=yf({inputs:{input:s},backend:e}),o=qm({inputs:{x:r},backend:e}),i=Qm({inputs:{input:s},backend:e}),a=qm({inputs:{x:i},backend:e}),l=gu({inputs:{real:o,imag:a},backend:e});return e.disposeIntermediateTensorInfo(r),e.disposeIntermediateTensorInfo(o),e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(a),l}return xf({attrs:{shape:s.shape,dtype:s.dtype,value:"string"===s.dtype?"":0},backend:e})}const hY={kernelName:u.ZerosLike,backendName:"webgl",kernelFunc:qm},fY={kernelName:u.OnesLike,backendName:"webgl",kernelFunc:function zS(t){const{inputs:n,backend:e}=t,{x:s}=n;if("string"===s.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===s.dtype){const r=yf({inputs:{input:s},backend:e}),o=zS({inputs:{x:r},backend:e}),i=Qm({inputs:{input:s},backend:e}),a=qm({inputs:{x:i},backend:e}),l=gu({inputs:{real:o,imag:a},backend:e});return e.disposeIntermediateTensorInfo(r),e.disposeIntermediateTensorInfo(o),e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(a),l}return xf({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:e})}},mY={kernelName:u.Pack,backendName:"webgl",kernelFunc:function pY(t){const{inputs:n,backend:e,attrs:s}=t,{axis:r}=s;if(1===n.length)return Ix({inputs:{input:n[0]},backend:e,attrs:{dim:r}});const o=n[0].shape,i=n[0].dtype;n.forEach(d=>{u.util.assertShapesMatch(o,d.shape,"All tensors passed to stack must have matching shapes"),u.util.assert(i===d.dtype,()=>"All tensors passed to stack must have matching dtypes")});const a=[],c=ES({inputs:n.map(d=>{const f=Ix({inputs:{input:d},backend:e,attrs:{dim:r}});return a.push(f),f}),backend:e,attrs:{axis:r}});return a.forEach(d=>e.disposeIntermediateTensorInfo(d)),c}};class gY{constructor(n,e,s){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=e.map((c,d)=>c[0]+n[d]+c[1]);const r=n.length,o=ds(r),i=e.map(c=>c[0]).join(","),a=e.map((c,d)=>c[0]+n[d]).join(","),l=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${o} start = ${o}(${i});\n      ${o} end = ${o}(${a});\n\n      void main() {\n        ${o} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${o} coords = outC - start;\n          setOutput(getX(${l}));\n        }\n      }\n    `:`\n        int start = ${i};\n        int end = ${a};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}class yY{constructor(n,e,s){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=e.map((_,x)=>_[0]+n[x]+_[1]);const r=n.length,o=ds(r),i=e.map(_=>_[0]).join(","),a=e.map((_,x)=>_[0]+n[x]).join(","),l=to("rc",r),c=to("source",r),d=`${l[r-1]} < ${this.outputShape[r-1]}`,f=1===r?"source":`vec2(${c.slice(-2).join()})`,p=[`${o} rc = outputLoc;`,`${l[r-1]} += 1;\n       if(${d}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${l[r-2]} += 1;\n       if(${l[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${l[r-1]} += 1;\n         if(${d}) {`],m=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let y="";for(let _=0,x=1===r?2:4;_<x;_++)y+=`\n        ${p[_]}\n        if (${m}) {\n          result[${_}] = float(value);\n        } else {\n          ${o} source = rc - start;\n          result[${_}] = getChannel(getX(${c.join()}), ${f});\n        }\n      `;y+=1===r?"} ":"}}",this.userCode=`\n      const ${o} start = ${o}(${i});\n      const ${o} end = ${o}(${a});\n\n      void main() {\n        ${o} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${y}\n        setOutput(result);\n      }\n    `}}const WS=t=>{const{inputs:n,backend:e,attrs:s}=t,{x:r}=n,{paddings:o,constantValue:i}=s;if(0===u.util.sizeFromShape(r.shape))return xf({backend:e,attrs:{shape:o.map((d,f)=>d[0]+r.shape[f]+d[1]),value:i,dtype:r.dtype}});const a=(0,u.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new yY(r.shape,o,i):new gY(r.shape,o,i);return e.runWebGLProgram(a,[r],r.dtype,[[i]])},vY={kernelName:u.PadV2,backendName:"webgl",kernelFunc:WS},_Y=Ar({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  bvec4 isNaN1 = lessThan(a, vec4(0.0));\n  bvec4 isNaN2 = lessThan(floor(b), b);\n  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);\n  \n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n\n  return result;\n"}),bY={kernelName:u.Pow,backendName:"webgl",kernelFunc:_Y},DY={kernelName:u.Prod,backendName:"webgl",kernelFunc:function CY(t){const{inputs:n,backend:e,attrs:s}=t,{x:r}=n,{axis:o,keepDims:i}=s,a=r.shape.length,l=[],c=u.util.parseAxisParam(o,r.shape);let d=c;const f=u.backend_util.getAxesPermutation(d,a);let m,p=r;if(null!=f&&(p=no({inputs:{x:r},backend:e,attrs:{perm:f}}),d=u.backend_util.getInnerMostAxes(d.length,a),l.push(p)),u.backend_util.assertAxesAreInnerMostDims("prod",d,a),e.shouldExecuteOnCPU([p])){const y=e.texData.get(p.dataId).values,{outVals:_,outShape:x,outDtype:D}=e8(p.shape,p.dtype,y,d);m=e.makeTensorInfo(x,D,_)}else{const[y,_]=u.backend_util.computeOutAndReduceShapes(p.shape,d),x=u.util.sizeFromShape(_),D=At({inputs:{x:p},backend:e,attrs:{shape:[-1,x]}}),F=ac(D,(0,u.sumOutType)(r.dtype),"prod",e);m=At({inputs:{x:F},backend:e,attrs:{shape:y}}),l.push(D),l.push(F)}if(i){l.push(m);const y=u.backend_util.expandShapeToKeepDim(m.shape,c);m=At({inputs:{x:m},backend:e,attrs:{shape:y}})}return l.forEach(y=>e.disposeIntermediateTensorInfo(y)),m}},TY={kernelName:u.RaggedGather,backendName:"webgl",kernelFunc:function IY(t){const{inputs:n,backend:e,attrs:s}=t,{paramsNestedSplits:r,paramsDenseValues:o,indices:i}=n,{outputRaggedRank:a}=s,l=r.map(D=>e.readSync(D.dataId)),c=r.map(D=>D.shape),d=e.readSync(o.dataId),f=e.readSync(i.dataId),[p,m,y]=t8(l,c,d,o.shape,o.dtype,f,i.shape,a),_=p.map(D=>e.makeTensorInfo([D.length],"int32",D)),x=e.makeTensorInfo(y,o.dtype,m);return _.concat([x])}},SY={kernelName:u.RaggedTensorToTensor,backendName:"webgl",kernelFunc:function wY(t){const{inputs:n,backend:e,attrs:s}=t,{shape:r,values:o,defaultValue:i,rowPartitionTensors:a}=n,{rowPartitionTypes:l}=s,c=e.readSync(r.dataId),d=e.readSync(o.dataId),f=e.readSync(i.dataId),p=a.map(x=>e.readSync(x.dataId)),m=a.map(x=>x.shape),[y,_]=n8(c,r.shape,d,o.shape,o.dtype,f,i.shape,p,m,l);return e.makeTensorInfo(y,o.dtype,_)}},GS=t=>{const{backend:n,attrs:e}=t,{start:s,stop:r,step:o,dtype:i}=e,a=s8(s,r,o,i);return n.makeTensorInfo([a.length],i,a)},NY={kernelName:u.Range,backendName:"webgl",kernelFunc:GS},AY=Ln({opSnippet:"return 1.0 / x;"}),OY={kernelName:u.Reciprocal,backendName:"webgl",kernelFunc:AY},MY=Ln({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),kY={kernelName:u.Relu,backendName:"webgl",kernelFunc:MY},$Y=Ln({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),FY={kernelName:u.Relu6,backendName:"webgl",kernelFunc:$Y};class LY{constructor(n,e,s,r,o){this.variableNames=["A"],this.outputShape=[];const[i,a,l,c]=n;this.outputShape=[i,e,s,c];const d=[r&&e>1?a-1:a,r&&s>1?l-1:l],f=[r&&e>1?e-1:e,r&&s>1?s-1:s];let p;p=o?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${d[0]/f[0]},\n          ${d[1]/f[1]});\n      const vec2 inputShapeRC = vec2(${a}.0, ${l}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${p};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class BY{constructor(n,e,s,r,o){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[i,a,l,c]=n;this.outputShape=[i,e,s,c];const d=[r&&e>1?a-1:a,r&&s>1?l-1:l],f=[r&&e>1?e-1:e,r&&s>1?s-1:s];let p;p=o?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${d[0]/f[0]},\n          ${d[1]/f[1]},\n          ${d[1]/f[1]});\n      const vec3 inputShapeRC = vec3(${a}.0, ${l}.0,\n                                     ${l}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${p};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${c-1};\n        bool hasNextRow = coords.z < ${s-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}const VY={kernelName:u.ResizeBilinear,backendName:"webgl",kernelFunc:function UY(t){const{inputs:n,backend:e,attrs:s}=t,{images:r}=n,{alignCorners:o,halfPixelCenters:i,size:a}=s,[l,c]=a,d=(0,u.env)().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new BY(r.shape,l,c,o,i):new LY(r.shape,l,c,o,i);return e.runWebGLProgram(d,[r],"float32")}};class zY{constructor(n,e,s){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e;const[,r,o]=e,[,i,a]=n,l=[s&&i>1?r-1:r,s&&a>1?o-1:o],c=[s&&i>1?i-1:i,s&&a>1?a-1:a],d=l[0]/c[0],f=l[1]/c[1],p=1/d,m=1/f,y=2*Math.ceil(p)+2,_=2*Math.ceil(m)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${d});\n        const float widthScale = float(${f});\n\n        const float invHeightScale = float(${p});\n        const float invWidthScale = float(${m});\n\n        const int winHeight = int(${y});\n        const int winWidth = int(${_});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${i}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${a}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${o-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const GY={kernelName:u.ResizeBilinearGrad,backendName:"webgl",kernelFunc:function WY(t){const{inputs:n,backend:e,attrs:s}=t,{images:r,dy:o}=n,{alignCorners:i}=s,a=new zY(o.shape,r.shape,i);return e.runWebGLProgram(a,[o],o.dtype)}};class HY{constructor(n,e,s,r,o){this.variableNames=["A"],this.outputShape=[];const[i,a,l,c]=n;this.outputShape=[i,e,s,c];const d=[r&&e>1?a-1:a,r&&s>1?l-1:l],f=[r&&e>1?e-1:e,r&&s>1?s-1:s];let m;m=o?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${d[0]/f[0]},\n          ${d[1]/f[1]});\n      const vec2 inputShapeRC = vec2(${a}.0, ${l}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${m};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${r?"0.5":"0.0"})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}class KY{constructor(n,e,s,r,o){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[i,a,l,c]=n;this.outputShape=[i,e,s,c];const d=[r&&e>1?a-1:a,r&&s>1?l-1:l],f=[r&&e>1?e-1:e,r&&s>1?s-1:s];let m;m=o?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${d[0]/f[0]},\n          ${d[1]/f[1]},\n          ${d[1]/f[1]});\n      const vec3 inputShapeRC = vec3(${a}.0, ${l}.0,\n                                     ${l}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${m};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${r?"0.5":"0.0"})));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${c-1};\n        bool hasNextRow = coords.z < ${s-1};\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    `}}const XY={kernelName:u.ResizeNearestNeighbor,backendName:"webgl",kernelFunc:function jY(t){const{inputs:n,backend:e,attrs:s}=t,{images:r}=n,{alignCorners:o,halfPixelCenters:i,size:a}=s,[l,c]=a,d=(0,u.env)().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new KY(r.shape,l,c,o,i):new HY(r.shape,l,c,o,i);return e.runWebGLProgram(d,[r],r.dtype)}};class ZY{constructor(n,e,s){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e;const[,r,o]=e,[,i,a]=n,l=[s&&i>1?r-1:r,s&&a>1?o-1:o],c=[s&&i>1?i-1:i,s&&a>1?a-1:a],d=l[0]/c[0],f=l[1]/c[1],p=1/d,m=1/f,y=2*Math.ceil(p)+2,_=2*Math.ceil(m)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${d});\n        const float widthScale = float(${f});\n\n        const float invHeightScale = float(${p});\n        const float invWidthScale = float(${m});\n\n        const int winHeight = int(${y});\n        const int winWidth = int(${_});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${i}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${a}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${l[0]}) *\n                (float(dyR) / float(${c[0]}));\n\n            float sourceFracCol =\n                float(${l[1]}) *\n                  (float(dyC) / float(${c[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${s} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${o}) - 1),\n                ${s} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const QY={kernelName:u.ResizeNearestNeighborGrad,backendName:"webgl",kernelFunc:function YY(t){const{inputs:n,backend:e,attrs:s}=t,{images:r,dy:o}=n,{alignCorners:i}=s,a=new ZY(o.shape,r.shape,i);return e.runWebGLProgram(a,[o],o.dtype)}};class JY{constructor(n,e){this.variableNames=["x"];const s=n.length;if(s>4)throw new Error(`WebGL backend: Reverse of rank-${s} tensor is not yet supported`);if(this.outputShape=n,1===s)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${n[0]} - coord - 1));\n        }\n      `);const o=n.map((a,l)=>(a=>-1!==e.indexOf(a)&&1!==n[a]?`${n[a]} - coords[${a}] - 1`:`coords[${a}]`)(l)).join(","),i=ds(s);this.userCode=`\n      void main() {\n        ${i} coords = getOutputCoords();\n        setOutput(getX(${o}));\n      }\n    `}}class qY{constructor(n,e){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const s=n.length;if(s>4)throw new Error(`WebGL backend: Reverse of rank-${s} tensor is not yet supported`);this.outputShape=n;const r=to("rc",s),o=`${r[s-1]} + 1 < ${this.outputShape[s-1]}`,i=`${r[s-2]} + 1 < ${this.outputShape[s-2]}`,a=ds(s);function p(y){const _=n.map((C,F)=>function m(y,_){return-1!==e.indexOf(y)&&1!==n[y]?`${n[y]} - ${_[y]} - 1`:`${_[y]}`}(F,y));return`getChannel(getX(${_.join(",")}), vec2(${_.slice(-2).join(",")}))`}this.userCode=1===s?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${n[0]} - rc - 1),\n            ${n[0]} - rc - 1);\n          if(${o}){\n              result.g = getChannel(getX(${n[0]} - (rc  + 1) - 1),\n                ${n[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${a} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function l(y){return p(y)}(r.slice())};\n          if(${o}){\n            result.g = ${function c(y){return y[s-1]="("+y[s-1]+" + 1)",p(y)}(r.slice())};\n          }\n          if(${i}) {\n            result.b = ${function d(y){return y[s-2]="("+y[s-2]+" + 1)",p(y)}(r.slice())};\n            if(${o}) {\n              result.a = ${function f(y){return y[s-1]="("+y[s-1]+" + 1)",y[s-2]="("+y[s-2]+" + 1)",p(y)}(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}const tQ={kernelName:u.Reverse,backendName:"webgl",kernelFunc:function eQ(t){const{inputs:n,backend:e,attrs:s}=t,{x:r}=n,{dims:o}=s,i=r.shape.length,a=u.util.parseAxisParam(o,r.shape);if(0===i)return No({inputs:{x:r},backend:e});const l=(0,u.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new qY(r.shape,a):new JY(r.shape,a);return e.runWebGLProgram(l,[r],r.dtype)}};class nQ{constructor(n,e){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const s=n[1],r=n[2];this.outputShape=n;let o="";o="number"==typeof e?`float outputValue = ${e.toFixed(2)};`:`\n        vec3 fill = vec3(${e.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${o}\n          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${s}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const sQ={kernelName:u.RotateWithOffset,backendName:"webgl",kernelFunc:({inputs:t,attrs:n,backend:e})=>{const{image:s}=t,{radians:r,fillValue:o,center:i}=n,a=e,l=new nQ(s.shape,o),[c,d]=u.backend_util.getImageCenter(i,s.shape[1],s.shape[2]),f=[[c,d,Math.sin(r),Math.cos(r)]];return a.runWebGLProgram(l,[s],s.dtype,f)}},rQ=Ln({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),oQ={kernelName:u.Round,backendName:"webgl",kernelFunc:rQ},iQ=Ln({opSnippet:"return inversesqrt(x);",cpuKernelImpl:r8}),aQ={kernelName:u.Rsqrt,backendName:"webgl",kernelFunc:iQ};class HS{constructor(n,e,s,r,o,i,a=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=i;const l=ds(o.length),c=ds(i.length);let d="";1===s?d="i":2===s&&(d="i, j");let p="";1===r?p="i":2===r&&(p="i, coords[1]"),this.userCode=`\n        ${l} strides = ${l}(${o});\n\n        void main() {\n          ${c} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${n}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${e}; j++) {\n              int index = round(getIndices(${d}));\n              flattenedIndex += index * ${e>1?"strides[j]":"strides"};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += getUpdates(${p});\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}}const uQ={kernelName:u.ScatterNd,backendName:"webgl",kernelFunc:function lQ(t){const{inputs:n,backend:e,attrs:s}=t,{indices:r,updates:o}=n,{shape:i}=s,{sliceRank:a,numUpdates:l,sliceSize:c,strides:d,outputSize:f}=u.backend_util.calculateShapes(o,r,i),p=[f/c,c];if(0===f)return e.makeTensorInfo(i,r.dtype);const m=At({inputs:{x:r},backend:e,attrs:{shape:[l,a]}}),y=At({inputs:{x:o},backend:e,attrs:{shape:[l,c]}}),_=e.makeTensorInfo([],"float32",new Float32Array([0])),x=new HS(l,a,m.shape.length,y.shape.length,d,p),D=e.runWebGLProgram(x,[y,m,_],y.dtype),C=At({inputs:{x:D},backend:e,attrs:{shape:i}});return e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(y),e.disposeIntermediateTensorInfo(D),e.disposeIntermediateTensorInfo(_),C}};class cQ{constructor(n,e,s,r){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[n,s];const i=`for (int i = 0; i < ${Math.ceil(Math.log2(e+1))}; ++i) { if (left >= right) break;`,a=2===(0,u.env)().getNumber("WEBGL_VERSION")?"while (left < right) {":i;this.userCode=`\n       int findBound(int batch, float value) {\n         int left = 0;\n         int right = numInputs;\n         int mid;\n         ${a}\n           mid = (left + right) / 2;\n           if (getSortedSequence(batch, mid) ${"left"===r?"<":"<="} value) {\n             left = mid + 1;\n           } else {\n             right = mid;\n           }\n         }\n         return right;\n       }\n\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int valueIndex = coords[1];\n\n         float value = getValues(batch, valueIndex);\n\n         setOutput(float(findBound(batch, value)));\n       }\n     `}}const hQ={kernelName:u.SearchSorted,backendName:"webgl",kernelFunc:function dQ(t){const{inputs:n,backend:e,attrs:s}=t,{sortedSequence:r,values:o}=n,{side:i}=s,a=new cQ(r.shape[0],r.shape[1],o.shape[1],i);return e.runWebGLProgram(a,[r,o],"int32",[[r.shape[1]]])}};class fQ{constructor(n,e,s){let r,o;if(this.variableNames=["c","a","b"],this.outputShape=e,s>4)throw Error(`Where for rank ${s} is not yet supported`);if(1===s)o="resRC",r="resRC";else{const a=["resRC.x","resRC.y","resRC.z","resRC.w"],l=[],c=[];for(let d=0;d<e.length;d++)c.push(`${a[d]}`),d<n&&l.push(`${a[d]}`);r=l.join(),o=c.join()}const i=ds(s);this.userCode=`\n      void main() {\n        ${i} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${o}));\n        } else {\n          setOutput(getB(${o}));\n        }\n      }\n    `}}const mQ={kernelName:u.Select,backendName:"webgl",kernelFunc:function pQ(t){const{inputs:n,backend:e}=t,{condition:s,t:r,e:o}=n,i=new fQ(s.shape.length,r.shape,r.shape.length);return e.runWebGLProgram(i,[s,r,o],(0,u.upcastType)(r.dtype,o.dtype))}},yQ=Ln({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${u.backend_util.SELU_SCALEALPHA};\n  float scale = ${u.backend_util.SELU_SCALE};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),vQ={kernelName:u.Selu,backendName:"webgl",kernelFunc:yQ},EQ=Ln({opSnippet:"if (isnan(x)) return x;\n  return 1.0 / (1.0 + exp(-1.0 * x));\n",packedOpSnippet:"\n  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:i8}),_Q={kernelName:u.Sigmoid,backendName:"webgl",kernelFunc:EQ},bQ=Ln({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),CQ={kernelName:u.Sign,backendName:"webgl",kernelFunc:bQ},IQ=Ln({opSnippet:"if (isnan(x)) return x;\n  return sin(x);\n"}),TQ={kernelName:u.Sin,backendName:"webgl",kernelFunc:IQ},wQ=Ln({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),SQ={kernelName:u.Sinh,backendName:"webgl",kernelFunc:wQ},NQ=Ln({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),AQ={kernelName:u.Softplus,backendName:"webgl",kernelFunc:NQ},RQ={kernelName:u.SpaceToBatchND,backendName:"webgl",kernelFunc:t=>{const{inputs:n,backend:e,attrs:s}=t,{x:r}=n,{blockShape:o,paddings:i}=s;u.util.assert(r.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");const a=o.reduce((D,C)=>D*C),l=[[0,0]];l.push(...i);for(let D=1+o.length;D<r.shape.length;++D)l.push([0,0]);const c=[],d=WS({inputs:{x:r},backend:e,attrs:{paddings:l,constantValue:0}}),f=u.backend_util.getReshaped(d.shape,o,a,!1),p=u.backend_util.getPermuted(f.length,o.length,!1),m=u.backend_util.getReshapedPermuted(d.shape,o,a,!1),y=At({inputs:{x:d},backend:e,attrs:{shape:f}}),_=no({inputs:{x:y},backend:e,attrs:{perm:p}}),x=At({inputs:{x:_},backend:e,attrs:{shape:m}});return c.push(d),c.push(y),c.push(_),c.forEach(D=>e.disposeIntermediateTensorInfo(D)),x}},kQ={kernelName:u.SparseFillEmptyRows,backendName:"webgl",kernelFunc:function MQ(t){const{inputs:n,backend:e}=t,{indices:s,values:r,denseShape:o,defaultValue:i}=n;if(1!==o.shape.length)throw new Error(`Dense shape must be a vector, saw:\n         ${o.shape}`);if(2!==s.shape.length)throw new Error(`Indices must be a matrix, saw:\n         ${s.shape}`);if(1!==r.shape.length)throw new Error(`Values must be a vector, saw:\n         ${r.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);const a=e.readSync(s.dataId),l=e.readSync(r.dataId),c=e.readSync(o.dataId),d=e.readSync(i.dataId)[0],[f,p,m,y,_]=l8(a,s.shape,s.dtype,l,r.dtype,c,d);return[e.makeTensorInfo(p,s.dtype,f),e.makeTensorInfo([p[0]],r.dtype,m),e.makeTensorInfo([y.length],"bool",new Uint8Array(y.map(x=>Number(x)))),e.makeTensorInfo([_.length],s.dtype,new Int32Array(_))]}},$Q={kernelName:u.SparseReshape,backendName:"webgl",kernelFunc:function PQ(t){const{inputs:n,backend:e}=t,{inputIndices:s,inputShape:r,newShape:o}=n;if(2!==s.shape.length)throw new Error(`Input indices should be a matrix but received shape ${s.shape}`);if(1!==r.shape.length)throw new Error(`Input shape should be a vector but received shape ${r.shape}`);if(1!==o.shape.length)throw new Error(`Target shape should be a vector but received shape ${o.shape}`);const i=Array.from(e.readSync(r.dataId)),a=e.readSync(s.dataId),l=Array.from(e.readSync(o.dataId)),[c,d,f]=u8(a,s.shape,s.dtype,i,l);return[e.makeTensorInfo(d,s.dtype,c),e.makeTensorInfo([f.length],o.dtype,new Int32Array(f))]}},LQ={kernelName:u.SparseSegmentMean,backendName:"webgl",kernelFunc:function FQ(t){const{inputs:n,backend:e}=t,{data:s,indices:r,segmentIds:o}=n;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error(`Indices should be a vector but received shape\n              ${r.shape}`);if(1!==o.shape.length)throw new Error(`Segment ids should be a vector but received shape\n              ${o.shape}`);const i=e.readSync(s.dataId),a=e.readSync(r.dataId),l=e.readSync(o.dataId),[c,d]=Zw(i,s.shape,s.dtype,a,l,!0);return e.makeTensorInfo(d,s.dtype,c)}},UQ={kernelName:u.SparseSegmentSum,backendName:"webgl",kernelFunc:function BQ(t){const{inputs:n,backend:e}=t,{data:s,indices:r,segmentIds:o}=n;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error(`Indices should be a vector but received shape\n             ${r.shape}`);if(1!==o.shape.length)throw new Error(`Segment ids should be a vector but received shape\n             ${o.shape}`);const i=e.readSync(s.dataId),a=e.readSync(r.dataId),l=e.readSync(o.dataId),[c,d]=Zw(i,s.shape,s.dtype,a,l);return e.makeTensorInfo(d,s.dtype,c)}},zQ={kernelName:u.SparseToDense,backendName:"webgl",kernelFunc:function VQ(t){const{inputs:n,backend:e,attrs:s}=t,{sparseIndices:r,sparseValues:o,defaultValue:i}=n,{outputShape:a}=s,{sliceRank:l,numUpdates:c,sliceSize:d,strides:f,outputSize:p}=u.backend_util.calculateShapes(o,r,a);if("string"===o.dtype){const D=e.bufferSync(r),C=e.bufferSync(o),F=u.util.decodeString(e.readSync(i.dataId)[0]),B=o8(D,C,a,p,d,c,l,f,F,!1);return e.makeTensorInfo(a,B.dtype,B.values)}const y=new HS(c,l,r.shape.length,o.shape.length,f,[p,1],!1),_=e.runWebGLProgram(y,[o,r,i],o.dtype),x=At({inputs:{x:_},backend:e,attrs:{shape:a}});return e.disposeIntermediateTensorInfo(_),x}},GQ={kernelName:u.SplitV,backendName:"webgl",kernelFunc:function WQ(t){const{inputs:n,backend:e,attrs:s}=t,{x:r}=n,{numOrSizeSplits:o,axis:i}=s,a=u.util.parseAxisParam(i,r.shape)[0],l=u.backend_util.prepareSplitSize(r,o,a),d=new Array(r.shape.length).fill(0),f=r.shape.slice();return l.map(p=>{const m=[...f];m[a]=p;const y=Md({inputs:{x:r},backend:e,attrs:{begin:d,size:m}});return d[a]+=p,y})}},KS="return sqrt(x);",HQ=Ln({opSnippet:KS,packedOpSnippet:KS,cpuKernelImpl:c8}),KQ={kernelName:u.Sqrt,backendName:"webgl",kernelFunc:HQ},jQ=Ln({opSnippet:"return x * x;"}),XQ={kernelName:u.Square,backendName:"webgl",kernelFunc:jQ},jS="return (a - b) * (a - b);",ZQ=Ar({opSnippet:jS,packedOpSnippet:jS}),YQ={kernelName:u.SquaredDifference,backendName:"webgl",kernelFunc:ZQ},JQ={kernelName:u.Step,backendName:"webgl",kernelFunc:function QQ({inputs:t,attrs:n,backend:e}){const{x:s}=t,o=new Pl(s.shape,`if (isnan(x)) return x;\n    return x > 0.0 ? 1.0 : float(${n.alpha});\n  `);return e.runWebGLProgram(o,[s],s.dtype)}};class qQ{constructor(n,e,s){this.variableNames=["x"],this.outputShape=s;const r=s.length,o=ds(s.length),i=ds(s.length);let a="";if(1===r)a="coords * strides + begin";else{let l=0;a=s.map((c,d)=>(l++,1===s.length?`coords * strides[${d}] + begin[${d}]`:`coords[${l-1}] * strides[${d}] + begin[${d}]`)).join(",")}this.userCode=`\n      ${o} begin = ${o}(${n});\n      ${o} strides = ${o}(${e});\n\n      void main() {\n        ${i} coords = getOutputCoords();\n        setOutput(getX(${a}));\n      }\n    `}}const tJ={kernelName:u.StridedSlice,backendName:"webgl",kernelFunc:function eJ(t){const{inputs:n,backend:e,attrs:s}=t,{x:r}=n,{begin:o,end:i,strides:a,beginMask:l,endMask:c,ellipsisMask:d,newAxisMask:f,shrinkAxisMask:p}=s,{finalShapeSparse:m,finalShape:y,isIdentity:_,sliceDim0:x,isSimpleSlice:D,begin:C,end:F,strides:B}=u.slice_util.sliceInfo(r.shape,o,i,a,l,c,d,f,p);let Z;if(_)Z=At({inputs:{x:r},backend:e,attrs:{shape:y}});else if(x||D){u.util.assert(r.shape.length>=1,()=>`Input must have rank at least 1, got: ${r.shape.length}`);const ve=u.slice_util.computeOutShape(C,F,B),_e=Md({inputs:{x:r},backend:e,attrs:{begin:C,size:ve}});Z=At({inputs:{x:_e},backend:e,attrs:{shape:y}}),e.disposeIntermediateTensorInfo(_e)}else if(e.shouldExecuteOnCPU([r])){const _e=e.readSync(r.dataId),Fe=(0,u.buffer)(r.shape,r.dtype,_e),Le=d8(m,Fe,B,C);Z=e.makeTensorInfo(y,r.dtype,Le.values)}else{const _e=new qQ(C,B,m);Z=e.runWebGLProgram(_e,[r],r.dtype)}const ce=At({inputs:{x:Z},backend:e,attrs:{shape:y}});return e.disposeIntermediateTensorInfo(Z),ce}},sJ={kernelName:u.StringNGrams,backendName:"webgl",kernelFunc:function nJ(t){const{inputs:n,backend:e,attrs:s}=t,{separator:r,nGramWidths:o,leftPad:i,rightPad:a,padWidth:l,preserveShortSequences:c}=s,{data:d,dataSplits:f}=n,p=e.readSync(d.dataId),m=e.readSync(f.dataId),[y,_]=h8(p,m,r,o,i,a,l,c);return[e.makeTensorInfo([y.length],"string",y),e.makeTensorInfo(f.shape,"int32",_)]}},oJ={kernelName:u.StringSplit,backendName:"webgl",kernelFunc:function rJ(t){const{inputs:n,backend:e,attrs:s}=t,{skipEmpty:r}=s,{input:o,delimiter:i}=n;if("string"!==o.dtype)throw new Error("Input must be of datatype string");if(1!==o.shape.length)throw new Error(`Input must be a vector, got shape: ${o.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const a=e.readSync(o.dataId),l=e.readSync(i.dataId)[0],[c,d,f]=f8(a,l,r),p=d.length;return[e.makeTensorInfo([p,2],"int32",c),e.makeTensorInfo([p],"string",d),e.makeTensorInfo([2],"int32",new Int32Array(f))]}},aJ={kernelName:u.StringToHashBucketFast,backendName:"webgl",kernelFunc:function iJ(t){const{inputs:n,backend:e,attrs:s}=t,{numBuckets:r}=s,{input:o}=n;if("string"!==o.dtype)throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");const i=e.readSync(o.dataId),a=p8(i,r);return e.makeTensorInfo(o.shape,"int32",a)}},lJ=Ln({opSnippet:"return tan(x);"}),uJ={kernelName:u.Tan,backendName:"webgl",kernelFunc:lJ},cJ=Ln({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),dJ={kernelName:u.Tanh,backendName:"webgl",kernelFunc:cJ};class hJ{constructor(n,e){this.variableNames=["A"];const s=new Array(n.length);for(let i=0;i<s.length;i++)s[i]=n[i]*e[i];this.outputShape=s,this.rank=s.length;const r=ds(this.rank),o=function fJ(t){const n=t.length;if(n>5)throw Error(`Tile for rank ${n} is not yet supported`);if(1===n)return`imod(resRC, ${t[0]})`;const e=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],s=[];for(let r=0;r<t.length;r++)s.push(`imod(${e[r]}, ${t[r]})`);return s.join()}(n);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${o}));\n      }\n    `}}function XS(t){const{inputs:n,backend:e,attrs:s}=t,{x:r}=n,{reps:o}=s;if("string"===r.dtype||r.shape.length>5){const l=e.readSync(r.dataId),c="string"===r.dtype?l.map(p=>u.util.decodeString(p)):l,d=(0,u.buffer)(r.shape,r.dtype,c),f=g8(d,o);return e.makeTensorInfo(f.shape,f.dtype,f.values)}const i=new hJ(r.shape,o);return e.runWebGLProgram(i,[r],r.dtype)}const pJ={kernelName:u.Tile,backendName:"webgl",kernelFunc:XS};class mJ{constructor(n){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=n,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}}class gJ{constructor(n){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=n,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}}function lc(t,n){null!==n&&t.disposeIntermediateTensorInfo(n)}function ZS(t){let n=1;for(;n<t;)n*=2;return n}const vJ={kernelName:u.TopK,backendName:"webgl",kernelFunc:function yJ(t){const{inputs:n,backend:e,attrs:s}=t,{x:r}=n,{k:o,sorted:i}=s,a=(0,u.env)().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=(0,u.env)().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),c=r.shape,d=c[c.length-1];if(e.shouldExecuteOnCPU([r])||d<a||o>l){const Le=e.readSync(r.dataId),[Xe,tt]=y8(Le,c,r.dtype,o,i);return[e.makeTensorInfo(Xe.shape,Xe.dtype,Xe.values),e.makeTensorInfo(tt.shape,tt.dtype,tt.values)]}if(0===o)return c[c.length-1]=0,[e.makeTensorInfo(c,r.dtype,[]),e.makeTensorInfo(c,"int32",[])];if(1===d)return[r,xf({attrs:{shape:c,dtype:"int32",value:0},backend:e})];const f=e.texData.get(r.dataId),p=null!==f&&f.isPacked,m=p?e.unpackTensor(r):r,_=u.util.sizeFromShape(c)/d,x=At({inputs:{x:m},attrs:{shape:[_,d]},backend:e});p&&lc(e,m);const D=ZS(o),C=ZS(d);let F=null;const B=()=>null===F?[x,x]:[x,F],Z=(Le,Xe,tt)=>{const nt=B(),st=new mJ(tt),lt=F;F=e.runWebGLProgram(st,nt,"int32",[[d],[null===F?1:0],[Number.NEGATIVE_INFINITY],[Le],[Xe]]),lc(e,lt)};for(let Le=1;Le<D;Le*=2){const Xe=2*Le;for(let tt=Le;tt>=1;tt/=2)Z(Xe,tt,[_,C])}for(let Le=C;Le>D;Le/=2){const Xe=B(),tt=new gJ([_,Le/2]),Je=F;F=e.runWebGLProgram(tt,Xe,"int32",[[d],[null===F?1:0],[D]]),lc(e,Je);const qe=D/2,lt=2*qe;for(let Me=qe;Me>=1;Me/=2)Z(lt,Me,F.shape)}let ce=F;F=Md({inputs:{x:F},backend:e,attrs:{begin:0,size:[_,o]}}),lc(e,ce);let ve=$S({inputs:{x,indices:F},backend:e,attrs:{axis:1,batchDims:1}});lc(e,x);const _e=c.slice(0,-1);_e.push(o),ce=F,F=At({inputs:{x:F},attrs:{shape:_e},backend:e}),lc(e,ce);const Fe=ve;return ve=At({inputs:{x:ve},attrs:{shape:_e},backend:e}),lc(e,Fe),[ve,F]}};class xJ{constructor(n,e,s,r,o,i){this.variableNames=["Image","Transforms"],this.outputShape=i;const a="nearest"===s?1:2;let l;switch(r){case"constant":default:l=1;break;case"reflect":l=2;break;case"wrap":l=3;break;case"nearest":l=4}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${l} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${l} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${l} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${n} && 0 <= coordX && coordX < ${e}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${o});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${o});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${e}));\n                float mapY = mapCoord(inY, float(${n}));\n\n                if (${a} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}const _J={kernelName:u.Transform,backendName:"webgl",kernelFunc:function EJ(t){const{inputs:n,backend:e,attrs:s}=t,{image:r,transforms:o}=n,{interpolation:i,fillMode:a,fillValue:l,outputShape:c}=s,[d,f,p,m]=r.shape,[y,_]=null!=c?c:[f,p],D=new xJ(f,p,i,a,l,[d,y,_,m]);return e.runWebGLProgram(D,[r,o],"float32")}},CJ={kernelName:u.Unique,backendName:"webgl",kernelFunc:function bJ(t){const{inputs:n,attrs:e,backend:s}=t,{axis:r}=e,{x:o}=n;df(o,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const i=s.readSync(o.dataId),{outputValues:a,outputShape:l,indices:c}=v8(i,r,o.shape,o.dtype);return[s.makeTensorInfo(l,o.dtype,a),s.makeTensorInfo([c.length],"int32",c)]}},IJ={kernelName:u.Unpack,backendName:"webgl",kernelFunc:function DJ(t){const{inputs:n,backend:e,attrs:s}=t,{value:r}=n;let{axis:o}=s;o<0&&(o+=r.shape.length);const i=r,a=i.shape.length,l=r.shape[o],c=new Array(a-1);let d=0;for(let _=0;_<a;_++)_!==o&&(c[d++]=i.shape[_]);const f=[],p=new Array(a).fill(0),m=i.shape.slice();m[o]=1;const y=new Array(l);for(let _=0;_<y.length;_++){p[o]=_;const x=Md({inputs:{x:i},backend:e,attrs:{begin:p,size:m}}),D=At({inputs:{x},backend:e,attrs:{shape:c}});y[_]=D,f.push(x)}return f.forEach(_=>e.disposeIntermediateTensorInfo(_)),y}};class TJ{constructor(n,e){this.variableNames=["x","segmentIds"];const s=n.windowSize,r=n.batchSize,o=n.inSize,i=n.numSegments,a=i*Math.ceil(o/s);this.outputShape=[r,a];const d=4*Math.floor(s/4),f=s%4,p="\n        sumValue += dot(values, segFilter);\n    ";let m="";o%s>0&&(m=`\n        if (inIdx < 0 || inIdx >= ${o}) {\n          return initializationValue;\n        }\n      `);let y="";o%s>0&&(y=`\n        if (inIdx < 0 || inIdx >= ${o}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${m}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${y}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${i})) * float(${s}));\n        int currentSeg = int(mod(float(outIdx), float(${i})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${d}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${p}\n        }\n\n        int inIdx = inOffset + ${d};\n        if (${1===f}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${p}\n        } else if (${2===f}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${p}\n        } else if (${3===f}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${p}\n        }\n        setOutput(sumValue);\n      }\n    `}}const NJ=[h7,p7,y7,E7,b7,I7,w7,N7,M7,P7,L7,V7,G7,X7,Q7,q7,t5,o5,a5,u5,f5,E5,b5,D5,N5,O5,P5,Z8,L5,W5,j5,q5,t9,s9,o9,a9,c9,h9,m9,y9,x9,_9,D9,T9,A9,R9,P9,L9,U9,z9,K9,X9,Q9,q9,eX,nX,rX,iX,lX,cX,hX,mX,vX,EX,CX,TX,SX,AX,X8,RX,V5,kX,$X,LX,Q8,UX,zX,GX,jX,YX,JX,eZ,nZ,iZ,uZ,dZ,mZ,yZ,xZ,CZ,IZ,wZ,NZ,OZ,PZ,BZ,WZ,ZZ,e7,qZ,nY,oY,lY,I5,dY,fY,mY,vY,bY,q8,DY,TY,SY,NY,T5,HZ,OY,kY,FY,n7,VY,GY,XY,QY,tQ,sQ,oQ,aQ,uQ,hQ,mQ,vQ,_Q,CQ,TQ,SQ,v5,jZ,AQ,RQ,kQ,$Q,LQ,UQ,zQ,GQ,KQ,XQ,YQ,JQ,tJ,sJ,oJ,aJ,KZ,u7,uJ,dJ,pJ,vJ,_J,c7,CJ,IJ,{kernelName:u.UnsortedSegmentSum,backendName:"webgl",kernelFunc:function wJ(t){const{inputs:n,backend:e,attrs:s}=t,{x:r,segmentIds:o}=n,{numSegments:i}=s,a=r.shape.length,l=[];let c=0;const d=u.backend_util.getAxesPermutation([c],a);let f=r;null!=d&&(f=no({inputs:{x:r},backend:e,attrs:{perm:d}}),l.push(f),c=u.backend_util.getInnerMostAxes(1,a)[0]);const p=u.backend_util.segment_util.computeOutShape(f.shape,c,i),m=u.util.sizeFromShape([f.shape[c]]),y=At({inputs:{x:f},backend:e,attrs:{shape:[-1,m]}});l.push(y);const _=(0,u.sumOutType)(r.dtype),x=(B,Z,ce,ve,_e)=>{const Fe=B.shape[0],Le=B.shape[1],Xe=u.backend_util.segment_util.segOpComputeOptimalWindowSize(Le,_e),nt=new TJ({windowSize:Xe,inSize:Le,batchSize:Fe,numSegments:_e},Z),st=e.compileAndRun(nt,[B,ce],ve);if(l.push(st),st.shape[1]===_e)return st;const Je=GS({backend:e,attrs:{start:0,stop:_e,step:1,dtype:"float32"}}),qe=XS({inputs:{x:Je},backend:e,attrs:{reps:[Le/Xe]}});return l.push(Je),l.push(qe),x(st,Z,qe,ve,_e)},C=At({inputs:{x:x(y,"unsortedSegmentSum",o,_,i)},backend:e,attrs:{shape:p}});let F=C;if(null!=d){l.push(C);const B=u.backend_util.getUndoAxesPermutation(d);F=no({inputs:{x:F},backend:e,attrs:{perm:B}})}return l.forEach(B=>e.disposeIntermediateTensorInfo(B)),F}},hY];for(const t of NJ)(0,u.registerKernel)(t);var AJ=h(5103);class OJ extends k{constructor(n,e){super()}schedule(n,e=0){return this}}const eg={setInterval(t,n,...e){const{delegate:s}=eg;return(null==s?void 0:s.setInterval)?s.setInterval(t,n,...e):setInterval(t,n,...e)},clearInterval(t){const{delegate:n}=eg;return((null==n?void 0:n.clearInterval)||clearInterval)(t)},delegate:void 0},YS={now:()=>(YS.delegate||Date).now(),delegate:void 0};class Ef{constructor(n,e=Ef.now){this.schedulerActionCtor=n,this.now=e}schedule(n,e=0,s){return new this.schedulerActionCtor(this,n).schedule(s,e)}}Ef.now=YS.now;const QS=new class MJ extends Ef{constructor(n,e=Ef.now){super(n,e),this.actions=[],this._active=!1}flush(n){const{actions:e}=this;if(this._active)return void e.push(n);let s;this._active=!0;do{if(s=n.execute(n.state,n.delay))break}while(n=e.shift());if(this._active=!1,s){for(;n=e.shift();)n.unsubscribe();throw s}}}(class RJ extends OJ{constructor(n,e){super(n,e),this.scheduler=n,this.work=e,this.pending=!1}schedule(n,e=0){var s;if(this.closed)return this;this.state=n;const r=this.id,o=this.scheduler;return null!=r&&(this.id=this.recycleAsyncId(o,r,e)),this.pending=!0,this.delay=e,this.id=null!==(s=this.id)&&void 0!==s?s:this.requestAsyncId(o,this.id,e),this}requestAsyncId(n,e,s=0){return eg.setInterval(n.flush.bind(n,this),s)}recycleAsyncId(n,e,s=0){if(null!=s&&this.delay===s&&!1===this.pending)return e;null!=e&&eg.clearInterval(e)}execute(n,e){if(this.closed)return new Error("executing a cancelled action");this.pending=!1;const s=this._execute(n,e);if(s)return s;!1===this.pending&&null!=this.id&&(this.id=this.recycleAsyncId(this.scheduler,this.id,null))}_execute(n,e){let r,s=!1;try{this.work(n)}catch(o){s=!0,r=o||new Error("Scheduled action threw falsy error")}if(s)return this.unsubscribe(),r}unsubscribe(){if(!this.closed){const{id:n,scheduler:e}=this,{actions:s}=e;this.work=this.state=this.scheduler=null,this.pending=!1,P(s,this),null!=n&&(this.id=this.recycleAsyncId(e,n,null)),this.delay=null,super.unsubscribe()}}}),kJ=QS;function JS(t,n){return n?e=>e.pipe(JS((s,r)=>Os(t(s,r)).pipe(St((o,i)=>n(s,o,r,i))))):Vt((e,s)=>{let r=0,o=null,i=!1;e.subscribe(Ht(s,a=>{o||(o=Ht(s,void 0,()=>{o=null,i&&s.complete()}),Os(t(a,r++)).subscribe(o))},()=>{i=!0,!o&&s.complete()}))})}var dt=h(1070),In=h(9734),$t=h(8788),tg=h(6166);const qS={kernelName:dt.SYM,inputsToSave:["x"],gradFunc:(t,n)=>{const[e]=n;return{x:()=>(0,$t.d)(t,(0,tg.N)((0,In.p)(e,"float32"),-1))}}};var rr=h(6635),mi=h(3304),so=h(316),$d=h(5562),Wr=h(4164),Go=h(8578);const LJ={kernelName:dt.VGw,inputsToSave:["x"],gradFunc:(t,n)=>{const[e]=n;return{x:()=>{const s=(0,Wr.h)((0,In.p)(e,"float32")),r=(0,$d._)((0,Go.l)((0,so.i)(1),s));return(0,mi.W)((0,rr.h)(t,r))}}}},BJ={kernelName:dt.SpW,inputsToSave:["x"],gradFunc:(t,n)=>{const[e]=n;return{x:()=>{const s=(0,$d._)((0,Go.l)((0,Wr.h)((0,In.p)(e,"float32")),1));return(0,rr.h)(t,s)}}}};var xs=h(258),Jt=h(9416),ws=h(5214);const UJ={kernelName:dt.mm_,inputsToSave:["a","b"],gradFunc:(t,n)=>{const[e,s]=n,r=xs.assertAndGetBroadcastShape(e.shape,s.shape);return{a:()=>{let a=t;const l=xs.getReductionAxes(e.shape,r);return l.length>0&&(a=(0,ws.S)(a,l)),(0,Jt.X)(a,e.shape)},b:()=>{let a=t;const l=xs.getReductionAxes(s.shape,r);return l.length>0&&(a=(0,ws.S)(a,l)),(0,Jt.X)(a,s.shape)}}}},VJ={kernelName:dt.Xze,saveAllInputs:!0,gradFunc:(t,n)=>{const e={};return n.forEach((s,r)=>{e[r]=()=>t.clone()}),e}};var Xs=h(37);const zJ={kernelName:dt.sJF,inputsToSave:["x"],gradFunc:(t,n)=>{const[e]=n;return{x:()=>(0,Xs.P)(e)}}},WJ={kernelName:dt.aJk,inputsToSave:["x"],gradFunc:(t,n)=>{const[e]=n;return{x:()=>(0,Xs.P)(e)}}},GJ={kernelName:dt.M2y,inputsToSave:["x"],gradFunc:(t,n)=>{const[e]=n;return{x:()=>(0,rr.h)(t,(0,$d._)((0,Go.l)((0,so.i)(1),(0,Wr.h)((0,In.p)(e,"float32")))))}}};var ta=h(6849);const HJ={kernelName:dt.qw7,inputsToSave:["x"],gradFunc:(t,n)=>{const[e]=n;return{x:()=>{const s=(0,$d._)((0,ta.I)((0,so.i)(1),(0,Wr.h)((0,In.p)(e,"float32"))));return(0,rr.h)(t,s)}}}},KJ={kernelName:dt.QCc,inputsToSave:["a","b"],gradFunc:(t,n)=>{const[e,s]=n,r=(0,xs.assertAndGetBroadcastShape)(e.shape,s.shape);return{a:()=>{const a=(0,ta.I)((0,Wr.h)(e),(0,Wr.h)(s));let l=(0,$t.d)(t,(0,rr.h)(s,a));const c=(0,xs.getReductionAxes)(e.shape,r);return c.length>0&&(l=(0,ws.S)(l,c)),(0,Jt.X)(l,e.shape)},b:()=>{const a=(0,ta.I)((0,Wr.h)(e),(0,Wr.h)(s));let l=(0,mi.W)((0,$t.d)(t,(0,rr.h)(e,a)));const c=(0,xs.getReductionAxes)(s.shape,r);return c.length>0&&(l=(0,ws.S)(l,c)),(0,Jt.X)(l,s.shape)}}}},jJ={kernelName:dt.jMg,inputsToSave:["x"],gradFunc:(t,n)=>{const[e]=n;return{x:()=>(0,rr.h)(t,(0,ta.I)((0,Wr.h)((0,In.p)(e,"float32")),1))}}},XJ={kernelName:dt.Oyi,inputsToSave:["x"],gradFunc:(t,n)=>{const[e]=n;return{x:()=>(0,rr.h)(t,(0,Go.l)((0,so.i)(1),(0,Wr.h)((0,In.p)(e,"float32"))))}}};var na=h(3738),Ya=h(9608),zn=h(1396),yu=h(744),Fd=h(6721);const YJ=(0,Fd.op)({avgPool3dGrad_:function ZJ(t,n,e,s,r,o){const i=(0,Ya._1)(t,"dy","avgPool3dGrad"),a=(0,Ya._1)(n,"input","avgPool3dGrad");let l=i,c=a,d=!1;4===a.rank&&(d=!0,l=(0,Jt.X)(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),c=(0,Jt.X)(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),zn.hu(5===l.rank,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`),zn.hu(5===c.rank,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${c.rank}.`),(0,yu.m)("avgPool3dGrad",r,o);const m=na.BV.runKernel(dt.IMb,{dy:l,input:c},{filterSize:e,strides:s,pad:r,dimRoundingMode:o});return d?(0,Jt.X)(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}}),QJ={kernelName:dt._k9,inputsToSave:["x"],gradFunc:(t,n,e)=>{const[s]=n,{filterSize:r,strides:o,pad:i,dimRoundingMode:a}=e;return{x:()=>YJ(t,s,r,o,i,a)}}},qJ=(0,Fd.op)({avgPoolGrad_:function JJ(t,n,e,s,r){const o=(0,Ya._1)(t,"dy","avgPoolGrad"),i=(0,Ya._1)(n,"input","avgPoolGrad");zn.hu(i.rank===o.rank,()=>`Rank of input (${i.rank}) does not match rank of dy (${o.rank})`);let a=i,l=o,c=!1;3===i.rank&&(c=!0,a=(0,Jt.X)(i,[1,i.shape[0],i.shape[1],i.shape[2]]),l=(0,Jt.X)(o,[1,o.shape[0],o.shape[1],o.shape[2]])),zn.hu(4===l.rank,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`),zn.hu(4===a.rank,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${a.rank}.`);const p=na.BV.runKernel(dt.ROF,{dy:l,input:a},{filterSize:e,strides:s,pad:r});return c?(0,Jt.X)(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),eq={kernelName:dt.JhU,inputsToSave:["x"],gradFunc:(t,n,e)=>{const[s]=n,{filterSize:r,strides:o,pad:i}=e;return{x:()=>qJ(t,s,r,o,i)}}};var $l=h(341);const tq={kernelName:dt.XLW,inputsToSave:["a","b"],gradFunc:(t,n,e)=>{const[s,r]=n,{transposeA:o,transposeB:i}=e;return o||i?!o&&i?{a:()=>(0,$l.O)(t,r,!1,!1),b:()=>(0,$l.O)(t,s,!0,!1)}:o&&!i?{a:()=>(0,$l.O)(r,t,!1,!0),b:()=>(0,$l.O)(s,t,!1,!1)}:{a:()=>(0,$l.O)(r,t,!0,!0),b:()=>(0,$l.O)(t,s,!0,!0)}:{a:()=>(0,$l.O)(t,r,!1,!0),b:()=>(0,$l.O)(s,t,!0,!1)}}};var eN=h(2616);const nq={kernelName:dt.zws,gradFunc:(t,n,e)=>{const{blockShape:s,crops:r}=e;return{x:()=>(0,eN.f)(t,s,r)}}},sq={kernelName:dt.Ly9,gradFunc:(t,n,e)=>{const r=e.inputShape,o=e.shape,i=Array.from(o);for(let l=r.length-1;l>=0;l--)if(r[l]===o[l])i[l]=1;else if(1!==r[l])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${o}].`);const a=[];for(let l=0;l<i.length;l++)i[l]>1&&a.push(l);return{x:()=>(0,ws.S)(t,a,!0)}}},rq={kernelName:dt.RFZ,gradFunc:t=>({x:()=>t.clone()})},oq={kernelName:dt.gJX,gradFunc:t=>({x:()=>(0,Xs.P)(t)})};var ng=h(5996),sg=h(9220),wx=h(9901),vu=h(3062);const iq={kernelName:dt.xnO,inputsToSave:["x"],gradFunc:(t,n,e)=>{const[s]=n,{clipValueMin:r,clipValueMax:o}=e;return{x:()=>(0,vu.a)((0,wx.H)((0,ng.b)(s,r),(0,sg.z)(s,o)),t,(0,Xs.P)(t))}}},aq={kernelName:dt.yj2,inputsToSave:["x"],gradFunc:qS.gradFunc};var tN=h(4728);const lq={kernelName:dt.Eh3,saveAllInputs:!0,gradFunc:(t,n,e)=>{const s=n.map(l=>l.shape),{axis:r}=e,o=(0,zn.EC)(r,n[0].shape)[0],i=s.map(l=>l[o]);return(0,tN.V)(t,i,o).map(l=>()=>l)}};var nN=h(1834),uq=h(5466);const cq={kernelName:dt.mhS,inputsToSave:["x","filter"],gradFunc:(t,n,e)=>{const[s,r]=n,{dilations:o,strides:i,pad:a,dataFormat:l}=e;return zn.hu(yu.I0(o),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${o}'`),{x:()=>(0,uq._)(s.shape,t,r,i,a,l),filter:()=>(0,nN.p)(s,t,r.shape,i,a,l)}}};var sN=h(7605);const dq={kernelName:dt.wm,inputsToSave:["dy","filter"],gradFunc:(t,n,e)=>{const[s,r]=n,{strides:o,pad:i,dataFormat:a,dimRoundingMode:l}=e;return{dy:()=>(0,sN.T)(t,r,o,i,a,1,l),filter:()=>(0,nN.p)(t,s,r.shape,o,i,a,l)}}},fq=(0,Fd.op)({conv3DBackpropFilter_:function hq(t,n,e,s,r){let o=t;4===t.rank&&(o=(0,Jt.X)(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]));let i=n;return 4===i.rank&&(i=(0,Jt.X)(n,[1,n.shape[0],n.shape[1],n.shape[2],n.shape[3]])),zn.hu(5===o.rank,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${o.shape}.`),zn.hu(5===i.rank,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`),zn.hu(5===e.length,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${e}.`),zn.hu(o.shape[4]===e[3],()=>`Error in conv3dDerFilter: depth of input ${o.shape[4]}) must match input depth in filter (${e[3]}.`),zn.hu(i.shape[4]===e[4],()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${e[4]}).`),na.BV.runKernel(dt.o2y,{x:o,dy:i},{strides:s,pad:r,filterShape:e})}});var pq=h(2481);const mq={kernelName:dt.x12,inputsToSave:["x","filter"],gradFunc:(t,n,e)=>{const{dilations:s,strides:r,pad:o}=e;zn.hu((0,yu.I0)(s),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`);const[i,a]=n;return{x:()=>(0,pq._)(i.shape,t,a,r,o),filter:()=>fq(i,t,a.shape,r,o)}}};var rN=h(1901);const gq={kernelName:dt.mc4,inputsToSave:["x"],gradFunc:(t,n)=>{const[e]=n;return{x:()=>(0,$t.d)((0,mi.W)((0,rN.O)((0,In.p)(e,"float32"))),t)}}};var oN=h(3118);const yq={kernelName:dt.TR1,inputsToSave:["x"],gradFunc:(t,n)=>{const[e]=n;return{x:()=>(0,$t.d)((0,oN.R)((0,In.p)(e,"float32")),t)}}};var xu=h(7745),iN=h(7089),uc=h(9540);const vq={kernelName:dt.iHb,inputsToSave:["x"],gradFunc:(t,n,e)=>{const[s]=n,{axis:r,exclusive:o,reverse:i}=e;return{x:()=>{const a=(0,xu.Q3)([r],s.rank);let l=(0,iN.z)(t,r,o,!i);return null!=a&&(l=(0,uc.p)(l,a)),l}}}};var xq=h(1260),Eq=h(7021);const _q={kernelName:dt.cie,inputsToSave:["x","filter"],gradFunc:(t,n,e)=>{const{dilations:s,strides:r,pad:o,dimRoundingMode:i}=e,a=null==s?[1,1]:s;zn.hu(yu.I0(a),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${a}'`);const[l,c]=n;return zn.hu(4===l.rank,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`),zn.hu(4===c.rank,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${c.rank}.`),zn.hu(l.shape[3]===c.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${c.shape[2]}.`),zn.hu(yu.jT(r,a),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${r} and dilations '${a}'.`),yu.m("depthwiseConv2d",o,i),{x:()=>(0,Eq.v)(l.shape,t,c,r,o,a,i),filter:()=>(0,xq.z)(l,t,c.shape,r,o,a,i)}}},bq={kernelName:dt.p4S,inputsToSave:["x","filter"],gradFunc:(t,n,e)=>{const[s,r]=n,o={x:s,filter:r,dy:t},i={x:s,filter:r,dy:t};return{x:()=>na.BV.runKernel(dt.ekb,o,e),filter:()=>na.BV.runKernel(dt.Vn9,i,e)}}},Cq={kernelName:dt.SX0,outputsToSave:[!0],gradFunc:(t,n)=>{const[e]=n,s={dy:t,y:e};return{x:()=>na.BV.runKernel(dt.HEU,s)}}};var _f=h(9324);const Dq={kernelName:dt.Omj,inputsToSave:["x"],gradFunc:(t,n)=>{const[e]=n,s=(0,$t.d)((0,_f.Q)((0,mi.W)((0,Wr.h)(e))),2/Math.sqrt(Math.PI));return{x:()=>(0,$t.d)(t,s)}}},Iq={kernelName:dt.NEP,outputsToSave:[!0],gradFunc:(t,n)=>{const[e]=n;return{x:()=>(0,$t.d)(t,e)}}},Tq={kernelName:dt.YFo,inputsToSave:["input"],gradFunc:(t,n)=>{const[e]=n;return{input:()=>(0,Jt.X)(t,e.shape)}}},wq={kernelName:dt.Y0y,inputsToSave:["x"],gradFunc:(t,n)=>{const[e]=n;return{x:()=>(0,$t.d)(t,(0,_f.Q)(e))}}},Sq={kernelName:dt.OR,gradFunc:t=>({x:()=>(0,Xs.P)(t)})},Nq={kernelName:dt.jeX,inputsToSave:["a","b"],gradFunc:(t,n)=>{const[e,s]=n,r=(0,xs.assertAndGetBroadcastShape)(e.shape,s.shape);return{a:()=>{const a=(0,rr.h)(t,(0,In.p)(s,"float32")),l=(0,xs.getReductionAxes)(e.shape,r);return l.length>0?(0,Jt.X)((0,ws.S)(a,l),e.shape):a},b:()=>{let a=(0,$t.d)(t,(0,In.p)(e,"float32"));const l=(0,xs.getReductionAxes)(s.shape,r);l.length>0&&(a=(0,Jt.X)((0,ws.S)(a,l),s.shape));const c=(0,Wr.h)(s);return(0,mi.W)((0,rr.h)(a,(0,In.p)(c,"float32")))}}}};var aN=h(3443),lN=h(3964);const Aq={kernelName:dt.sHE,inputsToSave:["x","mean","variance","scale"],gradFunc:(t,n,e)=>{const{varianceEpsilon:s}=e,[r,o,i,a]=n,l=null==a?(0,so.i)(1):a,c=(0,xs.getReductionAxes)(o.shape,r.shape),d=[];if(1===o.rank){for(let B=0;B<r.shape.length-1;++B)d.push(r.shape[B]);d.push(1)}const f=(0,Go.l)(r,o),p=(0,$t.d)(t,l),m=(0,aN.b)((0,ta.I)(i,(0,so.i)(s))),y=(0,$t.d)((0,$t.d)((0,$t.d)(m,m),m),(0,so.i)(-.5));return{x:()=>(0,Jt.X)((0,$t.d)((0,$t.d)(t,1===o.rank?(0,lN.G)((0,Jt.X)(m,[1,1,1,o.shape[0]]),d):m),l),r.shape),mean:()=>{let B=(0,$t.d)((0,$t.d)(m,(0,so.i)(-1)),p);return 1===o.rank&&(B=(0,ws.S)(B,c)),(0,Jt.X)(B,o.shape)},variance:()=>{let B=(0,$t.d)((0,$t.d)(y,f),p);return 1===o.rank&&(B=(0,ws.S)(B,c)),(0,Jt.X)(B,o.shape)},scale:()=>{const B=(0,$t.d)(f,m);let Z=(0,$t.d)(t,B);return 1===o.rank&&(Z=(0,ws.S)(Z,c)),(0,Jt.X)(Z,o.shape)},offset:()=>{let B=t;return 1===o.rank&&(B=(0,ws.S)(B,c)),(0,Jt.X)(B,o.shape)}}}};var uN=h(2925);const Oq={kernelName:dt.qi_,inputsToSave:["x","indices"],gradFunc:(t,n,e)=>{const[s,r]=n,{axis:o}=e,i=(0,zn.EC)(o,s.shape)[0];return{x:()=>{const l=s.shape,c=r.size,d=l.slice(0,i),f=d.length,p=l.slice(o,l.length).slice(1),m=p.length,y=cN(0,f),_=cN(f+1,f+1+m),x=dN([d,[c],p]),D=(0,Jt.X)(t,x),C=(0,Jt.X)(r,[c]),F=dN([[f],y,_]),B=(0,uc.p)(D,F);let Z=(0,uN.p)(B,C,s.shape[i]);const ce=(0,xu.LJ)(F);return Z=(0,uc.p)(Z,ce),Z},indices:()=>r}}};function cN(t,n){const e=[];for(let s=t;s<n;++s)e.push(s);return e}function dN(t){const n=[];for(let e=0;e<t.length;++e)for(let s=0;s<t[e].length;++s)n.push(t[e][s]);return n}const Rq={kernelName:dt.Acj,inputsToSave:["a","b"],gradFunc:(t,n)=>{const[e,s]=n;return{a:()=>(0,Xs.P)(e),b:()=>(0,Xs.P)(s)}}},Mq={kernelName:dt.iJz,gradFunc:t=>({x:()=>(0,In.p)(t,"float32")})},kq={kernelName:dt.avt,gradFunc:t=>({x:()=>(0,Xs.P)(t)})},Pq={kernelName:dt.iWB,gradFunc:t=>({x:()=>(0,Xs.P)(t)})},$q={kernelName:dt.r7n,gradFunc:t=>({x:()=>(0,Xs.P)(t)})};var Ld=h(2860);const Fq={kernelName:dt.J$2,inputsToSave:["x"],gradFunc:(t,n,e)=>{const[s]=n,{alpha:r}=e,o=(0,Ld.p)(s,0);return{x:()=>(0,vu.a)(o,t,(0,$t.d)(t,r))}}},Lq={kernelName:dt.kU,inputsToSave:["x"],gradFunc:(t,n)=>{const[e]=n;return{x:()=>(0,rr.h)(t,(0,ta.I)(e,1))}}},Bq={kernelName:dt.ZbH,inputsToSave:["x"],gradFunc:(t,n)=>{const[e]=n;return{x:()=>(0,rr.h)(t,(0,In.p)(e,"float32"))}}},Uq={kernelName:dt.qCd,inputsToSave:[],outputsToSave:[!0],gradFunc:(t,n,e)=>{const[s]=n,{axis:r}=e;return{logits:()=>{const i=(0,_f.Q)(s);return(0,Go.l)(t,(0,$t.d)((0,ws.S)(t,r,!0),i))}}}},zq=(0,Fd.op)({localResponseNormalizationBackprop_:function Vq(t,n,e,s=5,r=1,o=1,i=.5){return na.BV.runKernel(dt.Hhh,{x:t,y:n,dy:e},{depthRadius:s,bias:r,alpha:o,beta:i})}}),Wq={kernelName:dt.eZ0,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,n,e)=>{const[s,r]=n,{depthRadius:o,bias:i,alpha:a,beta:l}=e;return{x:()=>zq(s,r,t,o,i,a,l)}}};var hN=h(8877);function fN(t,n,e,s){return n.rank<e.rank&&(n=(0,Jt.X)(n,xu.rv(n.shape,s))),t.rank<e.rank&&(t=(0,Jt.X)(t,xu.rv(t.shape,s))),{x:()=>(0,$t.d)(t,(0,In.p)((0,hN.D)(e,n),t.dtype))}}const pN={kernelName:dt.YoZ,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,n,e)=>{const s=e,{reductionIndices:r}=s,o=n[0],l=fN(t,n[1],o,zn.EC(r,o.shape));return{x:()=>l.x()}}};var mN=h(4688);const Gq={kernelName:dt.BMI,inputsToSave:["a","b"],gradFunc:(t,n)=>{const[e,s]=n;return{a:()=>(0,$t.d)(t,(0,In.p)((0,ng.b)(e,s),"float32")),b:()=>(0,$t.d)(t,(0,In.p)((0,mN.d)(e,s),"float32"))}}},Kq=(0,Fd.op)({maxPool3dGrad_:function Hq(t,n,e,s,r,o,i){const a=(0,Ya._1)(t,"dy","maxPool3dGrad"),l=(0,Ya._1)(n,"input","maxPool3dGrad"),c=(0,Ya._1)(e,"output","maxPool3dGrad");let d=a,f=l,p=c,m=!1;4===l.rank&&(m=!0,d=(0,Jt.X)(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]]),f=(0,Jt.X)(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),p=(0,Jt.X)(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]])),zn.hu(5===d.rank,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${d.rank}.`),zn.hu(5===f.rank,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${f.rank}.`),zn.hu(5===p.rank,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${p.rank}.`),(0,yu.m)("maxPool3dGrad",o,i);const x=na.BV.runKernel(dt.OU7,{dy:d,input:f,output:p},{filterSize:s,strides:r,pad:o,dimRoundingMode:i});return m?(0,Jt.X)(x,[x.shape[1],x.shape[2],x.shape[3],x.shape[4]]):x}}),jq={kernelName:dt.OAf,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,n,e)=>{const[s,r]=n,{filterSize:o,strides:i,pad:a,dimRoundingMode:l}=e;return{x:()=>Kq(t,s,r,o,i,a,l)}}},Zq=(0,Fd.op)({maxPoolGrad_:function Xq(t,n,e,s,r,o,i){const a=(0,Ya._1)(t,"dy","maxPoolGrad"),l=(0,Ya._1)(n,"input","maxPoolGrad"),c=(0,Ya._1)(e,"output","maxPoolGrad");return zn.hu(l.rank===a.rank,()=>`Rank of input (${l.rank}) does not match rank of dy (${a.rank})`),zn.hu(4===a.rank,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${a.rank}.`),zn.hu(4===l.rank,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`),yu.m("maxPoolGrad",o,i),na.BV.runKernel(dt.OV7,{dy:a,input:l,output:c},{filterSize:s,strides:r,pad:o,dimRoundingMode:i})}}),Yq={kernelName:dt.mTV,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,n,e)=>{const[s,r]=n,{filterSize:o,strides:i,pad:a}=e;return{x:()=>Zq(t,s,r,o,i,a)}}};var Sx=h(7014);const Qq={kernelName:dt.q2K,inputsToSave:["x"],gradFunc:(t,n,e)=>{const[s]=n,{axis:r}=e,o=zn.EC(r,s.shape),a=(0,xu.kz)(s.shape,o)[1],l=zn.NA(a);return{x:()=>{const d=s.shape.slice();o.forEach(m=>{d[m]=1});const f=(0,Jt.X)(t,d);return(0,rr.h)((0,$t.d)(f,(0,Sx.i)(s.shape,"float32")),l)}}}},Jq={kernelName:dt.c17,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,n,e)=>{const s=e,{axis:r}=s,[o,i]=n,l=fN(t,i,o,zn.EC(r,o.shape));return{x:()=>l.x()}}},qq={kernelName:dt.q8u,inputsToSave:["a","b"],gradFunc:(t,n)=>{const[e,s]=n;return{a:()=>(0,$t.d)(t,(0,In.p)((0,sg.z)(e,s),"float32")),b:()=>(0,$t.d)(t,(0,In.p)((0,Ld.p)(e,s),"float32"))}}};var cc=h(7208);const eee={kernelName:dt.jQs,inputsToSave:["x"],gradFunc:(t,n,e)=>{const s=n[0],{paddings:r}=e,o=r.map(i=>i[0]);return{x:()=>(0,cc.t)(t,o,s.shape)}}};var gN=h(6716);const tee={kernelName:dt.Vbg,inputsToSave:["a","b"],gradFunc:(t,n)=>{const[e,s]=n,r=(0,xs.assertAndGetBroadcastShape)(e.shape,s.shape);return{a:()=>{const a=(0,xs.getReductionAxes)(e.shape,r);return a.length>0?(0,Jt.X)((0,ws.S)(t,a),e.shape):t},b:()=>{const a=(0,$t.d)(t,(0,mi.W)((0,gN.G)((0,rr.h)(e,s)))),l=(0,xs.getReductionAxes)(s.shape,r);return l.length>0?(0,Jt.X)((0,ws.S)(a,l),s.shape):a}}}},nee={kernelName:dt.wYn,inputsToSave:["a","b"],gradFunc:(t,n)=>{const[e,s]=n,r=(0,xs.assertAndGetBroadcastShape)(e.shape,s.shape);return{a:()=>{const a=(0,$t.d)(t,(0,In.p)(s,"float32")),l=(0,xs.getReductionAxes)(e.shape,r);return l.length>0?(0,Jt.X)((0,ws.S)(a,l),e.shape):a},b:()=>{const a=(0,$t.d)(t,(0,In.p)(e,"float32")),l=(0,xs.getReductionAxes)(s.shape,r);return l.length>0?(0,Jt.X)((0,ws.S)(a,l),s.shape):a}}}},see={kernelName:dt.kuV,gradFunc:t=>({x:()=>(0,mi.W)(t)})};var ree=h(6383);const oee={kernelName:dt.we_,inputsToSave:["indices"],gradFunc:(t,n)=>{const e=n[0];return{indices:()=>(0,ree.l)(e.shape,"float32")}}},iee={kernelName:dt.qWM,gradFunc:t=>({x:()=>(0,Xs.P)(t)})};var yN=h(4126);const aee={kernelName:dt.QiL,saveAllInputs:!0,gradFunc:(t,n,e)=>{const{axis:s}=e;return(0,yN.H)(t,s).map(o=>()=>o)}},vN={kernelName:dt.lyA,inputsToSave:["x"],gradFunc:(t,n,e)=>{const s=n[0],{paddings:r}=e,o=r.map(i=>i[0]);return{x:()=>(0,cc.t)(t,o,s.shape)}}};var xN=h(7404),Nx=h(9043);const lee={kernelName:dt.pe_,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(t,n)=>{const[e,s,r]=n,o=e,i=s,a=xs.assertAndGetBroadcastShape(o.shape,i.shape);return{a:()=>{const d=(0,In.p)(i,"float32");let f=(0,$t.d)(t,(0,$t.d)(d,(0,Nx.s)(o,(0,Go.l)(d,(0,so.i)(1)))));const p=xs.getReductionAxes(o.shape,a);return p.length>0&&(f=(0,ws.S)(f,p)),(0,Jt.X)(f,o.shape)},b:()=>{const d=(0,Ld.p)(o,0),f=(0,vu.a)(d,(0,xN.c)(o),(0,Xs.P)(o));let p=(0,$t.d)(t,(0,$t.d)(r,f));const m=xs.getReductionAxes(i.shape,a);return m.length>0&&(p=(0,ws.S)(p,m)),(0,Jt.X)(p,i.shape)}}}},uee={kernelName:dt.o0g,inputsToSave:["x","alpha"],gradFunc:(t,n)=>{const[e,s]=n,r=(0,Ld.p)(e,0);return{x:()=>(0,vu.a)(r,t,(0,$t.d)(t,s)),alpha:()=>{let o=(0,vu.a)(r,(0,Xs.P)(t),(0,$t.d)(t,e));const i=(0,xs.getReductionAxes)(s.shape,t.shape);return i.length>0&&(o=(0,ws.S)(o,i)),(0,Jt.X)(o,s.shape)}}}};var Ax=h(8178);const hee={kernelName:dt.DlI,inputsToSave:["x"],gradFunc:(t,n,e)=>{const[s]=n,{axis:r}=e;let o=[];return o=null==r?s.shape.map((i,a)=>a):"number"==typeof r?[r]:r,{x:()=>function dee(t,n,e){const s=t.shape.length,r=s-e.length,o=xu.Q3(e,s);let i=t;null!=o&&(i=(0,uc.p)(t,o));const a=i.shape.slice(),c=a.splice(s-e.length,e.length).reduce((p,m)=>p*m,1);a.push(c);let f=function cee(t,n,e){const s=t.shape.slice();s[e]=1;const r=(0,Jt.X)(n,s),o=(0,Ax.$)(t,e,!0,!1),i=(0,Ax.$)(t,e,!0,!0),a=(0,$t.d)(o,i);return(0,$t.d)(r,a)}(i.reshape(a),n,r);if(f=f.reshape(i.shape),null!=o){const p=xu.LJ(o);f=(0,uc.p)(f,p)}return f}(s,t,o)}}},fee={kernelName:dt.oHH,inputsToSave:["a","b"],gradFunc:(t,n)=>{const[e,s]=n,r=xs.assertAndGetBroadcastShape(e.shape,s.shape);return{a:()=>{const a=(0,rr.h)(t,(0,In.p)(s,"float32")),l=xs.getReductionAxes(e.shape,r);return l.length>0?(0,Jt.X)((0,ws.S)(a,l),e.shape):a},b:()=>{let a=(0,$t.d)(t,(0,In.p)(e,"float32"));const l=xs.getReductionAxes(s.shape,r);l.length>0&&(a=(0,Jt.X)((0,ws.S)(a,l),s.shape));const c=(0,Wr.h)(s);return(0,mi.W)((0,rr.h)(a,(0,In.p)(c,"float32")))}}}},pee={kernelName:dt.$HU,inputsToSave:["x"],gradFunc:(t,n)=>{const[e]=n;return{x:()=>(0,rr.h)(t,(0,mi.W)((0,Wr.h)(e)))}}},mee={kernelName:dt.SbG,inputsToSave:["x"],gradFunc:(t,n)=>{const[e]=n,s=(0,$t.d)((0,sg.z)(e,6),(0,tg.N)(e));return{x:()=>(0,$t.d)(t,(0,In.p)(s,"float32"))}}},gee={kernelName:dt.qkr,inputsToSave:["x"],gradFunc:(t,n)=>{const[e]=n;return{x:()=>(0,$t.d)(t,(0,In.p)((0,tg.N)(e),"float32"))}}},yee={kernelName:dt.HZH,inputsToSave:["x"],gradFunc:(t,n)=>{const[e]=n;return{x:()=>(0,Jt.X)(t,e.shape)}}},vee={kernelName:dt._Yw,inputsToSave:["images"],gradFunc:(t,n,e)=>{const[s]=n,r={dy:t,images:s};return{images:()=>na.BV.runKernel(dt.zbQ,r,e)}}},xee={kernelName:dt.dpD,inputsToSave:["images"],gradFunc:(t,n,e)=>{const[s]=n,r={dy:t,images:s};return{images:()=>na.BV.runKernel(dt.Hmb,r,e)}}};var EN=h(9264);const Eee={kernelName:dt.mKl,gradFunc:(t,n,e)=>{const{dims:s}=e,r=(0,zn.EC)(s,t.shape);return{x:()=>(0,EN.G)(t,r)}}},_ee={kernelName:dt.e07,gradFunc:t=>({x:()=>(0,Xs.P)(t)})},bee={kernelName:dt.bV0,inputsToSave:["x"],gradFunc:(t,n)=>{const[e]=n;return{x:()=>(0,mi.W)((0,rr.h)(t,(0,$t.d)((0,Nx.s)(e,1.5),2)))}}};var _N=h(3779);const Cee={kernelName:dt.PhF,inputsToSave:["condition"],gradFunc:(t,n)=>{const[e]=n;return{condition:()=>(0,In.p)((0,Xs.P)(e),"float32"),t:()=>(0,$t.d)(t,(0,In.p)(e,t.dtype)),e:()=>(0,$t.d)(t,(0,In.p)((0,_N.h)(e),t.dtype))}}};var bN=h(8617);const Dee={kernelName:dt.oFR,inputsToSave:["x"],gradFunc:(t,n)=>{const[e]=n;return{x:()=>{const s=(0,Ld.p)(e,(0,so.i)(0)),r=(0,so.i)(bN.y),o=(0,so.i)(bN.$),i=(0,$t.d)(t,o),a=(0,$t.d)((0,$t.d)(t,r),(0,_f.Q)((0,In.p)(e,"float32")));return(0,vu.a)(s,i,a)}}}},Iee={kernelName:dt.a5O,outputsToSave:[!0],gradFunc:(t,n)=>{const[e]=n;return{x:()=>(0,$t.d)(t,(0,$t.d)(e,(0,Go.l)((0,so.i)(1),e)))}}},Tee={kernelName:dt.i5y,gradFunc:t=>({x:()=>(0,Xs.P)(t)})};var Ox=h(4254);const wee={kernelName:dt.RQH,inputsToSave:["x"],gradFunc:(t,n)=>{const[e]=n;return{x:()=>(0,$t.d)((0,Ox.m)((0,In.p)(e,"float32")),t)}}};var CN=h(6357);const See={kernelName:dt.wYB,inputsToSave:["x"],gradFunc:(t,n)=>{const[e]=n;return{x:()=>(0,$t.d)((0,CN.f)((0,In.p)(e,"float32")),t)}}};var DN=h(4158),Nee=h(7433);const Aee={kernelName:dt.p2w,inputsToSave:["x"],gradFunc:(t,n,e)=>{const[s]=n,{begin:r,size:o}=e,i=s.shape,[a,l]=(0,Nee.parseSliceParams)(s,r,o),c=[];for(let d=0;d<t.rank;d++)c.push([a[d],i[d]-a[d]-l[d]]);return{x:()=>(0,DN.v)(t,c)}}},Oee={kernelName:dt.Gcp,outputsToSave:[!0],gradFunc:(t,n,e)=>{const[s]=n,{dim:r}=e,i=(0,$t.d)(t,s);return{logits:()=>(0,Go.l)(i,(0,$t.d)((0,ws.S)(i,[r],!0),s))}}};var IN=h(6713);const Ree={kernelName:dt.MRv,inputsToSave:["x"],gradFunc:(t,n)=>{const[e]=n;return{x:()=>(0,$t.d)(t,(0,IN.X)(e))}}};var TN=h(5347);const wN={kernelName:dt.TQc,gradFunc:(t,n,e)=>{const{blockShape:s,paddings:r}=e;return{x:()=>(0,TN.E)(t,s,r)}}};var SN=h(5667);const NN={kernelName:dt.L8s,gradFunc:(t,n,e)=>{const{axis:s}=e;return{x:()=>(0,SN.z)(t,s)}}},Mee={kernelName:dt.FKq,inputsToSave:["x"],gradFunc:(t,n)=>{const[e]=n;return{x:()=>(0,rr.h)(t,(0,$t.d)((0,$d._)((0,In.p)(e,"float32")),2))}}},kee={kernelName:dt.bK0,inputsToSave:["x"],gradFunc:(t,n)=>{const[e]=n;return{x:()=>(0,$t.d)(t,(0,$t.d)((0,In.p)(e,"float32"),2))}}},Pee={kernelName:dt._tC,inputsToSave:["a","b"],gradFunc:(t,n)=>{const[e,s]=n,r=(0,so.i)(2);return{a:()=>(0,$t.d)(t,(0,$t.d)(r,(0,Go.l)(e,s))),b:()=>(0,$t.d)(t,(0,$t.d)(r,(0,Go.l)(s,e)))}}},$ee={kernelName:dt.h8e,gradFunc:t=>({x:()=>(0,Xs.P)(t)})},Fee={kernelName:dt.Tr8,inputsToSave:["a","b"],gradFunc:(t,n)=>{const[e,s]=n,r=xs.assertAndGetBroadcastShape(e.shape,s.shape);return{a:()=>{let a=t;const l=xs.getReductionAxes(e.shape,r);return l.length>0&&(a=(0,ws.S)(a,l)),(0,Jt.X)(a,e.shape)},b:()=>{let a=t;const l=xs.getReductionAxes(s.shape,r);return l.length>0&&(a=(0,ws.S)(a,l)),(0,Jt.X)((0,mi.W)(a),s.shape)}}}},Lee={kernelName:dt.GBy,inputsToSave:["x"],gradFunc:(t,n,e)=>{const[s]=n,r=s.shape.slice(),{axis:o}=e;(0,zn.EC)(o,s.shape).forEach(c=>{r[c]=1});const a=(0,Jt.X)(t,r),l=(0,$t.d)(a,(0,Sx.i)(s.shape,"float32"));return{x:()=>l}}},Bee={kernelName:dt.sEM,inputsToSave:["x"],gradFunc:(t,n)=>{const[e]=n;return{x:()=>(0,rr.h)(t,(0,Wr.h)((0,Ox.m)(e)))}}},Uee={kernelName:dt.MIZ,outputsToSave:[!0],gradFunc:(t,n)=>{const[e]=n;return{x:()=>(0,$t.d)((0,Go.l)((0,so.i)(1),(0,Wr.h)(e)),t)}}},Vee={kernelName:dt.n9L,inputsToSave:["x"],gradFunc:(t,n,e)=>{const[s]=n,{reps:r}=e;return{x:()=>{let i=(0,Xs.P)(s);if(1===s.rank)for(let a=0;a<r[0];++a)i=(0,ta.I)(i,(0,cc.t)(t,[a*s.shape[0]],[s.shape[0]]));else if(2===s.rank)for(let a=0;a<r[0];++a)for(let l=0;l<r[1];++l)i=(0,ta.I)(i,(0,cc.t)(t,[a*s.shape[0],l*s.shape[1]],[s.shape[0],s.shape[1]]));else if(3===s.rank)for(let a=0;a<r[0];++a)for(let l=0;l<r[1];++l)for(let c=0;c<r[2];++c)i=(0,ta.I)(i,(0,cc.t)(t,[a*s.shape[0],l*s.shape[1],c*s.shape[2]],[s.shape[0],s.shape[1],s.shape[2]]));else{if(4!==s.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${s.rank} tensors yet.`);for(let a=0;a<r[0];++a)for(let l=0;l<r[1];++l)for(let c=0;c<r[2];++c)for(let d=0;d<r[3];++d)i=(0,ta.I)(i,(0,cc.t)(t,[a*s.shape[0],l*s.shape[1],c*s.shape[2],d*s.shape[3]],[s.shape[0],s.shape[1],s.shape[2],s.shape[3]]))}return i}}}},zee={kernelName:dt.G3Y,gradFunc:(t,n,e)=>{const s=e,{perm:r}=s,o=xu.LJ(r);return{x:()=>(0,uc.p)(t,o)}}};var AN=h(4278);const Wee={kernelName:dt.ToN,gradFunc:(t,n,e)=>{const s=e,{axis:r}=s;return{value:()=>(0,AN.k)(t,r)}}};var ON=h(611),RN=h(9788),MN=h(6825);const Gee={kernelName:dt.Qvg,inputsToSave:["segmentIds"],gradFunc:(t,n)=>{const[e]=n;return{x:()=>function Hee(t,n){const e=(0,MN.g)(n,(0,Xs.P)(n)),s=(0,RN.I)(t,e);let r=(0,ng.b)(n,(0,so.i)(0,"int32"));const o=s.rank-r.rank;for(let a=0;a<o;++a)r=(0,ON.d)(r,a+1);r=(0,wx.H)(r,(0,Sx.i)(s.shape,"bool"));const i=(0,Xs.P)(s);return(0,vu.a)(r,s,i)}(t,e)}}},Kee={kernelName:dt.RuY,gradFunc:t=>({x:()=>(0,Xs.P)(t)})};var jee=h(9464);const Xee=[qS,LJ,BJ,UJ,VJ,zJ,WJ,GJ,HJ,KJ,jJ,XJ,QJ,eq,tq,nq,sq,rq,oq,iq,aq,lq,dq,cq,mq,gq,yq,vq,_q,bq,fee,Cq,Dq,Iq,Tq,wq,Nq,Sq,Aq,Oq,Rq,Mq,kq,Pq,$q,Fq,Lq,Bq,Uq,Wq,pN,pN,Gq,jq,Yq,Qq,Jq,qq,eee,tee,nee,see,oee,iee,aee,vN,vN,lee,uee,hee,pee,mee,gee,yee,vee,xee,Eee,_ee,bee,Cee,Dee,Iee,Tee,wee,See,Aee,Oee,Ree,wN,wN,NN,NN,Mee,Pee,kee,$ee,Fee,Lee,Bee,Uee,Vee,zee,Wee,Gee,Kee];for(const t of Xee)(0,jee.Li)(t);var Zee=h(2519),Qe=h(708);(0,Qe.t3)().prototype.abs=function(){return this.throwIfDisposed(),(0,Zee.W)(this)};var Yee=h(5871);(0,Qe.t3)().prototype.acos=function(){return this.throwIfDisposed(),(0,Yee.K)(this)};var Qee=h(3138);(0,Qe.t3)().prototype.acosh=function(){return this.throwIfDisposed(),(0,Qee._)(this)},(0,Qe.t3)().prototype.add=function(t){return this.throwIfDisposed(),(0,ta.I)(this,t)};var Jee=h(4119);(0,Qe.t3)().prototype.all=function(t,n){return this.throwIfDisposed(),(0,Jee.$)(this,t,n)};var qee=h(4833);(0,Qe.t3)().prototype.any=function(t,n){return this.throwIfDisposed(),(0,qee.Y)(this,t,n)};var ete=h(4982);(0,Qe.t3)().prototype.argMax=function(t){return this.throwIfDisposed(),(0,ete.N)(this,t)};var tte=h(5518);(0,Qe.t3)().prototype.argMin=function(t){return this.throwIfDisposed(),(0,tte.v)(this,t)},(0,Qe.t3)().prototype.asScalar=function(){return this.throwIfDisposed(),(0,zn.hu)(1===this.size,()=>"The array must have only 1 element."),(0,Jt.X)(this,[])},(0,Qe.t3)().prototype.asType=function(t){return this.throwIfDisposed(),(0,In.p)(this,t)},(0,Qe.t3)().prototype.as1D=function(){return this.throwIfDisposed(),(0,Jt.X)(this,[this.size])},(0,Qe.t3)().prototype.as2D=function(t,n){return this.throwIfDisposed(),(0,Jt.X)(this,[t,n])},(0,Qe.t3)().prototype.as3D=function(t,n,e){return this.throwIfDisposed(),(0,Jt.X)(this,[t,n,e])},(0,Qe.t3)().prototype.as4D=function(t,n,e,s){return this.throwIfDisposed(),(0,Jt.X)(this,[t,n,e,s])},(0,Qe.t3)().prototype.as5D=function(t,n,e,s,r){return this.throwIfDisposed(),(0,Jt.X)(this,[t,n,e,s,r])};var nte=h(8401);(0,Qe.t3)().prototype.asin=function(){return this.throwIfDisposed(),(0,nte.Z)(this)};var ste=h(4942);(0,Qe.t3)().prototype.asinh=function(){return this.throwIfDisposed(),(0,ste.V)(this)};var rte=h(4061);(0,Qe.t3)().prototype.atan=function(){return this.throwIfDisposed(),(0,rte.z)(this)};var ote=h(1414);(0,Qe.t3)().prototype.atan2=function(t){return this.throwIfDisposed(),(0,ote.f)(this,t)};var ite=h(2391);(0,Qe.t3)().prototype.atanh=function(){return this.throwIfDisposed(),(0,ite.C)(this)};var ate=h(809);(0,Qe.t3)().prototype.avgPool=function(t,n,e,s){return this.throwIfDisposed(),(0,ate.w)(this,t,n,e,s)},(0,Qe.t3)().prototype.batchToSpaceND=function(t,n){return this.throwIfDisposed(),(0,TN.E)(this,t,n)};var lte=h(8451);(0,Qe.t3)().prototype.batchNorm=function(t,n,e,s,r){return this.throwIfDisposed(),(0,lte.t)(this,t,n,e,s,r)};var ute=h(6434);(0,Qe.t3)().prototype.broadcastTo=function(t){return this.throwIfDisposed(),(0,ute.U)(this,t)},(0,Qe.t3)().prototype.cast=function(t){return this.throwIfDisposed(),(0,In.p)(this,t)};var cte=h(5775);(0,Qe.t3)().prototype.ceil=function(){return this.throwIfDisposed(),(0,cte.m)(this)};var dte=h(613);(0,Qe.t3)().prototype.clipByValue=function(t,n){return this.throwIfDisposed(),(0,dte.i)(this,t,n)},(0,Qe.t3)().prototype.concat=function(t,n){return this.throwIfDisposed(),t instanceof Qe.es&&(t=[t]),(0,SN.z)([this,...t],n)};var hte=h(1691);(0,Qe.t3)().prototype.conv1d=function(t,n,e,s,r,o){return this.throwIfDisposed(),(0,hte.P)(this,t,n,e,s,r,o)};var fte=h(9605);(0,Qe.t3)().prototype.conv2dTranspose=function(t,n,e,s,r){return this.throwIfDisposed(),(0,fte.b)(this,t,n,e,s,r)},(0,Qe.t3)().prototype.conv2d=function(t,n,e,s,r,o){return this.throwIfDisposed(),(0,sN.T)(this,t,n,e,s,r,o)},(0,Qe.t3)().prototype.cos=function(){return this.throwIfDisposed(),(0,Ox.m)(this)},(0,Qe.t3)().prototype.cosh=function(){return this.throwIfDisposed(),(0,CN.f)(this)},(0,Qe.t3)().prototype.cumprod=function(t,n,e){return this.throwIfDisposed(),(0,Ax.$)(this,t,n,e)},(0,Qe.t3)().prototype.cumsum=function(t,n,e){return this.throwIfDisposed(),(0,iN.z)(this,t,n,e)};var pte=h(2792);(0,Qe.t3)().prototype.depthToSpace=function(t,n){return this.throwIfDisposed(),(0,pte.n)(this,t,n)};var mte=h(6818);(0,Qe.t3)().prototype.depthwiseConv2d=function(t,n,e,s,r,o){return this.throwIfDisposed(),(0,mte.B)(this,t,n,e,s,r,o)};var gte=h(5256);(0,Qe.t3)().prototype.dilation2d=function(t,n,e,s,r){return this.throwIfDisposed(),(0,gte.W)(this,t,n,e,s,r)};var yte=h(7265);(0,Qe.t3)().prototype.divNoNan=function(t){return this.throwIfDisposed(),(0,yte.N)(this,t)},(0,Qe.t3)().prototype.div=function(t){return this.throwIfDisposed(),(0,rr.h)(this,t)};var vte=h(7576);(0,Qe.t3)().prototype.dot=function(t){return this.throwIfDisposed(),(0,vte.A)(this,t)};var xte=h(4609);(0,Qe.t3)().prototype.elu=function(){return this.throwIfDisposed(),(0,xte.p)(this)},(0,Qe.t3)().prototype.equal=function(t){return this.throwIfDisposed(),(0,hN.D)(this,t)};var Ete=h(9156);(0,Qe.t3)().prototype.erf=function(){return this.throwIfDisposed(),(0,Ete.q)(this)};var _te=h(6624);(0,Qe.t3)().prototype.euclideanNorm=function(t,n){return this.throwIfDisposed(),(0,_te.d)(this,t,n)},(0,Qe.t3)().prototype.exp=function(){return this.throwIfDisposed(),(0,_f.Q)(this)},(0,Qe.t3)().prototype.expandDims=function(t){return this.throwIfDisposed(),(0,ON.d)(this,t)};var bte=h(8907);(0,Qe.t3)().prototype.expm1=function(){return this.throwIfDisposed(),(0,bte.t)(this)};var Cte=h(8797);(0,Qe.t3)().prototype.fft=function(){return this.throwIfDisposed(),(0,Cte.k)(this)},(0,Qe.t3)().prototype.flatten=function(){return this.throwIfDisposed(),(0,Jt.X)(this,[this.size])},(0,Qe.t3)().prototype.floor=function(){return this.throwIfDisposed(),(0,gN.G)(this)};var Dte=h(3273);(0,Qe.t3)().prototype.floorDiv=function(t){return this.throwIfDisposed(),(0,Dte.q)(this,t)},(0,Qe.t3)().prototype.gather=function(t,n){return this.throwIfDisposed(),(0,RN.I)(this,t,n)},(0,Qe.t3)().prototype.greaterEqual=function(t){return this.throwIfDisposed(),(0,ng.b)(this,t)},(0,Qe.t3)().prototype.greater=function(t){return this.throwIfDisposed(),(0,Ld.p)(this,t)};var Ite=h(9472);(0,Qe.t3)().prototype.ifft=function(){return this.throwIfDisposed(),(0,Ite.S)(this)};var Tte=h(8109);(0,Qe.t3)().prototype.irfft=function(){return this.throwIfDisposed(),(0,Tte.w)(this)};var wte=h(7502);(0,Qe.t3)().prototype.isFinite=function(){return this.throwIfDisposed(),(0,wte.x)(this)};var Ste=h(5251);(0,Qe.t3)().prototype.isInf=function(){return this.throwIfDisposed(),(0,Ste.U)(this)};var Nte=h(663);(0,Qe.t3)().prototype.isNaN=function(){return this.throwIfDisposed(),(0,Nte.i)(this)};var Ate=h(6151);(0,Qe.t3)().prototype.leakyRelu=function(t){return this.throwIfDisposed(),(0,Ate.h)(this,t)},(0,Qe.t3)().prototype.lessEqual=function(t){return this.throwIfDisposed(),(0,sg.z)(this,t)},(0,Qe.t3)().prototype.less=function(t){return this.throwIfDisposed(),(0,mN.d)(this,t)};var Ote=h(9727);(0,Qe.t3)().prototype.localResponseNormalization=function(t,n,e,s){return this.throwIfDisposed(),(0,Ote.G)(this,t,n,e,s)};var Rte=h(7122);(0,Qe.t3)().prototype.logSigmoid=function(){return this.throwIfDisposed(),(0,Rte.e)(this)};var Mte=h(6847);(0,Qe.t3)().prototype.logSoftmax=function(t){return this.throwIfDisposed(),(0,Mte.C)(this,t)};var kte=h(6506);(0,Qe.t3)().prototype.logSumExp=function(t,n){return this.throwIfDisposed(),(0,kte.l)(this,t,n)},(0,Qe.t3)().prototype.log=function(){return this.throwIfDisposed(),(0,xN.c)(this)};var Pte=h(4610);(0,Qe.t3)().prototype.log1p=function(){return this.throwIfDisposed(),(0,Pte.K)(this)},(0,Qe.t3)().prototype.logicalAnd=function(t){return this.throwIfDisposed(),(0,wx.H)(this,t)},(0,Qe.t3)().prototype.logicalNot=function(){return this.throwIfDisposed(),(0,_N.h)(this)};var $te=h(7423);(0,Qe.t3)().prototype.logicalOr=function(t){return this.throwIfDisposed(),(0,$te.K)(this,t)};var Fte=h(546);(0,Qe.t3)().prototype.logicalXor=function(t){return this.throwIfDisposed(),(0,Fte.e)(this,t)},(0,Qe.t3)().prototype.matMul=function(t,n,e){return this.throwIfDisposed(),(0,$l.O)(this,t,n,e)};var Lte=h(748);(0,Qe.t3)().prototype.maxPool=function(t,n,e,s){return this.throwIfDisposed(),(0,Lte._)(this,t,n,e,s)};var Bte=h(888);(0,Qe.t3)().prototype.max=function(t,n){return this.throwIfDisposed(),(0,Bte.F)(this,t,n)},(0,Qe.t3)().prototype.maximum=function(t){return this.throwIfDisposed(),(0,MN.g)(this,t)};var Ute=h(8637);(0,Qe.t3)().prototype.mean=function(t,n){return this.throwIfDisposed(),(0,Ute.J)(this,t,n)};var Vte=h(3050);(0,Qe.t3)().prototype.min=function(t,n){return this.throwIfDisposed(),(0,Vte.V)(this,t,n)};var zte=h(2123);(0,Qe.t3)().prototype.minimum=function(t){return this.throwIfDisposed(),(0,zte.L)(this,t)};var Wte=h(3325);(0,Qe.t3)().prototype.mirrorPad=function(t,n){return this.throwIfDisposed(),(0,Wte.V)(this,t,n)};var Gte=h(3038);(0,Qe.t3)().prototype.mod=function(t){return this.throwIfDisposed(),(0,Gte.w)(this,t)},(0,Qe.t3)().prototype.mul=function(t){return this.throwIfDisposed(),(0,$t.d)(this,t)},(0,Qe.t3)().prototype.neg=function(){return this.throwIfDisposed(),(0,mi.W)(this)};var Hte=h(4780);(0,Qe.t3)().prototype.norm=function(t,n,e){return this.throwIfDisposed(),(0,Hte.K)(this,t,n,e)};var Kte=h(761);(0,Qe.t3)().prototype.notEqual=function(t){return this.throwIfDisposed(),(0,Kte.Q)(this,t)};var jte=h(2738);(0,Qe.t3)().prototype.oneHot=function(t,n=1,e=0){return this.throwIfDisposed(),(0,jte.l)(this,t,n,e)};var Xte=h(7286);(0,Qe.t3)().prototype.onesLike=function(){return this.throwIfDisposed(),(0,Xte.J)(this)},(0,Qe.t3)().prototype.pad=function(t,n){return this.throwIfDisposed(),(0,DN.v)(this,t,n)};var Zte=h(8944);(0,Qe.t3)().prototype.pool=function(t,n,e,s,r,o){return this.throwIfDisposed(),(0,Zte.d)(this,t,n,e,s,r,o)},(0,Qe.t3)().prototype.pow=function(t){return this.throwIfDisposed(),(0,Nx.s)(this,t)};var Yte=h(1426);(0,Qe.t3)().prototype.prelu=function(t){return this.throwIfDisposed(),(0,Yte.A)(this,t)};var Qte=h(2107);(0,Qe.t3)().prototype.prod=function(t,n){return this.throwIfDisposed(),(0,Qte.W)(this,t,n)};var Jte=h(6071);(0,Qe.t3)().prototype.reciprocal=function(){return this.throwIfDisposed(),(0,Jte.M)(this)};var qte=h(4563);(0,Qe.t3)().prototype.relu=function(){return this.throwIfDisposed(),(0,qte.U)(this)};var ene=h(5049);(0,Qe.t3)().prototype.relu6=function(){return this.throwIfDisposed(),(0,ene.b)(this)},(0,Qe.t3)().prototype.reshapeAs=function(t){return this.throwIfDisposed(),(0,Jt.X)(this,t.shape)},(0,Qe.t3)().prototype.reshape=function(t){return this.throwIfDisposed(),(0,Jt.X)(this,t)};var tne=h(4052);(0,Qe.t3)().prototype.resizeBilinear=function(t,n,e){return this.throwIfDisposed(),(0,tne.I)(this,t,n,e)};var nne=h(5438);(0,Qe.t3)().prototype.resizeNearestNeighbor=function(t,n,e){return this.throwIfDisposed(),(0,nne.j)(this,t,n,e)},(0,Qe.t3)().prototype.reverse=function(t){return this.throwIfDisposed(),(0,EN.G)(this,t)};var sne=h(849);(0,Qe.t3)().prototype.rfft=function(){return this.throwIfDisposed(),(0,sne.Q)(this)};var rne=h(8015);(0,Qe.t3)().prototype.round=function(){return this.throwIfDisposed(),(0,rne.N)(this)},(0,Qe.t3)().prototype.rsqrt=function(){return this.throwIfDisposed(),(0,aN.b)(this)};var one=h(2747);(0,Qe.t3)().prototype.selu=function(){return this.throwIfDisposed(),(0,one.U)(this)};var ine=h(9587);(0,Qe.t3)().prototype.separableConv2d=function(t,n,e,s,r,o){return this.throwIfDisposed(),(0,ine.U)(this,t,n,e,s,r,o)},(0,Qe.t3)().prototype.sigmoid=function(){return this.throwIfDisposed(),(0,IN.X)(this)};var ane=h(2820);(0,Qe.t3)().prototype.sign=function(){return this.throwIfDisposed(),(0,ane.X)(this)},(0,Qe.t3)().prototype.sin=function(){return this.throwIfDisposed(),(0,rN.O)(this)},(0,Qe.t3)().prototype.sinh=function(){return this.throwIfDisposed(),(0,oN.R)(this)},(0,Qe.t3)().prototype.slice=function(t,n){return this.throwIfDisposed(),(0,cc.t)(this,t,n)};var lne=h(2388);(0,Qe.t3)().prototype.softmax=function(t){return this.throwIfDisposed(),(0,lne.X)(this,t)};var une=h(1808);(0,Qe.t3)().prototype.softplus=function(){return this.throwIfDisposed(),(0,une.W)(this)},(0,Qe.t3)().prototype.spaceToBatchND=function(t,n){return this.throwIfDisposed(),(0,eN.f)(this,t,n)},(0,Qe.t3)().prototype.split=function(t,n){return this.throwIfDisposed(),(0,tN.V)(this,t,n)},(0,Qe.t3)().prototype.sqrt=function(){return this.throwIfDisposed(),(0,$d._)(this)},(0,Qe.t3)().prototype.square=function(){return this.throwIfDisposed(),(0,Wr.h)(this)};var cne=h(3441);(0,Qe.t3)().prototype.squaredDifference=function(t){return this.throwIfDisposed(),(0,cne.$)(this,t)};var dne=h(5527);(0,Qe.t3)().prototype.squeeze=function(t){return this.throwIfDisposed(),(0,dne.L)(this,t)},(0,Qe.t3)().prototype.stack=function(t,n){this.throwIfDisposed();const e=t instanceof Qe.es?[this,t]:[this,...t];return(0,AN.k)(e,n)},(0,Qe.t3)().prototype.step=function(t){return this.throwIfDisposed(),(0,tg.N)(this,t)};var hne=h(5617);(0,Qe.t3)().prototype.stridedSlice=function(t,n,e,s,r,o,i,a){return this.throwIfDisposed(),(0,hne.N)(this,t,n,e,s,r,o,i,a)},(0,Qe.t3)().prototype.sub=function(t){return this.throwIfDisposed(),(0,Go.l)(this,t)},(0,Qe.t3)().prototype.sum=function(t,n){return this.throwIfDisposed(),(0,ws.S)(this,t,n)};var fne=h(3337);(0,Qe.t3)().prototype.tan=function(){return this.throwIfDisposed(),(0,fne.O)(this)};var pne=h(8998);(0,Qe.t3)().prototype.tanh=function(){return this.throwIfDisposed(),(0,pne.A)(this)},(0,Qe.t3)().prototype.tile=function(t){return this.throwIfDisposed(),(0,lN.G)(this,t)},(0,Qe.t3)().prototype.toBool=function(){return this.throwIfDisposed(),(0,In.p)(this,"bool")},(0,Qe.t3)().prototype.toFloat=function(){return this.throwIfDisposed(),(0,In.p)(this,"float32")},(0,Qe.t3)().prototype.toInt=function(){return this.throwIfDisposed(),(0,In.p)(this,"int32")};var mne=h(7205);(0,Qe.t3)().prototype.topk=function(t,n){return this.throwIfDisposed(),(0,mne.h)(this,t,n)},(0,Qe.t3)().prototype.transpose=function(t){return this.throwIfDisposed(),(0,uc.p)(this,t)};var gne=h(3720);(0,Qe.t3)().prototype.unique=function(t){return this.throwIfDisposed(),(0,gne.T)(this,t)},(0,Qe.t3)().prototype.unsortedSegmentSum=function(t,n){return this.throwIfDisposed(),(0,uN.p)(this,t,n)},(0,Qe.t3)().prototype.unstack=function(t){return this.throwIfDisposed(),(0,yN.H)(this,t)},(0,Qe.t3)().prototype.where=function(t,n){return this.throwIfDisposed(),(0,vu.a)(t,this,n)},(0,Qe.t3)().prototype.zerosLike=function(){return this.throwIfDisposed(),(0,Xs.P)(this)};class Qa extends Error{constructor(n){super(n),Object.setPrototypeOf(this,Qa.prototype)}}class gi extends Error{constructor(n){super(n),Object.setPrototypeOf(this,gi.prototype)}}class Be extends Error{constructor(n){super(n),Object.setPrototypeOf(this,Be.prototype)}}class mn extends Error{constructor(n){super(n),Object.setPrototypeOf(this,mn.prototype)}}class Rx extends Error{constructor(n){super(n),Object.setPrototypeOf(this,Rx.prototype)}}Error;class PN{constructor(n){this.maxEntries=n||100,this.cache=new Map}get(n){let e;return this.cache.has(n)&&(e=this.cache.get(n),this.cache.delete(n),this.cache.set(n,e)),e}put(n,e){if(this.cache.has(n))this.cache.delete(n);else if(this.cache.size>=this.maxEntries){const s=this.cache.keys().next().value;this.cache.delete(s)}this.cache.set(n,e)}getMaxEntries(){return this.maxEntries}setMaxEntries(n){if(n<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${n}.`);if(this.maxEntries>n)for(let e=0;e<this.maxEntries-n;e++){const s=this.cache.keys().next().value;this.cache.delete(s)}this.maxEntries=n}}function dc(t,n){if(Array.isArray(t)){let e=[];for(let s=0;s<n;s++)e=e.concat(t);return e}{const e=new Array(n);return e.fill(t),e}}function Ho(t,n){if(!t)throw new Rx(n)}function $N(t,n){let e=0;for(const s of t)s===n&&e++;return e}function yo(t){return 1===t.length?t[0]:t}function hs(t){return Array.isArray(t)?t:[t]}function Fl(t){const e=t.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==e[0]?e:"private"+e}function hc(t){return t.length<=1||-1===t.indexOf("_")?t:t.replace(/[_]+(\w|$)/g,(n,e)=>e.toUpperCase())}let yi={};function Mx(t){if(null==t)return null;const n={};return n.className=t.getClassName(),n.config=t.getConfig(),n}function kx(t){if(null!=t&&"object"==typeof t)if(Array.isArray(t))t.forEach(n=>kx(n));else{const n=Object.keys(t);for(const e of n){const s=t[e];null!=s&&"object"==typeof s&&(Array.isArray(s)||"ndarray"!==s.type||"number"!=typeof s.value?kx(s):t[e]=s.value)}}}function bf(t,n={},e={},s="object",r=!1){if("string"==typeof t){const o=t;let i;if(o in e)i=e[o];else if(o in yi)i=yi[o];else if(i=n[o],null==i)throw new Be(`Unknown ${s}: ${t}. This may be due to one of the following reasons:\n1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return i}{const o=t;if(null==o.className||null==o.config)throw new Be(`${s}: Improper config format: ${JSON.stringify(o)}.\n'className' and 'config' must set.`);const i=o.className;let a,l;if(i in e?[a,l]=e[i]:i in yi?[a,l]=yi.className:i in n&&([a,l]=n[i]),null==a)throw new Be(`Unknown ${s}: ${i}. This may be due to one of the following reasons:\n1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=l){const c={};for(const m of Object.keys(yi))c[m]=yi[m];for(const m of Object.keys(e))c[m]=e[m];o.config.customObjects=c;const f=Object.assign({},yi);for(const m of Object.keys(e))yi[m]=e[m];kx(o.config);const p=l(a,o.config,e,r);return yi=Object.assign({},f),p}{const c=Object.assign({},yi);for(const f of Object.keys(e))yi[f]=e[f];const d=new a(o.config);return yi=Object.assign({},c),d}}}function rg(t,n){return-1*function yne(t,n){return t<n?-1:t>n?1:0}(t,n)}function Eu(t){if(null==t)return t;const n=[];for(const e of t)-1===n.indexOf(e)&&n.push(e);return n}function vne(t){if(null==t)throw new Be(`Invalid value in obj: ${JSON.stringify(t)}`);for(const n in t)if(t.hasOwnProperty(n))return!1;return!0}function fc(t,n,e){if(null!=e&&t.indexOf(e)<0)throw new Be(`${e} is not a valid ${n}.  Valid values are ${t} or null/undefined.`)}function Px(t,n,e=0,s=1/0){return Ho(e>=0),Ho(s>=e),Array.isArray(t)&&t.length>=e&&t.length<=s&&t.every(r=>typeof r===n)}function Dr(t,n){Array.isArray(t)?(u.util.assert(t.length>0,()=>`${n} is unexpectedly an empty array.`),t.forEach((e,s)=>Dr(e,`element ${s+1} of ${n}`))):u.util.assert(Number.isInteger(t)&&t>0,()=>`Expected ${n} to be a positive integer, but got ${FN(t)}.`)}function FN(t){return null===t?"null":Array.isArray(t)?"["+t.map(n=>FN(n)).join(",")+"]":"string"==typeof t?`"${t}"`:`${t}`}function LN(t){return"relu"===t?"relu":"linear"===t?"linear":"elu"===t?"elu":null}let Ene=0;function BN(){return Ene++}const og={};function ig(t=""){return t in og||(og[t]=0),og[t]+=1,t+og[t].toString()}const _ne=["channelsFirst","channelsLast"],bne=["nearest","bilinear"],Cne=["valid","same","causal"],Dne=["max","avg"],Ine=["sum","mul","concat","ave"],Bd=new Map;function Zs(t){fc(_ne,"DataFormat",t)}function Ko(t){fc(Cne,"PaddingMode",t)}function UN(t){fc(Dne,"PoolMode",t)}const Cf=[];function pc(t,n){Cf.push(t);try{const e=n();return Cf.pop(),e}catch(e){throw Cf.pop(),e}}function zN(t){if(!GN(t))throw new Error("Not a valid tensor name: '"+t+"'");return function wne(){return 0===Cf.length?"":Cf.join("/")+"/"}()+t}function WN(t){if(!GN(t))throw new Error("Not a valid tensor name: '"+t+"'");Bd.has(t)||Bd.set(t,0);const n=Bd.get(t);if(Bd.set(t,Bd.get(t)+1),n>0){const e=`${t}_${n}`;return Bd.set(e,1),e}return t}const Sne=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function GN(t){return!!t.match(Sne)}function Nne(t){return t===parseInt(t.toString(),10)}function _u(t,n,e){null==n&&(n=0),null==e&&(e=t.length);let s=1;for(let r=n;r<e;++r)s*=t[r];return s}function Ud(t){if(0===t.length)return Number.NaN;let n=Number.POSITIVE_INFINITY;for(let e=0;e<t.length;e++){const s=t[e];s<n&&(n=s)}return n}function bu(t){if(0===t.length)return Number.NaN;let n=Number.NEGATIVE_INFINITY;for(let e=0;e<t.length;e++){const s=t[e];s>n&&(n=s)}return n}function sa(t,n){if(n<t)throw new Be(`end (${n}) < begin (${t}) is forbidden.`);const e=[];for(let s=t;s<n;++s)e.push(s);return e}let ag;function dr(){return null==ag&&(ag=(0,u.backend)().epsilon()),ag}function Df(t,n){return u.cast(t,n)}function If(t,n=-1){const e=t.shape.slice();return n<0&&(n=e.length+n+1),e.splice(n,0,1),u.reshape(t,e)}function mc(t,n,e){return(0,u.tidy)(()=>{switch(t.rank){case 1:return u.slice1d(t,n,e);case 2:return u.slice2d(t,[n,0],[e,t.shape[1]]);case 3:return u.slice3d(t,[n,0,0],[e,t.shape[1],t.shape[2]]);case 4:return u.slice4d(t,[n,0,0,0],[e,t.shape[1],t.shape[2],t.shape[3]]);case 5:return u.slice(t,[n,0,0,0,0],[e,t.shape[1],t.shape[2],t.shape[3],t.shape[4]]);case 6:return u.slice(t,[n,0,0,0,0,0],[e,t.shape[1],t.shape[2],t.shape[3],t.shape[4],t.shape[5]]);default:throw new Be(`sliceAlongFirstAxis() received an unsupported tensor rank: ${t.rank}`)}})}function $x(t,n,e){return(0,u.tidy)(()=>{switch(t.rank){case 1:return u.slice1d(t,n,e);case 2:return u.slice2d(t,[0,n],[t.shape[0],e]);case 3:return u.slice3d(t,[0,0,n],[t.shape[0],t.shape[1],e]);case 4:return u.slice4d(t,[0,0,0,n],[t.shape[0],t.shape[1],t.shape[2],e]);default:throw new Be(`sliceAlongLastAxis() received an unsupported tensor rank: ${t.rank}`)}})}function lg(t,n,e,s){return(0,u.tidy)(()=>{switch(t.rank){case 1:return u.slice1d(t,n,e);case 2:switch(s){case 1:return mc(t,n,e);case 2:return $x(t,n,e);default:throw new Be(`The axis is not within the rank of the tensor ${s}`)}case 3:switch(s){case 1:return mc(t,n,e);case 2:return u.slice3d(t,[0,n,0],[t.shape[0],e,t.shape[2]]);case 3:return $x(t,n,e);default:throw new Be(`The axis is not within the rank of the tensor ${s}`)}case 4:switch(s){case 1:return mc(t,n,e);case 2:return u.slice4d(t,[0,n,0,0],[t.shape[0],e,t.shape[2],t.shape[3]]);case 3:return u.slice4d(t,[0,0,n,0],[t.shape[0],t.shape[1],e,t.shape[3]]);case 4:return $x(t,n,e);default:throw new Be(`The axis is not within the rank of the tensor ${s}`)}default:throw new Be(`sliceAlongLastAxis() received an unsupported tensor rank: ${t.rank}`)}})}function Fx(t,n=-1){let e;return n<0&&(e=t[0].rank,n=0!==e?e:0),n===t[0].rank&&(n=-1),u.concat(t,n)}function KN(t,n){switch(t.rank){case 1:return u.concat1d([t,n]);case 2:return u.concat2d([t,n],0);case 3:return u.concat3d([t,n],0);case 4:return u.concat4d([t,n],0);default:throw new Be(`concatAlongFirstAxis() received an unsupported tensor rank: ${t.rank}`)}}function Lx(t,n){if(Array.isArray(n)||(n=[n]),t.rank!==n.length)throw new Be(`The length of input n (${n.length}) does not match the number of dimensions in input x (${t.rank})`);return u.tile(t,n)}function ug(t,n=0,e=1,s,r){return u.randomNormal(t,n,e,s,r)}function Ja(t,n,e,s){if(t.rank<2||n.rank<2)throw new mn(`dot requires both inputs to be rank >= 2 but got x shape = ${t.shape} and y shape = ${n.shape}`);if(n.rank>=3&&t.shape.slice(-1)[0]!==n.shape.slice(-2)[0])throw new mn(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${t.shape} and  y shape = ${n.shape}`);if(2===t.rank&&2===n.rank)return u.fused.matMul({a:t,b:n,transposeA:!1,transposeB:!1,bias:s?Bx(t.rank,s,"channelsLast"):null,activation:e});{const r=t.shape.slice(),o=r.pop();t=u.reshape(t,[-1,o]);const i=n.shape.slice(),a=i.pop(),l=i.pop(),c=[...i,a],d=Array.from({length:n.rank},(y,_)=>0===_?n.rank-2:_<=n.rank-2?_-1:_);n=u.reshape(u.transpose(n,d),[l,-1]);const f=[...r,...c];return u.reshape(u.fused.matMul({a:t,b:n,transposeA:!1,transposeB:!1,bias:s?Bx(t.rank,s,"channelsLast"):null,activation:e}),f)}}function jN(t,n,e){return(0,u.tidy)(()=>(n=Array.isArray(n)?(0,u.tensor1d)(n,"int32"):u.cast(n,"int32"),u.gather(t,n,e)))}function Tf(t){return u.mul(t,t)}function Bx(t,n,e){const s=n.shape;if(1!==n.rank&&n.rank!==t)throw new Be(`Unexpected bias dimensions: ${n.rank}; expected it to be 1 or ${t}`);if(5===t){if("channelsFirst"===e)return u.reshape(n,1===s.length?[1,s[0],1,1,1]:[1,s[3],s[0],s[1],s[2]]);if("channelsLast"===e)return u.reshape(n,1===s.length?[1,1,1,1,s[0]]:[1].concat(s))}else if(4===t){if("channelsFirst"===e)return u.reshape(n,1===s.length?[1,s[0],1,1]:[1,s[2],s[0],s[1]]);if("channelsLast"===e)return u.reshape(n,1===s.length?[1,1,1,s[0]]:[1].concat(s))}else if(3===t){if("channelsFirst"===e)return u.reshape(n,1===s.length?[1,s[0],1]:[1,s[1],s[0]]);if("channelsLast"===e)return u.reshape(n,1===s.length?[1,1,s[0]]:[1].concat(s))}else if(t<3)return n;throw new Be(`Unsupported input rank by biasAdd: ${n.rank}`)}function oa(t,n,e){return(0,u.tidy)(()=>(null==e&&(e="channelsLast"),Zs(e),u.add(t,Bx(t.rank,n,e))))}function XN(t,n,e,s){return(0,u.tidy)(()=>u.dropout(t,n,e,s))}function wf(t,n,e=!1){return e?t():n()}const Lne=["fanIn","fanOut","fanAvg"],Bne=["normal","uniform","truncatedNormal"];class vi extends u.serialization.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}u.serialization.registerClass((()=>{class t extends vi{apply(e,s){return(0,u.zeros)(e,s)}}return t.className="Zeros",t})());let ZN=(()=>{class t extends vi{apply(e,s){return(0,u.ones)(e,s)}}return t.className="Ones",t})();u.serialization.registerClass(ZN),u.serialization.registerClass((()=>{class t extends vi{constructor(e){if(super(),"object"!=typeof e)throw new Be(`Expected argument of type ConstantConfig but got ${e}`);if(void 0===e.value)throw new Be(`config must have value set but got ${e}`);this.value=e.value}apply(e,s){return(0,u.tidy)(()=>(0,u.mul)((0,u.scalar)(this.value),(0,u.ones)(e,s)))}getConfig(){return{value:this.value}}}return t.className="Constant",t})()),u.serialization.registerClass((()=>{class t extends vi{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,s){return(0,u.randomUniform)(e,this.minval,this.maxval,s)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}return t.className="RandomUniform",t})()),u.serialization.registerClass((()=>{class t extends vi{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,s){if("float32"!==(s=s||"float32")&&"int32"!==s)throw new mn(`randomNormal does not support dType ${s}.`);return ug(e,this.mean,this.stddev,s,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}return t.className="RandomNormal",t})()),u.serialization.registerClass((()=>{class t extends vi{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,s){if("float32"!==(s=s||"float32")&&"int32"!==s)throw new mn(`truncatedNormal does not support dType ${s}.`);return(0,u.truncatedNormal)(e,this.mean,this.stddev,s,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}return t.className="TruncatedNormal",t})()),u.serialization.registerClass((()=>{class t extends vi{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,s){return(0,u.tidy)(()=>{if(2!==e.length||e[0]!==e[1])throw new Be("Identity matrix initializer can only be used for 2D square matrices.");return(0,u.mul)(this.gain,(0,u.eye)(e[0]))})}getConfig(){return{gain:this.gain}}}return t.className="Identity",t})());let jo=(()=>{class t extends vi{constructor(e){if(super(),e.scale<0)throw new Be(`scale must be a positive float. Got: ${e.scale}`);this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,function Une(t){fc(Lne,"FanMode",t)}(this.mode),this.distribution=null==e.distribution?"normal":e.distribution,function Vne(t){fc(Bne,"Distribution",t)}(this.distribution),this.seed=e.seed}apply(e,s){const r=function Xne(t,n="channelsLast"){let e,s;if(Zs(n),2===t.length)e=t[0],s=t[1];else if(-1!==[3,4,5].indexOf(t.length)){if("channelsFirst"===n){const r=_u(t,2);e=t[1]*r,s=t[0]*r}else if("channelsLast"===n){const r=_u(t,0,t.length-2);e=t[t.length-2]*r,s=t[t.length-1]*r}}else{const r=_u(t);e=Math.sqrt(r),s=Math.sqrt(r)}return[e,s]}(e),o=r[0],i=r[1];let a=this.scale;if(a/="fanIn"===this.mode?Math.max(1,o):"fanOut"===this.mode?Math.max(1,i):Math.max(1,(o+i)/2),"normal"===this.distribution){const l=Math.sqrt(a);if("float32"!==(s=s||"float32")&&"int32"!==s)throw new mn(`${this.getClassName()} does not support dType ${s}.`);return(0,u.truncatedNormal)(e,0,l,s,this.seed)}{const l=Math.sqrt(3*a);return(0,u.randomUniform)(e,-l,l,s)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}return t.className="VarianceScaling",t})();u.serialization.registerClass(jo);let YN=(()=>{class t extends jo{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return jo.className}}return t.className="GlorotUniform",t})();u.serialization.registerClass(YN);let QN=(()=>{class t extends jo{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return jo.className}}return t.className="GlorotNormal",t})();u.serialization.registerClass(QN);let JN=(()=>{class t extends jo{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return jo.className}}return t.className="HeNormal",t})();u.serialization.registerClass(JN);let qN=(()=>{class t extends jo{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return jo.className}}return t.className="HeUniform",t})();u.serialization.registerClass(qN);let eA=(()=>{class t extends jo{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return jo.className}}return t.className="LeCunNormal",t})();u.serialization.registerClass(eA);let tA=(()=>{class t extends jo{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return jo.className}}return t.className="LeCunNormal",t})();u.serialization.registerClass(tA);let Zne=(()=>{class t extends vi{constructor(e){if(super(),this.DEFAULT_GAIN=1,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,null!=this.seed)throw new mn("Random seed is not implemented for Orthogonal Initializer yet.")}apply(e,s){return(0,u.tidy)(()=>{if(e.length<2)throw new mn("Shape must be at least 2D.");e[0]*e[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${e[0]*e[1]}) elements: Slowness may result.`);const o=ug(e[0]>e[1]?[e[1],e[0]]:e,0,1,"float32");let i=u.linalg.gramSchmidt(o);return e[0]>e[1]&&(i=(0,u.transpose)(i)),(0,u.mul)(this.gain,i)})}getConfig(){return{gain:this.gain,seed:this.seed}}}return t.className="Orthogonal",t})();u.serialization.registerClass(Zne);const nA={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function sA(t,n={}){return bf(t,u.serialization.SerializationMap.getMap().classNameMap,n,"initializer")}function Ps(t){return Mx(t)}function Ss(t){if("string"==typeof t){const n=t in nA?nA[t]:t;if("GlorotNormal"===n)return new QN;if("GlorotUniform"===n)return new YN;if("HeNormal"===n)return new JN;if("HeUniform"===n)return new qN;if("LeCunNormal"===n)return new eA;if("LeCunUniform"===n)return new tA;{const e={};return e.className=n,e.config={},sA(e)}}return t instanceof vi?t:sA(t)}function Ux(t){return Array.isArray(t)&&Array.isArray(t[0])}function cg(t){return 0===t.length?[]:Array.isArray(t[0])?t:[t]}function vn(t){let n;if(Array.isArray(t)){if(1!==t.length)throw new Be(`Expected Tensor length to be 1; got ${t.length}`);n=t[0]}else n=t;return n}function qn(t){if(Array.isArray(t)&&Array.isArray(t[0])){if(1===t.length)return t[0];throw new Be(`Expected exactly 1 Shape; got ${t.length}`)}return t}function dg(t){let n=0;for(const e of t)n+=0===e.shape.length?1:e.shape.reduce((s,r)=>s*r);return n}const rA="Variable";class qa{constructor(n,e="float32",s=rA,r=!0,o=null){this.dtype=null==e?"float32":e,this.shape=n.shape,this.id=BN(),this.originalName=zN(s=null==s?rA:s),this.name=WN(this.originalName),this.trainable_=r,this.constraint=o,this.val=u.variable(n,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(n){return this.assertNotDisposed(),function Yne(t,n){if(t.shape.toString()!==n.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(t.shape)+" vs. "+JSON.stringify(n.shape))}(this.val,n),this.val.id!==n.id&&(this.val.assign(n),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(n){this.trainable_=n,this.val.trainable=n}}function Vx(t){return t.map(n=>n.read())}function zx(t){t.forEach(n=>{n[0].write(n[1])})}class hr{constructor(n){this.dtype=n.dtype,this.shape=n.shape,this.ndim=null!=n.shape?n.shape.length:n.ndim,this.maxNDim=n.maxNDim,this.minNDim=n.minNDim,this.axes=n.axes||{}}}class el{constructor(n,e,s,r,o,i,a){this.dtype=n,this.shape=e,this.sourceLayer=s,this.inputs=r,this.callArgs=o,this.outputTensorIndex=a,this.id=BN(),null!=i&&(this.originalName=zN(i),this.name=WN(this.originalName)),this.rank=e.length}}let Qne=0;class hg{constructor(n,e){this.callArgs=e,this.id=Qne++,this.outboundLayer=n.outboundLayer,this.inboundLayers=n.inboundLayers,this.nodeIndices=n.nodeIndices,this.tensorIndices=n.tensorIndices,this.inputTensors=n.inputTensors,this.outputTensors=n.outputTensors,this.inputMasks=n.inputMasks,this.outputMasks=n.outputMasks,this.inputShapes=n.inputShapes,this.outputShapes=n.outputShapes;for(const s of n.inboundLayers)null!=s&&s.outboundNodes.push(this);n.outboundLayer.inboundNodes.push(this)}getConfig(){const n=[];for(const e of this.inboundLayers)n.push(null!=e?e.name:null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:n,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let Jne=0;class Fn extends u.serialization.Serializable{constructor(n={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=Jne++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let e=n.name;if(!e){const s=this.getClassName();e=Fl(s)+"_"+ig(s)}if(this.name=e,this.trainable_=null==n.trainable||n.trainable,null!=n.inputShape||null!=n.batchInputShape){let s;if(null!=n.batchInputShape)s=n.batchInputShape;else if(null!=n.inputShape){let o=null;null!=n.batchSize&&(o=n.batchSize),s=[o].concat(n.inputShape)}this.batchInputShape=s;let r=n.dtype;null==r&&(r=n.inputDType),null==r&&(r="float32"),this.dtype=r}this.initialWeights=null!=n.weights?n.weights:null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(n,e){return n.name+"_ib-"+e.toString()}getNodeAtIndex(n,e){if(0===this.inboundNodes.length)throw new gi(`The layer has never been called and thus has no defined ${e}.`);if(this.inboundNodes.length<=n)throw new Be(`Asked to get ${e} at node ${n}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[n]}getInputAt(n){return yo(this.getNodeAtIndex(n,"input").inputTensors)}getOutputAt(n){return yo(this.getNodeAtIndex(n,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new Qa(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new Qa(`Layer ${this.name} is not connected, no input to return.`);return yo(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new Qa(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new Qa(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return yo(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(n=>n())}get updates(){return this._updates}get built(){return this._built}set built(n){this._built=n}get trainable(){return this.trainable_}set trainable(n){this._trainableWeights.forEach(e=>e.trainable=n),this.trainable_=n}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(n=>n.trainable):[]}set trainableWeights(n){this._trainableWeights=n}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(n=>!n.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(n){this._nonTrainableWeights=n}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(n){if(n=hs(n),null==this.inputSpec||0===this.inputSpec.length)return;const e=hs(this.inputSpec);if(n.length!==e.length)throw new Be(`Layer ${this.name} expects ${e.length} inputs, but it received ${n.length} input tensors. Input received: ${n}`);for(let s=0;s<n.length;s++){const r=n[s],o=e[s];if(null==o)continue;const i=r.rank;if(null!=o.ndim&&i!==o.ndim)throw new Be(`Input ${s} is incompatible with layer ${this.name}: expected ndim=${o.ndim}, found ndim=${i}`);if(null!=o.maxNDim&&i>o.maxNDim)throw new Be(`Input ${s} is incompatible with layer ${this.name}: expected max_ndim=${o.maxNDim}, found ndim=${i}`);if(null!=o.minNDim&&i<o.minNDim)throw new Be(`Input ${s} is incompatible with layer ${this.name}: expected min_ndim=${o.minNDim}, found ndim=${i}.`);if(null!=o.dtype&&r.dtype!==o.dtype)throw new Be(`Input ${s} is incompatible with layer ${this.name} : expected dtype=${o.dtype}, found dtype=${r.dtype}.`);if(o.axes){const a=r.shape;for(const l in o.axes){const c=Number(l),d=o.axes[l],f=c>=0?a[c]:a[a.length+c];if(null!=d&&-1===[d,null].indexOf(f))throw new Be(`Input ${s} is incompatible with layer ${this.name}: expected axis ${c} of input shape to have value ${d} but got shape ${a}.`)}}if(null!=o.shape)for(let a=0;a<o.shape.length;++a){const l=o.shape[a],c=r.shape[a];if(null!=l&&null!=c&&l!==c)throw new Be(`Input ${s} is incompatible with layer ${this.name}: expected shape=${o.shape}, found shape=${r.shape}.`)}}}call(n,e){return n}invokeCallHook(n,e){null!=this._callHook&&this._callHook(n,e)}setCallHook(n){this._callHook=n}clearCallHook(){this._callHook=null}apply(n,e){e=e||{},this.assertNotDisposed();const s=hs(n);let r=!0;for(const i of s)if(!(i instanceof el)){r=!1;break}let o=!0;for(const i of s)if(i instanceof el){o=!1;break}if(r===o)throw new Be("Arguments to apply() must be all SymbolicTensors or all Tensors");return pc(this.name,()=>{if(!this.built){this.assertInputCompatibility(n);const i=[];for(const a of hs(n))i.push(a.shape);this.build(yo(i)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&o&&(this._refCount=1)}if(this.assertInputCompatibility(n),o){let i=this.call(n,e);const a=hs(i),l=[];for(let c of a)-1!==s.indexOf(c)&&(c=c.clone()),l.push(c);if(i=yo(l),null!=this.activityRegularizer)throw new mn("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return i}{const i=function qne(t){t=hs(t);const n=[];for(const e of t)n.push(e.shape);return yo(n)}(n),a=this.computeOutputShape(i);let l;const c="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(n)?i[0]:i),l=null!=a&&a.length>0&&Array.isArray(a[0])?a.map((d,f)=>new el(c,d,this,hs(n),e,this.name,f)):new el(c,a,this,hs(n),e,this.name),this.addInboundNode(n,l,null,null,i,a,e),this._refCount++,null!=this.activityRegularizer)throw new mn("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return l}})}warnOnIncompatibleInputShape(n){if(null!=this.batchInputShape)if(n.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(n)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let e=!1;this.batchInputShape.forEach((s,r)=>{null!=s&&null!=n[r]&&n[r]!==s&&(e=!0)}),e&&console.warn(`The shape of the input tensor (${JSON.stringify(n)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new Qa(`The layer ${this.name} has never been called and thus has no defined output shape.`);const n=[];for(const e of this.inboundNodes){const s=JSON.stringify(e.outputShapes);-1===n.indexOf(s)&&n.push(s)}if(1===n.length){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new Qa(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new gi(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return dg(this.weights)}build(n){this.built=!0}getWeights(n=!1){return Vx(n?this.trainableWeights:this.weights)}setWeights(n){(0,u.tidy)(()=>{const e=this.weights;if(e.length!==n.length)throw new Be(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${n.length}, but the layer was expecting ${e.length} weights. Provided weights: ${n}...`);if(0===e.length)return;const s=[],r=Vx(e);for(let o=0;o<r.length;++o){const i=r[o],a=e[o],l=n[o];if(!u.util.arraysEqual(i.shape,l.shape))throw new Be(`Layer weight shape ${i.shape} not compatible with provided weight shape ${l.shape}`);s.push([a,l])}zx(s)})}addWeight(n,e,s,r,o,i,a,l){if(-1!==this._addedWeightNames.indexOf(n))throw new Be(`Duplicate weight name ${n} for layer ${this.name}`);this._addedWeightNames.push(n),null==s&&(s="float32"),this.fastWeightInitDuringBuild&&(r=null!=l?l():Ss("zeros"));const c=r.apply(e,s),d=new qa(c,s,n,i,a);return c.dispose(),null!=o&&this.addLoss(()=>o.apply(d.read())),null==i&&(i=!0),i?this._trainableWeights.push(d):this._nonTrainableWeights.push(d),d}setFastWeightInitDuringBuild(n){this.fastWeightInitDuringBuild=n}addLoss(n){null==n||Array.isArray(n)&&0===n.length||(n=hs(n),null!=this._losses&&this.losses.push(...n))}computeOutputShape(n){return n}computeMask(n,e){if(!this.supportsMasking){if(null!=e){if(!Array.isArray(e))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);e.forEach(s=>{if(null!=s)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)})}return null}return e}addInboundNode(n,e,s,r,o,i,a=null){const l=hs(n);e=hs(e),s=hs(s),r=hs(r),o=cg(o),i=cg(i);const c=[],d=[],f=[];for(const p of l)c.push(p.sourceLayer),d.push(p.nodeIndex),f.push(p.tensorIndex);new hg({outboundLayer:this,inboundLayers:c,nodeIndices:d,tensorIndices:f,inputTensors:l,outputTensors:e,inputMasks:s,outputMasks:r,inputShapes:o,outputShapes:i},a);for(let p=0;p<e.length;p++)e[p].sourceLayer=this,e[p].nodeIndex=this.inboundNodes.length-1,e[p].tensorIndex=p}getConfig(){const n={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(n.batchInputShape=this.batchInputShape),null!=this.dtype&&(n.dtype=this.dtype),n}disposeWeights(){return this.weights.forEach(n=>n.dispose()),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let n=0;return 0==--this._refCount&&(n=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:n}}}function oA(t,n,e){if((null==n||null!=e&&e>0)&&(n=t.sourceLayer,e=t.nodeIndex),0===n.inboundNodes.length)return[t];{const s=n.inboundNodes[e];if(0===s.inboundLayers.length)return s.inputTensors;{const r=[];for(let o=0;o<s.inboundLayers.length;o++){const c=oA(s.inputTensors[o],s.inboundLayers[o],s.nodeIndices[o]);for(const d of c)-1===r.indexOf(d)&&r.push(d)}return r}}}let fg=(()=>{class t extends Fn{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:ig("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new Be("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let s=e.batchInputShape;if(null==s){if(null==e.inputShape)throw new Be("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");s=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new Be("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const r=e.dtype||"float32";this.batchInputShape=s,this.dtype=r,this.inputSpec=[{shape:s}];const o=new el(this.dtype,this.batchInputShape,this,[],{},this.name);o.nodeIndex=0,o.tensorIndex=0,new hg({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[o],outputTensors:[o],inputMasks:[null],outputMasks:[null],inputShapes:[s],outputShapes:[s]})}apply(e,s){throw new Be(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}return t.className="InputLayer",t})();u.serialization.registerClass(fg);class Cu{constructor(n){if(this.id2Value={},this.id2Mask={},this.name2Id={},n instanceof Cu)for(const e in n.id2Value)this.id2Value[e]=n.id2Value[e],e in n.id2Mask&&(this.id2Mask[e]=n.id2Mask[e]);else{if(null==n)return;for(const e of n)this.add(e.key,e.value)}}add(n,e,s){if(null!=this.id2Value[n.id])throw new Be(`Duplicate key: name=${n.name}, id=${n.id}`);return this.id2Value[n.id]=function nse(t,n){if(null==t.dtype||t.dtype===n.dtype)return n;try{return(0,u.cast)(n,t.dtype)}catch(e){throw new Be(`The dtype of the feed (${n.dtype}) can not be cast to the dtype of the key '${t.name}' (${t.dtype}).`)}}(n,e),this.name2Id[n.name]=n.id,null!=s&&(this.id2Mask[n.id]=s),this}addFeed(n){this.add(n.key,n.value)}hasKey(n){return null!=this.id2Value[n.id]}names(){return Object.keys(this.name2Id)}getValue(n){if(n instanceof el){if(null==this.id2Value[n.id])throw new Be(`Nonexistent key: ${n.name}`);return this.id2Value[n.id]}{const e=this.name2Id[n];if(null==e)throw new Be(`Feed dict has no SymbolicTensor name: ${n}`);return this.id2Value[e]}}getMask(n){if(n instanceof el){if(null==this.id2Value[n.id])throw new Be(`Nonexistent key: ${n.name}`);return this.id2Mask[n.id]}{const e=this.name2Id[n];if(null==e)throw new Be(`Feed dict has no SymbolicTensor name: ${n}`);return this.id2Mask[e]}}disposeMasks(){null!=this.id2Mask&&(0,u.dispose)(this.id2Mask)}}const pg=new PN,mg=new PN;function Sf(t,n,e,s){const r=null!=e&&e.training,o=Array.isArray(t),i=o?t:[t],a=i.map(y=>y.name),l=[],c=n.names();for(const y of a)-1!==c.indexOf(y)?l.push(n.getValue(y)):l.push(null);null!=s&&(s.maxNumTensors=-1/0,s.minNumTensors=1/0);const d=a.join(",")+"|"+n.names().sort().join(",");let p,f=pg.get(d);if(null==f){const y=function rse(t,n){u.util.assert(null!=t&&t.length>0,()=>"Expected at least one fetch, got none");let e=[],s={};if(1===t.length){const r=iA(t[0],n);e=r.sorted,s=r.recipientMap}else{const r=new Set;for(const o of t){const{sorted:i,recipientMap:a}=iA(o,n);for(const l of i)r.has(l.name)||(e.push(l),r.add(l.name));for(const l in a)null==s[l]&&(s[l]=new Set),a[l].forEach(c=>s[l].add(c))}}return{sorted:e,recipientCounts:ose(s)}}(i,n);f=y.sorted,p=y.recipientCounts,pg.put(d,f),mg.put(d,p)}p={},r||Object.assign(p,mg.get(d));const m=new Cu(n);for(let y=0;y<f.length;++y){if(null!=s){const Fe=(0,u.memory)().numTensors;Fe>s.maxNumTensors&&(s.maxNumTensors=Fe),Fe<s.minNumTensors&&(s.minNumTensors=Fe)}const _=f[y],x=_.sourceLayer;if(x instanceof fg)continue;const D=[],C=[],F=[];let B=!1;for(const Fe of _.inputs){const Le=m.getValue(Fe),Xe=m.getMask(Fe);D.push(Le),C.push(Xe),null!=Xe&&(B=!0),r||(p[Fe.name]--,0===p[Fe.name]&&!n.hasKey(Fe)&&-1===a.indexOf(Fe.name)&&!Le.isDisposed&&!0!==Fe.sourceLayer.stateful&&F.push(Le))}B&&((e=e||{}).mask=C[0]);const Z=hs(x.apply(D,e));let ce=null;x.supportsMasking&&(ce=x.computeMask(D,C));const ve=ise(_),_e=Array.isArray(ve)?ve:[ve];for(let Fe=0;Fe<_e.length;++Fe){m.hasKey(_e[Fe])||m.add(_e[Fe],Z[Fe],Array.isArray(ce)?ce[0]:ce);const Le=a.indexOf(_e[Fe].name);-1!==Le&&(l[Le]=Z[Fe])}r||(0,u.dispose)(F)}return m.disposeMasks(),o?l:l[0]}function ose(t){const n={};for(const e in t)n[e]=t[e].size;return n}function iA(t,n){const e=new Set,s=[],r={};for(const a of n.names())e.add(a);const o=[],i=[];for(o.push(t);o.length>0;){const a=o[o.length-1];if(e.has(a.name)){o.pop();continue}const l=i[i.length-1]===o.length-1;if(0===a.inputs.length||l)o.pop(),s.push(a),e.add(a.name),l&&i.pop();else{i.push(o.length-1);for(const c of a.inputs)null==r[c.name]&&(r[c.name]=new Set),r[c.name].add(a.name),!e.has(c.name)&&o.push(c)}}return{sorted:s,recipientMap:r}}function ise(t){let n;if(1===t.sourceLayer.inboundNodes.length)n=t.sourceLayer.output;else{let e=null;for(let s=0;s<t.sourceLayer.inboundNodes.length;++s)for(const r of t.sourceLayer.inboundNodes[s].outputTensors)if(r.id===t.id){e=s;break}n=t.sourceLayer.getOutputAt(e)}return n}function Wx(t,n){return(0,u.tidy)(()=>u.sqrt(u.sum(u.mul(t,t),n,!0)))}(0,u.env)().registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",()=>100,function sse(t){null!=pg&&pg.setMaxEntries(t),null!=mg&&mg.setMaxEntries(t)});class Nf extends u.serialization.Serializable{getConfig(){return{}}}let ase=(()=>{class t extends Nf{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return(0,u.tidy)(()=>{const s=Wx(e,this.axis),r=u.clipByValue(s,0,this.maxValue);return u.mul(e,u.div(r,u.add(dr(),s)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}return t.className="MaxNorm",t})();u.serialization.registerClass(ase);let lse=(()=>{class t extends Nf{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return(0,u.tidy)(()=>u.div(e,u.add(dr(),Wx(e,this.axis))))}getConfig(){return{axis:this.axis}}}return t.className="UnitNorm",t})();u.serialization.registerClass(lse);let use=(()=>{class t extends Nf{apply(e){return u.relu(e)}}return t.className="NonNeg",t})();u.serialization.registerClass(use);let cse=(()=>{class t extends Nf{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return(0,u.tidy)(()=>{const s=Wx(e,this.axis),r=u.add(u.mul(this.rate,u.clipByValue(s,this.minValue,this.maxValue)),u.mul(1-this.rate,s));return u.mul(e,u.div(r,u.add(dr(),s)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}return t.className="MinMaxNorm",t})();u.serialization.registerClass(cse);const aA={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function fr(t){return Mx(t)}function lA(t,n={}){return bf(t,u.serialization.SerializationMap.getMap().classNameMap,n,"constraint")}function pr(t){return null==t?null:"string"==typeof t?lA({className:t in aA?aA[t]:t,config:{}}):t instanceof Nf?t:lA(t)}function Du(t){return Gx.apply(this,arguments)}function Gx(){return(Gx=(0,on.Z)(function*(t){if(null==t)return;const n=[],e=[],s=[];for(const r in t){const o=t[r];if("number"!=typeof o){const i=o;n.push(i.data()),e.push(r),s.push(i)}}if(n.length>0){const r=yield Promise.all(n);for(let o=0;o<r.length;++o)t[e[o]]=r[o][0];(0,u.dispose)(s)}})).apply(this,arguments)}function uA(t){if(null!=t)for(const n in t){const e=t[n];"number"!=typeof e&&e.dispose()}}class Vd{constructor(){this.validationData=null}setParams(n){this.params=n}onEpochBegin(n,e){return(0,on.Z)(function*(){})()}onEpochEnd(n,e){return(0,on.Z)(function*(){})()}onBatchBegin(n,e){return(0,on.Z)(function*(){})()}onBatchEnd(n,e){return(0,on.Z)(function*(){})()}onTrainBegin(n){return(0,on.Z)(function*(){})()}onTrainEnd(n){return(0,on.Z)(function*(){})()}setModel(n){}}class hse{constructor(n,e=10){null==n&&(n=[]),this.callbacks=n,this.queueLength=e}append(n){this.callbacks.push(n)}setParams(n){for(const e of this.callbacks)e.setParams(n)}setModel(n){for(const e of this.callbacks)e.setModel(n)}onEpochBegin(n,e){var s=this;return(0,on.Z)(function*(){null==e&&(e={});for(const r of s.callbacks)yield r.onEpochBegin(n,e)})()}onEpochEnd(n,e){var s=this;return(0,on.Z)(function*(){null==e&&(e={});for(const r of s.callbacks)yield r.onEpochEnd(n,e)})()}onBatchBegin(n,e){var s=this;return(0,on.Z)(function*(){null==e&&(e={});for(const r of s.callbacks)yield r.onBatchBegin(n,e)})()}onBatchEnd(n,e){var s=this;return(0,on.Z)(function*(){null==e&&(e={});for(const r of s.callbacks)yield r.onBatchEnd(n,e)})()}onTrainBegin(n){var e=this;return(0,on.Z)(function*(){null==n&&(n={});for(const s of e.callbacks)yield s.onTrainBegin(n)})()}onTrainEnd(n){var e=this;return(0,on.Z)(function*(){null==n&&(n={});for(const s of e.callbacks)yield s.onTrainEnd(n)})()}}class fse extends Vd{constructor(){super()}onEpochBegin(n){var e=this;return(0,on.Z)(function*(){e.seen=0,e.totals={}})()}onBatchEnd(n,e){var s=this;return(0,on.Z)(function*(){null==e&&(e={});const r=null==e.size?0:e.size;s.seen+=r;for(const o in e){const i=e[o];if("number"==typeof i)s.totals.hasOwnProperty(o)||(s.totals[o]=0),s.totals[o]=s.totals[o]+i*r;else{let a;o in s.totals?a=s.totals[o]:s.totals[o]=0;const l=(0,u.tidy)(()=>(0,u.add)(s.totals[o],(0,u.mul)(i,r)));s.totals[o]=l,null!=a&&a.dispose()}}})()}onEpochEnd(n,e){var s=this;return(0,on.Z)(function*(){if(null!=e)for(const r of s.params.metrics)null!=s.totals[r]&&("number"==typeof s.totals[r]?e[r]=s.totals[r]/s.seen:(0,u.tidy)(()=>{const o=(0,u.mul)((0,u.div)(1,s.seen),s.totals[r]);e[r]=o,s.totals[r].dispose(),(0,u.keep)(e[r])}))})()}}class pse extends Vd{onTrainBegin(n){var e=this;return(0,on.Z)(function*(){e.epoch=[],e.history={}})()}onEpochEnd(n,e){var s=this;return(0,on.Z)(function*(){null==e&&(e={}),s.epoch.push(n);for(const r in e)null==s.history[r]&&(s.history[r]=[]),s.history[r].push(e[r])})()}syncData(){var n=this;return(0,on.Z)(function*(){const e=[],s=[],r=[];for(const i in n.history){const a=n.history[i];for(let l=0;l<a.length;++l)"number"!=typeof a[l]&&(e.push(a[l].data()),s.push(i),r.push(l))}const o=yield Promise.all(e);for(let i=0;i<o.length;++i)n.history[s[i]][r[i]].dispose(),n.history[s[i]][r[i]]=o[i][0]})()}}class mse extends Vd{constructor(n,e){if(super(),this.currentEpoch=0,this.nowFunc=n.nowFunc,this.nextFrameFunc=n.nextFrameFunc||u.nextFrame,this.yieldEvery=e||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=n.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");u.util.isNumber(this.yieldEvery)&&(this.maybeWait=function xne(t,n,e){let r,s=null!=e?e():u.util.now();return(...i)=>{const a=null!=e?e():u.util.now();return a-s<n||(s=a,r=t(...i)),r}}(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=n.onTrainBegin,this.trainEnd=n.onTrainEnd,this.epochBegin=n.onEpochBegin,this.epochEnd=n.onEpochEnd,this.batchBegin=n.onBatchBegin,this.batchEnd=n.onBatchEnd,this.yield=n.onYield}maybeWait(n,e,s){var r=this;return(0,on.Z)(function*(){const o=[];null!=r.yield&&(yield Du(s),o.push(r.yield(n,e,s))),o.push(r.nextFrameFunc()),yield Promise.all(o)})()}onEpochBegin(n,e){var s=this;return(0,on.Z)(function*(){s.currentEpoch=n,null!=s.epochBegin&&(yield Du(e),yield s.epochBegin(n,e))})()}onEpochEnd(n,e){var s=this;return(0,on.Z)(function*(){const r=[];null!=s.epochEnd&&(yield Du(e),r.push(s.epochEnd(n,e))),"epoch"===s.yieldEvery&&r.push(s.nextFrameFunc()),yield Promise.all(r)})()}onBatchBegin(n,e){var s=this;return(0,on.Z)(function*(){null!=s.batchBegin&&(yield Du(e),yield s.batchBegin(n,e))})()}onBatchEnd(n,e){var s=this;return(0,on.Z)(function*(){const r=[];null!=s.batchEnd&&(yield Du(e),r.push(s.batchEnd(n,e))),"batch"===s.yieldEvery?r.push(s.nextFrameFunc()):u.util.isNumber(s.yieldEvery)&&r.push(s.maybeWait(s.currentEpoch,n,e)),yield Promise.all(r)})()}onTrainBegin(n){var e=this;return(0,on.Z)(function*(){null!=e.trainBegin&&(yield Du(n),yield e.trainBegin(n))})()}onTrainEnd(n){var e=this;return(0,on.Z)(function*(){null!=e.trainEnd&&(yield Du(n),yield e.trainEnd(n))})()}}function cA(t,n){return null==t&&(t={}),t instanceof Vd?[t]:Array.isArray(t)&&t[0]instanceof Vd?t:hs(t).map(s=>new mse(s,n))}let gse=(()=>{class t{constructor(){}static registerCallbackConstructor(e,s){u.util.assert(e>=0&&Number.isInteger(e),()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`),t.checkForDuplicate(s),null==t.constructors[e]&&(t.constructors[e]=[]),t.constructors[e].push(s)}static checkForDuplicate(e){for(const s in t.constructors)t.constructors[+s].forEach(o=>{if(o===e)throw new Be("Duplicate callback constructor.")})}static clear(){t.constructors={}}static createCallbacks(e){const s=[];for(const r in t.constructors){const o=+r;e>=o&&s.push(...t.constructors[o])}return s.map(r=>new r)}}return t.constructors={},t})();function dA(t,n,e,s,r,o,i,a,l){const c=new pse,d=[new fse,...gse.createCallbacks(n)];null!=t&&d.push(...t),d.push(c);const f=new hse(d);return f.setParams({epochs:e,initialEpoch:s,samples:r,steps:o,batchSize:i,verbose:n,doValidation:a,metrics:l}),{callbackList:f,history:c}}function Ll(t,n={},e=!1){return bf(t,u.serialization.SerializationMap.getMap().classNameMap,n,"layer",e)}function gg(t,n){return(0,u.tidy)(()=>{"float32"!==t.dtype&&(t=u.cast(t,"float32"));const e=u.sum(Tf(t),n,!0),s=u.fill(e.shape,dr()),r=u.sqrt(u.maximum(e,s));return u.div(t,r)})}function yg(t,n){return(0,u.tidy)(()=>u.mean(Tf(u.sub(n,t)),-1))}function Hx(t,n){return(0,u.tidy)(()=>u.mean(u.abs(u.sub(n,t)),-1))}function Kx(t,n){return(0,u.tidy)(()=>{const e=u.sub(t,n),s=u.clipByValue(u.abs(t),dr(),Number.MAX_VALUE),r=u.abs(u.div(e,s));return u.mul(100,u.mean(r,-1))})}function Af(t,n,e=!1){return(0,u.tidy)(()=>{if(e)n=u.softmax(n);else{const s=u.sum(n,n.shape.length-1,!0);n=u.div(n,s)}return n=u.clipByValue(n,dr(),1-dr()),u.neg(u.sum(u.mul(u.cast(t,"float32"),u.log(n)),n.shape.length-1))})}function vg(t,n,e=!1){return(0,u.tidy)(()=>{const s=u.cast(u.floor(function Mne(t){const n=[_u(t.shape)];return u.reshape(t,n)}(t)),"int32"),r=(n=u.clipByValue(n,dr(),1-dr())).shape;return Af(u.reshape(u.oneHot(s,r[r.length-1]),r),n,e)})}function xg(t,n){return(0,u.tidy)(()=>{let e;return e=u.clipByValue(n,dr(),1-dr()),e=u.log(u.div(e,u.sub(1,e))),u.mean(function bse(t,n){if(!u.util.arraysEqual(t.shape,n.shape))throw new Be(`logits and labels must have the same shape, but got shapes ${JSON.stringify(t.shape)} and ${JSON.stringify(n.shape)}`);return(0,u.tidy)(()=>{const e=u.relu(n),s=u.neg(u.abs(n));return u.add(u.sub(e,u.mul(n,t)),u.log1p(u.exp(s)))})}(t,e),-1)})}function hA(t,n){return(0,u.tidy)(()=>{const e=gg(t,-1),s=gg(n,-1),r=u.mul(e,s);return u.neg(u.sum(r,-1))})}const Eg={meanSquaredError:yg,meanAbsoluteError:Hx,meanAbsolutePercentageError:Kx,meanSquaredLogarithmicError:function yse(t,n){return(0,u.tidy)(()=>{const e=u.clipByValue(n,dr(),Number.MAX_VALUE),s=u.log(u.add(1,e)),r=u.clipByValue(t,dr(),Number.MAX_VALUE),o=u.log(u.add(1,r));return u.mean(Tf(u.sub(s,o)),-1)})},squaredHinge:function vse(t,n){return(0,u.tidy)(()=>{const e=u.maximum(0,u.sub(1,u.mul(t,n)));return u.mean(Tf(e),-1)})},hinge:function xse(t,n){return(0,u.tidy)(()=>{const e=u.maximum(0,u.sub(1,u.mul(t,n)));return u.mean(e,-1)})},categoricalHinge:function Ese(t,n){return(0,u.tidy)(()=>{const e=u.sum(u.mul(t,n),-1),s=u.max(u.mul(u.sub(1,t),n),-1);return u.maximum(0,u.add(1,u.sub(s,e)))})},logcosh:function _se(t,n){return(0,u.tidy)(()=>{const e=Math.log(2),s=u.sub(n,t),r=u.sub(u.add(s,u.softplus(u.mul(-2,s))),e);return u.mean(r,-1)})},categoricalCrossentropy:Af,sparseCategoricalCrossentropy:vg,binaryCrossentropy:xg,kullbackLeiblerDivergence:function Cse(t,n){return(0,u.tidy)(()=>{const e=u.clipByValue(t,dr(),1),s=u.clipByValue(n,dr(),1);return u.sum(u.mul(t,u.log(u.div(e,s))),-1)})},poisson:function Dse(t,n){return(0,u.tidy)(()=>{const e=u.log(u.add(dr(),n));return u.mean(u.sub(n,u.mul(t,e)),-1)})},cosineProximity:hA};function jx(t){if("string"==typeof t){if(t in Eg)return Eg[t];let n=`Unknown loss ${t}`;throw t.toLowerCase().includes("softmaxcrossentropy")&&(n=`Unknown loss ${t}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new Be(n)}return t}function fA(t,n){return(0,u.tidy)(()=>{const e=u.mul(.5,u.onesLike(n)),s=Df(u.greater(n,e),t.dtype);return u.mean(u.equal(t,s),-1)})}function pA(t,n){return(0,u.tidy)(()=>Df(u.equal(u.argMax(t,-1),u.argMax(n,-1)),"float32"))}function Sse(t,n){return xg(t,n)}function Nse(t,n){return t.rank===n.rank&&(t=u.squeeze(t,[t.rank-1])),(n=u.argMax(n,-1)).dtype!==t.dtype&&(n=u.cast(n,t.dtype)),u.cast(u.equal(t,n),"float32")}const gA=Af,yA=vg,_g={binaryAccuracy:fA,categoricalAccuracy:pA,precision:function wse(t,n){return(0,u.tidy)(()=>{const e=function mA(t,n){return(0,u.tidy)(()=>u.cast(u.sum(u.logicalAnd(u.equal(t,1),u.equal(n,1))),"float32"))}(t,n),s=function Tse(t,n){return(0,u.tidy)(()=>u.cast(u.sum(u.logicalAnd(u.equal(t,0),u.equal(n,1))),"float32"))}(t,n),r=u.add(e,s);return u.cast(u.where(u.greater(r,0),u.div(e,r),0),"float32")})},categoricalCrossentropy:gA,sparseCategoricalCrossentropy:yA,mse:yg,MSE:yg,mae:Hx,MAE:Hx,mape:Kx,MAPE:Kx,cosine:hA};function Fse(t){if("string"==typeof t&&t in _g)return _g[t];if("string"!=typeof t&&null!=t)return t;throw new Be(`Unknown metric ${t}`)}function bg(t){if(Ho(null!==t,`Unknown LossOrMetricFn ${t}`),"string"==typeof t)return t;{let n;for(const e of Object.keys(Eg))if(Eg[e]===t){n=e;break}if(void 0!==n)return n;for(const e of Object.keys(_g))if(_g[e]===t){n=e;break}return void 0!==n?n:t.name}}function xA(t,n,e=!1){if(null==t||"object"!=typeof t||Object.getPrototypeOf(t)!==Object.prototype||!Xx(t))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(e){const s=JSON.stringify(t);s.length>1048576&&console.warn(`User-defined metadata of model "${n}" is too large in size (length=${s.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function Xx(t){if(null===t)return!0;if("object"==typeof t){if(Object.getPrototypeOf(t)===Object.prototype){const n=Object.keys(t);for(const e of n)if("string"!=typeof e||!Xx(t[e]))return!1;return!0}if(Array.isArray(t)){for(const n of t)if(!Xx(n))return!1;return!0}return!1}{const n=typeof t;return"string"===n||"number"===n||"boolean"===n}}function Cg(t,n,e=console.log){let s="";for(let r=0;r<t.length;++r)r>0&&(s=s.slice(0,s.length-1)+" "),s+=t[r],s=s.slice(0,n[r]),s+=" ".repeat(n[r]-s.length);e(s)}function zse(t,n,e){let s,r;try{r=t.inboundNodes.map(l=>JSON.stringify(l.inputShapes)).join(",")}catch(l){r="multiple"}try{s=JSON.stringify(t.outputShape)}catch(l){s="multiple"}Cg([`${t.name} (${t.getClassName()})`,r,s,t.countParams().toString()],n,e)}function Wse(t,n,e,s){let r,o;try{o=t.inboundNodes.map(f=>JSON.stringify(f.inputShapes)).join(",")}catch(f){o="multiple"}try{r=JSON.stringify(t.outputShape)}catch(f){r="multiple"}const i=[];for(const f of t.inboundNodes)if(!(null!=e&&e.length>0&&-1===e.indexOf(f)))for(let p=0;p<f.inboundLayers.length;++p)i.push(`${f.inboundLayers[p].name}[${f.nodeIndices[p]}][${f.tensorIndices[p]}]`);const a=t.name,l=t.getClassName(),c=0===i.length?"":i[0];Cg([`${a} (${l})`,o,r,t.countParams().toString(),c],n,s);for(let f=1;f<i.length;++f)Cg(["","","","",i[f]],n,s)}function EA(t,n,e){return("inboundNodes"===t||"outputLayers"===t||"inputLayers"===t)&&0===n&&"string"==typeof e}function Zx(t,n){if(null===t)return null;if("string"==typeof t)return hc(t);if("number"==typeof t||"boolean"==typeof t)return t;if(t instanceof Array){const e=[],s=t.length;for(let r=0;r<s;++r){const o=t[r];EA(n,r,o)?e.push(o):e.push(Zx(o,n))}return e}{const e={};for(const s of Object.keys(t)){const r=t[s];if("name"===s&&"string"==typeof r)e[s]=r;else{const o=hc(s);e[o]=Zx(r,o)}}return e}}function Yx(t,n){if(null==t)return null;if("string"==typeof t)return Fl(t);if("number"==typeof t||"boolean"==typeof t)return t;if(t instanceof Array){const e=[],s=t.length;for(let r=0;r<s;++r){const o=t[r];EA(n,r,o)?e.push(o):e.push(Yx(o,n))}return e}{const e={};for(const s of Object.keys(t)){const r=t[s];e[Fl(s)]="name"!==s&&"className"!==s||"string"!=typeof r?Yx(r,s):r}return e}}class ia extends Fn{constructor(n){if(super({}),this.containerNodes=new Set,this.name=n.name,null==this.name){const C=this.getClassName().toLowerCase();this.name=ig(C)}if(this.supportsMasking=!1,this.trainable_=!0,this.inputs=Array.isArray(n.inputs)?n.inputs.slice():[n.inputs],this.outputs=Array.isArray(n.outputs)?n.outputs.slice():[n.outputs],Eu(this.inputs).length!==this.inputs.length)throw new Be(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(C=>C.name)}`);Eu(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(C=>C.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const C of this.outputs){const B=C.nodeIndex,Z=C.tensorIndex;this.outputLayers.push(C.sourceLayer),this.outputLayersNodeIndices.push(B),this.outputLayersTensorIndices.push(Z)}for(const C of this.inputs){const F=C.sourceLayer,B=C.nodeIndex,Z=C.tensorIndex;Ho(0===B,"input layer has >1 nodes"),Ho(0===Z,"input layer has >1 tensors"),this.inputLayers.push(F),this.inputLayersNodeIndices.push(B),this.inputLayersTensorIndices.push(Z)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let C=0;C<this.inputLayers.length;C++){const F=this.inputLayers[C];if(!(F instanceof fg))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${n.inputs}. Input ${C} (0-based) originates from layer type ${F.getClassName()}.`);this.inputNames.push(F.name),this.feedInputShapes.push(F.batchInputShape),this.feedInputNames.push(F.name)}for(const C of this.outputLayers)this.outputNames.push(C.name);this.internalInputShapes=this.inputs.map(C=>C.shape),this.internalOutputShapes=this.outputs.map(C=>C.shape);const e={},s={},r={},o={},i={},a=[],l=(C,F,B,Z,ce,ve)=>{(null==Z||null==ce||null==ve)&&(Z=C.sourceLayer,ce=C.nodeIndex,ve=C.tensorIndex);const _e=Z.inboundNodes[ce];if(-1!==B.indexOf(_e))throw new gi(`The tensor ${C.name} at layer "${Z.name}" is part of a cycle.`);if(-1!==F.indexOf(_e))return;this.containerNodes.add(ia.nodeKey(Z,ce)),Z.id in i||(i[Z.id]=Object.keys(i).length),-1===B.indexOf(_e)&&B.push(_e);const Fe=_e.inboundLayers.length;for(let Le=0;Le<Fe;Le++)l(_e.inputTensors[Le],F,B,_e.inboundLayers[Le],_e.nodeIndices[Le],_e.tensorIndices[Le]);for(F.push(_e);B.indexOf(_e)>=0;)B.splice(B.indexOf(_e),1);a.push(_e)},c=[],d=[];for(const C of this.outputs)l(C,c,d);const f=a.slice().reverse();for(const C of f){s[C.id]=C,C.id in e||(e[C.id]=0);let F=e[C.id];F=Math.max(F,null==r[C.outboundLayer.id]?0:r[C.outboundLayer.id]),r[C.outboundLayer.id]=F,o[C.outboundLayer.id]=C.outboundLayer,e[C.id]=F;for(let Z=0;Z<C.inboundLayers.length;Z++){const _e=C.inboundLayers[Z].inboundNodes[C.nodeIndices[Z]];e[_e.id]=Math.max(F+1,null==e[_e.id]?0:e[_e.id]),s[_e.id]=_e}}const p={};for(const C in e){const F=e[C];F in p||(p[F]=[]),p[F].push(s[C])}const m={};for(const C in r){const F=r[C];F in m||(m[F]=[]),m[F].push(o[C])}let y=Object.keys(m).map(C=>parseInt(C,10)).sort(rg);this.layers=[];for(const C of y){const F=m[C];F.sort((B,Z)=>{const ce=i[B.id],ve=i[Z.id];return ce<ve?-1:ce>ve?1:0});for(const B of F)B instanceof ia&&this.internalContainerRefs.push(B),this.layers.push(B)}this.layersByDepth=m,y=Object.keys(p).map(C=>parseInt(C,10)).sort(rg);const _=this.inputs.slice(),x=[];for(const C of y)for(const F of p[C]){const B=F.outboundLayer;if(null!=B){for(const Z of F.inputTensors)if(-1===_.indexOf(Z))throw new gi(`Graph disconnected: cannot obtain value for tensor ${Z} at layer "${B.name}". The following previous layers were accessed without issue: ${x}`);for(const Z of F.outputTensors)_.push(Z);x.push(B.name)}}this.nodesByDepth=p;const D=this.layers.map(C=>C.name);for(const C of D){const F=D.filter(B=>B===C).length;if(1!==F)throw new gi(`The name "${C}" is used ${F} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(D))}this.outboundNodes=[],this.inboundNodes=[],new hg({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(C=>null),outputMasks:this.outputs.map(C=>null),inputShapes:this.inputs.map(C=>C.shape),outputShapes:this.outputs.map(C=>C.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const n={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount){for(const e of this.layers)n.numDisposedVariables+=e.dispose().numDisposedVariables;for(const e of this.internalContainerRefs)n.numDisposedVariables+=e.dispose().numDisposedVariables}return n.refCountAfterDispose=this._refCount,n}get trainable(){return this.trainable_}set trainable(n){this.layers.forEach(e=>{e._trainableWeights.forEach(s=>s.trainable=n)}),this.trainable_=n}get trainableWeights(){if(this._trainableWeights.length>0)throw new Be("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let n=[];for(const e of this.layers)n=n.concat(e.trainableWeights);return n}get nonTrainableWeights(){const n=[];for(const e of this.layers)n.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const s of this.layers)e.push(...s.trainableWeights);return e.concat(n)}return n}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(n,e=!0){const s={};let r=0;for(const i of this.layers)for(const a of i.weights){if(null!=s[a.originalName])throw new Be(`Duplicate weight name: ${a.originalName}`);s[a.originalName]=a,r++}const o=[];for(const i in n){let a=i;if(null==s[i]){const l=i.split("/");a=l.slice(0,-2).concat([l[l.length-1]]).join("/")}if(null!=s[a])o.push([s[a],n[i]]);else if(e)throw new Be(`Provided weight data has no target variable: ${i}`);delete s[a]}if(e){const i=[];for(const a in s)i.push(a);if(i.length>0)throw new Be(`${i.length} of ${r} weights are not set: ${i}`)}zx(o)}updatedConfig(){const n=this.getConfig(),e={};return e.className=this.getClassName(),e.config=n,e.kerasVersion="tfjs-layers 3.21.0",e.backend="TensorFlow.js",e}toJSON(n,e=!0){const s=Yx(this.updatedConfig());return e?JSON.stringify(s):s}call(n,e){return(0,u.tidy)(()=>{n=hs(n);const s=new Cu;for(let r=0;r<this.inputs.length;++r)s.add(this.inputs[r],n[r]);return Sf(this.outputs,s,e)})}computeMask(n,e){return(0,u.tidy)(()=>{let s;return n=hs(n),s=null==e?dc(null,n.length):hs(e),this.runInternalGraph(n,s)[1]})}computeOutputShape(n){const e=cg(n);if(e.length!==this.inputLayers.length)throw new Be(`Invalid inputShape argument ${n}: model has ${this.inputLayers.length} tensor inputs.`);const s={};for(let a=0;a<e.length;a++)s[this.inputLayers[a].name+"_0_0"]=e[a];const r=Object.keys(this.nodesByDepth).map(a=>parseInt(a,10)).sort(rg);if(r.length>1)for(const a of r){const l=this.nodesByDepth[a];for(const c of l){const d=c.outboundLayer;if(-1!==this.inputLayers.map(_=>_.id).indexOf(d.id))continue;const f=[];for(let _=0;_<c.inboundLayers.length;_++)f.push(s[`${c.inboundLayers[_].name}_${c.nodeIndices[_]}_${c.tensorIndices[_]}`]);const m=cg(d.computeOutputShape(yo(f))),y=d.inboundNodes.indexOf(c);for(let _=0;_<m.length;_++)s[`${d.name}_${y}_${_}`]=m[_]}}const o=[],i=[];for(let a=0;a<this.outputLayers.length;a++)i.push(`${this.outputLayers[a].name}_${this.outputLayersNodeIndices[a]}_${this.outputLayersTensorIndices[a]}`);for(let a=0;a<i.length;a++){const l=i[a];Ho(l in s),o.push(s[l])}return yo(o)}runInternalGraph(n,e){null==e&&(e=dc(null,n.length));const s={};for(let l=0;l<this.inputs.length;++l)s[this.inputs[l].id]=[n[l],e[l]];const r=Object.keys(this.nodesByDepth).map(l=>parseInt(l,10)).sort(rg);for(const l of r){const c=this.nodesByDepth[l];for(const d of c){const f=d.outboundLayer,p=d.inputTensors,m=d.outputTensors,y=new Array;for(const _ of p)_.id in s&&y.push(s[_.id]);if(y.length===p.length){let x,D,C,F,_={};if(null!=d.callArgs&&(_=d.callArgs),1===y.length){const[B,Z]=y[0];null==_.mask&&(_.mask=Z),C=hs(f.call(B,_)),F=hs(f.computeMask(B,Z)),x=[B],D=[Z]}else x=y.map(B=>B[0]),D=y.map(B=>B[1]),null==_.mask&&(_.mask=D),C=hs(f.call(x,_)),F=hs(f.computeMask(x,D));if(f.activityRegularizer)throw new mn("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let B=0;B<m.length;++B)s[m[B].id]=[C[B],F[B]]}}}const o=[],i=[],a=[];for(const l of this.outputs){Ho(l.id in s,`Could not compute output ${l.name} : ${l.id}`);const[c,d]=s[l.id];a.push(c.shape),o.push(c),i.push(d)}return[o,i,a]}buildNodeConversionMap(n){const e={};let s;for(const r of this.layers){s=r instanceof ia?1:0;for(let o=0;o<r.inboundNodes.length;o++){const i=ia.nodeKey(r,o);this.containerNodes.has(i)&&(e[i]=s,s+=1)}}return e}getLayer(n,e){if(null!=e){if(this.layers.length<=e)throw new Be(`Was asked to retrieve layer at index ${e}, but model only has ${this.layers.length} layer(s).`);return this.layers[e]}if(null==n)throw new Be("Provide either a layer name or layer index");for(const s of this.layers)if(s.name===n)return s;throw new Be(`No such layer: ${n}`)}calculateLosses(){return(0,u.tidy)(()=>{const n=[];for(const e of this.layers)for(let s=0;s<e.inboundNodes.length;++s){const r=ia.nodeKey(e,s);this.containerNodes.has(r)&&n.push(...e.calculateLosses())}return n})}getConfig(){const n={name:this.name},e=this.buildNodeConversionMap(this.layers),s=[];for(const i of this.layers){const a=i.getClassName(),l=i.getConfig(),c=[];for(let f=0;f<i.inboundNodes.length;f++){const p=i.inboundNodes[f],m=ia.nodeKey(i,f);let y={};if(this.containerNodes.has(m)){if(p.callArgs)try{JSON.stringify(p.callArgs),y=p.callArgs}catch(_){console.warn(`Layer ${i.name} was passed non-serializable keyword arguments: ${p.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),y={}}if(p.inboundLayers.length>0){const _=[];for(let x=0;x<p.inboundLayers.length;x++){const D=p.inboundLayers[x],F=p.tensorIndices[x];let Z=e[ia.nodeKey(D,p.nodeIndices[x])];null==Z&&(Z=0),_.push([D.name,Z,F,y])}c.push(_)}}}const d={};d.name=i.name,d.className=a,d.config=l,d.inboundNodes=c,s.push(d)}n.layers=s;const r=[];for(let i=0;i<this.inputLayers.length;i++){const a=this.inputLayers[i],c=ia.nodeKey(a,this.inputLayersNodeIndices[i]);if(!this.containerNodes.has(c))continue;let d=e[c];null==d&&(d=0),r.push([a.name,d,this.inputLayersTensorIndices[i]])}n.inputLayers=r;const o=[];for(let i=0;i<this.outputLayers.length;i++){const a=this.outputLayers[i],c=ia.nodeKey(a,this.outputLayersNodeIndices[i]);if(!this.containerNodes.has(c))continue;let d=e[c];null==d&&(d=0),o.push([a.name,d,this.outputLayersTensorIndices[i]])}return n.outputLayers=o,n}static fromConfig(n,e,s={},r=!1){const o={},i={};function a(x,D){x.name in i?i[x.name].push(D):i[x.name]=[D]}function l(x,D){const C=[];let F;for(const B of D){const Z=B[0],ce=B[1],ve=B[2];if(F=null==B[3]?{}:B[3],!(Z in o))return void a(x,D);const _e=o[Z];if(_e.inboundNodes.length<=ce)return void a(x,D);C.push(_e.inboundNodes[ce].outputTensors[ve])}C.length>0&&x.apply(yo(C),F)}function c(x){const D=x.name,C=Ll(x,null!=e.customObjects?e.customObjects:{});C.setFastWeightInitDuringBuild(r),o[D]=C,x.inboundNodes.forEach(B=>{if(!(B instanceof Array))throw new Be(`Corrupted configuration, expected array for nodeData: ${B}`);a(C,B)})}const d=e.name,f=e.layers;for(const x of f)c(x);for(;!vne(i);)for(const x of f){const D=o[x.name];if(D.name in i){const C=i[D.name];delete i[D.name];for(const F of C)l(D,F)}}const p=[],m=[],y=e.inputLayers;for(const x of y){const D=x[0],C=x[1],F=x[2];Ho(D in o),p.push(o[D].inboundNodes[C].outputTensors[F])}const _=e.outputLayers;for(const x of _){const D=x[0],C=x[1],F=x[2];Ho(D in o),m.push(o[D].inboundNodes[C].outputTensors[F])}return new n({inputs:p,outputs:m,name:d})}get stateful(){if(this._stateful)throw new Be("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const n of this.layers)if(n.stateful)return!0;return!1}resetStates(){(0,u.tidy)(()=>{this.layers.forEach(n=>{n.stateful&&n.resetStates()})})}}function bA(t,n){return function _A(t,n,e){const s=n.length;if(null==t||Array.isArray(t)&&0===t.length)return n.map(r=>null);if(1===s)return Array.isArray(t)&&1===t.length?t:"object"==typeof t&&n[0]in t?[t[n[0]]]:[t];if(Array.isArray(t)){if(t.length!==s)throw new Error(`Provided ${e} is an array of ${t.length} element(s), but the model has ${s} outputs. Make sure a set of weights is provided for each model output.`);return t}if("object"==typeof t&&Object.keys(t).length>0&&"object"==typeof t[Object.keys(t)[0]]){const r=[];return n.forEach(o=>{r.push(o in t?t[o]:null)}),r}throw new Error(`The model has multiple (${s}) outputs, so ${e} must be either an array with ${s} elements or an object with ${n} keys. Provided ${e} not understood: ${JSON.stringify(t)}`)}(t,n,"classWeight")}function CA(t,n,e,s){return Jx.apply(this,arguments)}function Jx(){return(Jx=(0,on.Z)(function*(t,n,e,s){if(null!=n||null!=s)throw new Error("Support sampleWeight is not implemented yet");if(null!=e){const r=(0,u.tidy)(()=>{if(1===t.shape.length)return(0,u.clone)(t);if(2===t.shape.length){if(t.shape[1]>1)return(0,u.argMax)(t,1);if(1===t.shape[1])return(0,u.reshape)(t,[t.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${t.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${t.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),o=Array.from(yield r.data());(0,u.dispose)(r);const i=[];return o.forEach(a=>{if(null==e[a])throw new Error(`classWeight must contain all classes in the training data. The class ${a} exists in the data but not in classWeight`);i.push(e[a])}),(0,u.tensor1d)(i,"float32")}return null})).apply(this,arguments)}function Gse(t,n){return(0,u.mul)(t,n)}function DA(t,n){let e,s;e=n.xs,s=n.ys,u.util.assert(null!=e&&null!=s,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${n}`);const o=IA("input",t.inputNames,e),i=IA("output",t.outputNames,s),a=o[0].shape[0];u.util.assert(o.length===t.inputs.length,()=>`LayersModel has ${t.inputs.length} inputs, but the dataset provides ${o.length} inputs.  (Expected input keys: ${JSON.stringify(t.inputNames)})`),u.util.assert(i.length===t.outputs.length,()=>`LayersModel has ${t.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(t.outputNames)})`);for(let l=0;l<o.length;l++)u.util.assert(o[l].shape[0]===a,()=>`Batch size mismatch: input ${t.inputNames[l]} has ${o[l].shape[0]}; expected  ${a} based on input ${t.inputNames[0]}.`);for(let l=0;l<i.length;l++)u.util.assert(i[l].shape[0]===a,()=>`Batch size mismatch: output ${t.outputNames[l]} has ${i[l].shape[0]}; expected  ${a} based on input ${t.inputNames[0]}.`);return{xs:o,ys:i}}function IA(t,n,e){if(e instanceof u.Tensor)return[e];if(Array.isArray(e))return u.util.assert(e.length===n.length,()=>`Received an array of ${e.length} Tensors, but expected ${n.length} to match the ${t} keys ${n}.`),e;{const s=[];for(const r of n){if(null==e[r])throw new Be(`The feature data generated by the dataset lacks the required ${t} key '${r}'.`);s.push(e[r])}return s}}function Kse(t){if(3===t.length)throw new mn("Validation with sample weights is not implemented yet.");return{xs:t[0],ys:t[1]}}function qx(){return(qx=(0,on.Z)(function*(t,n,e){const s=null!=e.batchesPerEpoch;if(u.util.assert(null!=t.optimizer,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),u.util.assert(null!=e,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),u.util.assert(null!=e.epochs&&e.epochs>0&&Number.isInteger(e.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${e.epochs}`),u.util.assert(!s||e.batchesPerEpoch>0&&Number.isInteger(e.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${e.batchesPerEpoch}`),u.util.assert(null==e.validationSplit,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),t.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");t.isTraining=!0;try{const r=null!=e.validationData;let o,i;if(r)if(TA(e.validationData))u.util.assert(null==e.validationBatches||e.validationBatches>0&&Number.isInteger(e.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${e.validationBatches}`);else{const x=Kse(e.validationData);o=x.xs,i=x.ys}const a=t.makeTrainFunction(),l=t.getDedupedMetricsNames();let c;c=r?l.slice().concat(l.map(x=>"val_"+x)):l.slice();const d=cA(e.callbacks,e.yieldEvery),f=null==e.verbose?1:e.verbose,{callbackList:p,history:m}=dA(d,f,e.epochs,null,null,Xse(n,e),null,r,c);p.setModel(t),t.history=m,yield p.onTrainBegin(),t.stopTraining_=!1;let y=null==e.initialEpoch?0:e.initialEpoch,_=yield n.iterator();for(;y<e.epochs;){const x={};yield p.onEpochBegin(y);let D=0,C=0;for(s||(_=yield n.iterator());!s||D<e.batchesPerEpoch;){const F=yield _.next();if(s&&F.done){console.warn(`You provided \`batchesPerEpoch\` as ${e.batchesPerEpoch}, but your dataset iterator ran out of data after ${D} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${e.batchesPerEpoch*e.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(null!=F.value){const{xs:B,ys:Z}=DA(t,F.value),ce={};ce.batch=C,ce.size=B[0].shape[0],yield p.onBatchBegin(C,ce);const ve=[];if(null!=e.classWeight){const Le=bA(e.classWeight,t.outputNames);for(let Xe=0;Xe<Le.length;++Xe)ve.push(yield CA(Z[Xe],null,Le[Xe]))}const _e=B.concat(Z).concat(ve),Fe=a(_e);u.dispose(_e);for(let Le=0;Le<l.length;++Le){const tt=Fe[Le];ce[l[Le]]=tt,u.keep(tt)}yield p.onBatchEnd(C,ce),uA(ce),C++,D++}if(s?D>=e.batchesPerEpoch:F.done){if(r){let B;B=TA(e.validationData)?hs(yield t.evaluateDataset(e.validationData,{batches:e.validationBatches})):hs(t.evaluate(o,i,{batchSize:null==e.validationBatchSize?32:e.validationBatchSize,verbose:0}));for(let Z=0;Z<t.metricsNames.length;++Z)x[`val_${t.metricsNames[Z]}`]=B[Z]}break}if(t.stopTraining_)break}if(yield p.onEpochEnd(y,x),y++,t.stopTraining_)break}return yield p.onTrainEnd(),yield t.history.syncData(),t.history}finally{t.isTraining=!1}})).apply(this,arguments)}function Xse(t,n){let e=null;return null!=n.batchesPerEpoch?e=n.batchesPerEpoch:Number.isFinite(t.size)&&(e=t.size),e}function TA(t){return"function"==typeof t.iterator}function Zse(t){return"function"==typeof t.next}function eE(){return(eE=(0,on.Z)(function*(t,n,e){const s=null!=(e=e||{}).batches,r=t.testFunction;let o=[];if(e.verbose>0)throw new mn("Verbose mode is not implemented yet.");u.util.assert(!s||e.batches>0&&Number.isInteger(e.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(e.batches)}`);const i=Zse(n)?n:yield n.iterator();let a=0,l=0;for(;!s||l<e.batches;){const c=yield i.next();if(o=u.tidy(()=>{if(c.value){const{xs:d,ys:f}=DA(t,c.value),p=d.concat(f),m=u.tidy(()=>r(p));if(u.dispose(p),0===l)for(let _=0;_<m.length;++_)o.push((0,u.scalar)(0));const y=p[0].shape[0];for(let _=0;_<m.length;++_){const x=m[_],D=o[_];o[_]=u.tidy(()=>u.add(o[_],u.mul(y,x))),l>0&&u.dispose(D)}u.dispose(m),a+=y,++l}return o}),c.done){s&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${e.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let c=0;c<o.length;++c){const d=o[c];o[c]=u.div(o[c],a),u.dispose(d)}return yo(o)})).apply(this,arguments)}function tE(t){u.util.assert(t>0&&Number.isInteger(t),()=>`batchSize is required to be a positive integer, but got ${t}`)}function Of(t,n,e){return null==t?[null]:Array.isArray(t)?t.map(s=>mc(s,n,e-n)):mc(t,n,e-n)}function nE(t,n){return u.tidy(()=>null==t?null:Array.isArray(t)?t.map(e=>nE(e,n)):jN(t,"int32"===n.dtype?n:u.cast(n,"int32")))}function sE(t,n){const e=[];let s=0,r=null;for(;s<t;)r=s+n,r>=t&&(r=t),e.push([s,r]),s=r;return e}function Qse(t,n,e,s,r,o,i,a,l,c,d,f,p,m,y){return rE.apply(this,arguments)}function rE(){return(rE=(0,on.Z)(function*(t,n,e,s,r,o,i,a,l,c,d,f,p,m,y){null==r&&(r=32),null==o&&(o=1),null==d&&(d=!0),null==p&&(p=0);let _=!1;if(null!=l&&null!=c&&(_=!0),null!=y&&(_=!0,null==m))throw new Be("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const x=t.checkNumSamples(e,r,m,"steps_per_epoch");let D;null!=x&&(D=sa(0,x)),null==i&&(i=1);const{callbackList:C,history:F}=dA(a,i,o,p,x,m,r,_,f);C.setModel(t),t.history=F,yield C.onTrainBegin(),t.stopTraining_=!1;for(let B=p;B<o;++B){yield C.onEpochBegin(B);const Z={};if(null!=m)throw new mn("stepsPerEpoch mode is not implemented yet.");{if("batch"===d)throw new mn("batch shuffling is not implemneted yet");d&&u.util.shuffle(D);const ce=(0,u.tensor1d)(D),ve=sE(x,r);for(let _e=0;_e<ve.length;++_e){const Fe={};if(yield C.onBatchBegin(_e,Fe),u.tidy(()=>{const Le=ve[_e][0],Xe=ve[_e][1],tt=mc(ce,Le,Xe-Le);Fe.batch=_e,Fe.size=Xe-Le;const nt=nE(e,tt),st=n(nt);for(let Je=0;Je<s.length;++Je){const lt=st[Je];Fe[s[Je]]=lt,u.keep(lt)}if(_e===ve.length-1&&_){const Je=t.testLoop(l,c,r);for(let qe=0;qe<s.length;++qe){const lt=s[qe],Me=Je[qe];u.keep(Me),Z["val_"+lt]=Me}}}),yield C.onBatchEnd(_e,Fe),uA(Fe),t.stopTraining_)break}ce.dispose()}if(yield C.onEpochEnd(B,Z),t.stopTraining_)break}return yield C.onTrainEnd(),yield t.history.syncData(),t.history})).apply(this,arguments)}function oE(){return(oE=(0,on.Z)(function*(t,n,e,s={}){if(t.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let r,o,i,a,l,c,d,f,p;t.isTraining=!0;try{const m=null==s.batchSize?32:s.batchSize;tE(m);const y=!1,_=yield t.standardizeUserData(n,e,s.sampleWeight,s.classWeight,y,m);r=_[0],o=_[1],p=_[2];let D,x=!1;if(null!=s.validationData&&s.validationData.length>0){if(x=!0,2!==s.validationData.length)throw 3===s.validationData.length?new mn("validationData including sample weights is not supported yet."):new Be(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${s.validationData} is invalid.`);l=s.validationData[0],c=s.validationData[1];const Fe=!0,Le=yield t.standardizeUserData(l,c,null,null,Fe,m);d=Le[0],f=Le[1],D=d.concat(f)}else if(null!=s.validationSplit&&s.validationSplit>0&&s.validationSplit<1){x=!0;const Fe=Math.floor(r[0].shape[0]*(1-s.validationSplit)),Le=r[0].shape[0];d=Of(r,Fe,Le),i=r,r=Of(r,0,Fe),f=Of(o,Fe,Le),a=o,o=Of(o,0,Fe),D=d.concat(f)}else null!=s.validationSteps&&(x=!0);const C=r.concat(o).concat(p);t.checkTrainableWeightsConsistency();const F=t.makeTrainFunction(),B=t.getDedupedMetricsNames();let Z,ce;x?(t.makeTestFunction(),Z=t.testFunction,ce=B.slice().concat(B.map(Fe=>"val_"+Fe))):(Z=null,D=[],ce=B.slice());const ve=cA(s.callbacks,s.yieldEvery);return yield Qse(t,F,C,B,m,s.epochs,s.verbose,ve,Z,D,s.shuffle,ce,s.initialEpoch,null,null)}finally{t.isTraining=!1,aa(r,n),aa(o,e),aa(i,n),aa(a,e),aa(d,l),aa(f,c),null!=p&&u.dispose(p)}})).apply(this,arguments)}function wA(t){const n=[];t instanceof u.Tensor&&(t=[t]);for(let e=0;e<t.length;++e){const s=t[e];if(1===s.rank)n.push(If(s,1));else{if(0===s.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");n.push(s)}}return n}function aa(t,n){if(null==t)return;const e=[];if(n instanceof u.Tensor)e.push(n.id);else if(Array.isArray(n))n.forEach(r=>e.push(r.id));else if(null!=n)for(const r in n)e.push(n[r].id);const s=[];if(t instanceof u.Tensor)-1===e.indexOf(t.id)&&s.push(t);else if(Array.isArray(t))t.forEach(r=>{-1===e.indexOf(r.id)&&s.push(r)});else if(null!=t)for(const r in t){const o=t[r];-1===e.indexOf(o.id)&&s.push(o)}s.forEach(r=>{r.isDisposed||r.dispose()})}function iE(t){return Array.isArray(t)}function SA(t){return!function qse(t){return t instanceof u.Tensor}(t)&&!iE(t)}function NA(t,n,e,s=!0,r=""){if(null==n||0===n.length){if(null!=t){let i=!1;if(iE(t)&&t.length>0)i=!0;else if(SA(t)){for(const a in t)if(t.hasOwnProperty(a)){i=!0;break}}else i=!0;if(i)throw new Be(`Error when checking model ${r} expected no data, but got ${t}`)}return[]}if(null==t)return n.map(i=>null);let o;if(SA(t)){o=[];for(const i of n){if(null==t[i])throw new Be(`No data provided for "${i}". Need data for each key in: ${n}`);o.push(t[i])}}else if(iE(t)){if(t.length!==n.length)throw new Be(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${n.length} Tensor(s), but instead got the following list of Tensor(s): ${t}`);o=t}else{if(n.length>1)throw new Be(`The model ${r} expects ${n.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${t.shape}`);o=[t]}if(o=wA(o),null!=e)for(let i=0;i<n.length;++i){if(null==e[i])continue;const a=o[i];if(a.shape.length!==e[i].length)throw new Be(`Error when checking ${r}: expected ${n[i]} to have ${e[i].length} dimension(s). but got array with shape ${a.shape}`);for(let l=0;l<e[i].length;++l){if(0===l&&!s)continue;const c=a.shape[l],d=e[i][l];if(null!=d&&d>=0&&c!==d)throw new Be(`${r} expected a batch of elements where each example has shape [${e[i].slice(1,e[i].length)}] (i.e.,tensor shape [*,${e[i].slice(1,e[i].length)}]) but the ${r} received an input with ${a.shape[0]} examples, each with shape [${a.shape.slice(1,a.shape.length)}] (tensor shape [${a.shape}])`)}}return o}function AA(t,n,e,s=!0,r=""){let o;if(Array.isArray(t)){if(t.length!==n.length)throw new Be(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${n.length} Tensor(s), but instead got ${t.length} Tensors(s).`);o=t}else{if(n.length>1)throw new Be(`The model expects ${n.length} ${r} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(t.shape)}.`);o=[t]}if(null!=e)for(let i=0;i<n.length;++i){if(null==e[i])continue;const a=o[i];if(a.shape.length!==e[i].length)throw new Be(`Error when checking ${r}: expected ${n[i]} to have ${e[i].length} dimension(s), but got array with shape ${JSON.stringify(a.shape)}`);for(let l=0;l<e[i].length;++l){if(0===l&&!s)continue;const c=a.shape[l],d=e[i][l];if(null!=d&&d!==c)throw new Be(`Error when checking ${r}: expected ${n[i]} to have shape ${JSON.stringify(e[i])} but got array with shape ${JSON.stringify(a.shape)}.`)}}}let zd=(()=>{class t extends ia{constructor(e){super(e),this.isTraining=!1}summary(e,s,r=console.log){if(!this.built)throw new Be("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");!function Bse(t,n,e,s=console.log){const r=function Vse(t){let n=!0;const e=[],s=[];for(const r in t.nodesByDepth)e.push(t.nodesByDepth[r]);for(const r of e){if(r.length>1||1===r.length&&r[0].inboundLayers.length>1){n=!1;break}s.push(...r)}if(n)for(const r of t.layers){let o=!1;for(const i of r.inboundNodes)if(-1!==s.indexOf(i)){if(o){n=!1;break}o=!0}if(!n)break}return n}(t),o=["Layer (type)","Input Shape","Output shape","Param #"];let i;if(r?(n=n||90,e=e||[.32,.61,.89,1]):(n=n||115,e=e||[.24,.48,.7,.8,1]),e[e.length-1]<=1&&(e=e.map(d=>Math.floor(n*d))),!r){o.push("Receives inputs"),i=[];for(const d in t.nodesByDepth)i.push(...t.nodesByDepth[d])}s("_".repeat(n)),Cg(o,e,s),s("=".repeat(n));const a=t.layers;for(let d=0;d<a.length;++d)r?zse(a[d],e,s):Wse(a[d],e,i,s),s((d===a.length-1?"=":"_").repeat(n));t.checkTrainableWeightsConsistency();const l=function Use(t){let n;return n=dg(null!=t.collectedTrainableWeights?t.collectedTrainableWeights:t.trainableWeights),n}(t),c=dg(t.nonTrainableWeights);s(`Total params: ${l+c}`),s(`Trainable params: ${l}`),s(`Non-trainable params: ${c}`),s("_".repeat(n))}(this,e,s,r)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"==typeof e.optimizer)this.optimizer_=function Lse(t){const n={Adagrad:()=>u.train.adagrad(.01),Adadelta:()=>u.train.adadelta(1,.95,dr()),Adam:()=>u.train.adam(.001,.9,.999,dr()),Adamax:()=>u.train.adamax(.002,.9,.999,dr(),0),RMSProp:()=>u.train.rmsprop(.001,.9,0,dr()),SGD:()=>u.train.sgd(.01)};if(n.adagrad=n.Adagrad,n.adadelta=n.Adadelta,n.adam=n.Adam,n.adamax=n.Adamax,n.rmsprop=n.RMSProp,n.sgd=n.SGD,t in n)return n[t]();throw new Be(`Unknown Optimizer ${t}`)}(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof u.Optimizer))throw new Be("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let s=[];if(Array.isArray(e.loss)||"string"==typeof e.loss||"function"==typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new Be(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);s=e.loss.map(l=>jx(l))}else{const a=jx(e.loss);this.outputs.forEach(l=>{s.push(a)})}else{e.loss=e.loss;for(const a in e.loss)if(-1===this.outputNames.indexOf(a))throw new Be(`Unknown entry in loss dictionary: "${a}". Only expected the following keys: ${this.outputNames}`);for(const a of this.outputNames)null==e.loss[a]&&console.warn(`Output "${a}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${a} during training`),s.push(jx(e.loss[a]))}this.lossFunctions=s,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let a=0;a<this.outputs.length;++a){const l=this.internalOutputShapes[a];this.feedOutputNames.push(this.outputNames[a]),this.feedOutputShapes.push(l),this.feedLossFns.push(this.lossFunctions[a])}const r=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],pc("loss",()=>{for(let a=0;a<this.outputs.length;++a){if(-1!==r.indexOf(a))continue;const l=this.lossFunctions[a];this.outputs.length>1&&(this.metricsTensors.push([l,a]),this.metricsNames.push(this.outputNames[a]+"_loss"))}});const o=function nre(t,n){if(null==t||Array.isArray(t)&&0===t.length)return n.map(s=>[]);let e;if("string"==typeof t||"function"==typeof t)e=[t];else{if(!Array.isArray(t)&&"object"!=typeof t)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${t}`);e=t}if(Array.isArray(e))return n.map(s=>e);{const s=[];for(const r of n){let o=e.hasOwnProperty(r)?e[r]:[];Array.isArray(o)||(o=[o]),s.push(o)}return s}}(e.metrics,this.outputNames),i=(a,l,c)=>{this.outputNames.length>1&&(l=this.outputNames[a]+"_"+l),this.metricsNames.push(l),this.metricsTensors.push([c,a])};pc("metric",()=>{for(let a=0;a<this.outputs.length;++a)-1===r.indexOf(a)&&(d=>{let p,m,y;for(const _ of d){if("string"==typeof _&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(_)){const D=this.internalOutputShapes[a];let C;1===D[D.length-1]||this.lossFunctions[a]===xg?-1!==["accuracy","acc"].indexOf(_)?m=fA:-1!==["crossentropy","ce"].indexOf(_)&&(m=Sse):this.lossFunctions[a]===vg?-1!==["accuracy","acc"].indexOf(_)?m=Nse:-1!==["crossentropy","ce"].indexOf(_)&&(m=yA):-1!==["accuracy","acc"].indexOf(_)?m=pA:-1!==["crossentropy","ce"].indexOf(_)&&(m=gA),-1!==["accuracy","acc"].indexOf(_)?C="acc":-1!==["crossentropy","ce"].indexOf(_)&&(C="ce"),y=m,p=""+C}else y=Fse(_),p=""+bg(_);let x;pc(p,()=>{x=y}),i(a,p,x)}})(o[a])}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,s,r={}){const o=null==r.batchSize?32:r.batchSize;tE(o);const a=this.standardizeUserDataXY(e,s,!0,o);try{const l=a[0].concat(a[1]);return this.makeTestFunction(),yo(this.testLoop(this.testFunction,l,o,r.verbose,r.steps))}finally{aa(a[0],e),aa(a[1],s)}}evaluateDataset(e,s){var r=this;return(0,on.Z)(function*(){return r.makeTestFunction(),function Yse(t,n,e){return eE.apply(this,arguments)}(r,e,s)})()}checkNumSamples(e,s,r,o="steps"){let i;if(null!=r){if(i=null,null!=s)throw new Be(`If ${o} is set, batchSize must be null or undefined.Got batchSize = ${s}`)}else{if(null==e)throw new Be(`Either the input data should have a defined shape, or ${o} shoud be specified.`);i=Array.isArray(e)?e[0].shape[0]:e.shape[0]}return i}execute(e,s){if(Array.isArray(s)&&0===s.length)throw new Be("`outputs` is an empty Array, which is not allowed.");const r=Array.isArray(s),i=this.retrieveSymbolicTensors(r?s:[s]),a=new Cu;if(e instanceof u.Tensor&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new Be(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let c=0;c<this.inputs.length;++c)a.add(this.inputs[c],e[c])}else for(const c of this.inputs){const d=e[c.name];if(null==d)throw new Be(`No value is provided for the model's input ${c.name}`);a.add(c,d)}const l=Sf(i,a);return r?l:l[0]}retrieveSymbolicTensors(e){const s=dc(null,e.length);let r=e.length;for(const o of this.layers){const i=Array.isArray(o.output)?o.output:[o.output],a=i.map(l=>l.name);for(let l=0;l<e.length;++l){const c=a.indexOf(e[l]);if(-1!==c&&(s[l]=i[c],r--),0===r)break}if(0===r)break}if(r>0){const o=[];throw s.forEach((i,a)=>{null==i&&o.push(e[a])}),new Be(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(o)}`)}return s}predictLoop(e,s=32,r=!1){return u.tidy(()=>{const o=this.checkNumSamples(e);if(r)throw new mn("Verbose predictLoop() is not implemented yet.");const i=sE(o,s),a=this.outputs.map(l=>[]);for(let l=0;l<i.length;++l)u.tidy(()=>{const p=Of(e,i[l][0],i[l][1]),m=[];if(Array.isArray(p))for(let _=0;_<p.length;++_)m.push({key:this.inputs[_],value:p[_]});else m.push({key:this.inputs[0],value:p});const y=new Cu(m);return Sf(this.outputs,y)}).forEach((d,f)=>a[f].push(d));return yo(a.map(l=>u.concat(l,0)))})}predict(e,s={}){const r=wA(e);AA(r,this.inputNames,this.feedInputShapes,!1);try{const o=null==s.batchSize?32:s.batchSize;return tE(o),this.predictLoop(r,o)}finally{aa(r,e)}}predictOnBatch(e){AA(e,this.inputNames,this.feedInputShapes,!0);const s=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,s)}standardizeUserDataXY(e,s,r=!0,o){if(null==this.optimizer_)throw new gi("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const i=[];for(let a=0;a<this.feedOutputShapes.length;++a){const l=this.feedOutputShapes[a];i.push(this.feedLossFns[a]===vg?l.slice(0,l.length-1).concat([1]):l)}if(function ere(t,n,e){const s=Eu(t.map(o=>o.shape[0]));s.sort();const r=Eu(n.map(o=>o.shape[0]));if(r.sort(),s.length>1)throw new Be(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map(o=>o.shape))}`);if(r.length>1)throw new Be(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(n.map(o=>o.shape))}`);if(s.length>0&&r.length>0&&!u.util.arraysEqual(s,r))throw new Be(`Input Tensors should have the same number of samples as target Tensors. Found ${s[0]} input sample(s) and ${r[0]} target sample(s).`)}(e=NA(e,this.feedInputNames,this.feedInputShapes,!1,"input"),s=NA(s,this.feedOutputNames,i,!1,"target")),function tre(t,n,e){const s=[yg,xg,Af];for(let r=0;r<t.length;++r){const o=t[r],i=n[r],a=e[r];if(null!=i){if(i===Af&&1===o.shape[o.shape.length-1])throw new Be(`You are passing a target array of shape ${o.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==s.indexOf(i)){const l=o.shape.slice(1),c=a.slice(1);for(let d=0;d<l.length;++d){const f=l[d],p=c[d];if(null!=p&&f!==p)throw new Be(`A target Tensor with shape ${o.shape} was passed for an output of shape ${a}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(s,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=o&&o>0&&e[0].shape[0]%o!=0)throw new Be(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${o}. Found: ${e[0].shape[0]} sample(s).`);return[e,s]}standardizeUserData(e,s,r,o,i=!0,a){var l=this;return(0,on.Z)(function*(){const[c,d]=l.standardizeUserDataXY(e,s,i,a);if(null!=r)throw new Error("sample weight is not supported yet.");let f=null;if(null!=o){const p=bA(o,l.outputNames);f=[];for(let m=0;m<p.length;++m)f.push(yield CA(d[m],null,p[m]))}return[c,d,f]})()}testLoop(e,s,r,o=0,i){return u.tidy(()=>{const a=this.checkNumSamples(s,r,i,"steps"),l=[];if(o>0)throw new mn("Verbose mode is not implemented yet.");if(null!=i)throw new mn("steps mode in testLoop() is not implemented yet");{const c=sE(a,r),d=(0,u.tensor1d)(sa(0,a));for(let f=0;f<c.length;++f){const p=c[f][0],m=c[f][1],y=mc(d,p,m-p),_=nE(s,y),x=e(_);if(0===f)for(let D=0;D<x.length;++D)l.push((0,u.scalar)(0));for(let D=0;D<x.length;++D)l[D]=u.add(l[D],u.mul(m-p,x[D]))}for(let f=0;f<l.length;++f)l[f]=u.div(l[f],a)}return l})}getDedupedMetricsNames(){const e=this.metricsNames,s=[];for(let r=0;r<e.length;++r){const o=e[r];let i=o;$N(e,o)>1&&(i+=`_${$N(e.slice(0,r),o)}`),s.push(i)}return s}makeTrainFunction(){return e=>{const s=[],r=e.slice(0,this.inputs.length),o=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),i=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),a=[],c=this.collectedTrainableWeights.map(p=>p.read());return[this.optimizer_.minimize(()=>{const p=[];for(let x=0;x<this.inputs.length;++x)p.push({key:this.inputs[x],value:r[x]});const m=new Cu(p),y=Sf(this.outputs,m,{training:!0});let _;for(let x=0;x<this.lossFunctions.length;++x){let C=this.lossFunctions[x](o[x],y[x]);null!=i[x]&&(C=Gse(C,i[x]));const F=u.mean(C);s.push(F),_=0===x?C:u.add(_,C)}for(let x=0;x<this.metricsTensors.length;++x){let D;if(this.outputs.length>1&&x<this.outputs.length)D=s[x];else{const F=this.metricsTensors[x][1];D=u.mean((0,this.metricsTensors[x][0])(o[F],y[F]))}u.keep(D),a.push(D)}return _=u.mean(_),this.calculateLosses().forEach(x=>{_=u.add(_,x)}),_},!0,c)].concat(a)}}makeTestFunction(){this.testFunction=e=>u.tidy(()=>{const s=[];let r;const o=e.slice(0,this.inputs.length),i=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=[];for(let d=0;d<this.inputs.length;++d)a.push({key:this.inputs[d],value:o[d]});const l=new Cu(a),c=Sf(this.outputs,l);for(let d=0;d<this.lossFunctions.length;++d){const p=u.mean((0,this.lossFunctions[d])(i[d],c[d]));r=0===d?p:u.add(r,p),s.push(r)}for(let d=0;d<this.metricsTensors.length;++d){const p=this.metricsTensors[d][1],m=u.mean((0,this.metricsTensors[d][0])(i[p],c[p]));s.push(m)}return s})}fit(e,s,r={}){var o=this;return(0,on.Z)(function*(){return function Jse(t,n,e){return oE.apply(this,arguments)}(o,e,s,r)})()}fitDataset(e,s){var r=this;return(0,on.Z)(function*(){return function jse(t,n,e){return qx.apply(this,arguments)}(r,e,s)})()}trainOnBatch(e,s){var r=this;return(0,on.Z)(function*(){const o=yield r.standardizeUserData(e,s),i=o[0],a=o[1],c=r.makeTrainFunction()(i.concat(a)),d=[];for(const f of c){const p=yield f.data();d.push(p[0])}return u.dispose(c),aa(o[0],e),aa(o[1],s),yo(d)})()}getNamedWeights(e){const s=[],r=null!=e&&e.trainableOnly,o=r?this.trainableWeights:this.weights,i=this.getWeights(r);for(let a=0;a<o.length;++a)r&&!o[a].trainable||s.push({name:o[a].originalName,tensor:i[a]});return s}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const s=u.memory().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=s-u.memory().numTensors}return e}getLossIdentifiers(){let e;if("string"==typeof this.loss)e=Fl(this.loss);else if(Array.isArray(this.loss)){for(const s of this.loss)if("string"!=typeof s)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map(s=>Fl(s))}else{const s=Object.keys(this.loss);e={};const r=this.loss;for(const o of s){if("string"!=typeof r[o])throw new Error("Serialization of non-string loss is not supported.");e[o]=Fl(r[o])}}return e}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[Fl(bg(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(e=>Fl(bg(e)));{const e={};for(const s in this.metrics)e[s]=Fl(bg(this.metrics[s]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const r=Ll(Zx(e.optimizer_config));let o,i;if("string"==typeof e.loss)o=hc(e.loss);else if(Array.isArray(e.loss))o=e.loss.map(a=>hc(a));else if(null!=e.loss){o={};for(const a in e.loss)o[a]=hc(e.loss[a])}if(Array.isArray(e.metrics))i=e.metrics.map(a=>hc(a));else if(null!=e.metrics){i={};for(const a in e.metrics)i[a]=hc(e.metrics[a])}this.compile({loss:o,metrics:i,optimizer:r})}save(e,s){var r=this;return(0,on.Z)(function*(){if("string"==typeof e){const f=u.io.getSaveHandlers(e);if(0===f.length)throw new Be(`Cannot find any save handlers for URL '${e}'`);if(f.length>1)throw new Be(`Found more than one (${f.length}) save handlers for URL '${e}'`);e=f[0]}if(null==e.save)throw new Be("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const o=yield u.io.encodeWeights(r.getNamedWeights(s)),c={modelTopology:r.toJSON(null,!1),format:"layers-model",generatedBy:"TensorFlow.js tfjs-layers v3.21.0",convertedBy:null};if(null!=s&&s.includeOptimizer&&null!=r.optimizer){c.trainingConfig=r.getTrainingConfig();const f="optimizer",{data:p,specs:m}=yield u.io.encodeWeights(yield r.optimizer.getWeights(),f);o.specs.push(...m),o.data=u.io.concatenateArrayBuffers([o.data,p])}return null!=r.userDefinedMetadata&&(xA(r.userDefinedMetadata,r.name,!0),c.userDefinedMetadata=r.userDefinedMetadata),c.weightData=o.data,c.weightSpecs=o.specs,e.save(c)})()}setUserDefinedMetadata(e){xA(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}return t.className="Model",t})();u.serialization.registerClass(zd),u.serialization.registerClass((()=>{class t extends zd{}return t.className="Functional",t})());let are=(()=>{class t extends zd{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:ig("sequential_"),null!=e.layers)for(const s of e.layers)this.add(s)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some(r=>r<0))throw new Be(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const s=e instanceof t||e instanceof zd;let r;if(s){if(r=e,1!==r.outputs.length)throw new Be("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==r.inputs.length)throw new Be("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new Be("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const o=function tse(t){if(null==t.batchShape&&null==t.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=t.batchShape&&null!=t.shape)throw new Be("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let n=t.batchShape;null!=t.shape&&null==n&&(n=[null].concat(t.shape));let e=t.dtype;return null==e&&(e="float32"),new fg({batchInputShape:n,name:t.name,dtype:e,sparse:t.sparse}).inboundNodes[0].outputTensors[0]}({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(o)}if(s)this.outputs=r.outputs,this.inputs=r.inputs;else{if(1!==e.inboundNodes.length)throw new Be(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(1!==e.inboundNodes[0].outputTensors.length)throw new Be("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=oA(this.outputs[0])}this.inboundNodes=[],new hg({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:dc(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(o=>o.shape),outputShapes:this.outputs[0].shape})}else{const o=e.apply(this.outputs[0]);if(Array.isArray(o))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[o],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,s){return null==this.model&&this.build(),this.model.call(e,s)}build(e){if(qn(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new zd({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,s,r=console.log){this.built||this.build(),super.summary(e,s,r)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,s,r={}){if(!this.built)throw new gi("The model needs to be compiled before being used.");return this.model.evaluate(e,s,r)}evaluateDataset(e,s){var r=this;return(0,on.Z)(function*(){if(!r.built)throw new gi("The model needs to be compiled before being used.");return r.model.evaluateDataset(e,s)})()}predict(e,s={}){return null==this.model&&this.build(),this.model.predict(e,s)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}fit(e,s,r={}){var o=this;return(0,on.Z)(function*(){if(!o.built)throw new gi("The model needs to be compiled before being used.");return o.model.fit(e,s,r)})()}fitDataset(e,s){var r=this;return(0,on.Z)(function*(){if(!r.built)throw new gi("The model needs to be compiled before being used.");return r.model.fitDataset(e,s)})()}trainOnBatch(e,s){var r=this;return(0,on.Z)(function*(){return r.model.trainOnBatch(e,s)})()}static fromConfig(e,s,r={},o=!1){let i,a={};if(s instanceof Array){if(null==s[0].className||"Merge"===s[0].className)throw new Be("Legacy serialization format not supported yet.");i=s}else u.util.assert(null!=s.layers,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),i=s.layers,delete s.layers,a=s;const l=new e(a);if(!(l instanceof t))throw new mn(`Sequential.fromConfig called on non-Sequential input: ${l}`);for(const c of i){const f=Ll(c,void 0,o);o&&f.setFastWeightInitDuringBuild(!0),l.add(f)}return l}set stopTraining(e){if(null==this.model)throw new Be("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new Be("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const s of this.layers){const r={};r.className=s.getClassName(),r.config=s.getConfig(),e.push(r)}return{name:this.name,layers:e}}}return t.className="Sequential",t})();u.serialization.registerClass(are);class vo extends u.serialization.Serializable{getConfig(){return{}}}let lre=(()=>{class t extends vo{apply(e,s=1){return function Pne(t,n=1){if(1!==n)throw new mn(`Support for alpha values other than 1 (${n}) is not implemented yet.`);return u.elu(t)}(e,s)}}return t.className="elu",t})();u.serialization.registerClass(lre);let ure=(()=>{class t extends vo{apply(e){return u.selu(e)}}return t.className="selu",t})();u.serialization.registerClass(ure);let cre=(()=>{class t extends vo{apply(e){return u.relu(e)}}return t.className="relu",t})();u.serialization.registerClass(cre);let dre=(()=>{class t extends vo{apply(e){return(0,u.tidy)(()=>u.minimum(6,u.relu(e)))}}return t.className="relu6",t})();u.serialization.registerClass(dre),u.serialization.registerClass((()=>{class t extends vo{apply(e){return e}}return t.className="linear",t})());let fre=(()=>{class t extends vo{apply(e){return u.sigmoid(e)}}return t.className="sigmoid",t})();u.serialization.registerClass(fre);let pre=(()=>{class t extends vo{apply(e){return function Fne(t){return(0,u.tidy)(()=>{const n=u.add(.5,u.mul(.2,t));return u.clipByValue(n,0,1)})}(e)}}return t.className="hardSigmoid",t})();u.serialization.registerClass(pre);let mre=(()=>{class t extends vo{apply(e){return u.softplus(e)}}return t.className="softplus",t})();u.serialization.registerClass(mre);let gre=(()=>{class t extends vo{apply(e){return function $ne(t){return(0,u.tidy)(()=>u.div(t,u.add(u.abs(t),1)))}(e)}}return t.className="softsign",t})();u.serialization.registerClass(gre);let yre=(()=>{class t extends vo{apply(e){return u.tanh(e)}}return t.className="tanh",t})();u.serialization.registerClass(yre);let OA=(()=>{class t extends vo{apply(e,s=-1){return u.softmax(e,s)}}return t.className="softmax",t})();u.serialization.registerClass(OA);let vre=(()=>{class t extends vo{apply(e,s=-1){return u.logSoftmax(e,s)}}return t.className="logSoftmax",t})();u.serialization.registerClass(vre);let xre=(()=>{class t extends vo{apply(e,s=1){return(0,u.tidy)(()=>u.mul(u.sigmoid(u.mul(e,s)),e))}}return t.className="swish",t})();u.serialization.registerClass(xre);let Ere=(()=>{class t extends vo{apply(e){return(0,u.tidy)(()=>u.mul(e,u.tanh(u.softplus(e))))}}return t.className="mish",t})();function Iu(t){return t.getClassName()}function cE(t,n={}){return bf(t,u.serialization.SerializationMap.getMap().classNameMap,n,"activation")}function Tu(t){if(null==t){return cE({className:"linear",config:{}})}if("string"==typeof t){const n={};return n.className=t,n.config={},cE(n)}return t instanceof vo?t:cE(t)}u.serialization.registerClass(Ere);class RA extends u.serialization.Serializable{}let hE=(()=>{class t extends RA{constructor(e){super(),function dE(t){if(null!=t&&"object"!=typeof t)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${t}`)}(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return(0,u.tidy)(()=>{let s=(0,u.zeros)([1]);return this.hasL1&&(s=(0,u.add)(s,(0,u.sum)(u.mul(this.l1,(0,u.abs)(e))))),this.hasL2&&(s=(0,u.add)(s,(0,u.sum)(u.mul(this.l2,Tf(e))))),u.reshape(s,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,s){return new e({l1:s.l1,l2:s.l2})}}return t.className="L1L2",t})();u.serialization.registerClass(hE);const MA={l1l2:"L1L2"};function os(t){return Mx(t)}function kA(t,n={}){return bf(t,u.serialization.SerializationMap.getMap().classNameMap,n,"regularizer")}function Ns(t){return null==t?null:"string"==typeof t?kA({className:t in MA?MA[t]:t,config:{}}):t instanceof RA?t:kA(t)}function Wd(t,n,e){if("number"==typeof t)return dc(t,n);if(t.length!==n)throw new Be(`The ${e} argument must be an integer or tuple of ${n} integers. Received: ${t.length} elements.`);for(let s=0;s<n;++s){const r=t[s];if(!Nne(r))throw new Be(`The ${e} argument must be an integer or tuple of ${n} integers. Received: ${JSON.stringify(t)} including a non-integer number ${r}`)}return t}function la(t,n,e,s,r=1){if(null==t)return t;let i;return i="same"===e?t:t-(n+(n-1)*(r-1))+1,Math.floor((i+s-1)/s)}function tl(t,n,e,s){if(null==t)return null;if("valid"===s)t=t*n+bu([e-n,0]);else{if("same"!==s)throw new Be(`Unsupport padding mode: ${s}.`);t*=n}return t}function fE(t,n){return(0,u.tidy)(()=>(Zs(n),"channelsFirst"===n?u.transpose(t,[0,2,3,1]):t))}function PA(t,n){return(0,u.tidy)(()=>(Zs(n),"channelsFirst"===n?u.transpose(t,[0,2,3,4,1]):t))}function pE(t,n,e,s=[1,1],r="valid",o,i,a=null){return(0,u.tidy)(()=>{if(null==o&&(o="channelsLast"),Zs(o),3!==t.rank&&4!==t.rank)throw new Be(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${t.rank}.`);if(3!==n.rank&&4!==n.rank)throw new Be(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${t.rank}.`);let l=fE(t,o);if("causal"===r)throw new mn("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=u.fused.conv2d({x:l,filter:n,strides:s,pad:"same"===r?"same":"valid",dilations:i,dataFormat:"NHWC",bias:e,activation:a}),"channelsFirst"===o&&(l=u.transpose(l,[0,3,1,2])),l})}u.serialization.registerClass((()=>{class t extends Fn{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,s){e=vn(e);let r=(0,u.relu)(e);return null!=this.maxValue&&(r=(0,u.clipByValue)(r,0,this.maxValue)),r}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},s=super.getConfig();return Object.assign(e,s),e}}return t.className="ReLU",t})()),u.serialization.registerClass((()=>{class t extends Fn{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,s){const r=vn(e);return(0,u.leakyRelu)(r,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},s=super.getConfig();return Object.assign(e,s),e}}return t.className="LeakyReLU",t})()),u.serialization.registerClass((()=>{class t extends Fn{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=Ss(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=Ns(e.alphaRegularizer),this.alphaConstraint=pr(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!=typeof e.sharedAxes)throw new Be(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`);this.sharedAxes=[e.sharedAxes]}}build(e){const s=(e=qn(e)).slice(1);if(null!=this.sharedAxes)for(const o of this.sharedAxes)s[o-1]=1;this.alpha=this.addWeight("alpha",s,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const r={};if(null!=this.sharedAxes)for(let o=1;o<e.length;++o)r[o]=e[o];this.inputSpec=[new hr({ndim:e.length,axes:r})],this.built=!0}call(e,s){return e=vn(e),(0,u.prelu)(e,this.alpha.read())}getConfig(){const e={alphaInitializer:Ps(this.alphaInitializer),alphaRegularizer:os(this.alphaRegularizer),alphaConstraint:fr(this.alphaConstraint),sharedAxes:this.sharedAxes},s=super.getConfig();return Object.assign(e,s),e}}return t.className="PReLU",t})()),u.serialization.registerClass((()=>{class t extends Fn{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new mn(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,s){const r=vn(e);return(0,u.elu)(r)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},s=super.getConfig();return Object.assign(e,s),e}}return t.className="ELU",t})()),u.serialization.registerClass((()=>{class t extends Fn{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,s){const r=vn(e);return(0,u.mul)(r,(0,u.cast)((0,u.greater)(r,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},s=super.getConfig();return Object.assign(e,s),e}}return t.className="ThresholdedReLU",t})()),u.serialization.registerClass((()=>{class t extends Fn{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new OA).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,s){const r=vn(e);return this.softmax(r,this.axis)}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},s=super.getConfig();return Object.assign(e,s),e}}return t.className="Softmax",t})());class Dg extends Fn{constructor(n,e){if(super(e),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",Dg.verifyArgs(e),this.rank=n,Dr(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new mn(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=Wd(e.kernelSize,n,"kernelSize"),this.strides=Wd(null==e.strides?1:e.strides,n,"strides"),this.padding=null==e.padding?"valid":e.padding,Ko(this.padding),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Zs(this.dataFormat),this.activation=Tu(e.activation),this.useBias=null==e.useBias||e.useBias,this.biasInitializer=Ss(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=pr(e.biasConstraint),this.biasRegularizer=Ns(e.biasRegularizer),this.activityRegularizer=Ns(e.activityRegularizer),this.dilationRate=Wd(null==e.dilationRate?1:e.dilationRate,n,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new Be(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new Be(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new Be(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(n){if(Ho("kernelSize"in n,"required key 'kernelSize' not in config"),"number"!=typeof n.kernelSize&&!Px(n.kernelSize,"number",1,3))throw new Be(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(n.kernelSize)}.`)}getConfig(){const n={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:Iu(this.activation),useBias:this.useBias,biasInitializer:Ps(this.biasInitializer),biasRegularizer:os(this.biasRegularizer),activityRegularizer:os(this.activityRegularizer),biasConstraint:fr(this.biasConstraint)},e=super.getConfig();return Object.assign(n,e),n}}class Gd extends Dg{constructor(n,e){super(n,e),this.kernel=null,Gd.verifyArgs(e),this.filters=e.filters,Dr(this.filters,"filters"),this.kernelInitializer=Ss(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=pr(e.kernelConstraint),this.kernelRegularizer=Ns(e.kernelRegularizer)}build(n){n=qn(n);const e="channelsFirst"===this.dataFormat?1:n.length-1;if(null==n[e])throw new Be(`The channel dimension of the input should be defined. Found ${n[e]}`);const s=n[e],r=this.kernelSize.concat([s,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[e]:s}}],this.built=!0}call(n,e){return(0,u.tidy)(()=>{let s;n=vn(n);const r=null==this.bias?null:this.bias.read(),o=LN(this.activation.getClassName());if(null!=o&&2===this.rank)s=pE(n,this.kernel.read(),r,this.strides,this.padding,this.dataFormat,this.dilationRate,o);else{if(1===this.rank)s=function $A(t,n,e,s=1,r="valid",o,i=1){return(0,u.tidy)(()=>{if(null==o&&(o="channelsLast"),Zs(o),3!==t.shape.length)throw new Be(`The input of a conv1dWithBias operation should be 3, but is ${t.shape.length} instead.`);if(3!==n.shape.length)throw new Be(`The kernel for a conv1dWithBias operation should be 3, but is ${n.shape.length} instead`);if(null!=e&&1!==e.shape.length)throw new Be(`The bias for a conv1dWithBias operation should be 1, but is ${n.shape.length} instead`);if("channelsFirst"===o&&(t=u.transpose(t,[0,2,1])),"causal"===r)throw new mn("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let a=u.conv1d(t,n,s,"same"===r?"same":"valid","NWC",i);return null!=e&&(a=oa(a,e)),a})}(n,this.kernel.read(),r,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)s=pE(n,this.kernel.read(),r,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new mn("convolutions greater than 3D are not implemented yet.");s=function FA(t,n,e,s=[1,1,1],r="valid",o,i){return(0,u.tidy)(()=>{if(null==o&&(o="channelsLast"),Zs(o),4!==t.rank&&5!==t.rank)throw new Be(`conv3dWithBias expects input to be of rank 4 or 5, but received ${t.rank}.`);if(4!==n.rank&&5!==n.rank)throw new Be(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${t.rank}.`);let a=PA(t,o);if("causal"===r)throw new mn("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return a=u.conv3d(a,n,s,"same"===r?"same":"valid","NDHWC",i),null!=e&&(a=oa(a,e)),"channelsFirst"===o&&(a=u.transpose(a,[0,4,1,2,3])),a})}(n,this.kernel.read(),r,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(s=this.activation.apply(s))}return s})}computeOutputShape(n){n=qn(n);const e=[],s="channelsLast"===this.dataFormat?n.slice(1,n.length-1):n.slice(2);for(let o=0;o<s.length;++o){const i=la(s[o],this.kernelSize[o],this.padding,this.strides[o],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[o]);e.push(i)}let r=[n[0]];return"channelsLast"===this.dataFormat?(r=r.concat(e),r.push(this.filters)):(r.push(this.filters),r=r.concat(e)),r}getConfig(){const n={filters:this.filters,kernelInitializer:Ps(this.kernelInitializer),kernelRegularizer:os(this.kernelRegularizer),kernelConstraint:fr(this.kernelConstraint)},e=super.getConfig();return Object.assign(n,e),n}static verifyArgs(n){if(!("filters"in n)||"number"!=typeof n.filters||n.filters<1)throw new Be(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(n.filters)}`)}}let LA=(()=>{class t extends Gd{constructor(e){super(2,e),t.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!Px(e.kernelSize,"number",1,2))throw new Be(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}return t.className="Conv2D",t})();u.serialization.registerClass(LA);let BA=(()=>{class t extends Gd{constructor(e){super(3,e),t.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new Be(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}return t.className="Conv3D",t})();u.serialization.registerClass(BA);let wre=(()=>{class t extends LA{constructor(e){if(super(e),this.inputSpec=[new hr({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new Be(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(4!==(e=qn(e)).length)throw new Be("Input should have rank 4; Received input shape: "+JSON.stringify(e));const s="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[s])throw new Be("The channel dimension of the inputs should be defined. Found `None`.");const r=e[s],o=this.kernelSize.concat([this.filters,r]);this.kernel=this.addWeight("kernel",o,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new hr({ndim:4,axes:{[s]:r}})],this.built=!0}call(e,s){return u.tidy(()=>{let r=vn(e);if(4!==r.shape.length)throw new Be(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${r.shape.length}`);const o=r.shape;let a,l;"channelsFirst"===this.dataFormat?(a=2,l=3):(a=1,l=2);const d=o[l],p=this.kernelSize[1],y=this.strides[1],D=[o[0],tl(o[a],this.strides[0],this.kernelSize[0],this.padding),tl(d,y,p,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(r=u.transpose(r,[0,2,3,1]));let C=u.conv2dTranspose(r,this.kernel.read(),D,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(C=u.transpose(C,[0,3,1,2])),null!=this.bias&&(C=oa(C,this.bias.read(),this.dataFormat)),null!=this.activation&&(C=this.activation.apply(C)),C})}computeOutputShape(e){const s=(e=qn(e)).slice();let r,o,i;"channelsFirst"===this.dataFormat?(r=1,o=2,i=3):(r=3,o=1,i=2);const a=this.kernelSize[0],l=this.kernelSize[1],c=this.strides[0],d=this.strides[1];return s[r]=this.filters,s[o]=tl(s[o],c,a,this.padding),s[i]=tl(s[i],d,l,this.padding),s}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}return t.className="Conv2DTranspose",t})();u.serialization.registerClass(wre);let Sre=(()=>{class t extends BA{constructor(e){if(super(e),this.inputSpec=[new hr({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new Be(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(5!==(e=qn(e)).length)throw new Be("Input should have rank 5; Received input shape: "+JSON.stringify(e));const s="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[s])throw new Be("The channel dimension of the inputs should be defined. Found `None`.");const r=e[s],o=this.kernelSize.concat([this.filters,r]);this.kernel=this.addWeight("kernel",o,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new hr({ndim:5,axes:{[s]:r}})],this.built=!0}call(e,s){return u.tidy(()=>{let r=vn(e);if(5!==r.shape.length)throw new Be(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${r.shape.length}`);const o=r.shape;let a,l,c;"channelsFirst"===this.dataFormat?(c=2,a=3,l=4):(c=1,a=2,l=3);const f=o[a],p=o[l],y=this.kernelSize[1],_=this.kernelSize[2],D=this.strides[1],C=this.strides[2],ce=[o[0],tl(o[c],this.strides[0],this.kernelSize[0],this.padding),tl(f,D,y,this.padding),tl(p,C,_,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(r=u.transpose(r,[0,2,3,4,1]));let ve=u.conv3dTranspose(r,this.kernel.read(),ce,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(ve=u.transpose(ve,[0,4,1,2,3])),null!==this.bias&&(ve=oa(ve,this.bias.read(),this.dataFormat)),null!==this.activation&&(ve=this.activation.apply(ve)),ve})}computeOutputShape(e){const s=(e=qn(e)).slice();let r,o,i,a;"channelsFirst"===this.dataFormat?(r=1,o=2,i=3,a=4):(r=4,o=1,i=2,a=3);const l=this.kernelSize[0],c=this.kernelSize[1],d=this.kernelSize[2],f=this.strides[0],p=this.strides[1],m=this.strides[2];return s[r]=this.filters,s[o]=tl(s[o],f,l,this.padding),s[i]=tl(s[i],p,c,this.padding),s[a]=tl(s[a],m,d,this.padding),s}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}return t.className="Conv3DTranspose",t})();u.serialization.registerClass(Sre);let Nre=(()=>{class t extends Gd{constructor(e,s){if(super(e,s),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==s.filters)throw new Be("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=s.kernelInitializer||null!=s.kernelRegularizer||null!=s.kernelConstraint)throw new Be("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=s.padding&&"same"!==s.padding&&"valid"!==s.padding)throw new Be(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(s.padding)}`);this.depthMultiplier=null==s.depthMultiplier?1:s.depthMultiplier,this.depthwiseInitializer=Ss(s.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=Ns(s.depthwiseRegularizer),this.depthwiseConstraint=pr(s.depthwiseConstraint),this.pointwiseInitializer=Ss(s.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=Ns(s.pointwiseRegularizer),this.pointwiseConstraint=pr(s.pointwiseConstraint)}build(e){if((e=qn(e)).length<this.rank+2)throw new Be(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);const s="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[s]||e[s]<0)throw new Be(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[s])}`);const r=e[s],o=this.kernelSize.concat([r,this.depthMultiplier]),i=[];for(let l=0;l<this.rank;++l)i.push(1);i.push(r*this.depthMultiplier,this.filters);const a=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",o,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,a,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",i,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,a,this.pointwiseConstraint),this.bias=this.useBias?this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,a,this.biasConstraint):null,this.inputSpec=[new hr({ndim:this.rank+2,axes:{[s]:r}})],this.built=!0}call(e,s){return(0,u.tidy)(()=>{let r;if(e=vn(e),1===this.rank)throw new mn("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=u.transpose(e,[0,2,3,1])),r=u.separableConv2d(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(r=oa(r,this.bias.read(),this.dataFormat)),null!=this.activation&&(r=this.activation.apply(r)),"channelsFirst"===this.dataFormat&&(r=u.transpose(r,[0,3,1,2])),r})}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=Ps(this.depthwiseInitializer),e.pointwiseInitializer=Ps(this.pointwiseInitializer),e.depthwiseRegularizer=os(this.depthwiseRegularizer),e.pointwiseRegularizer=os(this.pointwiseRegularizer),e.depthwiseConstraint=fr(this.depthwiseConstraint),e.pointwiseConstraint=fr(this.pointwiseConstraint),e}}return t.className="SeparableConv",t})();u.serialization.registerClass((()=>{class t extends Nre{constructor(e){super(2,e)}}return t.className="SeparableConv2D",t})()),u.serialization.registerClass((()=>{class t extends Gd{constructor(e){super(1,e),t.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!Px(e.kernelSize,"number",1,1))throw new Be(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}return t.className="Conv1D",t})()),u.serialization.registerClass((()=>{class t extends Fn{constructor(e){super(e),this.cropping="number"==typeof e.cropping?[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"==typeof e.cropping[0]?[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,s){return(0,u.tidy)(()=>{if(e=vn(e),"channelsLast"===this.dataFormat){const r=lg(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return lg(r,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const r=lg(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return lg(r,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},s=super.getConfig();return Object.assign(e,s),e}}return t.className="Cropping2D",t})());let Mre=(()=>{class t extends Fn{constructor(e){super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Zs(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,function Tne(t){fc(bne,"InterpolationFormat",t)}(this.interpolation)}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],null==e[2]?null:this.size[0]*e[2],null==e[3]?null:this.size[1]*e[3]]:[e[0],null==e[1]?null:this.size[0]*e[1],null==e[2]?null:this.size[1]*e[2],e[3]]}call(e,s){return u.tidy(()=>{let r=vn(e);const o=r.shape;if("channelsFirst"===this.dataFormat){r=u.transpose(r,[0,2,3,1]);const i=this.size[0]*o[2],a=this.size[1]*o[3],l="nearest"===this.interpolation?u.image.resizeNearestNeighbor(r,[i,a]):u.image.resizeBilinear(r,[i,a]);return u.transpose(l,[0,3,1,2])}{const i=this.size[0]*o[1],a=this.size[1]*o[2];return"nearest"===this.interpolation?u.image.resizeNearestNeighbor(r,[i,a]):u.image.resizeBilinear(r,[i,a])}})}getConfig(){const e={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},s=super.getConfig();return Object.assign(e,s),e}}return t.className="UpSampling2D",t})();u.serialization.registerClass(Mre);let Pre=(()=>{class t extends Dg{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=Ss(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=pr(e.depthwiseConstraint),this.depthwiseRegularizer=Ns(e.depthwiseRegularizer)}build(e){if((e=qn(e)).length<4)throw new Be(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const s="channelsFirst"===this.dataFormat?1:3;if(null==e[s]||e[s]<0)throw new Be(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[s]}).`);const r=e[s];this.depthwiseKernel=this.addWeight("depthwise_kernel",[this.kernelSize[0],this.kernelSize[1],r,this.depthMultiplier],null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.bias=this.useBias?this.addWeight("bias",[r*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):null,this.built=!0}call(e,s){return(0,u.tidy)(()=>{let r=function kre(t,n,e=[1,1],s="valid",r,o){return(0,u.tidy)(()=>{null==r&&(r="channelsLast"),Zs(r);let i=fE(t,r);if(4!==t.rank)throw new Be(`Input for depthwiseConv2d is required to be 4-D, but is instead ${t.rank}-D`);if(4!==n.rank)throw new Be(`depthwiseKernel is required to be 4-D, but is instead ${n.rank}-D`);return i=u.depthwiseConv2d(i,n,e,"same"===s?"same":"valid","NHWC",o),"channelsFirst"===r&&(i=u.transpose(i,[0,3,1,2])),i})}(e=vn(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(r=oa(r,this.bias.read(),this.dataFormat)),null!=this.activation&&(r=this.activation.apply(r)),r})}computeOutputShape(e){e=qn(e);const r="channelsFirst"===this.dataFormat?e[3]:e[2],o="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,i=la("channelsFirst"===this.dataFormat?e[2]:e[1],this.kernelSize[0],this.padding,this.strides[0]),a=la(r,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],o,i,a]:[e[0],i,a,o]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=Ps(this.depthwiseInitializer),e.depthwiseRegularizer=os(this.depthwiseRegularizer),e.depthwiseConstraint=fr(this.depthwiseRegularizer),e}}return t.className="DepthwiseConv2D",t})();function UA(t,n,e,s){if(Array.isArray(t)){if(null!=n||null!=e)throw new Be("When inputs is an array, neither initialState or constants should be provided");null!=s&&(e=t.slice(t.length-s,t.length),t=t.slice(0,t.length-s)),t.length>1&&(n=t.slice(1,t.length)),t=t[0]}function r(o){return null==o||Array.isArray(o)?o:[o]}return{inputs:t,initialState:n=r(n),constants:e=r(e)}}function VA(t,n,e,s=!1,r,o,i=!1,a=!1){return u.tidy(()=>{const l=n.shape.length;if(l<3)throw new Be(`Input should be at least 3D, but is ${l}D.`);const c=[1,0].concat(sa(2,l));if(n=u.transpose(n,c),null!=o)throw new mn("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=r&&((r=u.cast(u.cast(r,"bool"),"float32")).rank===l-1&&(r=u.expandDims(r,-1)),r=u.transpose(r,c)),s&&(n=u.reverse(n,0),null!=r&&(r=u.reverse(r,0)));const d=[];let f,p=e;const m=n.shape[0],y=u.unstack(n);let _,x;null!=r&&(_=u.unstack(r));for(let D=0;D<m;++D){const C=y[D],F=u.tidy(()=>t(C,p));if(null==r)f=F[0],p=F[1];else{const B=u.tidy(()=>{const Z=_[D],ce=u.sub(u.onesLike(Z),Z);return{output:u.add(u.mul(F[0],Z),u.mul(p[0],ce)),newStates:p.map((Fe,Le)=>u.add(u.mul(F[1][Le],Z),u.mul(Fe,ce)))}});f=B.output,p=B.newStates}a&&d.push(f)}return a&&(x=u.stack(d,1)),[f,x,p]})}u.serialization.registerClass(Pre);let Rf=(()=>{class t extends Fn{constructor(e){let s;if(super(e),null==e.cell)throw new Be("cell property is missing for the constructor of RNN.");if(s=Array.isArray(e.cell)?new GA({cells:e.cell}):e.cell,null==s.stateSize)throw new Be("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=s,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new hr({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){return null==this.states_?sa(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map(s=>null):this.states_}setStates(e){this.states_=e}computeOutputShape(e){Ux(e)&&(e=e[0]);let s=this.cell.stateSize;Array.isArray(s)||(s=[s]);const r=s[0];let o;if(o=this.returnSequences?[e[0],e[1],r]:[e[0],r],this.returnState){const i=[];for(const a of s)i.push([e[0],a]);return[o].concat(i)}return o}computeMask(e,s){return u.tidy(()=>{Array.isArray(s)&&(s=s[0]);const r=this.returnSequences?s:null;if(this.returnState){const o=this.states.map(i=>null);return[r].concat(o)}return r})}get states(){if(null==this.states_){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,s=[];for(let r=0;r<e;++r)s.push(null);return s}return this.states_}set states(e){this.states_=e}build(e){if(null!=this.numConstants)throw new mn("Constants support is not implemented in RNN yet.");Ux(e)&&(e=e[0]);const r=this.stateful?e[0]:null,o=e.slice(2);this.inputSpec[0]=new hr({shape:[r,null,...o]});const i=[e[0]].concat(e.slice(2));let a;if(this.cell.build(i),a=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!u.util.arraysEqual(this.stateSpec.map(l=>l.shape[l.shape.length-1]),a))throw new Be(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=a.map(l=>new hr({shape:[null,l]}));this.stateful&&this.resetStates()}resetStates(e,s=!1){(0,u.tidy)(()=>{if(!this.stateful)throw new Qa("Cannot call resetStates() on an RNN Layer that is not stateful.");const r=this.inputSpec[0].shape[0];if(null==r)throw new Be("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)this.states_=Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(o=>u.zeros([r,o])):[u.zeros([r,this.cell.stateSize])];else if(null==e)u.dispose(this.states_),null!=this.keptStates&&(u.dispose(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(o=>u.zeros([r,o])):this.states_[0]=u.zeros([r,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new Be(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);!0===s?this.keptStates.push(this.states_.slice()):u.dispose(this.states_);for(let o=0;o<this.states_.length;++o){const i=e[o],a=Array.isArray(this.cell.stateSize)?this.cell.stateSize[o]:this.cell.stateSize,l=[r,a];if(!u.util.arraysEqual(i.shape,l))throw new Be(`State ${o} is incompatible with layer ${this.name}: expected shape=${l}, received shape=${i.shape}`);this.states_[o]=i}}this.states_=this.states_.map(o=>u.keep(o.clone()))})}apply(e,s){let r=null==s?null:s.initialState,o=null==s?null:s.constants;null==s&&(s={});const i=UA(e,r,o,this.numConstants);e=i.inputs,r=i.initialState,o=i.constants;let a=[],l=[];if(null!=r){s.initialState=r,a=a.concat(r),this.stateSpec=[];for(const d of r)this.stateSpec.push(new hr({shape:d.shape}));l=l.concat(this.stateSpec)}if(null!=o&&(s.constants=o,a=a.concat(o),this.numConstants=o.length),a[0]instanceof el){const d=[e].concat(a),f=this.inputSpec.concat(l),p=this.inputSpec;this.inputSpec=f;const m=super.apply(d,s);return this.inputSpec=p,m}return super.apply(e,s)}call(e,s){return(0,u.tidy)(()=>{const r=null==s?null:s.mask,o=null==s?null:s.training;let i=null==s?null:s.initialState;e=vn(e),null==i&&(i=this.stateful?this.states_:this.getInitialState(e));const a=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(i.length!==a)throw new Be(`RNN Layer has ${a} state(s) but was passed ${i.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const l={training:o},d=VA((_,x)=>{const D=this.cell.call([_].concat(x),l);return[D[0],D.slice(1)]},e,i,this.goBackwards,r,null,this.unroll,this.returnSequences),f=d[0],p=d[1],m=d[2];this.stateful&&this.resetStates(m,o);const y=this.returnSequences?p:f;return this.returnState?[y].concat(m):y})}getInitialState(e){return(0,u.tidy)(()=>{let s=u.zeros(e.shape);return s=u.sum(s,[1,2]),s=If(s),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(r=>r>1?Lx(s,[1,r]):s):this.cell.stateSize>1?[Lx(s,[1,this.cell.stateSize])]:[s]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),s={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(s.numConstants=this.numConstants);const r=this.cell.getConfig();return this.getClassName()===t.className&&(s.cell={className:this.cell.getClassName(),config:r}),Object.assign({},r,e,s)}static fromConfig(e,s,r={}){const i=Ll(s.cell,r);return new e(Object.assign(s,{cell:i}))}}return t.className="RNN",t})();u.serialization.registerClass(Rf);class Ig extends Fn{}let zA=(()=>{class t extends Ig{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Dr(this.units,"units"),this.activation=Tu(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Ss(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Ss(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Ss(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Ns(e.kernelRegularizer),this.recurrentRegularizer=Ns(e.recurrentRegularizer),this.biasRegularizer=Ns(e.biasRegularizer),this.kernelConstraint=pr(e.kernelConstraint),this.recurrentConstraint=pr(e.recurrentConstraint),this.biasConstraint=pr(e.biasConstraint),this.dropout=Ud([1,bu([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Ud([1,bu([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=qn(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.bias=this.useBias?this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):null,this.built=!0}call(e,s){return(0,u.tidy)(()=>{if(2!==e.length)throw new Be(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let r=e[1];e=e[0];const o=null!=s.training&&s.training;let i;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=wu({ones:()=>u.onesLike(e),rate:this.dropout,training:o,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=wu({ones:()=>u.onesLike(r),rate:this.recurrentDropout,training:o,dropoutFunc:this.dropoutFunc}));const a=this.dropoutMask,l=this.recurrentDropoutMask;i=Ja(null!=a?u.mul(e,a):e,this.kernel.read()),null!=this.bias&&(i=oa(i,this.bias.read())),null!=l&&(r=u.mul(r,l));let c=u.add(i,Ja(r,this.recurrentKernel.read()));return null!=this.activation&&(c=this.activation.apply(c)),[c,c]})}getConfig(){const e=super.getConfig(),s={units:this.units,activation:Iu(this.activation),useBias:this.useBias,kernelInitializer:Ps(this.kernelInitializer),recurrentInitializer:Ps(this.recurrentInitializer),biasInitializer:Ps(this.biasInitializer),kernelRegularizer:os(this.kernelRegularizer),recurrentRegularizer:os(this.recurrentRegularizer),biasRegularizer:os(this.biasRegularizer),activityRegularizer:os(this.activityRegularizer),kernelConstraint:fr(this.kernelConstraint),recurrentConstraint:fr(this.recurrentConstraint),biasConstraint:fr(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign({},e,s)}}return t.className="SimpleRNNCell",t})();u.serialization.registerClass(zA);let $re=(()=>{class t extends Rf{constructor(e){e.cell=new zA(e),super(e)}call(e,s){return(0,u.tidy)(()=>(null!=this.cell.dropoutMask&&(u.dispose(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(u.dispose(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),super.call(e,{mask:null==s?null:s.mask,training:null==s?null:s.training,initialState:null==s?null:s.initialState})))}static fromConfig(e,s){return new e(s)}}return t.className="SimpleRNN",t})();u.serialization.registerClass($re);let WA=(()=>{class t extends Ig{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new Be("GRUCell does not support reset_after parameter set to true.");this.units=e.units,Dr(this.units,"units"),this.activation=Tu(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Tu(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Ss(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Ss(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Ss(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Ns(e.kernelRegularizer),this.recurrentRegularizer=Ns(e.recurrentRegularizer),this.biasRegularizer=Ns(e.biasRegularizer),this.kernelConstraint=pr(e.kernelConstraint),this.recurrentConstraint=pr(e.recurrentConstraint),this.biasConstraint=pr(e.biasConstraint),this.dropout=Ud([1,bu([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Ud([1,bu([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=qn(e),this.kernel=this.addWeight("kernel",[e[e.length-1],3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.bias=this.useBias?this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):null,this.built=!0}call(e,s){return(0,u.tidy)(()=>{if(2!==e.length)throw new Be(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);const r=null!=s.training&&s.training;let o=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=wu({ones:()=>u.onesLike(e),rate:this.dropout,training:r,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=wu({ones:()=>u.onesLike(o),rate:this.recurrentDropout,training:r,count:3,dropoutFunc:this.dropoutFunc}));const a=this.recurrentDropoutMask;let l,c,d;0<this.dropout&&this.dropout<1&&(e=u.mul(e,this.dropoutMask[0]));let f=Ja(e,this.kernel.read());this.useBias&&(f=oa(f,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(o=u.mul(o,a[0]));const p=this.recurrentKernel.read(),[m,y]=u.split(p,[2*this.units,this.units],p.rank-1),_=Ja(o,m),[x,D,C]=u.split(f,3,f.rank-1),[F,B]=u.split(_,2,_.rank-1);l=this.recurrentActivation.apply(u.add(x,F)),c=this.recurrentActivation.apply(u.add(D,B));const Z=Ja(u.mul(c,o),y);d=this.activation.apply(u.add(C,Z));const ce=u.add(u.mul(l,o),u.mul(u.add(1,u.neg(l)),d));return[ce,ce]})}getConfig(){const e=super.getConfig(),s={units:this.units,activation:Iu(this.activation),recurrentActivation:Iu(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Ps(this.kernelInitializer),recurrentInitializer:Ps(this.recurrentInitializer),biasInitializer:Ps(this.biasInitializer),kernelRegularizer:os(this.kernelRegularizer),recurrentRegularizer:os(this.recurrentRegularizer),biasRegularizer:os(this.biasRegularizer),activityRegularizer:os(this.activityRegularizer),kernelConstraint:fr(this.kernelConstraint),recurrentConstraint:fr(this.recurrentConstraint),biasConstraint:fr(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign({},e,s)}}return t.className="GRUCell",t})();u.serialization.registerClass(WA);let Fre=(()=>{class t extends Rf{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new WA(e),super(e)}call(e,s){return(0,u.tidy)(()=>(null!=this.cell.dropoutMask&&(u.dispose(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(u.dispose(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),super.call(e,{mask:null==s?null:s.mask,training:null==s?null:s.training,initialState:null==s?null:s.initialState})))}static fromConfig(e,s){return 0===s.implmentation&&(s.implementation=1),new e(s)}}return t.className="GRU",t})();u.serialization.registerClass(Fre);let mE=(()=>{class t extends Ig{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Dr(this.units,"units"),this.activation=Tu(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Tu(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Ss(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Ss(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Ss(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=Ns(e.kernelRegularizer),this.recurrentRegularizer=Ns(e.recurrentRegularizer),this.biasRegularizer=Ns(e.biasRegularizer),this.kernelConstraint=pr(e.kernelConstraint),this.recurrentConstraint=pr(e.recurrentConstraint),this.biasConstraint=pr(e.biasConstraint),this.dropout=Ud([1,bu([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Ud([1,bu([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var s;let o;if(e=qn(e),this.kernel=this.addWeight("kernel",[e[e.length-1],4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const i=this.biasInitializer,a=this.units;o=new((s=class extends vi{apply(c,d){const f=i.apply([a]),p=(new ZN).apply([a]),m=i.apply([2*a]);return KN(KN(f,p),m)}}).className="CustomInit",s)}else o=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,o,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,s){return(0,u.tidy)(()=>{const r=null!=s.training&&s.training;if(3!==e.length)throw new Be(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let o=e[1];const i=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=wu({ones:()=>u.onesLike(e),rate:this.dropout,training:r,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=wu({ones:()=>u.onesLike(o),rate:this.recurrentDropout,training:r,count:4,dropoutFunc:this.dropoutFunc}));const l=this.recurrentDropoutMask;let c,d,f,p;0<this.dropout&&this.dropout<1&&(e=u.mul(e,this.dropoutMask[0]));let m=Ja(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(o=u.mul(o,l[0])),m=u.add(m,Ja(o,this.recurrentKernel.read())),this.useBias&&(m=oa(m,this.bias.read()));const[y,_,x,D]=u.split(m,4,m.rank-1);c=this.recurrentActivation.apply(y),d=this.recurrentActivation.apply(_),f=u.add(u.mul(d,i),u.mul(c,this.activation.apply(x))),p=this.recurrentActivation.apply(D);const C=u.mul(p,this.activation.apply(f));return[C,C,f]})}getConfig(){const e=super.getConfig(),s={units:this.units,activation:Iu(this.activation),recurrentActivation:Iu(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Ps(this.kernelInitializer),recurrentInitializer:Ps(this.recurrentInitializer),biasInitializer:Ps(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:os(this.kernelRegularizer),recurrentRegularizer:os(this.recurrentRegularizer),biasRegularizer:os(this.biasRegularizer),activityRegularizer:os(this.activityRegularizer),kernelConstraint:fr(this.kernelConstraint),recurrentConstraint:fr(this.recurrentConstraint),biasConstraint:fr(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign({},e,s)}}return t.className="LSTMCell",t})();u.serialization.registerClass(mE);let Lre=(()=>{class t extends Rf{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new mE(e),super(e)}call(e,s){return(0,u.tidy)(()=>(null!=this.cell.dropoutMask&&(u.dispose(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(u.dispose(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),super.call(e,{mask:null==s?null:s.mask,training:null==s?null:s.training,initialState:null==s?null:s.initialState})))}static fromConfig(e,s){return 0===s.implmentation&&(s.implementation=1),new e(s)}}return t.className="LSTM",t})();u.serialization.registerClass(Lre);let GA=(()=>{class t extends Ig{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const s of this.cells.slice().reverse())Array.isArray(s.stateSize)?e.push(...s.stateSize):e.push(s.stateSize);return e}call(e,s){return(0,u.tidy)(()=>{let r=e.slice(1);const o=[];for(const l of this.cells.slice().reverse())Array.isArray(l.stateSize)?o.push(r.splice(0,l.stateSize.length)):o.push(r.splice(0,1));o.reverse();const i=[];let a;for(let l=0;l<this.cells.length;++l){const c=this.cells[l];r=o[l],a=0===l?[e[0]].concat(r):[a[0]].concat(r),a=c.call(a,s),i.push(a.slice(1))}r=[];for(const l of i.slice().reverse())r.push(...l);return[a[0]].concat(r)})}build(e){let s;Ux(e)&&(e=e[0]),this.cells.forEach((r,o)=>{pc(`RNNCell_${o}`,()=>{r.build(e),s=Array.isArray(r.stateSize)?r.stateSize[0]:r.stateSize,e=[e[0],s]})}),this.built=!0}getConfig(){const e=super.getConfig(),o={cells:this.cells.map(i=>({className:i.getClassName(),config:i.getConfig()}))};return Object.assign({},e,o)}static fromConfig(e,s,r={}){const o=[];for(const i of s.cells)o.push(Ll(i,r));return new e({cells:o})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const s of this.cells)e.push(...s.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const s of this.cells)e.push(...s.nonTrainableWeights);if(!this.trainable){const s=[];for(const r of this.cells)s.push(...r.trainableWeights);return s.concat(e)}return e}getWeights(){const e=[];for(const s of this.cells)e.push(...s.weights);return Vx(e)}setWeights(e){const s=[];for(const r of this.cells){const i=e.splice(r.weights.length);for(let a=0;a<r.weights.length;++a)s.push([r.weights[a],i[a]])}zx(s)}}return t.className="StackedRNNCells",t})();function wu(t){const{ones:n,rate:e,training:s=!1,count:r=1,dropoutFunc:o}=t,i=()=>null!=o?o(n(),e):XN(n(),e),a=()=>wf(i,n,s);return!r||r<=1?u.keep(a().clone()):Array(r).fill(void 0).map(a).map(c=>u.keep(c.clone()))}u.serialization.registerClass(GA);let Ure=(()=>{class t extends Rf{constructor(e){if(e.unroll)throw new mn("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new mn("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new hr({ndim:5})]}call(e,s){return u.tidy(()=>{if(null!=this.cell.dropoutMask&&(u.dispose(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(u.dispose(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),s&&s.constants)throw new Be("ConvRNN2D cell does not support constants");return super.call(e,{mask:null==s?null:s.mask,training:null==s?null:s.training,initialState:null==s?null:s.initialState})})}computeOutputShape(e){let s=this.computeSingleOutputShape(e);return this.returnSequences||(s=[s[0],...s.slice(2)]),this.returnState&&(s=[s,...Array(2).fill([e[0],...s.slice(-3)])]),s}getInitialState(e){return u.tidy(()=>{const{stateSize:s}=this.cell,o=this.computeSingleOutputShape(e.shape),i=[o[0],...o.slice(2)],a=u.zeros(i);return Array.isArray(s)?Array(s.length).fill(a):[a]})}resetStates(e,s=!1){u.tidy(()=>{if(!this.stateful)throw new Qa("Cannot call resetStates() on an RNN Layer that is not stateful.");const r=this.inputSpec[0].shape,o=this.computeSingleOutputShape(r),i=[o[0],...o.slice(2)];if(null==r[0])throw new Be("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())this.states_=Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(()=>u.zeros(i)):[u.zeros(i)];else if(null==e)u.dispose(this.states_),null!=this.keptStates&&(u.dispose(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>u.zeros(i)):this.states_[0]=u.zeros(i);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new Be(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);s?this.keptStates.push(this.states_.slice()):u.dispose(this.states_);for(let l=0;l<this.states_.length;++l){const c=e[l],d=i;if(!u.util.arraysEqual(c.shape,d))throw new Be(`State ${l} is incompatible with layer ${this.name}: expected shape=${d}, received shape=${c.shape}`);this.states_[l]=c}}this.states_=this.states_.map(l=>u.keep(l.clone()))})}computeSingleOutputShape(e){const{dataFormat:s,filters:r,kernelSize:o,padding:i,strides:a,dilationRate:l}=this.cell,c="channelsFirst"===s,f=e[c?4:3],p=la(e[c?3:2],o[0],i,a[0],l[0]),m=la(f,o[1],i,a[1],l[1]);return[...e.slice(0,2),...c?[r,p,m]:[p,m,r]]}}return t.className="ConvRNN2D",t})(),HA=(()=>{class t extends mE{constructor(e){const{filters:s,kernelSize:r,strides:o,padding:i,dataFormat:a,dilationRate:l}=e;super(Object.assign({},e,{units:s})),this.filters=s,Dr(this.filters,"filters"),this.kernelSize=Wd(r,2,"kernelSize"),this.kernelSize.forEach(c=>Dr(c,"kernelSize")),this.strides=Wd(o||1,2,"strides"),this.strides.forEach(c=>Dr(c,"strides")),this.padding=i||"valid",Ko(this.padding),this.dataFormat=a||"channelsLast",Zs(this.dataFormat),this.dilationRate=Wd(l||1,2,"dilationRate"),this.dilationRate.forEach(c=>Dr(c,"dilationRate"))}build(e){var s;e=qn(e);const r="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[r])throw new Be(`The channel dimension of the input should be defined. Found ${e[r]}`);const a=this.kernelSize.concat([e[r],4*this.filters]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const l=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",l,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let c;if(this.unitForgetBias){const d=this.biasInitializer,f=this.filters;c=new((s=class extends vi{apply(m,y){return Fx([d.apply([f]),u.ones([f]),d.apply([2*f])])}}).className="CustomInit",s)}else c=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,c,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,s){return u.tidy(()=>{if(3!==e.length)throw new Be(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const r=s.training||!1,o=e[0],i=e[1],a=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=wu({ones:()=>u.onesLike(o),rate:this.dropout,training:r,count:4,dropoutFunc:this.dropoutFunc}));const c=this.dropoutMask,d=(Ze,et,ut)=>et&&et[ut]?u.mul(et[ut],Ze):Ze;let f=d(o,c,0),p=d(o,c,1),m=d(o,c,2),y=d(o,c,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=wu({ones:()=>u.onesLike(i),rate:this.recurrentDropout,training:r,count:4,dropoutFunc:this.dropoutFunc}));const _=this.recurrentDropoutMask;let x=d(i,_,0),D=d(i,_,1),C=d(i,_,2),F=d(i,_,3);const[Z,ce,ve,_e]=u.split(this.kernel.read(),4,3),[Fe,Le,Xe,tt]=this.useBias?u.split(this.bias.read(),4):[null,null,null,null];f=this.inputConv(f,Z,Fe,this.padding),p=this.inputConv(p,ce,Le,this.padding),m=this.inputConv(m,ve,Xe,this.padding),y=this.inputConv(y,_e,tt,this.padding);const[nt,st,Je,qe]=u.split(this.recurrentKernel.read(),4,3);x=this.recurrentConv(x,nt),D=this.recurrentConv(D,st),C=this.recurrentConv(C,Je),F=this.recurrentConv(F,qe);const lt=this.recurrentActivation.apply(u.add(f,x)),Me=this.recurrentActivation.apply(u.add(p,D)),$e=u.add(u.mul(Me,a),u.mul(lt,this.activation.apply(u.add(m,C)))),Ge=u.mul(this.recurrentActivation.apply(u.add(y,F)),this.activation.apply($e));return[Ge,Ge,$e]})}getConfig(){const r=function(t,n){var e={};for(var s in t)Object.prototype.hasOwnProperty.call(t,s)&&n.indexOf(s)<0&&(e[s]=t[s]);if(null!=t&&"function"==typeof Object.getOwnPropertySymbols){var r=0;for(s=Object.getOwnPropertySymbols(t);r<s.length;r++)n.indexOf(s[r])<0&&Object.prototype.propertyIsEnumerable.call(t,s[r])&&(e[s[r]]=t[s[r]])}return e}(super.getConfig(),["units"]);return Object.assign({},r,{filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides})}inputConv(e,s,r,o){const i=u.conv2d(e,s,this.strides,o||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return r?oa(i,r,this.dataFormat):i}recurrentConv(e,s){return u.conv2d(e,s,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}return t.className="ConvLSTM2DCell",t})();u.serialization.registerClass(HA),u.serialization.registerClass((()=>{class t extends Ure{constructor(e){const s=new HA(e);super(Object.assign({},e,{cell:s}))}static fromConfig(e,s){return new e(s)}}return t.className="ConvLSTM2D",t})());let KA=(()=>{class t extends Fn{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;const s=e.shape,r=[];for(let o=0;o<this.noiseShape.length;++o)r.push(null==this.noiseShape[o]?s[o]:this.noiseShape[o]);return r}call(e,s){return(0,u.tidy)(()=>{this.invokeCallHook(e,s);const r=vn(e);if(0<this.rate&&this.rate<1){const o=null!=s.training&&s.training,i=this.getNoiseShape(r);return wf(()=>XN(r,this.rate,i,this.seed),()=>r,o)}return e})}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},s=super.getConfig();return Object.assign(e,s),e}dispose(){return super.dispose()}}return t.className="Dropout",t})();u.serialization.registerClass(KA),u.serialization.registerClass((()=>{class t extends KA{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const s=e.shape;return[s[0],1,s[2]]}}return t.className="SpatialDropout1D",t})()),u.serialization.registerClass((()=>{class t extends Fn{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let s=null;null!=e.batchSize&&(s=e.batchSize),this.batchInputShape=[s,e.inputDim]}this.units=e.units,Dr(this.units,"units"),this.activation=Tu(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=Ss(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=Ss(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=pr(e.kernelConstraint),this.biasConstraint=pr(e.biasConstraint),this.kernelRegularizer=Ns(e.kernelRegularizer),this.biasRegularizer=Ns(e.biasRegularizer),this.activityRegularizer=Ns(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){const s=(e=qn(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[s,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:s}}],this.built=!0}computeOutputShape(e){const s=(e=qn(e)).slice();return s[s.length-1]=this.units,s}call(e,s){return(0,u.tidy)(()=>{this.invokeCallHook(e,s);const r=vn(e),o=LN(this.activation.getClassName());let i;return null!=o?i=Ja(r,this.kernel.read(),o,this.bias?this.bias.read():null):(i=Ja(r,this.kernel.read()),null!=this.bias&&(i=oa(i,this.bias.read())),null!=this.activation&&(i=this.activation.apply(i))),i})}getConfig(){const e={units:this.units,activation:Iu(this.activation),useBias:this.useBias,kernelInitializer:Ps(this.kernelInitializer),biasInitializer:Ps(this.biasInitializer),kernelRegularizer:os(this.kernelRegularizer),biasRegularizer:os(this.biasRegularizer),activityRegularizer:os(this.activityRegularizer),kernelConstraint:fr(this.kernelConstraint),biasConstraint:fr(this.biasConstraint)},s=super.getConfig();return Object.assign(e,s),e}}return t.className="Dense",t})());let Gre=(()=>{class t extends Fn{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=qn(e);for(const s of e.slice(1))if(null==s)throw new Be(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],_u(e,1)]}call(e,s){return(0,u.tidy)(()=>{this.invokeCallHook(e,s);let r=vn(e);if("channelsFirst"===this.dataFormat&&r.rank>1){const o=[0];for(let i=2;i<r.rank;++i)o.push(i);o.push(1),r=(0,u.transpose)(r,o)}return function kne(t){if(t.rank<=1)throw new Be(`batchFlatten requires a minimum rank of 2. Got rank: ${t.rank}.`);const n=[t.shape[0],_u(t.shape,1)];return u.reshape(t,n)}(r)})}getConfig(){const e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);const s=super.getConfig();return Object.assign(e,s),e}}return t.className="Flatten",t})();u.serialization.registerClass(Gre),u.serialization.registerClass((()=>{class t extends Fn{constructor(e){super(e),this.supportsMasking=!0,this.activation=Tu(e.activation)}call(e,s){return(0,u.tidy)(()=>{this.invokeCallHook(e,s);const r=vn(e);return this.activation.apply(r)})}getConfig(){const e={activation:Iu(this.activation)},s=super.getConfig();return Object.assign(e,s),e}}return t.className="Activation",t})()),u.serialization.registerClass((()=>{class t extends Fn{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,s){return(0,u.tidy)(()=>function Rne(t,n){return(0,u.tidy)(()=>{if(2!==t.shape.length)throw new Be(`repeat() expects a rank-2 tensor, but received a rank-${t.shape.length} tensor.`);return Lx(If(t,1),[1,n,1])})}(e=vn(e),this.n))}getConfig(){const e={n:this.n},s=super.getConfig();return Object.assign(e,s),e}}return t.className="RepeatVector",t})()),u.serialization.registerClass((()=>{class t extends Fn{constructor(e){super(e),this.targetShape=e.targetShape;for(let s=0;s<this.targetShape.length;++s)this.isUnknown(this.targetShape[s])&&(this.targetShape[s]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,s){const r="Total size of new array must be unchanged.",o=s.slice();let i=1,a=null;for(let c=0;c<o.length;++c){const d=o[c];if(this.isUnknown(d)){if(null!==a)throw new Be("Can only specifiy one unknown dimension.");a=c}else i*=d}const l=_u(e);if(null!==a){if(0===i||l%i!=0)throw new Be(r);o[a]=l/i}else if(l!==i)throw new Be(r);return o}computeOutputShape(e){let s=!1;for(let r=0;r<e.length;++r)if(this.isUnknown(e[r])){s=!0;break}return s?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,s){return(0,u.tidy)(()=>{this.invokeCallHook(e,s);const r=vn(e),o=r.shape,i=o.slice(0,1).concat(this.fixUnknownDimension(o.slice(1),this.targetShape));return(0,u.reshape)(r,i)})}getConfig(){const e={targetShape:this.targetShape},s=super.getConfig();return Object.assign(e,s),e}}return t.className="Reshape",t})());let Xre=(()=>{class t extends Fn{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);const s=sa(1,e.dims.length+1);if(!u.util.arraysEqual(e.dims.slice().sort(),s))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new hr({ndim:this.dims.length+1})]}computeOutputShape(e){const s=(e=qn(e)).slice();return this.dims.forEach((r,o)=>{s[o+1]=e[r]}),s}call(e,s){return(0,u.transpose)(vn(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},s=super.getConfig();return Object.assign(e,s),e}}return t.className="Permute",t})();u.serialization.registerClass(Xre),u.serialization.registerClass((()=>{class t extends Fn{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),s={maskValue:this.maskValue};return Object.assign(s,e),s}computeMask(e,s){const r=vn(e);return(0,u.any)((0,u.notEqual)(r,this.maskValue),-1)}call(e,s){return(0,u.tidy)(()=>{this.invokeCallHook(e,s);const r=vn(e),a=(0,u.any)((0,u.notEqual)(r,this.maskValue),-1,!0);return(0,u.mul)(r,(0,u.cast)(a,r.dtype))})}}return t.className="Masking",t})()),u.serialization.registerClass((()=>{class t extends Fn{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let s=null;null!=e.batchSize&&(s=e.batchSize),this.batchInputShape=null==e.inputLength?[s,null]:[s].concat(hs(e.inputLength))}this.inputDim=e.inputDim,Dr(this.inputDim,"inputDim"),this.outputDim=e.outputDim,Dr(this.outputDim,"outputDim"),this.embeddingsInitializer=Ss(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=Ns(e.embeddingsRegularizer),this.activityRegularizer=Ns(e.activityRegularizer),this.embeddingsConstraint=pr(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,s){return(0,u.tidy)(()=>this.maskZero?(e=vn(e),(0,u.notEqual)(e,(0,u.zerosLike)(e))):null)}computeOutputShape(e){if(e=qn(e),null==this.inputLength)return[...e,this.outputDim];const s=hs(this.inputLength);if(s.length!==e.length-1)throw new Be(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let r=0;for(let o=0;o<s.length;++o){const i=s[o],a=e[o+1];if(null!=i&&null!=a&&i!==a)throw new Be(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);null==i&&(s[r]=a),r++}}return[e[0],...s,this.outputDim]}call(e,s){return(0,u.tidy)(()=>{this.invokeCallHook(e,s);let r=vn(e);"int32"!==r.dtype&&(r=Df(r,"int32"));const o=jN(this.embeddings.read(),(0,u.reshape)(r,[r.size]));return(0,u.reshape)(o,qn(this.computeOutputShape(r.shape)))})}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Ps(this.embeddingsInitializer),embeddingsRegularizer:os(this.embeddingsRegularizer),activityRegularizer:os(this.activityRegularizer),embeddingsConstraint:fr(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},s=super.getConfig();return Object.assign(e,s),e}}return t.className="Embedding",t})());class gc extends Fn{constructor(n){super(n||{}),this.supportsMasking=!0}mergeFunction(n){throw new mn}computeElementwiseOpOutputShape(n,e){if(null==n||null==e)return null;if(n.length<e.length)return this.computeElementwiseOpOutputShape(e,n);if(0===e.length)return n;const s=n.slice(0,n.length-e.length);for(let r=0;r<e.length;++r){const o=n[n.length-e.length+r],i=e[r];if(null==o||null==i||o<0||i<0)s.push(null);else if(1===o)s.push(i);else if(1===i)s.push(o);else{if(o!==i)throw new Be("Operands could not be broadcast together with shapes "+JSON.stringify(n)+" "+JSON.stringify(e));s.push(o)}}return s}build(n){if(Array.isArray(n)&&!Array.isArray(n[0])&&(n=[qn(n)]),n.length<2)throw new Be(`A merge layer should be called on an Array of at least 2 inputs. Got ${n.length} input(s).`);let e=[];for(const o of n)null!=o&&null!==o[0]&&e.push(o[0]);if(e=Eu(e),e.length>1)throw new Be(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(n)}.`);let s=null==n[0]?null:n[0].slice(1);for(let o=1;o<n.length;++o){const i=null==n[o]?null:n[o].slice(1);s=this.computeElementwiseOpOutputShape(s,i)}const r=n.map(o=>o.length);this.reshapeRequired=-1!==n.indexOf(null)||1!==Eu(r).length}call(n,e){return(0,u.tidy)(()=>{if(this.reshapeRequired){const s=[],r=n.map(o=>o.rank);if(-1===r.indexOf(null)){const o=bu(r);for(let i of n){const a=i.rank;for(let l=0;l<o-a;++l)i=If(i,1);s.push(i)}return this.mergeFunction(s)}{let o=!1;for(const l of n){const c=l.rank;if(null==c){const d=l.shape,f=d[0],p=d.slice(1).concat([f]);let m=u.reshape(l,[f].concat(_u(d.slice(1))));m=u.transpose(m,[1,0]),m=u.reshape(m,p),s.push(m),o=!0}else if(c>1){const d=sa(1,c).concat([0]);s.push(u.transpose(l,d)),o=!0}else s.push(l)}let i=this.mergeFunction(s);const a=i.rank;if(o)if(null==a){const l=i.shape,d=l[l.length-1],f=[d].concat(l.slice(0,l.length-1));i=u.reshape(u.transpose(u.reshape(i,[-1,d]),[1,0]),f)}else if(a>1){const l=[a-1].concat(sa(0,a-1));i=u.transpose(i,l)}return i}}return this.mergeFunction(n)})}computeOutputShape(n){let e;e=null==n[0]?null:n[0].slice(1);for(let r=1;r<n.length;++r){const o=null==n[r]?null:n[r].slice(1);e=this.computeElementwiseOpOutputShape(e,o)}let s=[];for(const r of n)null!=r&&null!==r[0]&&s.push(r[0]);return s=Eu(s),e=1===s.length?s.concat(e):[null].concat(e),e}computeMask(n,e){return u.tidy(()=>{if(null==e)return null;if(!Array.isArray(e))throw new Be("`mask` should be an Array");if(!Array.isArray(n))throw new Be("`inputs` should be an Array");if(e.length!==n.length)throw new Be(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${n.length} vs ${e.length})`);if(e.every(r=>null==r))return null;let s=(e=e.map(r=>null==r?r:u.expandDims(r,0)))[0];for(let r=1;r<e.length-1;++r)s=u.logicalAnd(s,e[r]);return s})}}let gE=(()=>{class t extends gc{constructor(e){super(e)}mergeFunction(e){return(0,u.tidy)(()=>{let s=e[0].clone();for(let r=1;r<e.length;++r)s=u.add(s,e[r]);return s})}}return t.className="Add",t})();u.serialization.registerClass(gE);let yE=(()=>{class t extends gc{constructor(e){super(e)}mergeFunction(e){return(0,u.tidy)(()=>{let s=e[0].clone();for(let r=1;r<e.length;++r)s=u.mul(s,e[r]);return s})}}return t.className="Multiply",t})();u.serialization.registerClass(yE);let vE=(()=>{class t extends gc{constructor(e){super(e)}mergeFunction(e){return(0,u.tidy)(()=>{let s=e[0].clone();for(let r=1;r<e.length;++r)s=u.add(s,e[r]);return u.mul(1/e.length,s)})}}return t.className="Average",t})();u.serialization.registerClass(vE);let xE=(()=>{class t extends gc{constructor(e){super(e)}mergeFunction(e){return(0,u.tidy)(()=>{let s=e[0];for(let r=1;r<e.length;++r)s=u.maximum(s,e[r]);return s})}}return t.className="Maximum",t})();u.serialization.registerClass(xE);let EE=(()=>{class t extends gc{constructor(e){super(e)}mergeFunction(e){return(0,u.tidy)(()=>{let s=e[0];for(let r=1;r<e.length;++r)s=u.minimum(s,e[r]);return s})}}return t.className="Minimum",t})();u.serialization.registerClass(EE);let _E=(()=>{class t extends gc{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new Be("A `Concatenate` layer should be called on a list of at least 2 inputs");let s=!0;for(const o of e)if(null!=o){s=!1;break}if(s)return;const r=[];for(let o=0;o<e.length;++o){const i=e[o].slice();i.splice(this.axis,1);let a=!1;for(const l of r)if(u.util.arraysEqual(l,i)){a=!0;break}a||r.push(i)}if(r.length>1)throw new Be("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return(0,u.tidy)(()=>Fx(e,this.axis))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new Be("A `Concatenate` layer should be called on a list of inputs.");const s=e,r=s[0].slice(),o=this.axis<0?r.length+this.axis:this.axis;for(const i of s.slice(1)){if(null==r[o]||null==i[o]){r[o]=null;break}r[o]+=i[o]}return r}computeMask(e,s){if(null==s)return null;if(!Array.isArray(s))throw new Be("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new Be("`inputs` should be an array for Concatenate");if(s.length!==e.length)throw new Be(`Mismatch in the length of mask (${s.length}) and the legnth of inputs (${e.length})`);return u.tidy(()=>{let r=!0;if(s.forEach(a=>{null==a||(r=!1)}),r)return null;const o=[];for(let a=0;a<e.length;++a)o.push(null==s[a]?u.cast(u.onesLike(e[a]),"bool"):s[a].rank<e[a].rank?u.expandDims(s[a],-1):s[a]);const i=u.concat(o,this.axis);return u.all(i,-1,!1)})}getConfig(){const e={axis:this.axis},s=super.getConfig();return Object.assign(e,s),e}}return t.className="Concatenate",t})();function Mf(t,n){for(;t<0;)t+=n;return t}u.serialization.registerClass(_E);let Jre=(()=>{class t extends gc{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){u.util.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const s=e[0],r=e[1];if(s.length>3||r.length>3)throw new mn("Dot layer does not support tensors of 4D or higher rank yet.");const o=this.interpretAxes(s,r);if(s[o[0]]!==r[o[1]])throw new Be(`Dimension incompatibility: ${s[o[0]]} !== ${r[o[1]]}`)}mergeFunction(e){if(2!==e.length)throw new Be(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let o,s=e[0],r=e[1];return o=Array.isArray(this.axes)?this.axes.map((i,a)=>Mf(i,e[a].shape.length)):[Mf(this.axes,s.shape.length),Mf(this.axes,r.shape.length)],this.normalize&&(s=gg(s,o[0]),r=gg(r,o[1])),function Qre(t,n,e){if(t.shape.length>3||n.shape.length>3)throw new mn("batchDot is not implemented for tensors of 4D or higher rank yet");if(u.util.assert(t.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${t.shape.length}`),u.util.assert(t.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${n.shape.length}`),"number"==typeof e&&(e=[e,e]),"complex64"===t.dtype||"complex64"===n.dtype)throw new mn("batchDot is not implemented for complex64-type Tensors yet.");const s=t.shape.length,r=n.shape.length;null==e&&(e=[s-1,r-2]);const o=e;return u.tidy(()=>{let i,a;if(s>r){i=s-r;const l=[];for(let c=0;c<i;++c)l.push(1);n=u.reshape(n,n.shape.concat(l))}else if(r>s){i=r-s;const l=[];for(let c=0;c<i;++c)l.push(1);t=u.reshape(t,t.shape.concat(l))}else i=0;if(a=2===t.shape.length&&2===n.shape.length?o[0]===o[1]?u.sum(u.mul(t,n),o[0]):u.sum(u.mul(u.transpose(t,[1,0]),n),o[1]):u.matMul(t,n,o[0]!==t.shape.length-1,o[1]===n.shape.length-1),i>0){let l;l=s>r?s+r-3:s-1;const c=[];for(let d=l;d<l+i;++d)c.push(d);a=u.squeeze(a,c)}return 1===a.shape.length&&(a=u.expandDims(a,1)),a})}(s,r,o)}interpretAxes(e,s){let r;return r=Array.isArray(this.axes)?this.axes:[Mf(this.axes,e.length),Mf(this.axes,s.length)],r}computeOutputShape(e){u.util.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const s=e[0].slice(),r=e[1].slice();if(s.length>3||r.length>3)throw new mn("Dot layer does not support tensors of 4D or higher rank yet.");const o=this.interpretAxes(s,r);s.splice(o[0],1),r.splice(o[1],1),r.splice(0,1);const i=s.concat(r);return 1===i.length&&i.push(1),i}computeMask(e,s){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},s=super.getConfig();return Object.assign(e,s),e}}return t.className="Dot",t})();function kf(t,n,e,s,r,o=.001){let i;if(2===t.rank)i=u.batchNorm2d(t,n,e,s,r,o);else if(3===t.rank)i=u.batchNorm3d(t,n,e,s,r,o);else{if(4!==t.rank)throw new mn(`batchNormalization is not implemented for array of rank ${t.rank} yet`);i=u.batchNorm4d(t,n,e,s,r,o)}return i}u.serialization.registerClass(Jre),u.serialization.registerClass((()=>{class t extends Fn{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),s={stddev:this.stddev};return Object.assign(s,e),s}call(e,s){return(0,u.tidy)(()=>{this.invokeCallHook(e,s);const r=vn(e);return wf(()=>(0,u.add)(ug(r.shape,0,this.stddev),r),()=>r,s.training||!1)})}}return t.className="GaussianNoise",t})()),u.serialization.registerClass((()=>{class t extends Fn{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),s={rate:this.rate};return Object.assign(s,e),s}call(e,s){return(0,u.tidy)(()=>{this.invokeCallHook(e,s);const r=vn(e);return this.rate>0&&this.rate<1?wf(()=>{const i=Math.sqrt(this.rate/(1-this.rate));return(0,u.mul)(r,ug(r.shape,1,i))},()=>r,s.training||!1):r})}}return t.className="GaussianDropout",t})()),u.serialization.registerClass((()=>{class t extends Fn{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||vn(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),s={rate:this.rate};return Object.assign(s,e),s}call(e,s){return(0,u.tidy)(()=>{if(this.rate<1&&this.rate>0){const r=this._getNoiseShape(e);return wf(()=>{const i=vn(e),c=-1.7580993408473766;let d=(0,u.greaterEqual)((0,u.randomUniform)(r),this.rate);d=Df(d,"float32");const f=((1-this.rate)*(1+this.rate*c**2))**-.5,p=-f*c*this.rate,m=(0,u.add)((0,u.mul)(i,d),(0,u.mul)((0,u.add)(d,-1),c));return(0,u.add)((0,u.mul)(m,f),p)},()=>vn(e),s.training||!1)}return e})}}return t.className="AlphaDropout",t})());let ooe=(()=>{class t extends Fn{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=Ss(e.betaInitializer||"zeros"),this.gammaInitializer=Ss(e.gammaInitializer||"ones"),this.movingMeanInitializer=Ss(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=Ss(e.movingVarianceInitializer||"ones"),this.betaConstraint=pr(e.betaConstraint),this.gammaConstraint=pr(e.gammaConstraint),this.betaRegularizer=Ns(e.betaRegularizer),this.gammaRegularizer=Ns(e.gammaRegularizer)}build(e){e=qn(e);const s=this.axis>=0?this.axis:this.axis+e.length,r=e[s];if(null==r)throw new Be(`Axis ${s} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new hr({ndim:e.length,axes:{[s]:r}})];const o=[r];this.scale&&(this.gamma=this.addWeight("gamma",o,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",o,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",o,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",o,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,s){return(0,u.tidy)(()=>{const r=null!=s.training&&s.training,o=vn(e),i=o.shape,a=i.length,l=sa(0,a),c=this.axis>=0?this.axis:this.axis+a;l.splice(c,1);const d=dc(1,a);d[c]=i[c];const f=l.slice();f.sort();const p=!u.util.arraysEqual(f,sa(0,a).slice(0,a-1));if(!r)return(()=>{if(p){const F=(0,u.reshape)(this.movingMean.read(),d),B=(0,u.reshape)(this.movingVariance.read(),d),Z=this.center?(0,u.reshape)(this.beta.read(),d):null,ce=this.scale?(0,u.reshape)(this.gamma.read(),d):null;return kf(o,F,B,Z,ce,this.epsilon)}return kf(o,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[y,_,x]=function roe(t,n,e,s,r=.001){return u.util.arraysEqual(s.slice().sort(),sa(0,t.rank-1))?function noe(t,n,e,s,r=.001){return(0,u.tidy)(()=>{const o=u.moments(t,s),i=o.mean,a=o.variance;return[kf(t,i,a,e,n,r),i,a]})}(t,n,e,s,r):function soe(t,n,e,s,r=.001){return(0,u.tidy)(()=>{const o=u.moments(t,s),i=o.mean,a=o.variance,l=[];for(const y of sa(0,t.rank))-1!==s.indexOf(y)?l.push(1):l.push(t.shape[y]);const c=(0,u.reshape)(i,l),d=(0,u.reshape)(a,l),f=null==n?null:(0,u.reshape)(n,l),p=null==e?null:(0,u.reshape)(e,l);return[kf(t,c,d,p,f,r),i,a]})}(t,n,e,s,r)}(o,this.gamma.read(),this.beta.read(),l,this.epsilon),D=(F,B,Z)=>{u.tidy(()=>{const ce=1-Z,ve=F.read(),_e=u.mul(u.sub(ve,B),ce);F.write(u.sub(ve,_e))})};return(()=>{D(this.movingMean,_,this.momentum),D(this.movingVariance,x,this.momentum)})(),y})}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Ps(this.betaInitializer),gammaInitializer:Ps(this.gammaInitializer),movingMeanInitializer:Ps(this.movingMeanInitializer),movingVarianceInitializer:Ps(this.movingVarianceInitializer),betaRegularizer:os(this.betaRegularizer),gammaRegularizer:os(this.gammaRegularizer),betaConstraint:fr(this.betaConstraint),gammaConstraint:fr(this.gammaConstraint)},s=super.getConfig();return Object.assign(e,s),e}}return t.className="BatchNormalization",t})();u.serialization.registerClass(ooe);let ioe=(()=>{class t extends Fn{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(const s of this.axis)if(!Number.isInteger(s))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=Ss(e.betaInitializer||"zeros"),this.gammaInitializer=Ss(e.gammaInitializer||"ones"),this.betaRegularizer=Ns(e.betaRegularizer),this.gammaRegularizer=Ns(e.gammaRegularizer),this.supportsMasking=!0}build(e){const s=(e=qn(e)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let i=0;i<this.axis.length;++i)this.axis[i]<0&&(this.axis[i]+=s);for(const i of this.axis)if(i<0||i>=s)throw new Error(`Invalid axis: ${i}`);if(this.axis.length!==Eu(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const r=this.axis.map(i=>e[i]);this.gamma=this.scale?this.addWeight("gamma",r,"float32",this.gammaInitializer,this.gammaRegularizer,!0):null,this.beta=this.center?this.addWeight("beta",r,"float32",this.betaInitializer,this.betaRegularizer,!0):null,this.built=!0}call(e,s){const r=vn(e),o=r.shape,i=o.length;return(0,u.tidy)(()=>{let{mean:l,variance:c}=(0,u.moments)(r,this.axis,!0);const d=dc(1,i);for(const x of this.axis)d[x]=o[x];const f=x=>null!=x&&x.shape.length!==i?u.reshape(x,d):x;let p=this.scale?f(this.gamma.read()):null,m=this.center?f(this.beta.read()):null;const y=[],_=[];for(let x=0;x<i;++x)-1!==this.axis.indexOf(x)?(y.push(o[x]),_.push(1)):(y.push(1),_.push(o[x]));return l=u.tile(l,y),c=u.tile(c,y),null!=p&&(p=u.tile(p,_)),null!=m&&(m=u.tile(m,_)),kf(r,l,c,m,p,this.epsilon)})}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Ps(this.betaInitializer),gammaInitializer:Ps(this.gammaInitializer),betaRegularizer:os(this.betaRegularizer),gammaRegularizer:os(this.gammaRegularizer)},s=super.getConfig();return Object.assign(e,s),e}}return t.className="LayerNormalization",t})();u.serialization.registerClass(ioe);let loe=(()=>{class t extends Fn{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new Be(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let s,r;if("number"==typeof e.padding[0])s=[e.padding[0],e.padding[0]],r=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new Be(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(s=e.padding[0],2!==e.padding[1].length)throw new Be(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);r=e.padding[1]}this.padding=[s,r]}this.inputSpec=[new hr({ndim:4})]}computeOutputShape(e){let s,r;return e=qn(e),"channelsFirst"===this.dataFormat?(s=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,r=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],s,r]):(s=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,r=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],s,r,e[3]])}call(e,s){return(0,u.tidy)(()=>function aoe(t,n,e){return(0,u.tidy)(()=>{if(4!==t.rank)throw new Be(`temporalPadding expects input tensor to be 4-D, but received a ${t.rank}-D tensor.`);if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new Be("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==e&&(e="channelsLast"),"channelsLast"!==e&&"channelsFirst"!==e)throw new Be(`Unknown data format: ${e}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let s;return s="channelsFirst"===e?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],u.pad(t,s)})}(vn(e),this.padding,this.dataFormat))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},s=super.getConfig();return Object.assign(e,s),e}}return t.className="ZeroPadding2D",t})();function Tg(t,n,e,s,r,o){return(0,u.tidy)(()=>{let i;Zs(r),UN(o),Ko(s),null==e&&(e=[1,1]),null==s&&(s="valid"),null==r&&(r="channelsLast"),null==o&&(o="max"),t=fE(t,r);const a="same"===s?"same":"valid";return i="max"===o?u.maxPool(t,n,e,a):u.avgPool(t,n,e,a),"channelsFirst"===r&&(i=u.transpose(i,[0,3,1,2])),i})}function jA(t,n,e,s,r,o){return(0,u.tidy)(()=>{let i;Zs(r),UN(o),Ko(s),null==e&&(e=[1,1,1]),null==s&&(s="valid"),null==r&&(r="channelsLast"),null==o&&(o="max"),t=PA(t,r);const a="same"===s?"same":"valid";return i="max"===o?u.maxPool3d(t,n,e,a):u.avgPool3d(t,n,e,a),"channelsFirst"===r&&(i=u.transpose(i,[0,4,1,2,3])),i})}u.serialization.registerClass(loe);class XA extends Fn{constructor(n){if(null==n.poolSize&&(n.poolSize=2),super(n),"number"==typeof n.poolSize)this.poolSize=[n.poolSize];else{if(!Array.isArray(n.poolSize)||1!==n.poolSize.length||"number"!=typeof n.poolSize[0])throw new Be(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(n.poolSize)}`);this.poolSize=n.poolSize}if(Dr(this.poolSize,"poolSize"),null==n.strides)this.strides=this.poolSize;else if("number"==typeof n.strides)this.strides=[n.strides];else{if(!Array.isArray(n.strides)||1!==n.strides.length||"number"!=typeof n.strides[0])throw new Be(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(n.strides)}`);this.strides=n.strides}Dr(this.strides,"strides"),this.padding=null==n.padding?"valid":n.padding,Ko(this.padding),this.inputSpec=[new hr({ndim:3})]}computeOutputShape(n){const e=la((n=qn(n))[1],this.poolSize[0],this.padding,this.strides[0]);return[n[0],e,n[2]]}call(n,e){return(0,u.tidy)(()=>{this.invokeCallHook(n,e),n=If(vn(n),2);const s=this.poolingFunction(vn(n),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return u.squeeze(s,[2])})}getConfig(){const n={poolSize:this.poolSize,padding:this.padding,strides:this.strides},e=super.getConfig();return Object.assign(n,e),n}}u.serialization.registerClass((()=>{class t extends XA{constructor(e){super(e)}poolingFunction(e,s,r,o,i){return Zs(i),Ko(o),Tg(e,s,r,o,i,"max")}}return t.className="MaxPooling1D",t})()),u.serialization.registerClass((()=>{class t extends XA{constructor(e){super(e)}poolingFunction(e,s,r,o,i){return Zs(i),Ko(o),Tg(e,s,r,o,i,"avg")}}return t.className="AveragePooling1D",t})());class ZA extends Fn{constructor(n){if(null==n.poolSize&&(n.poolSize=[2,2]),super(n),this.poolSize=Array.isArray(n.poolSize)?n.poolSize:[n.poolSize,n.poolSize],null==n.strides)this.strides=this.poolSize;else if(Array.isArray(n.strides)){if(2!==n.strides.length)throw new Be(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${n.strides.length}.`);this.strides=n.strides}else this.strides=[n.strides,n.strides];Dr(this.poolSize,"poolSize"),Dr(this.strides,"strides"),this.padding=null==n.padding?"valid":n.padding,this.dataFormat=null==n.dataFormat?"channelsLast":n.dataFormat,Zs(this.dataFormat),Ko(this.padding),this.inputSpec=[new hr({ndim:4})]}computeOutputShape(n){n=qn(n);let e="channelsFirst"===this.dataFormat?n[2]:n[1],s="channelsFirst"===this.dataFormat?n[3]:n[2];return e=la(e,this.poolSize[0],this.padding,this.strides[0]),s=la(s,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[n[0],n[1],e,s]:[n[0],e,s,n[3]]}call(n,e){return(0,u.tidy)(()=>(this.invokeCallHook(n,e),this.poolingFunction(vn(n),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const n={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(n,e),n}}u.serialization.registerClass((()=>{class t extends ZA{constructor(e){super(e)}poolingFunction(e,s,r,o,i){return Zs(i),Ko(o),Tg(e,s,r,o,i,"max")}}return t.className="MaxPooling2D",t})()),u.serialization.registerClass((()=>{class t extends ZA{constructor(e){super(e)}poolingFunction(e,s,r,o,i){return Zs(i),Ko(o),Tg(e,s,r,o,i,"avg")}}return t.className="AveragePooling2D",t})());class YA extends Fn{constructor(n){if(null==n.poolSize&&(n.poolSize=[2,2,2]),super(n),this.poolSize=Array.isArray(n.poolSize)?n.poolSize:[n.poolSize,n.poolSize,n.poolSize],null==n.strides)this.strides=this.poolSize;else if(Array.isArray(n.strides)){if(3!==n.strides.length)throw new Be(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${n.strides.length}.`);this.strides=n.strides}else this.strides=[n.strides,n.strides,n.strides];Dr(this.poolSize,"poolSize"),Dr(this.strides,"strides"),this.padding=null==n.padding?"valid":n.padding,this.dataFormat=null==n.dataFormat?"channelsLast":n.dataFormat,Zs(this.dataFormat),Ko(this.padding),this.inputSpec=[new hr({ndim:5})]}computeOutputShape(n){n=qn(n);let e="channelsFirst"===this.dataFormat?n[2]:n[1],s="channelsFirst"===this.dataFormat?n[3]:n[2],r="channelsFirst"===this.dataFormat?n[4]:n[3];return e=la(e,this.poolSize[0],this.padding,this.strides[0]),s=la(s,this.poolSize[1],this.padding,this.strides[1]),r=la(r,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[n[0],n[1],e,s,r]:[n[0],e,s,r,n[4]]}call(n,e){return(0,u.tidy)(()=>(this.invokeCallHook(n,e),this.poolingFunction(vn(n),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const n={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(n,e),n}}u.serialization.registerClass((()=>{class t extends YA{constructor(e){super(e)}poolingFunction(e,s,r,o,i){return Zs(i),Ko(o),jA(e,s,r,o,i,"max")}}return t.className="MaxPooling3D",t})()),u.serialization.registerClass((()=>{class t extends YA{constructor(e){super(e)}poolingFunction(e,s,r,o,i){return Zs(i),Ko(o),jA(e,s,r,o,i,"avg")}}return t.className="AveragePooling3D",t})());class QA extends Fn{constructor(n){super(n),this.inputSpec=[new hr({ndim:3})]}computeOutputShape(n){return[n[0],n[2]]}call(n,e){throw new mn}}let moe=(()=>{class t extends QA{constructor(e){super(e||{})}call(e,s){return(0,u.tidy)(()=>{const r=vn(e);return u.mean(r,1)})}}return t.className="GlobalAveragePooling1D",t})();u.serialization.registerClass(moe);let goe=(()=>{class t extends QA{constructor(e){super(e||{})}call(e,s){return(0,u.tidy)(()=>{const r=vn(e);return u.max(r,1)})}}return t.className="GlobalMaxPooling1D",t})();u.serialization.registerClass(goe);class JA extends Fn{constructor(n){super(n),this.dataFormat=null==n.dataFormat?"channelsLast":n.dataFormat,Zs(this.dataFormat),this.inputSpec=[new hr({ndim:4})]}computeOutputShape(n){return"channelsLast"===this.dataFormat?[n[0],n[3]]:[n[0],n[1]]}call(n,e){throw new mn}getConfig(){const n={dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(n,e),n}}let yoe=(()=>{class t extends JA{call(e,s){return(0,u.tidy)(()=>{const r=vn(e);return u.mean(r,"channelsLast"===this.dataFormat?[1,2]:[2,3])})}}return t.className="GlobalAveragePooling2D",t})();u.serialization.registerClass(yoe);let voe=(()=>{class t extends JA{call(e,s){return(0,u.tidy)(()=>{const r=vn(e);return u.max(r,"channelsLast"===this.dataFormat?[1,2]:[2,3])})}}return t.className="GlobalMaxPooling2D",t})();u.serialization.registerClass(voe);class qA extends Fn{constructor(n){super(n),this.layer=n.layer}build(n){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(n){null!=this.layer&&(this.layer.trainable=n)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(n){this.layer.setWeights(n)}getConfig(){const n={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},e=super.getConfig();return Object.assign(n,e),n}setFastWeightInitDuringBuild(n){super.setFastWeightInitDuringBuild(n),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(n)}static fromConfig(n,e,s={}){const o=Ll(e.layer,s);delete e.layer;const i={layer:o};return Object.assign(i,e),new n(i)}}u.serialization.registerClass((()=>{class t extends qA{constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=qn(e)).length<3)throw new Be(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];const s=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(s),this.layer.built=!0),super.build(e)}computeOutputShape(e){const s=[(e=qn(e))[0]].concat(e.slice(2)),r=this.layer.computeOutputShape(s);return[r[0],e[1]].concat(r.slice(1))}call(e,s){return(0,u.tidy)(()=>VA((a,l)=>[vn(this.layer.call(a,s)),[]],e=vn(e),[],!1,null,null,!1,!0)[1])}}return t.className="TimeDistributed",t})());let boe=(()=>{class t extends qA{constructor(e){super(e);const s=e.layer.getConfig(),r={};r.className=e.layer.getClassName(),r.config=s,this.forwardLayer=Ll(r),s.goBackwards=!0!==s.goBackwards;const o={};if(o.className=e.layer.getClassName(),o.config=s,this.backwardLayer=Ll(o),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?"concat":e.mergeMode,function Eoe(t){fc(Ine,"BidirectionalMergeMode",t)}(this.mergeMode),e.weights)throw new mn("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const r=Math.floor(e.length/2);this.forwardLayer.setWeights(e.slice(0,r)),this.backwardLayer.setWeights(e.slice(r))}computeOutputShape(e){let r,o,i,s=this.forwardLayer.computeOutputShape(e);return Array.isArray(s)&&Array.isArray(s[0])||(s=[s]),this.returnState&&(i=s.slice(1)),r=s[0],"concat"===this.mergeMode?(r[r.length-1]*=2,o=[r]):o=null==this.mergeMode?[r,r.slice()]:[r],this.returnState?null==this.mergeMode?o.concat(i).concat(i.slice()):[r].concat(i).concat(i.slice()):yo(o)}apply(e,s){let r=null==s?null:s.initialState,o=null==s?null:s.constants;null==s&&(s={});const i=UA(e,r,o,this.numConstants);if(e=i.inputs,r=i.initialState,o=i.constants,Array.isArray(e)&&(r=e.slice(1),e=e[0]),(null==r||0===r.length)&&null==o)return super.apply(e,s);const a=[],l=[];if(null!=r){const d=r.length;if(d%2>0)throw new Be("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");s.initialState=r,a.push(...r);const f=r.map(p=>new hr({shape:p.shape}));this.forwardLayer.stateSpec=f.slice(0,d/2),this.backwardLayer.stateSpec=f.slice(d/2),l.push(...f)}if(null!=o)throw new mn("Support for constants in Bidirectional layers is not implemented yet.");const c=a[0]instanceof el;for(const d of a)if(d instanceof el!==c)throw new Be("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(c){const d=[e].concat(a),f=this.inputSpec.concat(l),p=this.inputSpec;this.inputSpec=f;const m=super.apply(d,s);return this.inputSpec=p,m}return super.apply(e,s)}call(e,s){return(0,u.tidy)(()=>{const r=s.initialState;let o,i,a,l;if(null==r)o=this.forwardLayer.call(e,s),i=this.backwardLayer.call(e,s);else{const c=r.slice(0,r.length/2),d=r.slice(r.length/2);o=this.forwardLayer.call(e,Object.assign(s,{initialState:c})),i=this.backwardLayer.call(e,Object.assign(s,{initialState:d}))}return this.returnState&&(Array.isArray(o)&&(a=o.slice(1).concat(i.slice(1))),o=o[0],i=i[0]),this.returnSequences&&(i=u.reverse(i,1)),"concat"===this.mergeMode?l=Fx([o,i]):"sum"===this.mergeMode?l=u.add(o,i):"ave"===this.mergeMode?l=u.mul(.5,u.add(o,i)):"mul"===this.mergeMode?l=u.mul(o,i):null==this.mergeMode&&(l=[o,i]),this.returnState?null==this.mergeMode?l.concat(a):[l].concat(a):l})}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){pc(this.forwardLayer.name,()=>{this.forwardLayer.build(e)}),pc(this.backwardLayer.name,()=>{this.backwardLayer.build(e)}),this.built=!0}computeMask(e,s){let r;if(Array.isArray(s)&&(s=s[0]),r=this.returnSequences?null==this.mergeMode?[s,s]:s:null==this.mergeMode?[null,null]:null,this.returnState){const i=this.forwardLayer.states.map(a=>null);return Array.isArray(r)?r.concat(i).concat(i):[r].concat(i).concat(i)}return r}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},s=super.getConfig();return Object.assign(e,s),e}static fromConfig(e,s){const r=Ll(s.layer);if(delete s.layer,null!=s.numConstants)throw new mn("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const o=s;return o.layer=r,new e(o)}}return t.className="Bidirectional",t})();u.serialization.registerClass(boe),u.serialization.registerClass((()=>{class t extends Fn{constructor(e){super(e),this.scale=e.scale,this.offset=e.offset?e.offset:0}getConfig(){const e={scale:this.scale,offset:this.offset},s=super.getConfig();return Object.assign(e,s),e}call(e,s){return(0,u.tidy)(()=>("float32"!==(e=vn(e)).dtype&&(e=Df(e,"float32")),(0,u.add)((0,u.mul)(e,this.scale),this.offset)))}}return t.className="Rescaling",t})());var Sg=h(4554);function pO(t,n,e,s,r,o,i){try{var a=t[o](i),l=a.value}catch(c){return void e(c)}a.done?n(l):Promise.resolve(l).then(s,r)}function mO(t){return function(){var n=this,e=arguments;return new Promise(function(s,r){var o=t.apply(n,e);function i(l){pO(o,s,r,i,a,"next",l)}function a(l){pO(o,s,r,i,a,"throw",l)}i(void 0)})}}Symbol("out"),Symbol("field"),Symbol("quote"),Symbol("quoteafterquote"),Symbol("quoteinquote");var Rg=function eie(t,n){return t(n={exports:{}},n.exports),n.exports}(function(t){var n=function(e){var o,s=Object.prototype,r=s.hasOwnProperty,i="function"==typeof Symbol?Symbol:{},a=i.iterator||"@@iterator",l=i.asyncIterator||"@@asyncIterator",c=i.toStringTag||"@@toStringTag";function d(Me,$e,Ge){return Object.defineProperty(Me,$e,{value:Ge,enumerable:!0,configurable:!0,writable:!0}),Me[$e]}try{d({},"")}catch(Me){d=function($e,Ge,Ze){return $e[Ge]=Ze}}function f(Me,$e,Ge,Ze){var ut=Object.create(($e&&$e.prototype instanceof C?$e:C).prototype),Ct=new Je(Ze||[]);return ut._invoke=function Xe(Me,$e,Ge){var Ze=m;return function(ut,Ct){if(Ze===_)throw new Error("Generator is already running");if(Ze===x){if("throw"===ut)throw Ct;return lt()}for(Ge.method=ut,Ge.arg=Ct;;){var vt=Ge.delegate;if(vt){var wt=tt(vt,Ge);if(wt){if(wt===D)continue;return wt}}if("next"===Ge.method)Ge.sent=Ge._sent=Ge.arg;else if("throw"===Ge.method){if(Ze===m)throw Ze=x,Ge.arg;Ge.dispatchException(Ge.arg)}else"return"===Ge.method&&Ge.abrupt("return",Ge.arg);Ze=_;var Ot=p(Me,$e,Ge);if("normal"===Ot.type){if(Ze=Ge.done?x:y,Ot.arg===D)continue;return{value:Ot.arg,done:Ge.done}}"throw"===Ot.type&&(Ze=x,Ge.method="throw",Ge.arg=Ot.arg)}}}(Me,Ge,Ct),ut}function p(Me,$e,Ge){try{return{type:"normal",arg:Me.call($e,Ge)}}catch(Ze){return{type:"throw",arg:Ze}}}e.wrap=f;var m="suspendedStart",y="suspendedYield",_="executing",x="completed",D={};function C(){}function F(){}function B(){}var Z={};d(Z,a,function(){return this});var ce=Object.getPrototypeOf,ve=ce&&ce(ce(qe([])));ve&&ve!==s&&r.call(ve,a)&&(Z=ve);var _e=B.prototype=C.prototype=Object.create(Z);function Fe(Me){["next","throw","return"].forEach(function($e){d(Me,$e,function(Ge){return this._invoke($e,Ge)})})}function Le(Me,$e){function Ge(ut,Ct,vt,wt){var Ot=p(Me[ut],Me,Ct);if("throw"!==Ot.type){var jt=Ot.arg,Gt=jt.value;return Gt&&"object"==typeof Gt&&r.call(Gt,"__await")?$e.resolve(Gt.__await).then(function(un){Ge("next",un,vt,wt)},function(un){Ge("throw",un,vt,wt)}):$e.resolve(Gt).then(function(un){jt.value=un,vt(jt)},function(un){return Ge("throw",un,vt,wt)})}wt(Ot.arg)}var Ze;this._invoke=function et(ut,Ct){function vt(){return new $e(function(wt,Ot){Ge(ut,Ct,wt,Ot)})}return Ze=Ze?Ze.then(vt,vt):vt()}}function tt(Me,$e){var Ge=Me.iterator[$e.method];if(Ge===o){if($e.delegate=null,"throw"===$e.method){if(Me.iterator.return&&($e.method="return",$e.arg=o,tt(Me,$e),"throw"===$e.method))return D;$e.method="throw",$e.arg=new TypeError("The iterator does not provide a 'throw' method")}return D}var Ze=p(Ge,Me.iterator,$e.arg);if("throw"===Ze.type)return $e.method="throw",$e.arg=Ze.arg,$e.delegate=null,D;var et=Ze.arg;return et?et.done?($e[Me.resultName]=et.value,$e.next=Me.nextLoc,"return"!==$e.method&&($e.method="next",$e.arg=o),$e.delegate=null,D):et:($e.method="throw",$e.arg=new TypeError("iterator result is not an object"),$e.delegate=null,D)}function nt(Me){var $e={tryLoc:Me[0]};1 in Me&&($e.catchLoc=Me[1]),2 in Me&&($e.finallyLoc=Me[2],$e.afterLoc=Me[3]),this.tryEntries.push($e)}function st(Me){var $e=Me.completion||{};$e.type="normal",delete $e.arg,Me.completion=$e}function Je(Me){this.tryEntries=[{tryLoc:"root"}],Me.forEach(nt,this),this.reset(!0)}function qe(Me){if(Me){var $e=Me[a];if($e)return $e.call(Me);if("function"==typeof Me.next)return Me;if(!isNaN(Me.length)){var Ge=-1,Ze=function et(){for(;++Ge<Me.length;)if(r.call(Me,Ge))return et.value=Me[Ge],et.done=!1,et;return et.value=o,et.done=!0,et};return Ze.next=Ze}}return{next:lt}}function lt(){return{value:o,done:!0}}return F.prototype=B,d(_e,"constructor",B),d(B,"constructor",F),F.displayName=d(B,c,"GeneratorFunction"),e.isGeneratorFunction=function(Me){var $e="function"==typeof Me&&Me.constructor;return!!$e&&($e===F||"GeneratorFunction"===($e.displayName||$e.name))},e.mark=function(Me){return Object.setPrototypeOf?Object.setPrototypeOf(Me,B):(Me.__proto__=B,d(Me,c,"GeneratorFunction")),Me.prototype=Object.create(_e),Me},e.awrap=function(Me){return{__await:Me}},Fe(Le.prototype),d(Le.prototype,l,function(){return this}),e.AsyncIterator=Le,e.async=function(Me,$e,Ge,Ze,et){void 0===et&&(et=Promise);var ut=new Le(f(Me,$e,Ge,Ze),et);return e.isGeneratorFunction($e)?ut:ut.next().then(function(Ct){return Ct.done?Ct.value:ut.next()})},Fe(_e),d(_e,c,"Generator"),d(_e,a,function(){return this}),d(_e,"toString",function(){return"[object Generator]"}),e.keys=function(Me){var $e=[];for(var Ge in Me)$e.push(Ge);return $e.reverse(),function Ze(){for(;$e.length;){var et=$e.pop();if(et in Me)return Ze.value=et,Ze.done=!1,Ze}return Ze.done=!0,Ze}},e.values=qe,Je.prototype={constructor:Je,reset:function(Me){if(this.prev=0,this.next=0,this.sent=this._sent=o,this.done=!1,this.delegate=null,this.method="next",this.arg=o,this.tryEntries.forEach(st),!Me)for(var $e in this)"t"===$e.charAt(0)&&r.call(this,$e)&&!isNaN(+$e.slice(1))&&(this[$e]=o)},stop:function(){this.done=!0;var $e=this.tryEntries[0].completion;if("throw"===$e.type)throw $e.arg;return this.rval},dispatchException:function(Me){if(this.done)throw Me;var $e=this;function Ge(wt,Ot){return ut.type="throw",ut.arg=Me,$e.next=wt,Ot&&($e.method="next",$e.arg=o),!!Ot}for(var Ze=this.tryEntries.length-1;Ze>=0;--Ze){var et=this.tryEntries[Ze],ut=et.completion;if("root"===et.tryLoc)return Ge("end");if(et.tryLoc<=this.prev){var Ct=r.call(et,"catchLoc"),vt=r.call(et,"finallyLoc");if(Ct&&vt){if(this.prev<et.catchLoc)return Ge(et.catchLoc,!0);if(this.prev<et.finallyLoc)return Ge(et.finallyLoc)}else if(Ct){if(this.prev<et.catchLoc)return Ge(et.catchLoc,!0)}else{if(!vt)throw new Error("try statement without catch or finally");if(this.prev<et.finallyLoc)return Ge(et.finallyLoc)}}}},abrupt:function(Me,$e){for(var Ge=this.tryEntries.length-1;Ge>=0;--Ge){var Ze=this.tryEntries[Ge];if(Ze.tryLoc<=this.prev&&r.call(Ze,"finallyLoc")&&this.prev<Ze.finallyLoc){var et=Ze;break}}et&&("break"===Me||"continue"===Me)&&et.tryLoc<=$e&&$e<=et.finallyLoc&&(et=null);var ut=et?et.completion:{};return ut.type=Me,ut.arg=$e,et?(this.method="next",this.next=et.finallyLoc,D):this.complete(ut)},complete:function(Me,$e){if("throw"===Me.type)throw Me.arg;return"break"===Me.type||"continue"===Me.type?this.next=Me.arg:"return"===Me.type?(this.rval=this.arg=Me.arg,this.method="return",this.next="end"):"normal"===Me.type&&$e&&(this.next=$e),D},finish:function(Me){for(var $e=this.tryEntries.length-1;$e>=0;--$e){var Ge=this.tryEntries[$e];if(Ge.finallyLoc===Me)return this.complete(Ge.completion,Ge.afterLoc),st(Ge),D}},catch:function(Me){for(var $e=this.tryEntries.length-1;$e>=0;--$e){var Ge=this.tryEntries[$e];if(Ge.tryLoc===Me){var Ze=Ge.completion;if("throw"===Ze.type){var et=Ze.arg;st(Ge)}return et}}throw new Error("illegal catch attempt")},delegateYield:function(Me,$e,Ge){return this.delegate={iterator:qe(Me),resultName:$e,nextLoc:Ge},"next"===this.method&&(this.arg=o),D}},e}(t.exports);try{regeneratorRuntime=n}catch(e){"object"==typeof globalThis?globalThis.regeneratorRuntime=n:Function("r","regeneratorRuntime = r")(n)}}),tie=[640,640],nie={source:"https://raw.githubusercontent.com/SkalskiP/yolov5js-zoo/master/models/coco/yolov5m/model.json",classNames:["person","bicycle","car","motorcycle","airplane","bus","train","truck","boat","traffic light","fire hydrant","stop sign","parking meter","bench","bird","cat","dog","horse","sheep","cow","elephant","bear","zebra","giraffe","backpack","umbrella","handbag","tie","suitcase","frisbee","skis","snowboard","sports ball","kite","baseball bat","baseball glove","skateboard","surfboard","tennis racket","bottle","wine glass","cup","fork","knife","spoon","bowl","banana","apple","sandwich","orange","broccoli","carrot","hot dog","pizza","donut","cake","chair","couch","potted plant","bed","dining table","toilet","tv","laptop","mouse","remote","keyboard","cell phone","microwave","oven","toaster","sink","refrigerator","book","clock","vase","scissors","teddy bear","hair drier","toothbrush"]},gO=function(){function t(e,s,r){this.model=e,this.inferenceResolution=s,this.classNames=r}return t.preprocessImage=function(s,r){var o=u.browser.fromPixels(s),i=[s.height,s.width];return[u.image.resizeBilinear(o,r).div(255).expandDims(0),i]},t.postprocessResults=function(s,r,o,i,a,l){for(var c=void 0!==l?l:0,d=i[0],f=i[1],p=[],m=0;m<r.length;m++){var y=r[m];if(!(y<c)){for(var _=[],x=0;x<4;x++)_[x]=s[4*m+x];var D=_[0]*f,C=_[1]*d;p.push({x:D,y:C,width:_[2]*f-D,height:_[3]*d-C,score:y,classId:o[m],class:void 0!==a?a[o[m]]:void 0})}}return p},t.prototype.detect=function(){var e=mO(Rg.mark(function r(o,i){var l,c,d,f,p,m,y,a=this;return Rg.wrap(function(x){for(;;)switch(x.prev=x.next){case 0:return l=(0,u.tidy)(function(){return t.preprocessImage(o,a.inferenceResolution)}),c=l[0],d=l[1],x.next=3,this.model.executeAsync(c);case 3:return p=(f=x.sent)[0].dataSync(),m=f[1].dataSync(),y=f[2].dataSync(),c.dispose(),(0,u.dispose)(f),x.abrupt("return",t.postprocessResults(p,m,y,d,this.classNames,i));case 10:case"end":return x.stop()}},r,this)}));return function s(r,o){return e.apply(this,arguments)}}(),t}();function NE(){return(NE=mO(Rg.mark(function t(n,e){return Rg.wrap(function(r){for(;;)switch(r.prev=r.next){case 0:if(void 0===e&&(e=tie),"string"!=typeof n.source){r.next=5;break}return r.abrupt("return",(0,Sg.loadGraphModel)(n.source).then(function(o){return new gO(o,e,n.classNames)}));case 5:return r.abrupt("return",(0,Sg.loadGraphModel)(u.io.browserFiles(n.source)).then(function(o){return new gO(o,e,n.classNames)}));case 6:case"end":return r.stop()}},t)}))).apply(this,arguments)}const yO=["helmet","person","head"];let oie=(()=>{class t{constructor(){this.font="16px sans-serif",this.model$=Qn(Sg.loadGraphModel("assets/model/model.json")).pipe(St(e=>{var s;return console.info("Loaded model",e.inputs),(null===(s=null==e?void 0:e.inputs[0])||void 0===s?void 0:s.shape)&&([this.modelWidth,this.modelHeight]=e.inputs[0].shape.slice(1,3),console.log(this.modelWidth,this.modelHeight)),e}),pm(1)),this.model$.subscribe(e=>{var s;this.model=e,console.info("Loaded model",this.model.inputs),(null===(s=null==e?void 0:e.inputs[0])||void 0===s?void 0:s.shape)&&([this.modelWidth,this.modelHeight]=e.inputs[0].shape.slice(1,3),console.log(this.modelWidth,this.modelHeight))})}predict(e,s,r,o,i,a){return Ov(()=>{let l=e.getContext("2d");if(a&&i){let d=this.getScaledImageRect(i,e);this.drawImageOnCanvas(i,s,[0,0,i.width,i.height],d)}else o&&l.drawImage(o,0,0,o.videoWidth,o.videoHeight);const c=u.tidy(()=>u.image.resizeBilinear(u.browser.fromPixels(e),[this.modelWidth,this.modelHeight]).div(255).expandDims(0));return Qn(this.model.executeAsync(c)).pipe(St(d=>{r.drawImage(e,0,0,640,640),r.font=this.font,r.textBaseline="top";const[f,p,m,y]=d,_=f.dataSync(),x=p.dataSync(),D=m.dataSync(),C=y.dataSync()[0];var F;for(u.dispose(d),u.dispose(c),F=0;F<C;++F){const B=x[F].toFixed(2);if(B<.5){console.log("low threshold",B);continue}let[Z,ce,ve,_e]=_.slice(4*F,4*(F+1));Z*=e.width,ve*=e.width,ce*=e.height,_e*=e.height;const Fe=ve-Z,Le=_e-ce,Xe=yO[D[F]];r.strokeStyle="#00FFFF",r.lineWidth=2,r.strokeRect(Z,ce,Fe,Le),r.fillStyle="#00FFFF";const tt=r.measureText(Xe+":"+B).width,nt=parseInt(this.font,10);r.fillRect(Z,ce,tt+4,nt+4)}for(F=0;F<C;++F){const B=x[F].toFixed(2);if(B<.5){console.log("low threshold",B);continue}let[Z,ce,,]=_.slice(4*F,4*(F+1));Z*=e.width,ce*=e.height;const ve=yO[D[F]];r.fillStyle="#000000",r.fillText(ve+":"+B,Z,ce)}return xn(1)}))})}getScaledImageRect(e,s){console.log(s.width,s.height);const r=Math.min(s.width/e.naturalWidth,s.height/e.naturalHeight),o=Math.round(e.naturalWidth*r),i=Math.round(e.naturalHeight*r);return[(s.width-o)/2,(s.height-i)/2,o,i]}drawImageOnCanvas(e,s,r,o){const[i,a,l,c]=r,[d,f,p,m]=o;console.log(s.canvas.width),s.fillStyle="#000000",console.log(l,c),s.fillRect(0,0,s.canvas.width,s.canvas.height),s.drawImage(e,i,a,l,c,d,f,p,m)}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275cmp=jr({type:t,selectors:[["app-model-import"]],decls:0,vars:0,template:function(e,s){},styles:[""]}),t})();const iie=["inferenceCanvas"],aie=["frameCapture"],lie=["videoElement"];let uie=(()=>{class t{constructor(e){this.sanitizer=e,this.RESOLUTION=[640,640],this.importer=new oie,this.FONT_SIZE=12,this.FONT=this.FONT_SIZE+"px comic-sans",this.loadModelCocoSSD$=Qn(AJ.load({base:"mobilenet_v2"})),this.loadModelYOLO$=Qn(function sie(t,n){return NE.apply(this,arguments)}(nie)),this.loadModelYOLO$.subscribe(r=>console.log(r));var s=navigator;s.getUserMedia=s.getUserMedia||s.webkitGetUserMedia||s.mozGetUserMedia||s.msGetUserMedia,this.imageStream$=Qn(s.mediaDevices.getUserMedia({audio:!1,video:{width:640,height:640,facingMode:"environment"}}))}ngAfterViewInit(){this.video=this.videoElement.nativeElement,this.imageStream$.subscribe(e=>{this.video.srcObject=e,this.video.play()}),this.ctxFrameCapture=this.frameCapture.nativeElement.getContext("2d"),this.ctx=this.inferenceCanvas.nativeElement.getContext("2d"),this.ctx.font=this.FONT,this.ctx.textBaseline="top",this.classifyVideoCocoSSD$=Nv([this.loadModelCocoSSD$]).pipe(Ol(([e])=>e.detect(this.video)),St(e=>{const s=this.inferenceCanvas.nativeElement.getContext("2d");s.drawImage(this.video,0,0,this.video.videoWidth,this.video.videoHeight);for(let r of e){s.beginPath(),s.lineWidth=4,s.strokeStyle="blue",s.rect(r.bbox[0],r.bbox[1],r.bbox[2],r.bbox[3]),s.stroke();const o=r.class+": "+r.score.toFixed(1),i=this.ctx.measureText(o).width;this.ctx.fillStyle="blue",this.ctx.fillRect(r.bbox[0],r.bbox[1],i+4,this.FONT_SIZE+4),this.ctx.fillStyle="white",this.ctx.fillText(o,r.bbox[0],r.bbox[1])}})),this.classifyVideoYolo$=Nv([this.loadModelYOLO$]).pipe(Ol(([e])=>(this.ctxFrameCapture.drawImage(this.video,this.video.width,this.video.height),e.detect(this.frameCapture.nativeElement))),St(e=>{this.ctx.drawImage(this.video,0,0,this.video.videoWidth,this.video.videoHeight),this.ctx.beginPath();for(let s of e){this.ctx.lineWidth=4,this.ctx.strokeStyle="blue",this.ctx.rect(s.x,s.y,s.width,s.height),this.ctx.stroke();const r=s.class+": "+s.score.toFixed(1),o=this.ctx.measureText(r).width;this.ctx.fillStyle="blue",this.ctx.fillRect(s.x,s.y,o+4,this.FONT_SIZE+4),this.ctx.fillStyle="white",this.ctx.fillText(r,s.x,s.y)}}))}getDetectionInterval(e){return function FJ(t=0,n=QS){return t<0&&(t=0),function $J(t=0,n,e=kJ){let s=-1;return null!=n&&(ya(n)?e=n:s=n),new Ne(r=>{let o=function PJ(t){return t instanceof Date&&!isNaN(t)}(t)?+t-e.now():t;o<0&&(o=0);let i=0;return e.schedule(function(){r.closed||(r.next(i++),0<=s?this.schedule(void 0,s):r.complete())},o)})}(t,t,n)}(1).pipe(JS(()=>e))}inputEvent(e){let s=e.target.files[0];var r=new FileReader;r.readAsDataURL(s),r.onloadend=o=>{var i;console.log(o);var a=new Image;o.target&&(a.src=null===(i=null==o?void 0:o.target)||void 0===i?void 0:i.result),a.onload=l=>{this.importer.predict(this.frameCapture.nativeElement,this.ctxFrameCapture,this.ctx,this.video,a,!0).subscribe()}}}toggleDetection(e){this.classifySubscription&&(this.classifySubscription.unsubscribe(),console.log("unsubscribe old")),"coco_ssd"===e?this.classifySubscription=this.getDetectionInterval(this.classifyVideoCocoSSD$).subscribe():"yolo_coco"===e?this.classifySubscription=this.getDetectionInterval(this.classifyVideoYolo$).subscribe():"yolo_hardhat"===e?this.classifySubscription=this.getDetectionInterval(this.importer.predict(this.frameCapture.nativeElement,this.ctxFrameCapture,this.ctx,this.video)).subscribe():console.error("unknown model")}}return t.\u0275fac=function(e){return new(e||t)(Yt(dI))},t.\u0275cmp=jr({type:t,selectors:[["app-root"]],viewQuery:function(e,s){if(1&e&&(Hp(iie,5),Hp(aie,5),Hp(lie,5)),2&e){let r;ad(r=ld())&&(s.inferenceCanvas=r.first),ad(r=ld())&&(s.frameCapture=r.first),ad(r=ld())&&(s.videoElement=r.first)}},decls:20,vars:4,consts:[[2,"width","100%","height","100%","background-color","#1b4643"],[1,"content"],["controls","","playsinline","","hidden",""],["videoElement",""],["mat-raised-button","",3,"click"],[2,"width","70%",3,"width","height"],["inferenceCanvas",""],["frameCapture",""],[2,"display","flex","flex-direction","column","justify-content","space-around","align-items","center"],[1,"text",2,"margin","20px 0"],["type","file","accept","image/*",3,"change"]],template:function(e,s){1&e&&(Il(0,"div",0)(1,"div",1)(2,"div"),Nh(3,"video",2,3),Tl(),Il(5,"div")(6,"button",4),iu("click",function(){return s.toggleDetection("coco_ssd")}),Oh(7," COCO SSD "),Tl(),Il(8,"button",4),iu("click",function(){return s.toggleDetection("yolo_coco")}),Oh(9," YOLOv5s COCO"),Tl(),Il(10,"button",4),iu("click",function(){return s.toggleDetection("yolo_hardhat")}),Oh(11," YOLOv5 Hardhat"),Tl()(),Nh(12,"canvas",5,6)(14,"canvas",5,7),Il(16,"div",8)(17,"div",9),Oh(18," Try it yourself! "),Tl(),Il(19,"input",10),iu("change",function(o){return s.inputEvent(o)}),Tl()()()()),2&e&&(R0(12),Mp("width",s.RESOLUTION[0])("height",s.RESOLUTION[1]),R0(2),Mp("width",s.RESOLUTION[0])("height",s.RESOLUTION[1]))},styles:[".content[_ngcontent-%COMP%]{margin:auto;max-width:1200px;height:100%}.text[_ngcontent-%COMP%]{font-size:1.7rem;color:#fff;font-family:Montserrat;text-align:center}"]}),t})(),cie=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Sr({type:t,bootstrap:[uie]}),t.\u0275inj=j({providers:[],imports:[[UB,EV]]}),t})();(function EF(){C1=!1})(),LB().bootstrapModule(cie).catch(t=>console.error(t))},5103:function(Re,Y,h){var V=h(8926).default;!function(U,W,L){"use strict";const P={1:{name:"/m/01g317",id:1,displayName:"person"},2:{name:"/m/0199g",id:2,displayName:"bicycle"},3:{name:"/m/0k4j",id:3,displayName:"car"},4:{name:"/m/04_sv",id:4,displayName:"motorcycle"},5:{name:"/m/05czz6l",id:5,displayName:"airplane"},6:{name:"/m/01bjv",id:6,displayName:"bus"},7:{name:"/m/07jdr",id:7,displayName:"train"},8:{name:"/m/07r04",id:8,displayName:"truck"},9:{name:"/m/019jd",id:9,displayName:"boat"},10:{name:"/m/015qff",id:10,displayName:"traffic light"},11:{name:"/m/01pns0",id:11,displayName:"fire hydrant"},13:{name:"/m/02pv19",id:13,displayName:"stop sign"},14:{name:"/m/015qbp",id:14,displayName:"parking meter"},15:{name:"/m/0cvnqh",id:15,displayName:"bench"},16:{name:"/m/015p6",id:16,displayName:"bird"},17:{name:"/m/01yrx",id:17,displayName:"cat"},18:{name:"/m/0bt9lr",id:18,displayName:"dog"},19:{name:"/m/03k3r",id:19,displayName:"horse"},20:{name:"/m/07bgp",id:20,displayName:"sheep"},21:{name:"/m/01xq0k1",id:21,displayName:"cow"},22:{name:"/m/0bwd_0j",id:22,displayName:"elephant"},23:{name:"/m/01dws",id:23,displayName:"bear"},24:{name:"/m/0898b",id:24,displayName:"zebra"},25:{name:"/m/03bk1",id:25,displayName:"giraffe"},27:{name:"/m/01940j",id:27,displayName:"backpack"},28:{name:"/m/0hnnb",id:28,displayName:"umbrella"},31:{name:"/m/080hkjn",id:31,displayName:"handbag"},32:{name:"/m/01rkbr",id:32,displayName:"tie"},33:{name:"/m/01s55n",id:33,displayName:"suitcase"},34:{name:"/m/02wmf",id:34,displayName:"frisbee"},35:{name:"/m/071p9",id:35,displayName:"skis"},36:{name:"/m/06__v",id:36,displayName:"snowboard"},37:{name:"/m/018xm",id:37,displayName:"sports ball"},38:{name:"/m/02zt3",id:38,displayName:"kite"},39:{name:"/m/03g8mr",id:39,displayName:"baseball bat"},40:{name:"/m/03grzl",id:40,displayName:"baseball glove"},41:{name:"/m/06_fw",id:41,displayName:"skateboard"},42:{name:"/m/019w40",id:42,displayName:"surfboard"},43:{name:"/m/0dv9c",id:43,displayName:"tennis racket"},44:{name:"/m/04dr76w",id:44,displayName:"bottle"},46:{name:"/m/09tvcd",id:46,displayName:"wine glass"},47:{name:"/m/08gqpm",id:47,displayName:"cup"},48:{name:"/m/0dt3t",id:48,displayName:"fork"},49:{name:"/m/04ctx",id:49,displayName:"knife"},50:{name:"/m/0cmx8",id:50,displayName:"spoon"},51:{name:"/m/04kkgm",id:51,displayName:"bowl"},52:{name:"/m/09qck",id:52,displayName:"banana"},53:{name:"/m/014j1m",id:53,displayName:"apple"},54:{name:"/m/0l515",id:54,displayName:"sandwich"},55:{name:"/m/0cyhj_",id:55,displayName:"orange"},56:{name:"/m/0hkxq",id:56,displayName:"broccoli"},57:{name:"/m/0fj52s",id:57,displayName:"carrot"},58:{name:"/m/01b9xk",id:58,displayName:"hot dog"},59:{name:"/m/0663v",id:59,displayName:"pizza"},60:{name:"/m/0jy4k",id:60,displayName:"donut"},61:{name:"/m/0fszt",id:61,displayName:"cake"},62:{name:"/m/01mzpv",id:62,displayName:"chair"},63:{name:"/m/02crq1",id:63,displayName:"couch"},64:{name:"/m/03fp41",id:64,displayName:"potted plant"},65:{name:"/m/03ssj5",id:65,displayName:"bed"},67:{name:"/m/04bcr3",id:67,displayName:"dining table"},70:{name:"/m/09g1w",id:70,displayName:"toilet"},72:{name:"/m/07c52",id:72,displayName:"tv"},73:{name:"/m/01c648",id:73,displayName:"laptop"},74:{name:"/m/020lf",id:74,displayName:"mouse"},75:{name:"/m/0qjjc",id:75,displayName:"remote"},76:{name:"/m/01m2v",id:76,displayName:"keyboard"},77:{name:"/m/050k8",id:77,displayName:"cell phone"},78:{name:"/m/0fx9l",id:78,displayName:"microwave"},79:{name:"/m/029bxz",id:79,displayName:"oven"},80:{name:"/m/01k6s3",id:80,displayName:"toaster"},81:{name:"/m/0130jx",id:81,displayName:"sink"},82:{name:"/m/040b_t",id:82,displayName:"refrigerator"},84:{name:"/m/0bt_c3",id:84,displayName:"book"},85:{name:"/m/01x3z",id:85,displayName:"clock"},86:{name:"/m/02s195",id:86,displayName:"vase"},87:{name:"/m/01lsmm",id:87,displayName:"scissors"},88:{name:"/m/0kmg4",id:88,displayName:"teddy bear"},89:{name:"/m/03wvsk",id:89,displayName:"hair drier"},90:{name:"/m/012xff",id:90,displayName:"toothbrush"}};class k{constructor(S,b){this.modelPath=b||`https://storage.googleapis.com/tfjs-models/savedmodel/${this.getPrefix(S)}/model.json`}getPrefix(S){return"lite_mobilenet_v2"===S?`ssd${S}`:`ssd_${S}`}load(){var S=this;return V(function*(){S.model=yield W.loadGraphModel(S.modelPath);const b=L.zeros([1,300,300,3],"int32"),N=yield S.model.executeAsync(b);yield Promise.all(N.map(O=>O.data())),N.map(O=>O.dispose()),b.dispose()})()}infer(S,b,N){var O=this;return V(function*(){const M=L.tidy(()=>(S instanceof L.Tensor||(S=L.browser.fromPixels(S)),L.expandDims(S))),H=M.shape[1],oe=M.shape[2],J=yield O.model.executeAsync(M),de=J[0].dataSync(),pe=J[1].dataSync();M.dispose(),L.dispose(J);const[be,we]=O.calculateMaxScores(de,J[0].shape[1],J[0].shape[2]),Ce=L.getBackend();"webgl"===L.getBackend()&&L.setBackend("cpu");const me=L.tidy(()=>{const xe=L.tensor2d(pe,[J[1].shape[1],J[1].shape[3]]);return L.image.nonMaxSuppression(xe,be,b,N,N)}),ye=me.dataSync();return me.dispose(),Ce!==L.getBackend()&&L.setBackend(Ce),O.buildDetectedObjects(oe,H,pe,be,ye,we)})()}buildDetectedObjects(S,b,N,O,M,H){const oe=M.length,J=[];for(let de=0;de<oe;de++){const pe=[];for(let ye=0;ye<4;ye++)pe[ye]=N[4*M[de]+ye];const be=pe[0]*b,we=pe[1]*S,Ce=pe[2]*b,me=pe[3]*S;pe[0]=we,pe[1]=be,pe[2]=me-we,pe[3]=Ce-be,J.push({bbox:pe,class:P[H[M[de]]+1].displayName,score:O[M[de]]})}return J}calculateMaxScores(S,b,N){const O=[],M=[];for(let H=0;H<b;H++){let oe=Number.MIN_VALUE,J=-1;for(let de=0;de<N;de++)S[H*N+de]>oe&&(oe=S[H*N+de],J=de);O[H]=oe,M[H]=J}return[O,M]}detect(S,b=20,N=.5){var O=this;return V(function*(){return O.infer(S,b,N)})()}dispose(){null!=this.model&&this.model.dispose()}}U.ObjectDetection=k,U.load=V(function*($={}){if(null==L)throw new Error("Cannot find TensorFlow.js. If you are using a <script> tag, please also include @tensorflow/tfjs on the page before using this model.");const S=$.base||"lite_mobilenet_v2",b=$.modelUrl;if(-1===["mobilenet_v1","mobilenet_v2","lite_mobilenet_v2"].indexOf(S))throw new Error(`ObjectDetection constructed with invalid base model ${S}. Valid names are 'mobilenet_v1', 'mobilenet_v2' and 'lite_mobilenet_v2'.`);const N=new k(S,b);return yield N.load(),N}),U.version="2.2.2",Object.defineProperty(U,"__esModule",{value:!0})}(Y,h(4554),h(569))},4554:(Re,Y,h)=>{"use strict";h.r(Y),h.d(Y,{GraphModel:()=>_o,deregisterOp:()=>ae,loadGraphModel:()=>Ue,loadGraphModelSync:()=>Hl,registerOp:()=>q,version_converter:()=>Bn});var V={};h.r(V),h.d(V,{json:()=>Dt});var U={};h.r(U),h.d(U,{json:()=>Xt});var W={};h.r(W),h.d(W,{json:()=>Et});var L={};h.r(L),h.d(L,{json:()=>Vt});var P={};h.r(P),h.d(P,{json:()=>Ht});var k={};h.r(k),h.d(k,{json:()=>ss});var $={};h.r($),h.d($,{json:()=>St});var S={};h.r(S),h.d(S,{json:()=>_s});var b={};h.r(b),h.d(b,{json:()=>$s});var N={};h.r(N),h.d(N,{json:()=>Qs});var O={};h.r(O),h.d(O,{json:()=>Ie});var M={};h.r(M),h.d(M,{json:()=>Ke});var H={};h.r(H),h.d(H,{json:()=>ot});var oe={};h.r(oe),h.d(oe,{json:()=>It});var J={};h.r(J),h.d(J,{json:()=>cn});var de={};h.r(de),h.d(de,{json:()=>Un});var pe={};h.r(pe),h.d(pe,{json:()=>Xn});var be={};h.r(be),h.d(be,{json:()=>Zn});var we={};h.r(we),h.d(we,{json:()=>Js});var Ce={};h.r(Ce),h.d(Ce,{OP_SCOPE_SUFFIX:()=>Te.zvA,abs:()=>Te.WnP,acos:()=>Te.Khb,acosh:()=>Te.__u,add:()=>Te.IHx,addN:()=>Te.QBD,all:()=>Te.$6P,any:()=>Te.YjB,argMax:()=>Te.NqF,argMin:()=>Te.vHJ,asin:()=>Te.ZRM,asinh:()=>Te.VfV,atan:()=>Te.z4N,atan2:()=>Te.fvJ,atanh:()=>Te.C80,avgPool:()=>Te.wS1,avgPool3d:()=>Te.uR5,basicLSTMCell:()=>Te.zEQ,batchNorm:()=>Te.tgs,batchNorm2d:()=>Te.Dxk,batchNorm3d:()=>Te.JY5,batchNorm4d:()=>Te.p3b,batchToSpaceND:()=>Te.E4h,bincount:()=>Te.yE8,booleanMaskAsync:()=>Te.anm,broadcastArgs:()=>Te.XsQ,broadcastTo:()=>Te.UFq,buffer:()=>Te.f3b,cast:()=>Te.pju,ceil:()=>Te.mDi,clipByValue:()=>Te.iUl,clone:()=>Te.d9v,complex:()=>Te.PYB,concat:()=>Te.zoF,concat1d:()=>Te.gME,concat2d:()=>Te.Izb,concat3d:()=>Te.MNy,concat4d:()=>Te.ZaL,conv1d:()=>Te.PAt,conv2d:()=>Te.Tek,conv2dTranspose:()=>Te.bc,conv3d:()=>Te.pdZ,conv3dTranspose:()=>Te.$QV,cos:()=>Te.mCk,cosh:()=>Te.f9Y,cosineWindow:()=>Te.mew,cumprod:()=>Te.$Gn,cumsum:()=>Te.zbp,denseBincount:()=>Te.ppE,depthToSpace:()=>Te.nTT,depthwiseConv2d:()=>Te.B10,diag:()=>Te.Ka3,dilation2d:()=>Te.WmZ,div:()=>Te.hiC,divNoNan:()=>Te.NTj,dot:()=>Te.AKD,dropout:()=>Te.rvX,einsum:()=>Te.WYO,elu:()=>Te.pyx,enclosingPowerOfTwo:()=>Te.GRh,equal:()=>Te.DgJ,erf:()=>Te.qNN,euclideanNorm:()=>Te.d2q,exp:()=>Te.Qqt,expandDims:()=>Te.dt4,expm1:()=>Te.t$B,eye:()=>Te.iyy,fft:()=>Te.kp_,fill:()=>Te.hlL,floor:()=>Te.GWj,floorDiv:()=>Te.qPi,fused:()=>Te.imm,gather:()=>Te.Iqj,gatherND:()=>Te.dbB,greater:()=>Te.pjt,greaterEqual:()=>Te.brS,ifft:()=>Te.Sxn,imag:()=>Te.asL,image:()=>Te.BHj,inTopKAsync:()=>Te.V3u,irfft:()=>Te.wx0,isFinite:()=>Te.xVT,isInf:()=>Te.UWc,isNaN:()=>Te.i2d,leakyRelu:()=>Te.hi7,less:()=>Te.d9m,lessEqual:()=>Te.zN1,linalg:()=>Te.$r2,linspace:()=>Te.SX3,localResponseNormalization:()=>Te.G9k,log:()=>Te.cM7,log1p:()=>Te.Krr,logSigmoid:()=>Te.e_t,logSoftmax:()=>Te.CmS,logSumExp:()=>Te.l_t,logicalAnd:()=>Te.HvI,logicalNot:()=>Te.hJK,logicalOr:()=>Te.K5V,logicalXor:()=>Te.egP,losses:()=>Te.MB5,lowerBound:()=>Te.eab,matMul:()=>Te.OI3,max:()=>Te.Fp7,maxPool:()=>Te._sB,maxPool3d:()=>Te.YQQ,maxPoolWithArgmax:()=>Te.Ip$,maximum:()=>Te.gWQ,mean:()=>Te.J69,meshgrid:()=>Te.ry_,min:()=>Te.VV$,minimum:()=>Te.LTh,mirrorPad:()=>Te.VdP,mod:()=>Te.wQq,moments:()=>Te.Gi7,movingAverage:()=>Te.p_,mul:()=>Te.dC7,multiRNNCell:()=>Te.rq4,multinomial:()=>Te.SJ_,neg:()=>Te.W76,norm:()=>Te.KOy,notEqual:()=>Te.Quu,oneHot:()=>Te.lfX,ones:()=>Te.iUs,onesLike:()=>Te.JpU,op:()=>Te.op,outerProduct:()=>Te.N2O,pad:()=>Te.vku,pad1d:()=>Te.pNR,pad2d:()=>Te.koy,pad3d:()=>Te.t1L,pad4d:()=>Te.lGY,pool:()=>Te.d_R,pow:()=>Te.sQ3,prelu:()=>Te.AL3,print:()=>Te.S0v,prod:()=>Te.WVs,raggedGather:()=>Te.$gW,raggedTensorToTensor:()=>Te.N89,rand:()=>Te.TN_,randomGamma:()=>Te.wzB,randomNormal:()=>Te.nGf,randomStandardNormal:()=>Te.ruB,randomUniform:()=>Te.LGj,range:()=>Te.w6H,real:()=>Te.kwC,reciprocal:()=>Te.M25,relu:()=>Te.UYe,relu6:()=>Te.btT,reshape:()=>Te.XLQ,reverse:()=>Te.GYS,reverse1d:()=>Te.SDf,reverse2d:()=>Te.diP,reverse3d:()=>Te.sx7,reverse4d:()=>Te.mG2,rfft:()=>Te.QEs,round:()=>Te.NMM,rsqrt:()=>Te.bp0,scalar:()=>Te.iD$,scatterND:()=>Te.snQ,searchSorted:()=>Te.zcT,selu:()=>Te.U8D,separableConv2d:()=>Te.U_I,setdiff1dAsync:()=>Te.ODp,sigmoid:()=>Te.XD2,sign:()=>Te.Xxe,signal:()=>Te.tdS,sin:()=>Te.O$l,sinh:()=>Te.R_K,slice:()=>Te.tPi,slice1d:()=>Te.jZU,slice2d:()=>Te.SmN,slice3d:()=>Te.CnO,slice4d:()=>Te.p0P,softmax:()=>Te.XAC,softplus:()=>Te.Wvh,spaceToBatchND:()=>Te.fBT,sparse:()=>Te.rVs,sparseToDense:()=>Te.ers,spectral:()=>Te.uN7,split:()=>Te.Vl2,sqrt:()=>Te._b3,square:()=>Te.h62,squaredDifference:()=>Te.$i,squeeze:()=>Te.L9e,stack:()=>Te.knu,step:()=>Te.Nbs,stridedSlice:()=>Te.NXj,string:()=>Te.Z_8,sub:()=>Te.luU,sum:()=>Te.Smz,tan:()=>Te.ORZ,tanh:()=>Te.AEp,tensor:()=>Te.XeE,tensor1d:()=>Te.RRF,tensor2d:()=>Te.odF,tensor3d:()=>Te.wOQ,tensor4d:()=>Te.yXz,tensor5d:()=>Te.Bfx,tensor6d:()=>Te.xZs,tile:()=>Te.Gg6,topk:()=>Te.hg7,transpose:()=>Te.p4s,truncatedNormal:()=>Te.Xu6,unique:()=>Te.Two,unsortedSegmentSum:()=>Te.pUJ,unstack:()=>Te.HHK,upperBound:()=>Te.GaM,variable:()=>Te.VD$,where:()=>Te.arb,whereAsync:()=>Te.itS,zeros:()=>Te.lls,zerosLike:()=>Te.P84});var me=h(569);(0,me.env)().registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,I=>{I&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")});var K,xe=h(5861),Q=(()=>{return(I=Q||(Q={}))[I.DT_INVALID=0]="DT_INVALID",I[I.DT_FLOAT=1]="DT_FLOAT",I[I.DT_DOUBLE=2]="DT_DOUBLE",I[I.DT_INT32=3]="DT_INT32",I[I.DT_UINT8=4]="DT_UINT8",I[I.DT_INT16=5]="DT_INT16",I[I.DT_INT8=6]="DT_INT8",I[I.DT_STRING=7]="DT_STRING",I[I.DT_COMPLEX64=8]="DT_COMPLEX64",I[I.DT_INT64=9]="DT_INT64",I[I.DT_BOOL=10]="DT_BOOL",I[I.DT_QINT8=11]="DT_QINT8",I[I.DT_QUINT8=12]="DT_QUINT8",I[I.DT_QINT32=13]="DT_QINT32",I[I.DT_BFLOAT16=14]="DT_BFLOAT16",I[I.DT_QINT16=15]="DT_QINT16",I[I.DT_QUINT16=16]="DT_QUINT16",I[I.DT_UINT16=17]="DT_UINT16",I[I.DT_COMPLEX128=18]="DT_COMPLEX128",I[I.DT_HALF=19]="DT_HALF",I[I.DT_RESOURCE=20]="DT_RESOURCE",I[I.DT_VARIANT=21]="DT_VARIANT",I[I.DT_UINT32=22]="DT_UINT32",I[I.DT_UINT64=23]="DT_UINT64",I[I.DT_FLOAT_REF=101]="DT_FLOAT_REF",I[I.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",I[I.DT_INT32_REF=103]="DT_INT32_REF",I[I.DT_UINT8_REF=104]="DT_UINT8_REF",I[I.DT_INT16_REF=105]="DT_INT16_REF",I[I.DT_INT8_REF=106]="DT_INT8_REF",I[I.DT_STRING_REF=107]="DT_STRING_REF",I[I.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",I[I.DT_INT64_REF=109]="DT_INT64_REF",I[I.DT_BOOL_REF=110]="DT_BOOL_REF",I[I.DT_QINT8_REF=111]="DT_QINT8_REF",I[I.DT_QUINT8_REF=112]="DT_QUINT8_REF",I[I.DT_QINT32_REF=113]="DT_QINT32_REF",I[I.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",I[I.DT_QINT16_REF=115]="DT_QINT16_REF",I[I.DT_QUINT16_REF=116]="DT_QUINT16_REF",I[I.DT_UINT16_REF=117]="DT_UINT16_REF",I[I.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",I[I.DT_HALF_REF=119]="DT_HALF_REF",I[I.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",I[I.DT_VARIANT_REF=121]="DT_VARIANT_REF",I[I.DT_UINT32_REF=122]="DT_UINT32_REF",I[I.DT_UINT64_REF=123]="DT_UINT64_REF",Q;var I})();!function(I){let g;var v;(v=g=I.CheckpointFormatVersion||(I.CheckpointFormatVersion={}))[v.LEGACY=0]="LEGACY",v[v.V1=1]="V1",v[v.V2=2]="V2"}(K||(K={}));const w={};function q(I,g){w[I]={tfOpName:I,category:"custom",inputs:[],attrs:[],customExecutor:g}}function le(I){return w[I]}function ae(I){delete w[I]}function E(I,g,v,T,X){const j=g.inputParams[I];if(j&&void 0!==j.inputIndexStart){const he=j.inputIndexStart,ze=0===j.inputIndexEnd?void 0:void 0===j.inputIndexEnd?he+1:j.inputIndexEnd;if("tensor"===j.type)return Oe(g.inputNames[j.inputIndexStart],v,T,X);if("tensors"===j.type)return g.inputNames.slice(he,ze).map(Tt=>Oe(Tt,v,T,X));const gt=Oe(g.inputNames.slice(he)[0],v,T,X),it=gt.dataSync();return"number"===j.type?it[0]:me.util.toNestedArray(gt.shape,it)}const fe=g.attrParams[I];return fe&&fe.value}function Oe(I,g,v,T){const[X,j]=He(I);if(null!=T){const he=T.getHashTableHandleByName(X);if(null!=he)return he}const fe=v.currentContextIds.find(he=>!!g[Ne(X,he)]);return void 0!==fe?g[Ne(X,fe)][j]:void 0}function Pe(I,g){const[v,T,X]=He(I);return[Ne(v,g&&g.currentContextId),T,X]}function Ne(I,g){return g?`${I}-${g}`:I}function He(I){const g=I.split(":");if(1===g.length)return[I,0,void 0];const T=3===g.length?g[1]:void 0;return[g[0],Number(g[g.length-1]),T]}function _t(I,g,v){let T=E("pad",I,g,v);if("explicit"===T){T=E("explicitPaddings",I,g,v);const X=[[0,0],[0,0],[0,0],[0,0]];for(let j=0;j<4;j++)X[j][0]=T[2*j],X[j][1]=T[2*j+1];return X}return T}function Rt(I){return I.kept?I:(0,me.clone)(I)}const Dt=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],Xt=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],Et=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}],Vt=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],Ht=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],ss=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],St=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],_s=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],$s=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]}],Qs=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],Ie=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],Ke=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]}],ot=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}],It=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],cn=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}],Un=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],Xn=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],Zn=[{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],Js=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}];class Rr{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const v=[].concat(...[V,U,W,L,P,k,$,S,b,N,O,M,H,oe,J,de,pe,be,we].map(T=>T.json));this.opMappers=v.reduce((T,X)=>(T[X.tfOpName]=X,T),{})}transformGraph(g,v={}){const X=[],j=[],fe=[],he=g.node.reduce((bt,en)=>(bt[en.name]=this.mapNode(en),en.op.startsWith("Placeholder")?X.push(bt[en.name]):"Const"===en.op?j.push(bt[en.name]):(null==en.input||0===en.input.length)&&fe.push(bt[en.name]),bt),{});let ze=[];const gt=[];let it={},ft={};null!=v&&(it=this.mapSignatureEntries(v.inputs),ft=this.mapSignatureEntries(v.outputs));const Tt=Object.keys(he);Tt.forEach(bt=>{const en=he[bt];en.inputNames.forEach((ts,Cs)=>{const[Kr,,Wn]=Pe(ts),Fs=he[Kr];if(null!=Fs.outputs){const Gs=Fs.outputs.indexOf(Wn);-1!==Gs&&(en.inputNames[Cs]=`${Kr}:${Gs}`)}en.inputs.push(Fs),Fs.children.push(en)})}),0===Object.keys(ft).length?Tt.forEach(bt=>{const en=he[bt];0===en.children.length&&gt.push(en)}):Object.keys(ft).forEach(bt=>{const[en]=Pe(bt),ts=he[en];null!=ts&&(ts.signatureKey=ft[bt],gt.push(ts))}),Object.keys(it).length>0?Object.keys(it).forEach(bt=>{const[en]=Pe(bt),ts=he[en];ts&&(ts.signatureKey=it[bt],ze.push(ts))}):ze=X;let qt={};null!=g.library&&null!=g.library.function&&(qt=g.library.function.reduce((bt,en)=>(bt[en.signature.name]=this.mapFunction(en),bt),{}));const hn={nodes:he,inputs:ze,outputs:gt,weights:j,placeholders:X,signature:v,functions:qt};return fe.length>0&&(hn.initNodes=fe),hn}mapSignatureEntries(g){return Object.keys(g||{}).reduce((v,T)=>(v[g[T].name]=T,v),{})}mapNode(g){const v=le(g.op)||this.opMappers[g.op]||{};null==g.attr&&(g.attr={});const T={name:g.name,op:g.op,category:v.category,inputNames:(g.input||[]).map(X=>X.startsWith("^")?X.slice(1):X),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:g.attr,outputs:v.outputs};return null!=v.inputs&&(T.inputParams=v.inputs.reduce((X,j)=>(X[j.name]={type:j.type,inputIndexStart:j.start,inputIndexEnd:j.end},X),{})),null!=v.attrs&&(T.attrParams=v.attrs.reduce((X,j)=>{const fe=j.type;let he;switch(j.type){case"string":he=ca(g.attr,j.tfName,j.defaultValue),void 0===he&&j.tfDeprecatedName&&(he=ca(g.attr,j.tfDeprecatedName,j.defaultValue));break;case"string[]":he=_i(g.attr,j.tfName,j.defaultValue),void 0===he&&j.tfDeprecatedName&&(he=_i(g.attr,j.tfDeprecatedName,j.defaultValue));break;case"number":he=qs(g.attr,j.tfName,j.defaultValue||0),void 0===he&&j.tfDeprecatedName&&(he=qs(g.attr,j.tfDeprecatedName,j.defaultValue));break;case"number[]":he=ol(g.attr,j.tfName,j.defaultValue),void 0===he&&j.tfDeprecatedName&&(he=ol(g.attr,j.tfDeprecatedName,j.defaultValue));break;case"bool":he=Mr(g.attr,j.tfName,j.defaultValue),void 0===he&&j.tfDeprecatedName&&(he=Mr(g.attr,j.tfDeprecatedName,j.defaultValue));break;case"bool[]":he=Ao(g.attr,j.tfName,j.defaultValue),void 0===he&&j.tfDeprecatedName&&(he=Ao(g.attr,j.tfDeprecatedName,j.defaultValue));break;case"shape":he=ha(g.attr,j.tfName,j.defaultValue),void 0===he&&j.tfDeprecatedName&&(he=ha(g.attr,j.tfDeprecatedName,j.defaultValue));break;case"shape[]":he=bi(g.attr,j.tfName,j.defaultValue),void 0===he&&j.tfDeprecatedName&&(he=bi(g.attr,j.tfDeprecatedName,j.defaultValue));break;case"dtype":he=da(g.attr,j.tfName,j.defaultValue),void 0===he&&j.tfDeprecatedName&&(he=da(g.attr,j.tfDeprecatedName,j.defaultValue));break;case"dtype[]":he=Ei(g.attr,j.tfName,j.defaultValue),void 0===he&&j.tfDeprecatedName&&(he=Ei(g.attr,j.tfDeprecatedName,j.defaultValue));break;case"func":he=xi(g.attr,j.tfName,j.defaultValue),void 0===he&&j.tfDeprecatedName&&(he=xi(g.attr,j.tfDeprecatedName,j.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${j.type} for op: ${g.op}`)}return X[j.name]={value:he,type:fe},X},{})),T}mapFunction(g){const v=g.nodeDef,X=[];let j={};null!=v&&(j=v.reduce((ft,Tt)=>(ft[Tt.name]=this.mapNode(Tt),"Const"===Tt.op&&X.push(ft[Tt.name]),ft),{}));const fe=[],he=[];g.signature.inputArg.forEach(ft=>{const[Tt]=Pe(ft.name),qt={name:Tt,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:Gr(ft.type),type:"dtype"}},children:[]};qt.signatureKey=ft.name,fe.push(qt),j[Tt]=qt}),Object.keys(j).forEach(ft=>{const Tt=j[ft];Tt.inputNames.forEach((qt,hn)=>{const[bt,,en]=Pe(qt),ts=j[bt];if(null!=ts.outputs){const Cs=ts.outputs.indexOf(en);-1!==Cs&&(Tt.inputNames[hn]=`${bt}:${Cs}`)}Tt.inputs.push(ts),ts.children.push(Tt)})});const gt=g.ret;g.signature.outputArg.forEach(ft=>{const[Tt,qt]=Pe(gt[ft.name]),hn=j[Tt];null!=hn&&(hn.defaultOutput=qt,he.push(hn))});const it=this.mapArgsToSignature(g);return{nodes:j,inputs:fe,outputs:he,weights:X,placeholders:[],signature:it}}mapArgsToSignature(g){return{methodName:g.signature.name,inputs:g.signature.inputArg.reduce((v,T)=>(v[T.name]=this.mapArgToTensorInfo(T),v),{}),outputs:g.signature.outputArg.reduce((v,T)=>(v[T.name]=this.mapArgToTensorInfo(T,g.ret),v),{})}}mapArgToTensorInfo(g,v){let T=g.name;return null!=v&&(T=v[T]),{name:T,dtype:g.type}}}function sl(I,g){const v=Array.isArray(I)?String.fromCharCode.apply(null,I):function nl(I){const g=(0,me.env)().global;if(void 0!==g.atob)return g.atob(I);if("undefined"!=typeof Buffer)return new Buffer(I,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(I);return g?v:v.toLowerCase()}function ca(I,g,v,T=!1){const X=I[g];return null!=X?sl(X.s,T):v}function Mr(I,g,v){const T=I[g];return T?T.b:v}function qs(I,g,v){const T=I[g]||{},X=null!=T.i?T.i:null!=T.f?T.f:v;return"number"==typeof X?X:parseInt(X,10)}function Gr(I){switch("string"==typeof I&&(I=Q[I]),I){case Q.DT_FLOAT:case Q.DT_HALF:return"float32";case Q.DT_INT32:case Q.DT_INT64:case Q.DT_INT8:case Q.DT_UINT8:return"int32";case Q.DT_BOOL:return"bool";case Q.DT_DOUBLE:return"float32";case Q.DT_STRING:return"string";default:return null}}function xi(I,g,v){const T=I[g];return T&&T.func?T.func.name:v}function da(I,g,v){const T=I[g];return T&&T.type?Gr(T.type):v}function Ei(I,g,v){const T=I[g];return T&&T.list&&T.list.type?T.list.type.map(X=>Gr(X)):v}function rl(I){if(!I.unknownRank)return null!=I.dim?I.dim.map(g=>"number"==typeof g.size?g.size:parseInt(g.size,10)):[]}function ha(I,g,v){const T=I[g];return T&&T.shape?rl(T.shape):v}function ol(I,g,v){const T=I[g];return T?((T.list.f&&T.list.f.length?T.list.f:T.list.i)||[]).map(X=>"number"==typeof X?X:parseInt(X,10)):v}function _i(I,g,v,T=!1){const X=I[g];return X&&X.list&&X.list.s?X.list.s.map(j=>sl(j,T)):v}function bi(I,g,v){const T=I[g];return T&&T.list&&T.list.shape?T.list.shape.map(X=>rl(X)):v}function Ao(I,g,v){const T=I[g];return T&&T.list&&T.list.b?T.list.b:v}class fa{constructor(g,v,T){this.node=g,this.tensorMap=v,this.context=T,this.inputs=[],this.attrs={},this.inputs=g.inputNames.map(X=>this.getInput(X)),null!=g.rawAttrs&&(this.attrs=Object.keys(g.rawAttrs).reduce((X,j)=>(X[j]=this.getAttr(j),X),{}))}getInput(g){return Oe(g,this.tensorMap,this.context)}getAttr(g,v){const T=this.node.rawAttrs[g];if(null!=T.tensor)return Oe(g,this.tensorMap,this.context);if(null!=T.i||null!=T.f)return qs(this.node.rawAttrs,g,v);if(null!=T.s)return ca(this.node.rawAttrs,g,v);if(null!=T.b)return Mr(this.node.rawAttrs,g,v);if(null!=T.shape)return ha(this.node.rawAttrs,g,v);if(null!=T.type)return da(this.node.rawAttrs,g,v);if(null!=T.list){if(null!=T.list.i||null!=T.list.f)return ol(this.node.rawAttrs,g,v);if(null!=T.list.s)return _i(this.node.rawAttrs,g,v);if(null!=T.list.shape)return bi(this.node.rawAttrs,g,v);if(null!=T.list.b)return Ao(this.node.rawAttrs,g,v);if(null!=T.list.type)return Ei(this.node.rawAttrs,g,v)}return v}}var Te=h(8790);function Mn(I,g,v=""){if("number"!=typeof I&&"number"!=typeof g){me.util.assert(I.length===g.length,()=>v+` Shapes ${I} and ${g} must match`);for(let T=0;T<I.length;T++){const X=I[T],j=g[T];me.util.assert(X<0||j<0||X===j,()=>v+` Shapes ${I} and ${g} must match`)}}}function rs(I){return!("number"==typeof I||I.some(g=>g<0))}function ro(I,g,v){let T=Os(I,v);const X=!rs(T);if(X&&0===g.length)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${T}`);if(X&&g.forEach(j=>{T=Os(j.shape,T)}),!rs(T))throw new Error(`Non-fully-defined elementShape: ${T}`);return T}function Os(I,g){if("number"==typeof I)return g;if("number"==typeof g)return I;if(I.length!==g.length)throw new Error(`Incompatible ranks during merge: ${I} vs. ${g}`);const v=[];for(let T=0;T<I.length;++T){const X=I[T],j=g[T];if(X>=0&&j>=0&&X!==j)throw new Error(`Incompatible shape during merge: ${I} vs. ${g}`);v[T]=X>=0?X:j}return v}class al{constructor(g,v,T,X,j,fe,he){this.name=g,this.dtype=v,this.maxSize=T,this.elementShape=X,this.identicalElementShapes=j,this.dynamicSize=fe,this.clearAfterRead=he,this.tensors=[],this.closed_=!1,this.idTensor=(0,me.scalar)(0),(0,me.keep)(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(g){this.tensors.forEach(v=>{(null==g||!g.has(v.tensor.id))&&v.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(g){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(g<0||g>=this.size())throw new Error(`Tried to read from index ${g}, but array size is: ${this.size()}`);const v=this.tensors[g];if(v.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${g} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(v.cleared=!0),v.read=!0,v.tensor}readMany(g){return g.map(v=>this.read(v))}write(g,v){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(g<0||!this.dynamicSize&&g>=this.maxSize)throw new Error(`Tried to write to index ${g}, but array is not resizeable and size is: ${this.maxSize}`);const T=this.tensors[g]||{};if(v.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${g},\n          because the value dtype is ${v.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0===this.size()&&(null==this.elementShape||0===this.elementShape.length)&&(this.elementShape=v.shape),Mn(this.elementShape,v.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${g}.`),T.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${g}, because it has already been read.`);if(T.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${g}, because it has already been written.`);T.tensor=v,(0,me.keep)(v),T.written=!0,this.tensors[g]=T}writeMany(g,v){if(g.length!==v.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${g.length} is not the same as tensors size: ${v.length}.`);g.forEach((T,X)=>this.write(T,v[X]))}gather(g,v){if(v&&v!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${v}`);if(g)g=g.slice(0,this.size());else{g=[];for(let X=0;X<this.size();X++)g.push(X)}if(0===g.length)return(0,me.tensor)([],[0].concat(this.elementShape));const T=this.readMany(g);return Mn(this.elementShape,T[0].shape,"TensorArray shape mismatch: "),(0,me.stack)(T,0)}concat(g){if(g&&g!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${g}`);if(0===this.size())return(0,me.tensor)([],[0].concat(this.elementShape));const v=[];for(let X=0;X<this.size();X++)v.push(X);const T=this.readMany(v);return Mn(this.elementShape,T[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${T[0].shape})`),(0,me.concat)(T,0)}scatter(g,v){if(v.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${v.dtype}`);if(g.length!==v.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${g.length} vs. ${v.shape[0]}`);const T=Math.max(...g);if(!this.dynamicSize&&T>=this.maxSize)throw new Error(`Max index must be < array size (${T}  vs. ${this.maxSize})`);this.writeMany(g,(0,me.unstack)(v,0))}split(g,v){if(v.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${v.dtype}`);let T=0;const X=g.map(ze=>(T+=ze,T));if(T!==v.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${T}, and tensor's shape is: ${v.shape}`);if(!this.dynamicSize&&g.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${g.length}), and the TensorArray is not marked as dynamically resizeable`);const j=0===T?0:v.size/T,fe=[];(0,me.tidy)(()=>{v=(0,me.reshape)(v,[1,T,j]);for(let ze=0;ze<g.length;++ze)fe[ze]=(0,me.reshape)((0,me.slice)(v,[0,0===ze?0:X[ze-1],0],[1,g[ze],j]),this.elementShape);return fe});const he=[];for(let ze=0;ze<g.length;ze++)he[ze]=ze;this.writeMany(he,fe)}}class kr{constructor(g,v,T,X=-1){this.tensors=g,this.elementShape=v,this.elementDtype=T,null!=g&&g.forEach(j=>{if(T!==j.dtype)throw new Error(`Invalid data types; op elements ${T}, but list elements ${j.dtype}`);Mn(v,j.shape,"TensorList shape mismatch: "),(0,me.keep)(j)}),this.idTensor=(0,me.scalar)(0),this.maxNumElements=X,(0,me.keep)(this.idTensor)}get id(){return this.idTensor.id}copy(){return new kr([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(g){this.tensors.forEach(v=>{(null==g||!g.has(v.id))&&v.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(g,v,T=-1){if(v!==this.elementDtype)throw new Error(`Invalid data types; op elements ${v}, but list elements ${this.elementDtype}`);if(-1!==T&&this.tensors.length!==T)throw new Error(`Operation expected a list with ${T} elements but got a list with ${this.tensors.length} elements.`);Mn(g,this.elementShape,"TensorList shape mismatch: ");const X=ro(this.elementShape,this.tensors,g);return(0,me.tidy)(()=>{const j=this.tensors.map(fe=>(0,me.reshape)(fe,X));return(0,me.stack)(j,0)})}popBack(g,v){if(v!==this.elementDtype)throw new Error(`Invalid data types; op elements ${v}, but list elements ${this.elementDtype}`);if(0===this.size())throw new Error("Trying to pop from an empty list.");const T=ro(this.elementShape,this.tensors,g),X=this.tensors.pop();return X.kept=!1,Mn(X.shape,g,"TensorList shape mismatch: "),(0,me.reshape)(X,T)}pushBack(g){if(g.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${g.dtype}, but list elements ${this.elementDtype}`);if(Mn(g.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");(0,me.keep)(g),this.tensors.push(g)}resize(g){if(g<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${g}`);if(-1!==this.maxNumElements&&g>this.maxNumElements)throw new Error(`TensorListResize input size ${g} is greater maxNumElement ${this.maxNumElements}.`);const v=new kr([],this.elementShape,this.elementDtype,this.maxNumElements);v.tensors.length=g;for(let T=0;T<Math.min(this.tensors.length,g);++T)v.tensors[T]=this.tensors[T];return v}getItem(g,v,T){if(T!==this.elementDtype)throw new Error(`Invalid data types; op elements ${T}, but list elements ${this.elementDtype}`);if(g<0||g>this.tensors.length)throw new Error(`Trying to access element ${g} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[g])throw new Error(`element at index ${g} is null.`);Mn(this.tensors[g].shape,v,"TensorList shape mismatch: ");const X=ro(this.elementShape,this.tensors,v);return(0,me.reshape)(this.tensors[g],X)}setItem(g,v){if(v.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${v.dtype}, but list elements ${this.elementDtype}`);if(g<0||-1!==this.maxNumElements&&g>=this.maxNumElements)throw new Error(`Trying to set element ${g} in a list with max ${this.maxNumElements} elements.`);Mn(this.elementShape,v.shape,"TensorList shape mismatch: "),(0,me.keep)(v),null!=this.tensors[g]&&(this.tensors[g].kept=!1),this.tensors[g]=v}gather(g,v,T){if(v!==this.elementDtype)throw new Error(`Invalid data types; op elements ${v}, but list elements ${this.elementDtype}`);Mn(this.elementShape,T,"TensorList shape mismatch: "),g=g.slice(0,this.size());const X=ro(this.elementShape,this.tensors,T);return 0===g.length?(0,me.tensor)([],[0].concat(X)):(0,me.tidy)(()=>{const j=g.map(fe=>(0,me.reshape)(this.tensors[fe],X));return(0,me.stack)(j,0)})}concat(g,v){if(g&&g!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${g}`);Mn(this.elementShape,v,"TensorList shape mismatch: ");const T=ro(this.elementShape,this.tensors,v);return 0===this.size()?(0,me.tensor)([],[0].concat(T)):(0,me.tidy)(()=>{const X=this.tensors.map(j=>(0,me.reshape)(j,T));return(0,me.concat)(X,0)})}}const Zo=function(){var I=(0,xe.Z)(function*(g,v,T){switch(g.op){case"If":case"StatelessIf":{const X=E("thenBranch",g,v,T),j=E("elseBranch",g,v,T),fe=E("cond",g,v,T),he=E("args",g,v,T);return(yield fe.data())[0]?T.functionMap[X].executeFunctionAsync(he,T.tensorArrayMap,T.tensorListMap):T.functionMap[j].executeFunctionAsync(he,T.tensorArrayMap,T.tensorListMap)}case"While":case"StatelessWhile":{const X=E("body",g,v,T),j=E("cond",g,v,T),fe=E("args",g,v,T),he=yield T.functionMap[j].executeFunctionAsync(fe,T.tensorArrayMap,T.tensorListMap),ze=fe.map(ft=>ft.id);let gt=yield he[0].data();he.forEach(ft=>{!ft.kept&&-1===ze.indexOf(ft.id)&&ft.dispose()});let it=fe;for(;gt[0];){const ft=it;it=yield T.functionMap[X].executeFunctionAsync(it,T.tensorArrayMap,T.tensorListMap);const Tt=it.map(hn=>hn.id);ft.forEach(hn=>{!hn.kept&&-1===ze.indexOf(hn.id)&&-1===Tt.indexOf(hn.id)&&hn.dispose()});const qt=yield T.functionMap[j].executeFunctionAsync(it,T.tensorArrayMap,T.tensorListMap);gt=yield qt[0].data(),qt.forEach(hn=>{!hn.kept&&-1===ze.indexOf(hn.id)&&-1===Tt.indexOf(hn.id)&&hn.dispose()})}return it}case"LoopCond":return[Rt(E("pred",g,v,T))];case"Switch":{const X=E("pred",g,v,T);let j=E("data",g,v,T);return j.kept||(j=Rt(j)),(yield X.data())[0]?[void 0,j]:[j,void 0]}case"Merge":{const X=g.inputNames.find(j=>void 0!==Oe(j,v,T));return X?[Rt(Oe(X,v,T))]:void 0}case"Enter":{const X=E("frameName",g,v,T),j=E("tensor",g,v,T);return T.enterFrame(X),[Rt(j)]}case"Exit":{const X=E("tensor",g,v,T);return T.exitFrame(),[Rt(X)]}case"NextIteration":{const X=E("tensor",g,v,T);return T.nextIteration(),[Rt(X)]}case"TensorArrayV3":{const X=E("size",g,v,T),j=E("dtype",g,v,T),fe=E("elementShape",g,v,T),he=E("dynamicSize",g,v,T),ze=E("clearAfterRead",g,v,T),gt=E("identicalElementShapes",g,v,T),it=E("name",g,v,T),ft=new al(it,j,X,fe,gt,he,ze);return T.addTensorArray(ft),[ft.idTensor,(0,me.scalar)(1)]}case"TensorArrayWriteV3":{const X=E("tensorArrayId",g,v,T),j=E("index",g,v,T),fe=E("tensor",g,v,T),he=T.getTensorArray(X.id);return he.write(j,fe),[he.idTensor]}case"TensorArrayReadV3":{const X=E("tensorArrayId",g,v,T),j=E("index",g,v,T);return[T.getTensorArray(X.id).read(j)]}case"TensorArrayGatherV3":{const X=E("tensorArrayId",g,v,T),j=E("indices",g,v,T),fe=E("dtype",g,v,T);return[T.getTensorArray(X.id).gather(j,fe)]}case"TensorArrayScatterV3":{const X=E("tensorArrayId",g,v,T),j=E("indices",g,v,T),fe=E("tensor",g,v,T),he=T.getTensorArray(X.id);return he.scatter(j,fe),[he.idTensor]}case"TensorArrayConcatV3":{const X=E("tensorArrayId",g,v,T),j=T.getTensorArray(X.id),fe=E("dtype",g,v,T);return[j.concat(fe)]}case"TensorArraySplitV3":{const X=E("tensorArrayId",g,v,T),j=E("tensor",g,v,T),fe=E("lengths",g,v,T),he=T.getTensorArray(X.id);return he.split(fe,j),[he.idTensor]}case"TensorArraySizeV3":{const X=E("tensorArrayId",g,v,T),j=T.getTensorArray(X.id);return[(0,me.scalar)(j.size(),"int32")]}case"TensorArrayCloseV3":{const X=E("tensorArrayId",g,v,T),j=T.getTensorArray(X.id);return j.clearAndClose(),[j.idTensor]}case"TensorListSetItem":{const X=E("tensorListId",g,v,T),j=E("index",g,v,T),fe=E("tensor",g,v,T),he=T.getTensorList(X.id);return he.setItem(j,fe),[he.idTensor]}case"TensorListGetItem":{const X=E("tensorListId",g,v,T),j=E("index",g,v,T),fe=E("elementShape",g,v,T),he=E("elementDType",g,v,T);return[T.getTensorList(X.id).getItem(j,fe,he)]}case"TensorListScatterV2":case"TensorListScatter":{const X=E("indices",g,v,T),ze=function ma(I,g,v,T){if(g.length!==I.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${g.length} vs. ${I.shape[0]}`);const X=Math.max(...g);if(null!=T&&-1!==T&&X>=T)throw new Error(`Max index must be < array size (${X}  vs. ${T})`);const j=new kr([],v,I.dtype,T),fe=(0,me.unstack)(I,0);return g.forEach((he,ze)=>{j.setItem(he,fe[ze])}),j}(E("tensor",g,v,T),X,E("elementShape",g,v,T),E("numElements",g,v,T));return T.addTensorList(ze),[ze.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const X=E("elementShape",g,v,T),j=E("elementDType",g,v,T);let fe;fe="TensorListReserve"===g.op?"numElements":"maxNumElements";const he=E(fe,g,v,T),gt=function Di(I,g,v,T){return new kr([],I,g,T)}(X,j,0,"TensorListReserve"===g.op?-1:he);return T.addTensorList(gt),[gt.idTensor]}case"TensorListGather":{const X=E("tensorListId",g,v,T),j=E("indices",g,v,T),fe=E("elementShape",g,v,T),he=E("elementDType",g,v,T);return[T.getTensorList(X.id).gather(j,he,fe)]}case"TensorListStack":{const X=E("tensorListId",g,v,T),j=E("elementShape",g,v,T),fe=E("elementDType",g,v,T),he=E("numElements",g,v,T);return[T.getTensorList(X.id).stack(j,fe,he)]}case"TensorListFromTensor":{const he=function ll(I,g,v){const T=I.dtype;if(I.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${I.shape}`);if(I.dtype!==v)throw new Error(`Invalid data types; op elements ${I.dtype}, but list elements ${v}`);Mn(I.shape.slice(1),g,"TensorList shape mismatch: ");const j=(0,me.unstack)(I);return new kr(j,g,T)}(E("tensor",g,v,T),E("elementShape",g,v,T),E("elementDType",g,v,T));return T.addTensorList(he),[he.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{const X=E("tensorListId",g,v,T),j=T.getTensorList(X.id),fe=E("dtype",g,v,T),he=E("elementShape",g,v,T);return[j.concat(fe,he)]}case"TensorListPushBack":{const X=E("tensorListId",g,v,T),j=E("tensor",g,v,T),fe=T.getTensorList(X.id);return fe.pushBack(j),[fe.idTensor]}case"TensorListPopBack":{const X=E("tensorListId",g,v,T),j=E("elementShape",g,v,T),fe=E("elementDType",g,v,T);return[T.getTensorList(X.id).popBack(j,fe)]}case"TensorListSplit":{const X=E("tensor",g,v,T),j=E("elementShape",g,v,T),he=function Ii(I,g,v){let T=0;const X=g.map(it=>(T+=it,T));if(T!==I.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${T}, and tensor's shape is: ${I.shape}`);const fe=Os(I.shape.slice(1),v),he=0===T?0:I.size/T,ze=(0,me.tidy)(()=>{const it=[];I=(0,me.reshape)(I,[1,T,he]);for(let ft=0;ft<g.length;++ft)it[ft]=(0,me.reshape)((0,me.slice)(I,[0,0===ft?0:X[ft-1],0],[1,g[ft],he]),fe);return I.dispose(),it}),gt=new kr([],v,I.dtype,g.length);for(let it=0;it<ze.length;it++)gt.setItem(it,ze[it]);return gt}(X,E("lengths",g,v,T),j);return T.addTensorList(he),[he.idTensor]}case"TensorListLength":{const X=E("tensorListId",g,v,T),j=T.getTensorList(X.id);return[(0,me.scalar)(j.size(),"int32")]}case"TensorListResize":{const X=E("tensorListId",g,v,T),j=E("size",g,v,T),he=T.getTensorList(X.id).resize(j);return T.addTensorList(he),[he.idTensor]}default:throw TypeError(`Node type ${g.op} is not implemented`)}});return function(v,T,X){return I.apply(this,arguments)}}();function ga(I,g,v){const[T,X]=E("fusedOps",I,g,v),j="biasadd"===T,fe=!j,he="prelu"===X,ze="fusedbatchnorm"===T,gt=E("numArgs",I,g,v);if(j){if(he&&2!==gt)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!he&&j&&1!==gt)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(ze)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const it=E("strides",I,g,v),ft=_t(I,g,v),Tt=E("dataFormat",I,g,v).toUpperCase(),qt=E("dilations",I,g,v);let[hn,bt]=E("args",I,g,v);return fe&&(bt=hn,hn=void 0),{stride:it,pad:ft,dataFormat:Tt,dilations:qt,biasArg:hn,preluArg:bt,activationFunc:X,leakyreluAlpha:E("leakyreluAlpha",I,g,v)}}function Ti(I,g,v){return{boxes:E("boxes",I,g,v),scores:E("scores",I,g,v),maxOutputSize:E("maxOutputSize",I,g,v),iouThreshold:E("iouThreshold",I,g,v),scoreThreshold:E("scoreThreshold",I,g,v),softNmsSigma:E("softNmsSigma",I,g,v)}}const ya=function(){var I=(0,xe.Z)(function*(g,v,T,X,j=Ce){switch(g.op){case"NonMaxSuppressionV5":{const{boxes:fe,scores:he,maxOutputSize:ze,iouThreshold:gt,scoreThreshold:it,softNmsSigma:ft}=Ti(g,v,T),Tt=yield j.image.nonMaxSuppressionWithScoreAsync(fe,he,ze,gt,it,ft);return[Tt.selectedIndices,Tt.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:fe,scores:he,maxOutputSize:ze,iouThreshold:gt,scoreThreshold:it}=Ti(g,v,T),ft=E("padToMaxOutputSize",g,v,T),Tt=yield j.image.nonMaxSuppressionPaddedAsync(fe,he,ze,gt,it,ft);return[Tt.selectedIndices,Tt.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:fe,scores:he,maxOutputSize:ze,iouThreshold:gt,scoreThreshold:it}=Ti(g,v,T);return[yield j.image.nonMaxSuppressionAsync(fe,he,ze,gt,it)]}case"Where":{const fe=j.cast(E("condition",g,v,T),"bool"),he=[yield j.whereAsync(fe)];return fe.dispose(),he}case"ListDiff":return j.setdiff1dAsync(E("x",g,v,T),E("y",g,v,T));default:throw TypeError(`Node type ${g.op} is not implemented`)}});return function(v,T,X,j){return I.apply(this,arguments)}}();var va=h(316);class cl{constructor(g,v){this.keyDType=g,this.valueDType=v,this.handle=(0,me.scalar)(0),this.tensorMap=new Map,(0,me.keep)(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach(g=>g.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return va.i(this.size(),"int32")}import(g,v){var T=this;return(0,xe.Z)(function*(){T.checkKeyAndValueTensor(g,v);const X=yield g.data();return T.tensorMap.forEach(j=>j.dispose()),T.tensorMap.clear(),(0,me.tidy)(()=>{const j=(0,me.unstack)(v),fe=X.length,he=j.length;me.util.assert(fe===he,()=>`The number of elements doesn't match, keys has ${fe} elements, the values has ${he} elements.`);for(let ze=0;ze<fe;ze++){const gt=X[ze],it=j[ze];(0,me.keep)(it),T.tensorMap.set(gt,it)}return T.handle})})()}find(g,v){var T=this;return(0,xe.Z)(function*(){T.checkKeyAndValueTensor(g,v);const X=yield g.data();return(0,me.tidy)(()=>{const j=[];for(let fe=0;fe<X.length;fe++){const ze=T.findWithDefault(X[fe],v);j.push(ze)}return(0,me.stack)(j)})})()}findWithDefault(g,v){const T=this.tensorMap.get(g);return null!=T?T:v}checkKeyAndValueTensor(g,v){if(g.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${g.dtype}`);if(v.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${v.dtype}`)}}const dl=function(){var I=(0,xe.Z)(function*(g,v,T,X){switch(g.op){case"HashTable":case"HashTableV2":{const j=E("keyDType",g,v,T),fe=E("valueDType",g,v,T),he=new cl(j,fe);return X.addHashTable(g.name,he),[he.handle]}case"LookupTableImport":case"LookupTableImportV2":{const j=E("tableHandle",g,v,T,X),fe=E("keys",g,v,T),he=E("values",g,v,T);return[yield X.getHashTableById(j.id).import(fe,he)]}case"LookupTableFind":case"LookupTableFindV2":{const j=E("tableHandle",g,v,T,X),fe=E("keys",g,v,T),he=E("defaultValue",g,v,T);return[yield X.getHashTableById(j.id).find(fe,he)]}case"LookupTableSize":case"LookupTableSizeV2":{const j=E("tableHandle",g,v,T,X);return[X.getHashTableById(j.id).tensorSize()]}default:throw TypeError(`Node type ${g.op} is not implemented`)}});return function(v,T,X,j){return I.apply(this,arguments)}}();function ps(I,g,v,T,X=me.tidy){const j=((fe,he,ze)=>{switch(fe.category){case"arithmetic":return X(()=>((I,g,v,T=Ce)=>{switch(I.op){case"BiasAdd":case"AddV2":case"Add":return[T.add(E("a",I,g,v),E("b",I,g,v))];case"AddN":return[T.addN(E("tensors",I,g,v))];case"FloorMod":case"Mod":return[T.mod(E("a",I,g,v),E("b",I,g,v))];case"Mul":return[T.mul(E("a",I,g,v),E("b",I,g,v))];case"RealDiv":case"Div":return[T.div(E("a",I,g,v),E("b",I,g,v))];case"DivNoNan":return[T.divNoNan(E("a",I,g,v),E("b",I,g,v))];case"FloorDiv":return[T.floorDiv(E("a",I,g,v),E("b",I,g,v))];case"Sub":return[T.sub(E("a",I,g,v),E("b",I,g,v))];case"Minimum":return[T.minimum(E("a",I,g,v),E("b",I,g,v))];case"Maximum":return[T.maximum(E("a",I,g,v),E("b",I,g,v))];case"Pow":return[T.pow(E("a",I,g,v),E("b",I,g,v))];case"SquaredDifference":return[T.squaredDifference(E("a",I,g,v),E("b",I,g,v))];default:throw TypeError(`Node type ${I.op} is not implemented`)}})(fe,he,ze));case"basic_math":return X(()=>((I,g,v,T=Ce)=>{switch(I.op){case"Abs":case"ComplexAbs":return[T.abs(E("x",I,g,v))];case"Acos":return[T.acos(E("x",I,g,v))];case"Acosh":return[T.acosh(E("x",I,g,v))];case"Asin":return[T.asin(E("x",I,g,v))];case"Asinh":return[T.asinh(E("x",I,g,v))];case"Atan":return[T.atan(E("x",I,g,v))];case"Atan2":return[T.atan2(E("x",I,g,v),E("y",I,g,v))];case"Atanh":return[T.atanh(E("x",I,g,v))];case"Ceil":return[T.ceil(E("x",I,g,v))];case"Complex":return[T.complex(E("real",I,g,v),E("imag",I,g,v))];case"Cos":return[T.cos(E("x",I,g,v))];case"Cosh":return[T.cosh(E("x",I,g,v))];case"Elu":return[T.elu(E("x",I,g,v))];case"Erf":return[T.erf(E("x",I,g,v))];case"Exp":return[T.exp(E("x",I,g,v))];case"Expm1":return[T.expm1(E("x",I,g,v))];case"Floor":return[T.floor(E("x",I,g,v))];case"Log":return[T.log(E("x",I,g,v))];case"Log1p":return[T.log1p(E("x",I,g,v))];case"Imag":return[T.imag(E("x",I,g,v))];case"Neg":return[T.neg(E("x",I,g,v))];case"Reciprocal":return[T.reciprocal(E("x",I,g,v))];case"Real":return[T.real(E("x",I,g,v))];case"Relu":return[T.relu(E("x",I,g,v))];case"Round":return[T.round(E("x",I,g,v))];case"Selu":return[T.selu(E("x",I,g,v))];case"Sigmoid":return[T.sigmoid(E("x",I,g,v))];case"Sin":return[T.sin(E("x",I,g,v))];case"Sign":return[T.sign(E("x",I,g,v))];case"Sinh":return[T.sinh(E("x",I,g,v))];case"Softplus":return[T.softplus(E("x",I,g,v))];case"Sqrt":return[T.sqrt(E("x",I,g,v))];case"Square":return[T.square(E("x",I,g,v))];case"Tanh":return[T.tanh(E("x",I,g,v))];case"Tan":return[T.tan(E("x",I,g,v))];case"ClipByValue":return[T.clipByValue(E("x",I,g,v),E("clipValueMin",I,g,v),E("clipValueMax",I,g,v))];case"Relu6":return[T.relu6(E("x",I,g,v))];case"Rsqrt":return[T.rsqrt(Oe(I.inputNames[0],g,v))];case"Prod":return[T.prod(E("x",I,g,v),E("axes",I,g,v))];case"LeakyRelu":return[T.leakyRelu(E("x",I,g,v),E("alpha",I,g,v))];case"Prelu":return[T.prelu(E("x",I,g,v),E("alpha",I,g,v))];case"IsNan":return[T.isNaN(Oe(I.inputNames[0],g,v))];default:throw TypeError(`Node type ${I.op} is not implemented`)}})(fe,he,ze));case"control":return Zo(fe,he,ze);case"convolution":return X(()=>((I,g,v,T=Ce)=>{switch(I.op){case"Conv1D":{const X=E("stride",I,g,v),j=E("pad",I,g,v),fe=E("dataFormat",I,g,v).toUpperCase(),he=E("dilation",I,g,v);return[T.conv1d(E("x",I,g,v),E("filter",I,g,v),X,j,fe,he)]}case"Conv2D":{const X=E("strides",I,g,v),j=_t(I,g,v),fe=E("dataFormat",I,g,v).toUpperCase(),he=E("dilations",I,g,v);return[T.conv2d(E("x",I,g,v),E("filter",I,g,v),[X[1],X[2]],j,fe,[he[1],he[2]])]}case"_FusedConv2D":{const{stride:X,pad:j,dataFormat:fe,dilations:he,biasArg:ze,preluArg:gt,activationFunc:it,leakyreluAlpha:ft}=ga(I,g,v);return[T.fused.conv2d({x:E("x",I,g,v),filter:E("filter",I,g,v),strides:[X[1],X[2]],pad:j,dataFormat:fe,dilations:[he[1],he[2]],bias:ze,activation:it,preluActivationWeights:gt,leakyreluAlpha:ft})]}case"FusedDepthwiseConv2dNative":{const{stride:X,pad:j,dataFormat:fe,dilations:he,biasArg:ze,preluArg:gt,activationFunc:it,leakyreluAlpha:ft}=ga(I,g,v);return[T.fused.depthwiseConv2d({x:E("x",I,g,v),filter:E("filter",I,g,v),strides:[X[1],X[2]],pad:j,dataFormat:fe,dilations:[he[1],he[2]],bias:ze,activation:it,preluActivationWeights:gt,leakyreluAlpha:ft})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const X=E("outputShape",I,g,v),j=E("strides",I,g,v),fe=_t(I,g,v);return[T.conv2dTranspose(E("x",I,g,v),E("filter",I,g,v),X,[j[1],j[2]],fe)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const X=E("strides",I,g,v),j=_t(I,g,v),fe=E("dilations",I,g,v),he=E("dataFormat",I,g,v).toUpperCase();return[T.depthwiseConv2d(E("input",I,g,v),E("filter",I,g,v),[X[1],X[2]],j,he,[fe[1],fe[2]])]}case"Conv3D":{const X=E("strides",I,g,v),j=E("pad",I,g,v),fe=E("dataFormat",I,g,v).toUpperCase(),he=E("dilations",I,g,v);return[T.conv3d(E("x",I,g,v),E("filter",I,g,v),[X[1],X[2],X[3]],j,fe,[he[1],he[2],he[3]])]}case"AvgPool":{const X=E("strides",I,g,v),j=E("pad",I,g,v),fe=E("kernelSize",I,g,v);return[T.avgPool(E("x",I,g,v),[fe[1],fe[2]],[X[1],X[2]],j)]}case"MaxPool":{const X=E("strides",I,g,v),j=E("pad",I,g,v),fe=E("kernelSize",I,g,v);return[T.maxPool(E("x",I,g,v),[fe[1],fe[2]],[X[1],X[2]],j)]}case"MaxPoolWithArgmax":{const X=E("strides",I,g,v),j=E("pad",I,g,v),fe=E("kernelSize",I,g,v),he=E("includeBatchInIndex",I,g,v),{result:ze,indexes:gt}=T.maxPoolWithArgmax(E("x",I,g,v),[fe[1],fe[2]],[X[1],X[2]],j,he);return[ze,gt]}case"AvgPool3D":{const X=E("strides",I,g,v),j=E("pad",I,g,v),fe=E("kernelSize",I,g,v);return[T.avgPool3d(E("x",I,g,v),[fe[1],fe[2],fe[3]],[X[1],X[2],X[3]],j)]}case"MaxPool3D":{const X=E("strides",I,g,v),j=E("pad",I,g,v),fe=E("kernelSize",I,g,v);return[T.maxPool3d(E("x",I,g,v),[fe[1],fe[2],fe[3]],[X[1],X[2],X[3]],j)]}case"Dilation2D":{const X=E("strides",I,g,v),j=E("pad",I,g,v),fe=E("dilations",I,g,v),he=X[1],ze=X[2],gt=fe[1],it=fe[2];return[T.dilation2d(E("x",I,g,v),E("filter",I,g,v),[he,ze],j,[gt,it],"NHWC")]}default:throw TypeError(`Node type ${I.op} is not implemented`)}})(fe,he,ze));case"creation":return X(()=>((I,g,v,T=Ce)=>{switch(I.op){case"Fill":{const X=E("shape",I,g,v),j=E("dtype",I,g,v),fe=E("value",I,g,v);return[T.fill(X,fe,j)]}case"LinSpace":{const X=E("start",I,g,v),j=E("stop",I,g,v),fe=E("num",I,g,v);return[T.linspace(X,j,fe)]}case"Multinomial":{const X=E("logits",I,g,v),j=E("numSamples",I,g,v),fe=E("seed",I,g,v);return[T.multinomial(X,j,fe)]}case"OneHot":{const X=E("indices",I,g,v),j=E("depth",I,g,v),fe=E("onValue",I,g,v),he=E("offValue",I,g,v),ze=E("dtype",I,g,v);return[T.oneHot(X,j,fe,he,ze)]}case"Ones":return[T.ones(E("shape",I,g,v),E("dtype",I,g,v))];case"OnesLike":return[T.onesLike(E("x",I,g,v))];case"RandomStandardNormal":return[T.randomStandardNormal(E("shape",I,g,v),E("dtype",I,g,v),E("seed",I,g,v))];case"RandomUniform":return[T.randomUniform(E("shape",I,g,v),E("minval",I,g,v),E("maxval",I,g,v),E("dtype",I,g,v))];case"Range":{const X=E("start",I,g,v),j=E("stop",I,g,v),fe=E("step",I,g,v);return[T.range(X,j,fe,E("dtype",I,g,v))]}case"TruncatedNormal":{const X=E("shape",I,g,v),j=E("mean",I,g,v),fe=E("stdDev",I,g,v),he=E("seed",I,g,v);return[T.truncatedNormal(X,j,fe,E("dtype",I,g,v),he)]}case"Zeros":return[T.zeros(E("shape",I,g,v),E("dtype",I,g,v))];case"ZerosLike":return[T.zerosLike(E("x",I,g,v))];default:throw TypeError(`Node type ${I.op} is not implemented`)}})(fe,he,ze));case"dynamic":return ya(fe,he,ze);case"evaluation":return X(()=>((I,g,v,T=Ce)=>{switch(I.op){case"LowerBound":{const X=E("sortedSequence",I,g,v),j=E("values",I,g,v);return[T.lowerBound(X,j)]}case"TopKV2":{const X=E("x",I,g,v),j=E("k",I,g,v),fe=E("sorted",I,g,v),he=T.topk(X,j,fe);return[he.values,he.indices]}case"UpperBound":{const X=E("sortedSequence",I,g,v),j=E("values",I,g,v);return[T.upperBound(X,j)]}case"Unique":{const X=E("x",I,g,v),j=T.unique(X);return[j.values,j.indices]}case"UniqueV2":{const X=E("x",I,g,v),j=E("axis",I,g,v),fe=T.unique(X,j);return[fe.values,fe.indices]}default:throw TypeError(`Node type ${I.op} is not implemented`)}})(fe,he,ze));case"image":return X(()=>((I,g,v,T=Ce)=>{switch(I.op){case"ResizeBilinear":{const X=E("images",I,g,v),j=E("size",I,g,v),fe=E("alignCorners",I,g,v),he=E("halfPixelCenters",I,g,v);return[T.image.resizeBilinear(X,[j[0],j[1]],fe,he)]}case"ResizeNearestNeighbor":{const X=E("images",I,g,v),j=E("size",I,g,v),fe=E("alignCorners",I,g,v),he=E("halfPixelCenters",I,g,v);return[T.image.resizeNearestNeighbor(X,[j[0],j[1]],fe,he)]}case"CropAndResize":{const X=E("image",I,g,v),j=E("boxes",I,g,v),fe=E("boxInd",I,g,v),he=E("cropSize",I,g,v),ze=E("method",I,g,v),gt=E("extrapolationValue",I,g,v);return[T.image.cropAndResize(X,j,fe,he,ze,gt)]}case"ImageProjectiveTransformV3":{const X=E("images",I,g,v),j=E("transforms",I,g,v),fe=E("outputShape",I,g,v),he=E("fillValue",I,g,v),ze=E("interpolation",I,g,v),gt=E("fillMode",I,g,v);return[T.image.transform(X,j,ze.toLowerCase(),gt.toLowerCase(),he,fe)]}default:throw TypeError(`Node type ${I.op} is not implemented`)}})(fe,he,ze));case"graph":return X(()=>((I,g,v,T=Ce)=>{switch(I.op){case"Const":return g[I.name];case"PlaceholderWithDefault":const X=E("default",I,g,v);return[Oe(I.name,g,v)||X];case"Placeholder":return[Oe(I.name,g,v)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":case"Snapshot":return[Rt(E("x",I,g,v))];case"IdentityN":return E("x",I,g,v).map(it=>Rt(it));case"Shape":return[T.tensor1d(E("x",I,g,v).shape,"int32")];case"ShapeN":return E("x",I,g,v).map(it=>T.tensor1d(it.shape));case"Size":return[T.scalar(E("x",I,g,v).size,"int32")];case"Rank":return[T.scalar(E("x",I,g,v).rank,"int32")];case"NoOp":return[T.scalar(1)];case"Print":const fe=E("x",I,g,v),he=E("data",I,g,v),ze=E("message",I,g,v),gt=E("summarize",I,g,v);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(ze);for(let it=0;it<he.length;it++)console.log(Array.prototype.slice.call(he[it].dataSync()).slice(0,gt));return[fe];default:throw TypeError(`Node type ${I.op} is not implemented`)}})(fe,he,ze));case"logical":return X(()=>((I,g,v,T=Ce)=>{switch(I.op){case"Equal":return[T.equal(E("a",I,g,v),E("b",I,g,v))];case"NotEqual":return[T.notEqual(E("a",I,g,v),E("b",I,g,v))];case"Greater":return[T.greater(E("a",I,g,v),E("b",I,g,v))];case"GreaterEqual":return[T.greaterEqual(E("a",I,g,v),E("b",I,g,v))];case"Less":return[T.less(E("a",I,g,v),E("b",I,g,v))];case"LessEqual":return[T.lessEqual(E("a",I,g,v),E("b",I,g,v))];case"LogicalAnd":return[T.logicalAnd(E("a",I,g,v),E("b",I,g,v))];case"LogicalNot":return[T.logicalNot(E("a",I,g,v))];case"LogicalOr":return[T.logicalOr(E("a",I,g,v),E("b",I,g,v))];case"Select":case"SelectV2":return[T.where(E("condition",I,g,v),E("a",I,g,v),E("b",I,g,v))];default:throw TypeError(`Node type ${I.op} is not implemented`)}})(fe,he,ze));case"matrices":return X(()=>((I,g,v,T=Ce)=>{switch(I.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[T.matMul(E("a",I,g,v),E("b",I,g,v),E("transposeA",I,g,v),E("transposeB",I,g,v))];case"Einsum":return[T.einsum(E("equation",I,g,v),...E("tensors",I,g,v))];case"Transpose":return[T.transpose(E("x",I,g,v),E("perm",I,g,v))];case"_FusedMatMul":const[X,j]=E("fusedOps",I,g,v),fe="biasadd"===X,he="prelu"===j,ze=E("numArgs",I,g,v),gt=E("leakyreluAlpha",I,g,v);if(fe){if(he&&2!==ze)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!he&&1!==ze)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[it,ft]=E("args",I,g,v);return[T.fused.matMul({a:E("a",I,g,v),b:E("b",I,g,v),transposeA:E("transposeA",I,g,v),transposeB:E("transposeB",I,g,v),bias:it,activation:j,preluActivationWeights:ft,leakyreluAlpha:gt})];default:throw TypeError(`Node type ${I.op} is not implemented`)}})(fe,he,ze));case"normalization":return X(()=>((I,g,v,T=Ce)=>{switch(I.op){case"EuclideanNorm":return[T.euclideanNorm(E("x",I,g,v),E("axis",I,g,v),E("keepDims",I,g,v))];case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[T.batchNorm(E("x",I,g,v),E("mean",I,g,v),E("variance",I,g,v),E("offset",I,g,v),E("scale",I,g,v),E("epsilon",I,g,v))];case"LRN":return[T.localResponseNormalization(E("x",I,g,v),E("radius",I,g,v),E("bias",I,g,v),E("alpha",I,g,v),E("beta",I,g,v))];case"Softmax":return[T.softmax(E("x",I,g,v))];case"LogSoftmax":return[T.logSoftmax(E("x",I,g,v))];case"SparseToDense":return[T.sparseToDense(E("sparseIndices",I,g,v),E("outputShape",I,g,v),E("sparseValues",I,g,v),E("defaultValue",I,g,v))];default:throw TypeError(`Node type ${I.op} is not implemented`)}})(fe,he,ze));case"reduction":return X(()=>((I,g,v,T=Ce)=>{switch(I.op){case"Max":{const he=E("axis",I,g,v),ze=E("keepDims",I,g,v);return[T.max(E("x",I,g,v),he,ze)]}case"Mean":{const he=E("axis",I,g,v),ze=E("keepDims",I,g,v);return[T.mean(E("x",I,g,v),he,ze)]}case"Min":{const he=E("axis",I,g,v),ze=E("keepDims",I,g,v);return[T.min(E("x",I,g,v),he,ze)]}case"Sum":{const he=E("axis",I,g,v),ze=E("keepDims",I,g,v);return[T.sum(E("x",I,g,v),he,ze)]}case"All":{const he=E("axis",I,g,v),ze=E("keepDims",I,g,v);return[T.all(E("x",I,g,v),he,ze)]}case"Any":{const he=E("axis",I,g,v),ze=E("keepDims",I,g,v);return[T.any(E("x",I,g,v),he,ze)]}case"ArgMax":{const he=E("axis",I,g,v);return[T.argMax(E("x",I,g,v),he)]}case"ArgMin":{const he=E("axis",I,g,v);return[T.argMin(E("x",I,g,v),he)]}case"Prod":{const he=E("axis",I,g,v),ze=E("keepDims",I,g,v);return[T.prod(E("x",I,g,v),he,ze)]}case"Cumprod":{const he=E("axis",I,g,v),ze=E("exclusive",I,g,v),gt=E("reverse",I,g,v);return[T.cumprod(E("x",I,g,v),he,ze,gt)]}case"Cumsum":{const he=E("axis",I,g,v),ze=E("exclusive",I,g,v),gt=E("reverse",I,g,v);return[T.cumsum(E("x",I,g,v),he,ze,gt)]}case"Bincount":const X=E("x",I,g,v),j=E("weights",I,g,v),fe=E("size",I,g,v);return[T.bincount(X,j,fe)];case"DenseBincount":{const he=E("x",I,g,v),ze=E("weights",I,g,v),gt=E("size",I,g,v),it=E("binaryOutput",I,g,v);return[T.denseBincount(he,ze,gt,it)]}default:throw TypeError(`Node type ${I.op} is not implemented`)}})(fe,he,ze));case"slice_join":return X(()=>((I,g,v,T=Ce)=>{switch(I.op){case"ConcatV2":case"Concat":{const X=E("n",I,g,v),j=E("axis",I,g,v);let fe=E("tensors",I,g,v);return fe=fe.slice(0,X),[T.concat(fe,j)]}case"Gather":{const X=E("x",I,g,v),j=E("indices",I,g,v);return[T.gather(X,T.cast(j,"int32"),0)]}case"GatherV2":{const X=E("axis",I,g,v),j=E("batchDims",I,g,v),fe=E("x",I,g,v),he=E("indices",I,g,v);return[T.gather(fe,T.cast(he,"int32"),X,j)]}case"Reverse":{const X=E("dims",I,g,v),j=[];for(let he=0;he<X.length;he++)X[he]&&j.push(he);const fe=E("x",I,g,v);return[T.reverse(fe,j)]}case"ReverseV2":{const X=E("axis",I,g,v),j=E("x",I,g,v);return[T.reverse(j,X)]}case"Slice":{const X=E("begin",I,g,v),j=E("size",I,g,v);return[T.slice(E("x",I,g,v),X,j)]}case"StridedSlice":{const X=E("begin",I,g,v),j=E("end",I,g,v),fe=E("strides",I,g,v),he=E("beginMask",I,g,v),ze=E("endMask",I,g,v),gt=E("ellipsisMask",I,g,v),it=E("newAxisMask",I,g,v),ft=E("shrinkAxisMask",I,g,v),Tt=E("x",I,g,v);return[T.stridedSlice(Tt,X,j,fe,he,ze,gt,it,ft)]}case"Pack":return(0,me.tidy)(()=>{const X=E("axis",I,g,v),j=E("tensors",I,g,v),fe=j[0].shape,he=T.squeeze(j[0]).shape,ze=j.map(gt=>{const it=me.util.arraysEqual(gt.shape,fe);if(!it&&!me.util.arraysEqual(T.squeeze(gt).shape,he))throw new Error("the input tensors shape does not match");return it?gt:T.reshape(gt,fe)});return[T.stack(ze,X)]});case"Unpack":{const X=E("axis",I,g,v),j=E("tensor",I,g,v);return T.unstack(j,X)}case"Tile":{const X=E("reps",I,g,v);return[T.tile(E("x",I,g,v),X)]}case"Split":case"SplitV":{const X=E("axis",I,g,v),j=E("numOrSizeSplits",I,g,v),fe=E("x",I,g,v);return T.split(fe,j,X)}case"ScatterNd":{const X=E("indices",I,g,v),j=E("values",I,g,v),fe=E("shape",I,g,v);return[T.scatterND(X,j,fe)]}case"GatherNd":{const X=E("x",I,g,v),j=E("indices",I,g,v);return[T.gatherND(X,j)]}case"SparseToDense":{const X=E("sparseIndices",I,g,v),j=E("outputShape",I,g,v),fe=E("sparseValues",I,g,v),he=E("defaultValue",I,g,v);return[T.sparseToDense(X,fe,j,fe.dtype===he.dtype?he:T.cast(he,fe.dtype))]}default:throw TypeError(`Node type ${I.op} is not implemented`)}})(fe,he,ze));case"sparse":return X(()=>((I,g,v,T=Ce)=>{switch(I.op){case"SparseFillEmptyRows":{const{outputIndices:X,outputValues:j,emptyRowIndicator:fe,reverseIndexMap:he}=T.sparse.sparseFillEmptyRows(E("indices",I,g,v),E("values",I,g,v),E("denseShape",I,g,v),E("defaultValue",I,g,v));return[X,j,fe,he]}case"SparseReshape":{const{outputIndices:X,outputShape:j}=T.sparse.sparseReshape(E("inputIndices",I,g,v),E("inputShape",I,g,v),E("newShape",I,g,v));return[X,j]}case"SparseSegmentMean":return[T.sparse.sparseSegmentMean(E("data",I,g,v),E("indices",I,g,v),E("segmentIds",I,g,v))];case"SparseSegmentSum":return[T.sparse.sparseSegmentSum(E("data",I,g,v),E("indices",I,g,v),E("segmentIds",I,g,v))];default:throw TypeError(`Node type ${I.op} is not implemented`)}})(fe,he,ze));case"spectral":return X(()=>((I,g,v,T=Ce)=>{switch(I.op){case"FFT":return[T.fft(E("x",I,g,v))];case"IFFT":return[T.ifft(E("x",I,g,v))];case"RFFT":return[T.rfft(E("x",I,g,v))];case"IRFFT":return[T.irfft(E("x",I,g,v))];default:throw TypeError(`Node type ${I.op} is not implemented`)}})(fe,he,ze));case"string":return X(()=>((I,g,v,T=Ce)=>{switch(I.op){case"StringNGrams":{const{nGrams:X,nGramsSplits:j}=T.string.stringNGrams(E("data",I,g,v),E("dataSplits",I,g,v),E("separator",I,g,v),E("nGramWidths",I,g,v),E("leftPad",I,g,v),E("rightPad",I,g,v),E("padWidth",I,g,v),E("preserveShortSequences",I,g,v));return[X,j]}case"StringSplit":{const{indices:X,values:j,shape:fe}=T.string.stringSplit(E("input",I,g,v),E("delimiter",I,g,v),E("skipEmpty",I,g,v));return[X,j,fe]}case"StringToHashBucketFast":return[T.string.stringToHashBucketFast(E("input",I,g,v),E("numBuckets",I,g,v))];default:throw TypeError(`Node type ${I.op} is not implemented`)}})(fe,he,ze));case"transformation":return X(()=>((I,g,v,T=Ce)=>{switch(I.op){case"Cast":return[T.cast(E("x",I,g,v),E("dtype",I,g,v))];case"ExpandDims":{const X=E("axis",I,g,v);return[T.expandDims(E("x",I,g,v),X)]}case"Squeeze":{const X=E("axis",I,g,v);return[T.squeeze(E("x",I,g,v),X)]}case"Reshape":return[T.reshape(E("x",I,g,v),E("shape",I,g,v))];case"MirrorPad":return[T.mirrorPad(E("x",I,g,v),E("padding",I,g,v),E("mode",I,g,v))];case"PadV2":case"Pad":return[T.pad(E("x",I,g,v),E("padding",I,g,v),E("constantValue",I,g,v))];case"SpaceToBatchND":{const X=E("blockShape",I,g,v),j=E("paddings",I,g,v);return[T.spaceToBatchND(E("x",I,g,v),X,j)]}case"BatchToSpaceND":{const X=E("blockShape",I,g,v),j=E("crops",I,g,v);return[T.batchToSpaceND(E("x",I,g,v),X,j)]}case"DepthToSpace":{const X=E("blockSize",I,g,v),j=E("dataFormat",I,g,v).toUpperCase();return[T.depthToSpace(E("x",I,g,v),X,j)]}case"BroadcastTo":return[T.broadcastTo(E("x",I,g,v),E("shape",I,g,v))];case"BroadcastArgs":return[T.broadcastArgs(E("s0",I,g,v),E("s1",I,g,v))];default:throw TypeError(`Node type ${I.op} is not implemented`)}})(fe,he,ze));case"hash_table":return dl(fe,he,ze,T);case"custom":const gt=le(fe.op);if(gt&&gt.customExecutor)return gt.customExecutor(new fa(fe,he,ze));throw TypeError(`Custom op ${fe.op} is not registered.`);default:throw TypeError(`Unknown op '${fe.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(I,g,v);return me.util.isPromise(j)?j.then(fe=>[].concat(fe)):[].concat(j)}class Ai{constructor(g={},v={},T={},X={}){this.weightMap=g,this.tensorArrayMap=v,this.tensorListMap=T,this.functionMap=X,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(g,v){return{id:g,frameName:v,iterationId:0}}set currentContext(g){this.contexts!==g&&(this.contexts=g,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const g=[];for(let v=0;v<this.contexts.length-1;v++){const T=this.contexts.slice(0,this.contexts.length-v);g.push(this.contextIdforContexts(T))}g.push(""),this._currentContextIds=g}contextIdforContexts(g){return g?g.map(v=>0===v.id&&0===v.iterationId?"":`${v.frameName}-${v.iterationId}`).join("/"):""}enterFrame(g){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,g)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;const g=Object.assign({},this.contexts[this.contexts.length-1]);g.iterationId+=1,g.id=this.lastId,this.contexts.splice(-1,1,g),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(g){return this.weightMap[g]}addTensorArray(g){this.tensorArrayMap[g.id]=g}getTensorArray(g){return this.tensorArrayMap[g]}addTensorList(g){this.tensorListMap[g.id]=g}getTensorList(g){return this.tensorListMap[g]}dispose(g){for(const v in this.tensorArrayMap)this.tensorArrayMap[v].clearAndClose(g);for(const v in this.tensorListMap)this.tensorListMap[v].clearAndClose(g)}}function pl(I,g,v,T){const X=new Set,j=[];let fe=null,he=null;const ze=new Set,gt=Object.keys(I).map(Tt=>He(Tt)[0]);let it=[];null!=T&&(it=T.map(Tt=>He(Tt.name)[0]));const ft=[...g];for(;ft.length>0;){const Tt=ft.pop();if((Eo(Tt)||ml(Tt)||Tr(Tt))&&null==fe&&(fe=Tt,he=fe.children.map(qt=>qt.name).filter(qt=>X.has(qt))),X.add(Tt.name),null==v[Tt.name]&&-1===gt.indexOf(Tt.name)&&-1===it.indexOf(Tt.name)){if(0===Tt.inputs.length){j.push(Tt.name);continue}Tt.inputs.forEach(qt=>{ze.has(qt.name)||(ze.add(qt.name),ft.push(qt))})}}return{inputs:I,outputs:g,usedNodes:X,missingInputs:j,dynamicNode:fe,syncInputs:he}}const Ir=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],bs=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],Gl=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"];function Eo(I){return Ir.indexOf(I.op)>=0}function ml(I){return bs.indexOf(I.op)>=0}function Tr(I){return Gl.indexOf(I.op)>=0}class qo{constructor(g,v){this.graph=g,this.parent=v,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this.intermediateTensors={},this.keepTensorForDebug=!1,this._outputs=g.outputs,this._inputs=g.inputs,this._initNodes=g.initNodes,this._signature=g.signature,this._functions=g.functions,null!=g.functions&&Object.keys(g.functions).forEach(T=>{this._functionExecutorMap[T]=new qo(g.functions[T],this)})}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(g){const v=Object.keys(g).map(T=>g[T].map(X=>X.id));this._weightIds=[].concat(...v),this._weightMap=g}set resourceManager(g){this._resourceManager=g}get inputs(){return this._inputs.map(g=>({name:g.name,shape:g.attrParams.shape?g.attrParams.shape.value:void 0,dtype:g.attrParams.dtype?g.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(g=>({name:g.name,shape:g.attrParams.shape?g.attrParams.shape.value:void 0,dtype:g.attrParams.dtype?g.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(g=>g.signatureKey||g.name)}get outputNodes(){return this._outputs.map(g=>{const v=g.signatureKey||g.name;return g.defaultOutput?`${v}:${g.defaultOutput}`:v})}get functions(){return Object.keys(this._functions).reduce((g,v)=>(g[v]=this._functions[v].signature,g),{})}getCompilationKey(g,v){const T=g.map(j=>j.name).sort(),X=v.map(j=>j.name).sort();return T.join(this.SEPERATOR)+"--"+X.join(this.SEPERATOR)}compile(g,v){const T=pl(g,v,this.weightMap,this._initNodes),{missingInputs:X,dynamicNode:j,syncInputs:fe}=T;if(null!=j)throw new Error(`This execution contains the node '${j.name}', which has the dynamic op '${j.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${fe}]`);if(X.length>0){const he=v.map(gt=>gt.name),ze=Object.keys(g);throw new Error(`Cannot compute the outputs [${he}] from the provided inputs [${ze}]. Missing the following inputs: [${X}]`)}return function Oi(I,g,v){const{usedNodes:T,inputs:X}=v,j=[],fe=Object.keys(X).map(it=>He(it)[0]).map(it=>I.nodes[it]),he=I.initNodes;fe.forEach(it=>{T.has(it.name)&&j.push(it)}),I.weights.forEach(it=>{T.has(it.name)&&j.push(it)}),null!=he&&he.forEach(it=>{T.has(it.name)&&j.push(it)});const ze=new Set,gt=[];for(;j.length>0;){const it=j.pop();ze.add(it.name),g[it.name]||gt.push(it),it.children.forEach(ft=>{!ze.has(ft.name)&&T.has(ft.name)&&ft.inputs.every(Tt=>ze.has(Tt.name))&&j.push(ft)})}return gt}(this.graph,this.weightMap,T)}execute(g,v){g=this.mapInputs(g);const T=Object.keys(g).sort();this.checkInputs(g),this.checkInputShapeAndType(g),v=this.mapOutputs(v),this.checkOutputs(v);const X=T.map(ft=>this.graph.nodes[He(ft)[0]]),j=v.map(ft=>He(ft)[0]);let fe=j.map(ft=>this.graph.nodes[ft]);this.resetIntermediateTensors(),0===fe.length&&(fe=this._outputs);const he=this.getCompilationKey(X,fe);let ze=this.compiledMap.get(he);null==ze&&(ze=this.compile(g,fe),this.compiledMap.set(he,ze));const gt={},it={};return(0,me.tidy)(()=>{const ft=new Ai(this.weightMap,gt,it,this.functionExecutorMap),Tt=Object.assign({},this.weightMap);Object.keys(g).forEach(bt=>{const[en,ts]=He(bt),Cs=[];Cs[ts]=g[bt],Tt[en]=Cs});const qt=this.getFrozenTensorIds(Tt),hn={};for(let bt=0;bt<ze.length;bt++){const en=ze[bt];if(!Tt[en.name]){const ts=ps(en,Tt,ft,this._resourceManager);if(me.util.isPromise(ts))throw new Error(`The execution of the op '${en.op}' returned a promise. Please use model.executeAsync() instead.`);Tt[en.name]=ts,this.checkTensorForDisposal(en.name,en,Tt,ft,qt,j,hn)}}return null==this.parent&&ft.dispose(qt),v.map(bt=>Oe(bt,Tt,ft))})}getFrozenTensorIds(g){const v=[].concat.apply([],Object.keys(g).map(T=>g[T]).map(T=>T.map(X=>X.id)));return new Set(v)}checkTensorForDisposal(g,v,T,X,j,fe,he){"control"===v.category||-1!==fe.indexOf(g)||(T[g].forEach(ze=>{null!=ze&&(he[ze.id]=(he[ze.id]||0)+v.children.length)}),v.inputs.forEach(ze=>{if("control"!==ze.category){const gt=function ke(I,g,v){return g[Ne(I,v.currentContextId)]}(ze.name,T,X);null!=gt&&gt.forEach(it=>{if(it&&!it.kept&&!j.has(it.id)){const ft=he[it.id];if(1===ft){if(this.keepTensorForDebug){const[Tt,qt]=Pe(v.name,X);this.intermediateTensors[Tt]||(this.intermediateTensors[Tt]=[]),this.intermediateTensors[Tt][qt]=it}else it.dispose();delete he[it.id]}else null!=ft&&he[it.id]--}})}}))}executeAsync(g,v){var T=this;return(0,xe.Z)(function*(){return T._executeAsync(g,v)})()}disposeIntermediateTensors(){!this.intermediateTensors||(Object.keys(this.intermediateTensors).forEach(g=>this.intermediateTensors[g].forEach(v=>v.dispose())),this.disposeTensorsMap())}disposeTensorsMap(){!this.tensorsMap||Object.keys(this.tensorsMap).forEach(g=>{this.tensorsMap[g].forEach(T=>{T&&!T.kept&&!T.isDisposed&&!this.keepIds.has(T.id)&&T.dispose()})})}getIntermediateTensors(){return this.tensorsMap}resetIntermediateTensors(){for(const g in this.intermediateTensors)this.intermediateTensors[g].forEach(v=>v.dispose()),delete this.intermediateTensors[g]}_executeAsync(g,v,T=!1,X={},j={}){var fe=this;return(0,xe.Z)(function*(){T||(g=fe.mapInputs(g),fe.checkInputs(g),fe.checkInputShapeAndType(g),v=fe.mapOutputs(v),fe.checkOutputs(v));try{fe.keepTensorForDebug=(0,me.env)().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(ft){console.warn(ft.message)}fe.resetIntermediateTensors();const he=new Ai(fe.weightMap,X,j,fe.functionExecutorMap);fe.tensorsMap=yield fe.executeWithControlFlow(g,he,v,T);const ze=v.map(ft=>Oe(ft,fe.tensorsMap,he)),gt=ze.map(ft=>ft.id),it=Object.keys(g).map(ft=>g[ft].id);return fe.keepIds=new Set([...gt,...it,...fe.weightIds]),fe.keepTensorForDebug||fe.disposeTensorsMap(),null==fe.parent&&he.dispose(fe.keepIds),ze})()}executeFunctionAsync(g,v,T){var X=this;return(0,xe.Z)(function*(){const j=g.reduce((fe,he,ze)=>(fe[X.inputs[ze].name]=he,fe),{});return X._executeAsync(j,X.outputNodes,!0,v,T)})()}executeWithControlFlow(g,v,T,X){var j=this;return(0,xe.Z)(function*(){const fe=Object.keys(g),he=fe.map(Wn=>j.graph.nodes[He(Wn)[0]]),ze=T.map(Wn=>He(Wn)[0]);let gt=ze.map(Wn=>j.graph.nodes[Wn]);0===gt.length&&(gt=j._outputs);const{usedNodes:it,missingInputs:ft,dynamicNode:Tt,syncInputs:qt}=pl(g,gt,j.weightMap,j._initNodes),hn=[...he,...j.graph.weights,...j._initNodes||[]].map(Wn=>({node:Wn,contexts:v.currentContext})),bt=Object.assign({},j.weightMap);Object.keys(g).forEach(Wn=>{const[Fs,Gs]=He(Wn),Ri=[];Ri[Gs]=g[Wn],bt[Fs]=Ri});const en={},ts=j.getFrozenTensorIds(bt),Cs={};for(;hn.length>0;){const Wn=j.processStack(he,hn,v,bt,Cs,ts,ze,en,it);yield Promise.all(Wn)}null==Tt&&!X&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const Kr=gt.filter(Wn=>!Eo(Wn)&&!Oe(Wn.name,bt,v)).map(Wn=>Wn.name);if(Kr.length>0){let Wn="";throw null!=Tt&&(Wn=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${qt}]`),new Error(`Cannot compute the outputs [${Kr}] from the provided inputs [${fe}]. Consider providing the following inputs: [${ft}]. ${Wn}`)}return bt})()}processStack(g,v,T,X,j,fe,he,ze,gt){const it=[];for(;v.length>0;){const ft=v.pop();T.currentContext=ft.contexts;let Tt="";if("Enter"===ft.node.op&&E("isConstant",ft.node,X,T)&&([Tt]=Pe(ft.node.name,T)),null==X[ft.node.name]){const qt=ps(ft.node,X,T,this._resourceManager);Tt||([Tt]=Pe(ft.node.name,T));const hn=T.currentContext;me.util.isPromise(qt)?it.push(qt.then(bt=>(X[Tt]=bt,T.currentContext=hn,this.checkTensorForDisposal(Tt,ft.node,X,T,fe,he,ze),this.processChildNodes(ft.node,v,T,X,j,gt),bt))):(X[Tt]=qt,this.checkTensorForDisposal(Tt,ft.node,X,T,fe,he,ze),this.processChildNodes(ft.node,v,T,X,j,gt))}else this.processChildNodes(ft.node,v,T,X,j,gt)}return it}processChildNodes(g,v,T,X,j,fe){g.children.forEach(he=>{const[ze]=Pe(he.name,T);j[ze]||!fe.has(he.name)||("Merge"===he.op?he.inputNames.some(gt=>!!Oe(gt,X,T))&&(j[ze]=!0,v.push({contexts:T.currentContext,node:he})):he.inputNames.every(gt=>!!Oe(gt,X,T))&&(j[ze]=!0,v.push({contexts:T.currentContext,node:he})))})}dispose(){Object.keys(this.weightMap).forEach(g=>this.weightMap[g].forEach(v=>v.dispose()))}checkInputShapeAndType(g){Object.keys(g).forEach(v=>{const T=g[v],[X]=He(v),j=this.graph.nodes[X];if(j.attrParams.shape&&j.attrParams.shape.value){const fe=j.attrParams.shape.value,he=fe.length===T.shape.length&&T.shape.every((ze,gt)=>-1===fe[gt]||fe[gt]===ze);me.util.assert(he,()=>`The shape of dict['${j.name}'] provided in model.execute(dict) must be [${fe}], but was [${T.shape}]`)}j.attrParams.dtype&&j.attrParams.dtype.value&&me.util.assert(T.dtype===j.attrParams.dtype.value,()=>`The dtype of dict['${j.name}'] provided in model.execute(dict) must be ${j.attrParams.dtype.value}, but was ${T.dtype}`)})}mapInputs(g){const v={};for(const T in g)null!=this._signature&&null!=this._signature.inputs&&null!=this._signature.inputs[T]?v[this._signature.inputs[T].name]=g[T]:v[T]=g[T];return v}checkInputs(g){const v=Object.keys(g).filter(T=>{const[X]=He(T);return null==this.graph.nodes[X]});if(v.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${v}] that are not part of graph`)}mapOutputs(g){return g.map(v=>null!=this._signature&&null!=this._signature.outputs&&null!=this._signature.outputs[v]?this._signature.outputs[v].name:v,{})}checkOutputs(g){g.forEach(v=>{const[T]=He(v);if(!this.graph.nodes[T])throw new Error(`The output '${v}' is not found in the graph`)})}}class gl{constructor(g={},v={}){this.hashTableNameToHandle=g,this.hashTableMap=v}addHashTable(g,v){this.hashTableNameToHandle[g]=v.handle,this.hashTableMap[v.id]=v}getHashTableHandleByName(g){return this.hashTableNameToHandle[g]}getHashTableById(g){return this.hashTableMap[g]}dispose(){for(const g in this.hashTableMap)this.hashTableMap[g].clearAndClose(),delete this.hashTableMap[g];for(const g in this.hashTableNameToHandle)this.hashTableNameToHandle[g].dispose(),delete this.hashTableNameToHandle[g]}}class _o{constructor(g,v={},T=me.io){this.modelUrl=g,this.loadOptions=v,this.version="n/a",this.io=T,null==v&&(this.loadOptions={}),this.resourceManager=new gl}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}findIOHandler(){const g=this.modelUrl;if(null!=g.load)this.handler=g;else if(null!=this.loadOptions.requestInit)this.handler=this.io.browserHTTPRequest(g,this.loadOptions);else{const v=this.io.getLoadHandlers(g,this.loadOptions);if(0===v.length)v.push(this.io.browserHTTPRequest(g,this.loadOptions));else if(v.length>1)throw new Error(`Found more than one (${v.length}) load handlers for URL '${[g]}'`);this.handler=v[0]}}load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const g=this.handler.load();return me.util.isPromise(g)?g.then(v=>this.loadSync(v)):this.loadSync(g)}loadSync(g){this.artifacts=g;const v=this.artifacts.modelTopology;let T=this.artifacts.signature;if(null!=this.artifacts.userDefinedMetadata){const j=this.artifacts.userDefinedMetadata;null!=j.signature&&(T=j.signature),null!=j.structuredOutputKeys&&(this.structuredOutputKeys=j.structuredOutputKeys)}this.signature=T,this.version=`${v.versions.producer}.${v.versions.minConsumer}`;const X=this.io.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new qo(Rr.Instance.transformGraph(v,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(X),this.executor.resourceManager=this.resourceManager,null!=g.modelInitializer&&null!=g.modelInitializer.node){const j=Rr.Instance.transformGraph(g.modelInitializer);this.initializer=new qo(j),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}save(g,v){var T=this;return(0,xe.Z)(function*(){if("string"==typeof g){const X=T.io.getSaveHandlers(g);if(0===X.length)throw new Error(`Cannot find any save handlers for URL '${g}'`);if(X.length>1)throw new Error(`Found more than one (${X.length}) save handlers for URL '${g}'`);g=X[0]}if(null==g.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return g.save(T.artifacts)})()}predict(g,v){const T=this.execute(g,this.outputNodes);if(this.structuredOutputKeys){const j={};return(T instanceof me.Tensor?[T]:T).forEach((fe,he)=>j[this.structuredOutputKeys[he]]=fe),j}return T}normalizeInputs(g){if(!(g instanceof me.Tensor||Array.isArray(g)))return g;if((g=Array.isArray(g)?g:[g]).length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${g.length} input tensors.`);return this.inputNodes.reduce((v,T,X)=>(v[T]=g[X],v),{})}normalizeOutputs(g){return g=g||this.outputNodes,Array.isArray(g)?g:[g]}execute(g,v){g=this.normalizeInputs(g),v=this.normalizeOutputs(v);const T=this.executor.execute(g,v);return T.length>1?T:T[0]}executeAsync(g,v){var T=this;return(0,xe.Z)(function*(){g=T.normalizeInputs(g),v=T.normalizeOutputs(v);const X=yield T.executor.executeAsync(g,v);return X.length>1?X:X[0]})()}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(g){return Object.keys(g).reduce((v,T)=>(v[T]=[g[T]],v),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}}function Ue(I){return mr.apply(this,arguments)}function mr(){return(mr=(0,xe.Z)(function*(I,g={},v=me.io){if(null==I)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==g&&(g={}),g.fromTFHub&&"string"==typeof I&&(I=is(I));const T=new _o(I,g,v);return yield T.load(),T})).apply(this,arguments)}function Hl(I){if(null==I)throw new Error("modelUrl in loadGraphModelSync() cannot be null. Please provide model artifacts or an IOHandler that loads the model");let g;if(I instanceof Array){const[T,X]=I;if(!T)throw new Error("modelJSON must be the first element of the array");if(!(X&&X instanceof ArrayBuffer))throw new Error("An ArrayBuffer of weights must be the second element of the array");if(!("modelTopology"in T))throw new Error("Model JSON is missing 'modelTopology'");if(!("weightsManifest"in T))throw new Error("Model JSON is missing 'weightsManifest'");const j=me.io.getWeightSpecs(T.weightsManifest),fe=me.io.getModelArtifactsForJSONSync(T,j,X);g=me.io.fromMemorySync(fe)}else if("load"in I)g=I;else{if(!("modelTopology"in I&&"weightSpecs"in I&&"weightData"in I))throw new Error("Unknown model format");g=me.io.fromMemorySync(I)}const v=new _o(g);return v.load(),v}function is(I){return I.endsWith("/")||(I+="/"),`${I}model.json?tfjs-format=file`}const Bn="3.21.0"},7872:(Re,Y,h)=>{"use strict";h.d(Y,{JL:()=>W,Zu:()=>L});class W{constructor($,S){this.backend=$,this.dataMover=S,this.data=new WeakMap,this.dataIdsCount=0}get($){return this.data.has($)||this.dataMover.moveData(this.backend,$),this.data.get($)}set($,S){this.dataIdsCount++,this.data.set($,S)}has($){return this.data.has($)}delete($){return this.dataIdsCount--,this.data.delete($)}numDataIds(){return this.dataIdsCount}}class L{refCount($){return P("refCount")}incRef($){return P("incRef")}timerAvailable(){return!0}time($){return P("time")}read($){return P("read")}readSync($){return P("readSync")}readToGPU($,S){return P("readToGPU")}numDataIds(){return P("numDataIds")}disposeData($,S){return P("disposeData")}write($,S,b){return P("write")}move($,S,b,N,O){return P("move")}memory(){return P("memory")}floatPrecision(){return P("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return P("dispose")}}function P(k){throw new Error(`'${k}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}},152:(Re,Y,h)=>{"use strict";function V(M,H,oe){const J=function U(M,H,oe){return function L(M,H,oe){let J=0,de=M.length,pe=0,be=!1;for(;J<de;){pe=J+(de-J>>>1);const we=oe(H,M[pe]);we>0?J=pe+1:(de=pe,be=!we)}return be?J:-J-1}(M,H,oe||W)}(M,H,oe);M.splice(J<0?-(J+1):J,0,H)}function W(M,H){return M>H?1:M<H?-1:0}function P(M,H,oe,J,de){return S(M,H,oe,J,de,0)}function k(M,H,oe,J,de,pe){return S(M,H,oe,J,de,0,!1,pe,!0)}function $(M,H,oe,J,de,pe){return S(M,H,oe,J,de,pe,!0)}function S(M,H,oe,J,de,pe,be=!1,we=!1,Ce=!1){const me=[];for(let le=0;le<H.length;le++)H[le]>de&&me.push({score:H[le],boxIndex:le,suppressBeginIndex:0});me.sort(O);const ye=pe>0?-.5/pe:0,xe=[],Q=[];for(;xe.length<oe&&me.length>0;){const le=me.pop(),{score:ae,boxIndex:E,suppressBeginIndex:Oe}=le;if(ae<de)break;let ke=!1;for(let Pe=xe.length-1;Pe>=Oe;--Pe){const Ne=b(M,E,xe[Pe]);if(Ne>=J){ke=!0;break}if(le.score=le.score*N(J,ye,Ne),le.score<=de)break}le.suppressBeginIndex=xe.length,ke||(le.score===ae?(xe.push(E),Q.push(le.score)):le.score>de&&V(me,le,O))}const K=xe.length,w=oe-K;we&&w>0&&(xe.push(...new Array(w).fill(0)),Q.push(...new Array(w).fill(0)));const q={selectedIndices:xe};return be&&(q.selectedScores=Q),Ce&&(q.validOutputs=K),q}function b(M,H,oe){const J=M.subarray(4*H,4*H+4),de=M.subarray(4*oe,4*oe+4),pe=Math.min(J[0],J[2]),be=Math.min(J[1],J[3]),we=Math.max(J[0],J[2]),Ce=Math.max(J[1],J[3]),me=Math.min(de[0],de[2]),ye=Math.min(de[1],de[3]),xe=Math.max(de[0],de[2]),Q=Math.max(de[1],de[3]),K=(we-pe)*(Ce-be),w=(xe-me)*(Q-ye);if(K<=0||w<=0)return 0;const q=Math.max(pe,me),le=Math.max(be,ye),ae=Math.min(we,xe),E=Math.min(Ce,Q),Oe=Math.max(ae-q,0)*Math.max(E-le,0);return Oe/(K+w-Oe)}function N(M,H,oe){const J=Math.exp(H*oe*oe);return oe<=M?J:0}function O(M,H){return M.score-H.score||M.score===H.score&&H.boxIndex-M.boxIndex}h.d(Y,{GP:()=>P,qP:()=>k,pA:()=>$})},2842:(Re,Y,h)=>{"use strict";h.d(Y,{Z:()=>U});var V=h(8621);function U(W,L){const P=[];for(let S=0;S<L.length;S++)L[S]&&P.push(S);const k=(0,V.f)(W,"int32"),$=(0,V.f)([P.length,W.length],"int32");for(let S=0;S<P.length;S++){const b=k.indexToLoc(P[S]);$.values.set(b,S*W.length)}return $.toTensor()}},3738:(Re,Y,h)=>{"use strict";h.d(Y,{BV:()=>ye,wv:()=>me});var V=h(5861),U=h(7872),W=h(1777),L=h(6422),P=h(1070),k=h(9464),$=h(5686),S=h(8813),b=h(1396);class N{constructor(K,w){this.backendTimer=K,this.logger=w,null==w&&(this.logger=new M)}profileKernel(K,w,q){let le;const ae=()=>{le=q()};let E;const Oe=S.now();if(this.backendTimer.timerAvailable())E=this.backendTimer.time(ae);else{ae();for(const Pe of le)Pe.dataSync();E=Promise.resolve({kernelMs:S.now()-Oe})}if((0,W.OB)().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let Pe=0;Pe<le.length;Pe++){const Ne=le[Pe];Ne.data().then(He=>{O(He,Ne.dtype,K)})}return{kernelName:K,outputs:le,inputs:w,timeMs:E.then(Pe=>Pe.kernelMs),extraInfo:E.then(Pe=>null!=Pe.getExtraProfileInfo?Pe.getExtraProfileInfo():"")}}logKernelProfile(K){const{kernelName:w,outputs:q,timeMs:le,inputs:ae,extraInfo:E}=K;q.forEach(Oe=>{Promise.all([Oe.data(),le,E]).then(ke=>{this.logger.logKernelProfile(w,Oe,ke[0],ke[1],ae,ke[2])})})}}function O(Q,K,w){if("float32"!==K)return!1;for(let q=0;q<Q.length;q++){const le=Q[q];if(isNaN(le)||!isFinite(le))return console.warn(`Found ${le} in the result of '${w}'`),!0}return!1}class M{logKernelProfile(K,w,q,le,ae,E){const Oe="number"==typeof le?b.oj(`${le}ms`,9):le.error,ke=b.oj(K,25),Pe=w.rank,Ne=w.size,He=b.oj(w.shape.toString(),14);let mt="";for(const _t in ae){const Rt=ae[_t];if(null!=Rt){const Dt=Rt.shape||w.shape,Xt=Dt.length;mt+=`${_t}: ${Xt}D ${Xt>0?Dt:""} `}}console.log(`%c${ke}\t%c${Oe}\t%c${Pe}D ${He}\t%c${Ne}\t%c${mt}\t%c${E}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}var J=h(708),de=h(7904);function pe(Q){return null!=Q.kernelName}class be{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(K=>K.name)))}}}dispose(){for(const K in this.registeredVariables)this.registeredVariables[K].dispose()}}let we=(()=>{class Q{constructor(w){this.ENV=w,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new be}ready(){var w=this;return(0,V.Z)(function*(){if(null!=w.pendingBackendInit)return w.pendingBackendInit.then(()=>{});if(null!=w.backendInstance)return;const q=w.getSortedBackends();for(let le=0;le<q.length;le++){const ae=q[le];if(yield w.initializeBackend(ae).success)return void(yield w.setBackend(ae))}throw new Error("Could not initialize any backends, all backend initializations failed.")})()}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:w,asyncInit:q}=this.initializeBackendsAndReturnBest();if(q)throw new Error(`The highest priority backend '${w}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(w)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(w){if(!(w in this.registry)){if(!(w in this.registryFactory))return null;{const{asyncInit:q}=this.initializeBackend(w);if(q)return null}}return this.registry[w]}findBackendFactory(w){return w in this.registryFactory?this.registryFactory[w].factory:null}registerBackend(w,q,le=1){return w in this.registryFactory?($.Z(`${w} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[w]={factory:q,priority:le},!0)}setBackend(w){var q=this;return(0,V.Z)(function*(){if(null==q.registryFactory[w])throw new Error(`Backend name '${w}' not found in registry`);if(q.backendName=w,null==q.registry[w]){q.backendInstance=null;const{success:le,asyncInit:ae}=q.initializeBackend(w);if(!(ae?yield le:le))return!1}return q.backendInstance=q.registry[w],q.setupRegisteredKernels(),q.profiler=new N(q.backendInstance),!0})()}setupRegisteredKernels(){(0,k.tr)(this.backendName).forEach(q=>{null!=q.setupFunc&&q.setupFunc(this.backendInstance)})}disposeRegisteredKernels(w){(0,k.tr)(w).forEach(le=>{null!=le.disposeFunc&&le.disposeFunc(this.registry[w])})}initializeBackend(w){const q=this.registryFactory[w];if(null==q)throw new Error(`Cannot initialize backend ${w}, no registration found.`);try{const le=q.factory();if(!le||le instanceof U.Zu||"function"!=typeof le.then)return this.registry[w]=le,{success:!0,asyncInit:!1};{const ae=++this.pendingBackendInitId,E=le.then(Oe=>!(ae<this.pendingBackendInitId||(this.registry[w]=Oe,this.pendingBackendInit=null,0))).catch(Oe=>(ae<this.pendingBackendInitId||(this.pendingBackendInit=null,$.Z(`Initialization of backend ${w} failed`),$.Z(Oe.stack||Oe.message)),!1));return this.pendingBackendInit=E,{success:E,asyncInit:!0}}}catch(le){return $.Z(`Initialization of backend ${w} failed`),$.Z(le.stack||le.message),{success:!1,asyncInit:!1}}}removeBackend(w){if(!(w in this.registryFactory))throw new Error(`${w} backend not found in registry`);this.backendName===w&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,w in this.registry&&(this.disposeRegisteredKernels(w),this.registry[w].dispose(),delete this.registry[w]),delete this.registryFactory[w],this.backendName===w&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((w,q)=>this.registryFactory[q].priority-this.registryFactory[w].priority)}initializeBackendsAndReturnBest(){const w=this.getSortedBackends();for(let q=0;q<w.length;q++){const le=w[q],{success:ae,asyncInit:E}=this.initializeBackend(le);if(E||ae)return{name:le,asyncInit:E}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(w,q){const le=this.state.tensorInfo.get(q),ae=le.backend,E=this.readSync(q),Oe=ae.refCount(q);ae.disposeData(q,!0),le.backend=w,w.move(q,E,le.shape,le.dtype,Oe),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(w,q){let ae,le=null;if(null==q){if("function"!=typeof w)throw new Error("Please provide a function to tidy()");q=w}else{if("string"!=typeof w&&!(w instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof q)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");le=w}return this.scopedRun(()=>this.startScope(le),()=>this.endScope(ae),()=>(ae=q(),ae instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),ae))}scopedRun(w,q,le){w();try{const ae=le();return q(),ae}catch(ae){throw q(),ae}}nextTensorId(){return Q.nextTensorId++}nextVariableId(){return Q.nextVariableId++}clone(w){const q=ye.runKernel(P.iJz,{x:w});return this.addTapeNode(this.state.activeScope.name,{x:w},[q],Oe=>({x:()=>ye.runKernel(P.RFZ,{x:Oe},{dtype:"float32"})}),[],{}),q}runKernel(w,q,le){if(null==(0,k.pI)(w,this.backendName))throw new Error(`Kernel '${w}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:w,inputs:q,attrs:le})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(w,q,le){const ae=this.backend.numDataIds();let E=0;le.forEach(Pe=>{E+="complex64"===Pe.dtype?3:1});const ke=ae-q-E-this.state.numDataMovesStack[this.state.numDataMovesStack.length-1];if(ke>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${ke} data ids) after running '${w}'`)}runKernelFunc(w){let q,le=[];const ae=this.isTapeOn(),E=this.state.numBytes,Oe=this.state.numTensors;let ke,Pe;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);const Ne=pe(w)?w.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(pe(w)){const{kernelName:Dt,inputs:Xt,attrs:Et}=w,Vt=(0,k.pI)(Dt,this.backendName);b.hu(null!=Vt,()=>`Cannot find registered kernel '${Dt}' for backend '${this.backendName}'`),ke=()=>{const Ht=this.backend.numDataIds();Pe=Vt.kernelFunc({inputs:Xt,attrs:Et,backend:this.backend});const ss=Array.isArray(Pe)?Pe:[Pe];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(Dt,Ht,ss);const St=ss.map(_s=>null!=_s.rank?_s:this.makeTensorFromTensorInfo(_s));if(ae){const _s=this.getTensorsForGradient(Dt,Xt,St);le=this.saveTensorsForBackwardMode(_s)}return St}}else{const{forwardFunc:Dt}=w,Xt=Et=>{!ae||(le=Et.map(Vt=>this.keep(this.clone(Vt))))};ke=()=>{const Et=this.backend.numDataIds();Pe=this.tidy(()=>Dt(this.backend,Xt));const Vt=Array.isArray(Pe)?Pe:[Pe];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(Ne,Et,Vt),Vt}}const{inputs:He,attrs:mt}=w,_t=pe(w)?null:w.backwardsFunc;let Rt;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(Rt=this.profiler.profileKernel(Ne,He,()=>ke()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(Rt),q=Rt.outputs):q=ke()}),ae&&this.addTapeNode(Ne,He,q,_t,le,mt),this.state.profiling&&this.state.activeProfile.kernels.push({name:Ne,bytesAdded:this.state.numBytes-E,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-Oe,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(He).map(Dt=>null!=He[Dt]?He[Dt].shape:null),outputShapes:q.map(Dt=>Dt.shape),kernelTimeMs:Rt.timeMs,extraInfo:Rt.extraInfo}),Array.isArray(Pe)?q:q[0]}saveTensorsForBackwardMode(w){return w.map(le=>this.keep(this.clone(le)))}getTensorsForGradient(w,q,le){const ae=(0,k.uk)(w);if(null!=ae){const E=ae.inputsToSave||[],Oe=ae.outputsToSave||[];let ke;ae.saveAllInputs?(b.hu(Array.isArray(q),()=>"saveAllInputs is true, expected inputs to be an array."),ke=Object.keys(q).map(Ne=>q[Ne])):ke=E.map(Ne=>q[Ne]);const Pe=le.filter((Ne,He)=>Oe[He]);return ke.concat(Pe)}return[]}makeTensor(w,q,le,ae){if(null==w)throw new Error("Values passed to engine.makeTensor() are null");ae=ae||this.backend;let E=w;"string"===(le=le||"float32")&&b.HD(w[0])&&(E=w.map(Pe=>S.encodeString(Pe)));const Oe=ae.write(E,q,le),ke=new J.es(q,le,Oe,this.nextTensorId());if(this.trackTensor(ke,ae),"string"===le){const Pe=this.state.tensorInfo.get(Oe),Ne=(0,b.Ub)(E);this.state.numBytes+=Ne-Pe.bytes,Pe.bytes=Ne}return ke}makeTensorFromDataId(w,q,le,ae){return this.makeTensorFromTensorInfo({dataId:w,shape:q,dtype:le=le||"float32"},ae)}makeTensorFromTensorInfo(w,q){const{dataId:le,shape:ae,dtype:E}=w,Oe=new J.es(ae,E,le,this.nextTensorId());return this.trackTensor(Oe,q),Oe}makeVariable(w,q=!0,le,ae){le=le||this.nextVariableId().toString(),null!=ae&&ae!==w.dtype&&(w=w.cast(ae));const E=new J._w(w,q,le,this.nextTensorId());if(null!=this.state.registeredVariables[E.name])throw new Error(`Variable with name ${E.name} was already registered`);return this.state.registeredVariables[E.name]=E,this.incRef(E,this.backend),E}trackTensor(w,q){this.state.numTensors++,"string"===w.dtype&&this.state.numStringTensors++;let le=0;"complex64"!==w.dtype&&"string"!==w.dtype&&(le=w.size*b.bT(w.dtype)),this.state.numBytes+=le,this.state.tensorInfo.has(w.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(w.dataId,{backend:q||this.backend,dtype:w.dtype,shape:w.shape,bytes:le})),w instanceof J._w||this.track(w)}incRef(w,q){this.trackTensor(w,q),this.backend.incRef(w.dataId)}removeDataId(w,q){this.state.tensorInfo.has(w)&&this.state.tensorInfo.get(w).backend===q&&(this.state.tensorInfo.delete(w),this.state.numDataBuffers--)}disposeTensor(w){if(!this.state.tensorInfo.has(w.dataId))return;const q=this.state.tensorInfo.get(w.dataId);if(this.state.numTensors--,"string"===w.dtype&&(this.state.numStringTensors--,this.state.numBytes-=q.bytes),"complex64"!==w.dtype&&"string"!==w.dtype){const le=w.size*b.bT(w.dtype);this.state.numBytes-=le}q.backend.disposeData(w.dataId)&&this.removeDataId(w.dataId,q.backend)}disposeVariables(){for(const w in this.state.registeredVariables)this.disposeVariable(this.state.registeredVariables[w])}disposeVariable(w){this.disposeTensor(w),null!=this.state.registeredVariables[w.name]&&delete this.state.registeredVariables[w.name]}memory(){const w=this.backend.memory();return w.numTensors=this.state.numTensors,w.numDataBuffers=this.state.numDataBuffers,w.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(w.unreliable=!0,null==w.reasons&&(w.reasons=[]),w.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),w}profile(w){var q=this;return(0,V.Z)(function*(){q.state.profiling=!0;const le=q.state.numBytes,ae=q.state.numTensors;q.state.activeProfile.kernels=[],q.state.activeProfile.result=yield w(),q.state.profiling=!1,q.state.activeProfile.peakBytes=Math.max(...q.state.activeProfile.kernels.map(E=>E.totalBytesSnapshot)),q.state.activeProfile.newBytes=q.state.numBytes-le,q.state.activeProfile.newTensors=q.state.numTensors-ae;for(const E of q.state.activeProfile.kernels)E.kernelTimeMs=yield E.kernelTimeMs,E.extraInfo=yield E.extraInfo;return q.state.activeProfile})()}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(w,q,le,ae,E,Oe){const ke={id:this.state.nextTapeNodeId++,kernelName:w,inputs:q,outputs:le,saved:E},Pe=(0,k.uk)(w);null!=Pe&&(ae=Pe.gradFunc),null!=ae&&(ke.gradient=Ne=>(Ne=Ne.map((He,mt)=>{if(null==He){const _t=le[mt],Rt=b.wT(_t.size,_t.dtype);return this.makeTensor(Rt,_t.shape,_t.dtype)}return He}),ae(Ne.length>1?Ne:Ne[0],E,Oe))),this.state.activeTape.push(ke)}keep(w){return w.kept=!0,w}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(w){const q={track:[],name:"unnamed scope",id:this.state.nextScopeId++};w&&(q.name=w),this.state.scopeStack.push(q),this.state.activeScope=q}endScope(w){const q=(0,de.getTensorsInContainer)(w),le=new Set(q.map(E=>E.id));for(let E=0;E<this.state.activeScope.track.length;E++){const Oe=this.state.activeScope.track[E];!Oe.kept&&!le.has(Oe.id)&&Oe.dispose()}const ae=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],q.forEach(E=>{!E.kept&&E.scopeId===ae.id&&this.track(E)})}gradients(w,q,le,ae=!1){if(b.hu(q.length>0,()=>"gradients() received an empty list of xs."),null!=le&&"float32"!==le.dtype)throw new Error(`dy must have 'float32' dtype, but has '${le.dtype}'`);const E=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",w));b.hu(E instanceof J.es,()=>"The result y returned by f() must be a tensor.");const Oe=function H(Q,K,w){const q={},le={};for(let ke=0;ke<K.length;ke++)q[K[ke].id]=!0;for(let ke=0;ke<Q.length;ke++){const Pe=Q[ke],Ne=Pe.inputs;for(const He in Ne){const mt=Ne[He];let _t=!1;for(let Rt=0;Rt<K.length;Rt++)if(q[mt.id]){Pe.outputs.forEach(Dt=>q[Dt.id]=!0),_t=!0,le[Pe.id]=!0;break}if(_t)break}}const ae={};ae[w.id]=!0;const E={};for(let ke=Q.length-1;ke>=0;ke--){const Pe=Q[ke],Ne=Pe.inputs;for(let He=0;He<Pe.outputs.length;He++)if(ae[Pe.outputs[He].id]){for(const mt in Ne)ae[Ne[mt].id]=!0,E[Pe.id]=!0;break}}const Oe=[];for(let ke=0;ke<Q.length;ke++){const Pe=Q[ke];if(le[Pe.id]&&E[Pe.id]){const Ne={};for(const mt in Pe.inputs){const _t=Pe.inputs[mt];q[_t.id]&&(Ne[mt]=_t)}const He=Object.assign({},Pe);He.inputs=Ne,He.outputs=Pe.outputs,Oe.push(He)}}return Oe}(this.state.activeTape,q,E);if(!ae&&0===Oe.length&&q.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const ke={};ke[E.id]=null==le?function Ce(Q){const K=(0,b.p8)((0,b.NA)(Q),"float32");return ye.makeTensor(K,Q,"float32")}(E.shape):le,function oe(Q,K,w,q){for(let le=K.length-1;le>=0;le--){const ae=K[le],E=[];if(ae.outputs.forEach(ke=>{const Pe=Q[ke.id];E.push(null!=Pe?Pe:null)}),null==ae.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${ae.kernelName}.`);const Oe=ae.gradient(E);for(const ke in ae.inputs){if(!(ke in Oe))throw new Error(`Cannot backprop through input ${ke}. Available gradients found: ${Object.keys(Oe)}.`);const Pe=w(()=>Oe[ke]());if("float32"!==Pe.dtype)throw new Error(`Error in gradient for op ${ae.kernelName}. The gradient of input ${ke} must have 'float32' dtype, but has '${Pe.dtype}'`);const Ne=ae.inputs[ke];if(!b.cO(Pe.shape,Ne.shape))throw new Error(`Error in gradient for op ${ae.kernelName}. The gradient of input '${ke}' has shape '${Pe.shape}', which does not match the shape of the input '${Ne.shape}'`);if(null==Q[Ne.id])Q[Ne.id]=Pe;else{const He=Q[Ne.id];Q[Ne.id]=q(He,Pe),He.dispose()}}}}(ke,Oe,Ne=>this.tidy(Ne),xe);const Pe=q.map(Ne=>ke[Ne.id]);return 0===this.state.gradientDepth&&(this.state.activeTape.forEach(Ne=>{for(const He of Ne.saved)He.dispose()}),this.state.activeTape=null),{value:E,grads:Pe}})}customGrad(w){return b.hu(b.mf(w),()=>"The f passed in customGrad(f) must be a function."),(...q)=>{let le;b.hu(q.every(ke=>ke instanceof J.es),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");const ae={};return q.forEach((ke,Pe)=>{ae[Pe]=ke}),this.runKernelFunc({forwardFunc:(ke,Pe)=>(le=w(...q,Pe),b.hu(le.value instanceof J.es,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),b.hu(b.mf(le.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),le.value),backwardsFunc:(ke,Pe)=>{const Ne=le.gradFunc(ke,Pe),He=Array.isArray(Ne)?Ne:[Ne];b.hu(He.length===q.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),b.hu(He.every(_t=>_t instanceof J.es),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const mt={};return He.forEach((_t,Rt)=>{mt[Rt]=()=>_t}),mt},inputs:ae})}}readSync(w){return this.state.tensorInfo.get(w).backend.readSync(w)}read(w){return this.state.tensorInfo.get(w).backend.read(w)}readToGPU(w,q){return this.state.tensorInfo.get(w).backend.readToGPU(w,q)}time(w){var q=this;return(0,V.Z)(function*(){const le=(0,S.now)(),ae=yield q.backend.time(w);return ae.wallMs=(0,S.now)()-le,ae})()}track(w){return null!=this.state.activeScope&&(w.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(w)),w}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new be;for(const w in this.registry)this.disposeRegisteredKernels(w),this.registry[w].dispose(),delete this.registry[w];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}return Q.nextTensorId=0,Q.nextVariableId=0,Q})();function me(){const Q=(0,L.D)();if(null==Q._tfengine){const K=new W.qA(Q);Q._tfengine=new we(K)}return(0,W.iG)(Q._tfengine.ENV),(0,J.Vi)(()=>Q._tfengine),Q._tfengine}const ye=me();function xe(Q,K){return ye.runKernel(P.mm_,{a:Q,b:K})}},1777:(Re,Y,h)=>{"use strict";h.d(Y,{OB:()=>S,Vi:()=>b,iG:()=>N,qA:()=>L});var V=h(5861),U=h(1396);const W="tfjsflags";class L{constructor(M){this.global=M,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=P,this.populateURLFlags()}setPlatform(M,H){null!=this.platform&&(S().getBool("IS_TEST")||S().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${M}.`)),this.platformName=M,this.platform=H}registerFlag(M,H,oe){if(this.flagRegistry[M]={evaluationFn:H,setHook:oe},null!=this.urlFlags[M]){const J=this.urlFlags[M];S().getBool("IS_TEST")||S().getBool("PROD")||console.warn(`Setting feature override from URL ${M}: ${J}.`),this.set(M,J)}}getAsync(M){var H=this;return(0,V.Z)(function*(){return M in H.flags||(H.flags[M]=yield H.evaluateFlag(M)),H.flags[M]})()}get(M){if(M in this.flags)return this.flags[M];const H=this.evaluateFlag(M);if((0,U.tI)(H))throw new Error(`Flag ${M} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[M]=H,this.flags[M]}getNumber(M){return this.get(M)}getBool(M){return this.get(M)}getFlags(){return this.flags}get features(){return this.flags}set(M,H){if(null==this.flagRegistry[M])throw new Error(`Cannot set flag ${M} as it has not been registered.`);this.flags[M]=H,null!=this.flagRegistry[M].setHook&&this.flagRegistry[M].setHook(H)}evaluateFlag(M){if(null==this.flagRegistry[M])throw new Error(`Cannot evaluate flag '${M}': no evaluation function found.`);return this.flagRegistry[M].evaluationFn()}setFlags(M){this.flags=Object.assign({},M)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const M=this.getQueryParams(this.global.location.search);W in M&&M[W].split(",").forEach(oe=>{const[J,de]=oe.split(":");this.urlFlags[J]=function $(O,M){if("true"===(M=M.toLowerCase())||"false"===M)return"true"===M;if(""+ +M===M)return+M;throw new Error(`Could not parse value flag value ${M} for flag ${O}.`)}(J,de)})}}function P(O){const M={};return O.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(H,...oe)=>(function k(O,M,H){O[decodeURIComponent(M)]=decodeURIComponent(H||"")}(M,oe[0],oe[1]),oe.join("="))),M}function S(){return b}let b=null;function N(O){b=O}},6422:(Re,Y,h)=>{"use strict";let V;function U(){if(null==V){let P;if("undefined"!=typeof window)P=window;else if("undefined"!=typeof global)P=global;else if("undefined"!=typeof process)P=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");P=self}V=P}return V}function L(P,k){const $=function W(){const P=U();return null==P._tfGlobals&&(P._tfGlobals=new Map),P._tfGlobals}();if($.has(P))return $.get(P);{const S=k();return $.set(P,S),$.get(P)}}h.d(Y,{D:()=>U,R:()=>L})},9370:(Re,Y,h)=>{"use strict";h.d(Y,{B9:()=>oe,CQ:()=>pe,Cd:()=>be,Cn:()=>J,G4:()=>P,MX:()=>S,N5:()=>M,N8:()=>b,N_:()=>we,R:()=>k,SR:()=>N,VY:()=>K,XV:()=>de,cF:()=>$,cj:()=>Ce,jq:()=>xe,lu:()=>H,sq:()=>O,x3:()=>me,y3:()=>Q,ze:()=>ye});var V=h(3738),U=h(1777),W=h(708),L=h(7904);function P(){(0,U.OB)().set("PROD",!0)}function k(){(0,U.OB)().set("DEBUG",!0)}function $(){(0,U.OB)().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function S(w){(0,U.OB)().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(w+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function b(){V.BV.disposeVariables()}function N(){return V.BV}function O(){return V.BV.memory()}function M(w){return V.BV.profile(w)}function H(w,q){return V.BV.tidy(w,q)}function oe(w){(0,L.getTensorsInContainer)(w).forEach(le=>le.dispose())}function J(w){return V.BV.keep(w)}function de(w){return V.BV.time(w)}function pe(w){return V.BV.setBackend(w)}function be(){return V.BV.ready()}function we(){return V.BV.backendName}function Ce(w){V.BV.removeBackend(w)}function me(w){return V.BV.findBackend(w)}function ye(w){return V.BV.findBackendFactory(w)}function xe(w,q,le=1){return V.BV.registerBackend(w,q,le)}function Q(){return V.BV.backend}function K(w,q){(0,U.OB)().setPlatform(w,q)}(0,W.FZ)(S)},1335:(Re,Y,h)=>{"use strict";h.d(Y,{UQ:()=>P,cb:()=>N,fN:()=>S,h7:()=>$,pn:()=>b,ti:()=>k});var V=h(3738),U=h(708),W=h(9608),L=h(1396);function P(M){return L.hu(L.mf(M),()=>"The f passed in grad(f) must be a function"),(H,oe)=>{const J=(0,W._1)(H,"x","tf.grad","string_or_numeric"),de=null!=oe?(0,W._1)(oe,"dy","tf.grad"):null;return V.BV.tidy(()=>{const{value:pe,grads:be}=V.BV.gradients(()=>M(J),[J],de);return null!=de&&L.k5(pe.shape,de.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),O(be),be[0]})}}function k(M){return L.hu(L.mf(M),()=>"The f passed in grads(f) must be a function"),(H,oe)=>{L.hu(Array.isArray(H),()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s");const J=(0,W.sI)(H,"args","tf.grads","string_or_numeric"),de=null!=oe?(0,W._1)(oe,"dy","tf.grads"):null;return V.BV.tidy(()=>{const{value:pe,grads:be}=V.BV.gradients(()=>M(...J),J,de);return null!=de&&L.k5(pe.shape,de.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),O(be),be})}}function $(M){return L.hu(L.mf(M),()=>"The f passed in valueAndGrad(f) must be a function"),(H,oe)=>{L.hu(H instanceof U.es,()=>"The x passed in valueAndGrad(f)(x) must be a tensor"),L.hu(null==oe||oe instanceof U.es,()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor");const{grads:J,value:de}=V.BV.gradients(()=>M(H),[H],oe);return O(J),{grad:J[0],value:de}}}function S(M){return L.hu(L.mf(M),()=>"The f passed in valueAndGrads(f) must be a function"),(H,oe)=>{L.hu(Array.isArray(H)&&H.every(de=>de instanceof U.es),()=>"The args passed in valueAndGrads(f)(args) must be array of tensors"),L.hu(null==oe||oe instanceof U.es,()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor");const J=V.BV.gradients(()=>M(...H),H,oe);return null!=oe&&L.k5(J.value.shape,oe.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),O(J.grads),J}}function b(M,H){L.hu(L.mf(M),()=>"The f passed in variableGrads(f) must be a function"),L.hu(null==H||Array.isArray(H)&&H.every(me=>me instanceof U._w),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");const oe=null!=H;if(!oe){H=[];for(const me in V.BV.registeredVariables)H.push(V.BV.registeredVariables[me])}const J=oe?H.filter(me=>!me.trainable):null,de=H.length;H=H.filter(me=>me.trainable),L.hu(H.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${de} variables is trainable.`);const{value:be,grads:we}=V.BV.gradients(M,H,null,!0);L.hu(we.some(me=>null!=me),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),L.hu(0===be.rank,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${be.rank} tensor`);const Ce={};return H.forEach((me,ye)=>{null!=we[ye]&&(Ce[me.name]=we[ye])}),null!=J&&J.forEach(me=>Ce[me.name]=null),{value:be,grads:Ce}}function N(M){return V.BV.customGrad(M)}function O(M){if(M.filter(oe=>null==oe).length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that\n    the f you passed encloses all operations that lead from x to y.")}},569:(Re,Y,h)=>{"use strict";h.r(Y),h.d(Y,{Abs:()=>Ue.SYM,Acos:()=>Ue.VGw,Acosh:()=>Ue.SpW,AdadeltaOptimizer:()=>vl,AdagradOptimizer:()=>xl,AdamOptimizer:()=>Kl,AdamaxOptimizer:()=>er,Add:()=>Ue.mm_,AddN:()=>Ue.Xze,All:()=>Ue.oT6,Any:()=>Ue.IKK,ArgMax:()=>Ue.sJF,ArgMin:()=>Ue.aJk,Asin:()=>Ue.M2y,Asinh:()=>Ue.qw7,Atan:()=>Ue.jMg,Atan2:()=>Ue.QCc,Atanh:()=>Ue.Oyi,AvgPool:()=>Ue.JhU,AvgPool3D:()=>Ue._k9,AvgPool3DGrad:()=>Ue.IMb,AvgPoolGrad:()=>Ue.ROF,BatchMatMul:()=>Ue.XLW,BatchToSpaceND:()=>Ue.zws,Bincount:()=>Ue.zvY,BroadcastArgs:()=>Ue.eEB,BroadcastTo:()=>Ue.Ly9,Cast:()=>Ue.RFZ,Ceil:()=>Ue.gJX,ClipByValue:()=>Ue.xnO,Complex:()=>Ue.Zz9,ComplexAbs:()=>Ue.yj2,Concat:()=>Ue.Eh3,Conv2D:()=>Ue.mhS,Conv2DBackpropFilter:()=>Ue.wUP,Conv2DBackpropInput:()=>Ue.wm,Conv3D:()=>Ue.x12,Conv3DBackpropFilterV2:()=>Ue.o2y,Conv3DBackpropInputV2:()=>Ue.ik2,Cos:()=>Ue.mc4,Cosh:()=>Ue.TR1,CropAndResize:()=>Ue.VcC,Cumprod:()=>Ue.Byc,Cumsum:()=>Ue.iHb,DataStorage:()=>Br.JL,DenseBincount:()=>Ue.QRR,DepthToSpace:()=>Ue.T0n,DepthwiseConv2dNative:()=>Ue.cie,DepthwiseConv2dNativeBackpropFilter:()=>Ue.sL$,DepthwiseConv2dNativeBackpropInput:()=>Ue.y7R,Diag:()=>Ue.$w,Dilation2D:()=>Ue.p4S,Dilation2DBackpropFilter:()=>Ue.Vn9,Dilation2DBackpropInput:()=>Ue.ekb,ENV:()=>pe.Vi,Einsum:()=>Ue.$g6,Elu:()=>Ue.SX0,EluGrad:()=>Ue.HEU,Environment:()=>pe.qA,Equal:()=>Ue.hdR,Erf:()=>Ue.Omj,Exp:()=>Ue.NEP,ExpandDims:()=>Ue.YFo,Expm1:()=>Ue.Y0y,FFT:()=>Ue.vwp,Fill:()=>Ue.deh,FlipLeftRight:()=>Ue.Uyb,Floor:()=>Ue.OR,FloorDiv:()=>Ue.jeX,FromPixels:()=>Ue.eBW,FusedBatchNorm:()=>Ue.sHE,FusedConv2D:()=>Ue._V0,FusedDepthwiseConv2D:()=>Ue.luS,GatherNd:()=>Ue.q1x,GatherV2:()=>Ue.qi_,Greater:()=>Ue.iZT,GreaterEqual:()=>Ue.Acj,IFFT:()=>Ue.Qg5,Identity:()=>Ue.iJz,Imag:()=>Ue.J_u,IsFinite:()=>Ue.avt,IsInf:()=>Ue.iWB,IsNan:()=>Ue.r7n,KernelBackend:()=>Br.Zu,LRN:()=>Ue.eZ0,LRNGrad:()=>Ue.Hhh,LeakyRelu:()=>Ue.J$2,Less:()=>Ue.vtC,LessEqual:()=>Ue.CAk,LinSpace:()=>Ue.e7N,Log:()=>Ue.ZbH,Log1p:()=>Ue.kU,LogSoftmax:()=>Ue.qCd,LogicalAnd:()=>Ue.PYm,LogicalNot:()=>Ue.VfG,LogicalOr:()=>Ue.MZg,LogicalXor:()=>Ue.w6g,LowerBound:()=>Ue.qIC,Max:()=>Ue.YoZ,MaxPool:()=>Ue.mTV,MaxPool3D:()=>Ue.OAf,MaxPool3DGrad:()=>Ue.OU7,MaxPoolGrad:()=>Ue.OV7,MaxPoolWithArgmax:()=>Ue.vFR,Maximum:()=>Ue.BMI,Mean:()=>Ue.q2K,Min:()=>Ue.c17,Minimum:()=>Ue.q8u,MirrorPad:()=>Ue.jQs,Mod:()=>Ue.Vbg,MomentumOptimizer:()=>ao,Multinomial:()=>Ue.NZg,Multiply:()=>Ue.wYn,Neg:()=>Ue.kuV,NonMaxSuppressionV3:()=>Ue.uv1,NonMaxSuppressionV4:()=>Ue.cye,NonMaxSuppressionV5:()=>Ue.W0H,NotEqual:()=>Ue.yQU,OP_SCOPE_SUFFIX:()=>Ae.zvA,OneHot:()=>Ue.we_,OnesLike:()=>Ue.qWM,Optimizer:()=>jr,OptimizerConstructors:()=>Bs,Pack:()=>Ue.QiL,PadV2:()=>Ue.lyA,Pool:()=>Ue.Kgp,Pow:()=>Ue.pe_,Prelu:()=>Ue.o0g,Prod:()=>Ue.DlI,RMSPropOptimizer:()=>bo,RaggedGather:()=>Ue.dDz,RaggedTensorToTensor:()=>Ue.BiW,Range:()=>Ue.e6w,Rank:()=>ki.yw,Real:()=>Ue.xJR,RealDiv:()=>Ue.oHH,Reciprocal:()=>Ue.$HU,Reduction:()=>wa.I,Relu:()=>Ue.qkr,Relu6:()=>Ue.SbG,Reshape:()=>Ue.HZH,ResizeBilinear:()=>Ue._Yw,ResizeBilinearGrad:()=>Ue.zbQ,ResizeNearestNeighbor:()=>Ue.dpD,ResizeNearestNeighborGrad:()=>Ue.Hmb,Reverse:()=>Ue.mKl,RotateWithOffset:()=>Ue.b9H,Round:()=>Ue.e07,Rsqrt:()=>Ue.bV0,SGDOptimizer:()=>Ms,ScatterNd:()=>Ue.xQA,SearchSorted:()=>Ue.nr8,Select:()=>Ue.PhF,Selu:()=>Ue.oFR,Sigmoid:()=>Ue.a5O,Sign:()=>Ue.i5y,Sin:()=>Ue.RQH,Sinh:()=>Ue.wYB,Slice:()=>Ue.p2w,Softmax:()=>Ue.Gcp,Softplus:()=>Ue.MRv,SpaceToBatchND:()=>Ue.TQc,SparseFillEmptyRows:()=>Ue.O3z,SparseReshape:()=>Ue.nhH,SparseSegmentMean:()=>Ue.w3H,SparseSegmentSum:()=>Ue.ZjV,SparseToDense:()=>Ue.D2d,SplitV:()=>Ue.L8s,Sqrt:()=>Ue.FKq,Square:()=>Ue.bK0,SquaredDifference:()=>Ue._tC,Step:()=>Ue.h8e,StridedSlice:()=>Ue.jQk,StringNGrams:()=>Ue._JP,StringSplit:()=>Ue.s1s,StringToHashBucketFast:()=>Ue.XkS,Sub:()=>Ue.Tr8,Sum:()=>Ue.GBy,Tan:()=>Ue.sEM,Tanh:()=>Ue.MIZ,Tensor:()=>Ro.es,TensorBuffer:()=>Ro.YD,Tile:()=>Ue.n9L,TopK:()=>Ue.cWu,Transform:()=>Ue.wx7,Transpose:()=>Ue.G3Y,Unique:()=>Ue.kpP,Unpack:()=>Ue.ToN,UnsortedSegmentSum:()=>Ue.Qvg,UpperBound:()=>Ue.XDQ,Variable:()=>Ro._w,ZerosLike:()=>Ue.RuY,_FusedMatMul:()=>Ue.usg,abs:()=>Ae.WnP,acos:()=>Ae.Khb,acosh:()=>Ae.__u,add:()=>Ae.IHx,addN:()=>Ae.QBD,all:()=>Ae.$6P,any:()=>Ae.YjB,argMax:()=>Ae.NqF,argMin:()=>Ae.vHJ,asin:()=>Ae.ZRM,asinh:()=>Ae.VfV,atan:()=>Ae.z4N,atan2:()=>Ae.fvJ,atanh:()=>Ae.C80,avgPool:()=>Ae.wS1,avgPool3d:()=>Ae.uR5,backend:()=>Bt.y3,backend_util:()=>b,basicLSTMCell:()=>Ae.zEQ,batchNorm:()=>Ae.tgs,batchNorm2d:()=>Ae.Dxk,batchNorm3d:()=>Ae.JY5,batchNorm4d:()=>Ae.p3b,batchToSpaceND:()=>Ae.E4h,bincount:()=>Ae.yE8,booleanMaskAsync:()=>Ae.anm,broadcastArgs:()=>Ae.XsQ,broadcastTo:()=>Ae.UFq,broadcast_util:()=>_o,browser:()=>L,buffer:()=>Ae.f3b,cast:()=>Ae.pju,ceil:()=>Ae.mDi,clipByValue:()=>Ae.iUl,clone:()=>Ae.d9v,complex:()=>Ae.PYB,concat:()=>Ae.zoF,concat1d:()=>Ae.gME,concat2d:()=>Ae.Izb,concat3d:()=>Ae.MNy,concat4d:()=>Ae.ZaL,conv1d:()=>Ae.PAt,conv2d:()=>Ae.Tek,conv2dTranspose:()=>Ae.bc,conv3d:()=>Ae.pdZ,conv3dTranspose:()=>Ae.$QV,copyRegisteredKernels:()=>mr.T3,cos:()=>Ae.mCk,cosh:()=>Ae.f9Y,cosineWindow:()=>Ae.mew,cumprod:()=>Ae.$Gn,cumsum:()=>Ae.zbp,customGrad:()=>oo.cb,denseBincount:()=>Ae.ppE,deprecationWarn:()=>Bt.MX,depthToSpace:()=>Ae.nTT,depthwiseConv2d:()=>Ae.B10,device_util:()=>V,diag:()=>Ae.Ka3,dilation2d:()=>Ae.WmZ,disableDeprecationWarnings:()=>Bt.cF,dispose:()=>Bt.B9,disposeVariables:()=>Bt.N8,div:()=>Ae.hiC,divNoNan:()=>Ae.NTj,dot:()=>Ae.AKD,dropout:()=>Ae.rvX,einsum:()=>Ae.WYO,elu:()=>Ae.pyx,enableDebugMode:()=>Bt.R,enableProdMode:()=>Bt.G4,enclosingPowerOfTwo:()=>Ae.GRh,engine:()=>Bt.SR,env:()=>pe.OB,equal:()=>Ae.DgJ,erf:()=>Ae.qNN,euclideanNorm:()=>Ae.d2q,exp:()=>Ae.Qqt,expandDims:()=>Ae.dt4,expm1:()=>Ae.t$B,eye:()=>Ae.iyy,fft:()=>Ae.kp_,fill:()=>Ae.hlL,findBackend:()=>Bt.x3,findBackendFactory:()=>Bt.ze,floor:()=>Ae.GWj,floorDiv:()=>Ae.qPi,fused:()=>Ae.imm,gather:()=>Ae.Iqj,gatherND:()=>Ae.dbB,gather_util:()=>P,getBackend:()=>Bt.N_,getGradient:()=>mr.uk,getKernel:()=>mr.pI,getKernelsForBackend:()=>mr.tr,grad:()=>oo.UQ,grads:()=>oo.ti,greater:()=>Ae.pjt,greaterEqual:()=>Ae.brS,ifft:()=>Ae.Sxn,imag:()=>Ae.asL,image:()=>Ae.BHj,inTopKAsync:()=>Ae.V3u,io:()=>U,irfft:()=>Ae.wx0,isFinite:()=>Ae.xVT,isInf:()=>Ae.UWc,isNaN:()=>Ae.i2d,keep:()=>Bt.Cn,kernel_impls:()=>N,leakyRelu:()=>Ae.hi7,less:()=>Ae.d9m,lessEqual:()=>Ae.zN1,linalg:()=>Ae.$r2,linspace:()=>Ae.SX3,localResponseNormalization:()=>Ae.G9k,log:()=>Ae.cM7,log1p:()=>Ae.Krr,logSigmoid:()=>Ae.e_t,logSoftmax:()=>Ae.CmS,logSumExp:()=>Ae.l_t,logicalAnd:()=>Ae.HvI,logicalNot:()=>Ae.hJK,logicalOr:()=>Ae.K5V,logicalXor:()=>Ae.egP,losses:()=>Ae.MB5,lowerBound:()=>Ae.eab,matMul:()=>Ae.OI3,math:()=>W,max:()=>Ae.Fp7,maxPool:()=>Ae._sB,maxPool3d:()=>Ae.YQQ,maxPoolWithArgmax:()=>Ae.Ip$,maximum:()=>Ae.gWQ,mean:()=>Ae.J69,memory:()=>Bt.sq,meshgrid:()=>Ae.ry_,min:()=>Ae.VV$,minimum:()=>Ae.LTh,mirrorPad:()=>Ae.VdP,mod:()=>Ae.wQq,moments:()=>Ae.Gi7,movingAverage:()=>Ae.p_,mul:()=>Ae.dC7,multiRNNCell:()=>Ae.rq4,multinomial:()=>Ae.SJ_,neg:()=>Ae.W76,nextFrame:()=>ir,norm:()=>Ae.KOy,notEqual:()=>Ae.Quu,oneHot:()=>Ae.lfX,ones:()=>Ae.iUs,onesLike:()=>Ae.JpU,op:()=>Ae.op,outerProduct:()=>Ae.N2O,pad:()=>Ae.vku,pad1d:()=>Ae.pNR,pad2d:()=>Ae.koy,pad3d:()=>Ae.t1L,pad4d:()=>Ae.lGY,pool:()=>Ae.d_R,pow:()=>Ae.sQ3,prelu:()=>Ae.AL3,print:()=>Ae.S0v,prod:()=>Ae.WVs,profile:()=>Bt.N5,raggedGather:()=>Ae.$gW,raggedTensorToTensor:()=>Ae.N89,rand:()=>Ae.TN_,randomGamma:()=>Ae.wzB,randomNormal:()=>Ae.nGf,randomStandardNormal:()=>Ae.ruB,randomUniform:()=>Ae.LGj,range:()=>Ae.w6H,ready:()=>Bt.Cd,real:()=>Ae.kwC,reciprocal:()=>Ae.M25,registerBackend:()=>Bt.jq,registerGradient:()=>mr.Li,registerKernel:()=>mr.wC,relu:()=>Ae.UYe,relu6:()=>Ae.btT,removeBackend:()=>Bt.cj,reshape:()=>Ae.XLQ,reverse:()=>Ae.GYS,reverse1d:()=>Ae.SDf,reverse2d:()=>Ae.diP,reverse3d:()=>Ae.sx7,reverse4d:()=>Ae.mG2,rfft:()=>Ae.QEs,round:()=>Ae.NMM,rsqrt:()=>Ae.bp0,scalar:()=>Ae.iD$,scatterND:()=>Ae.snQ,scatter_util:()=>it,searchSorted:()=>Ae.zcT,selu:()=>Ae.U8D,separableConv2d:()=>Ae.U_I,serialization:()=>k,setBackend:()=>Bt.CQ,setPlatform:()=>Bt.VY,setdiff1dAsync:()=>Ae.ODp,sigmoid:()=>Ae.XD2,sign:()=>Ae.Xxe,signal:()=>Ae.tdS,sin:()=>Ae.O$l,sinh:()=>Ae.R_K,slice:()=>Ae.tPi,slice1d:()=>Ae.jZU,slice2d:()=>Ae.SmN,slice3d:()=>Ae.CnO,slice4d:()=>Ae.p0P,slice_util:()=>ft,softmax:()=>Ae.XAC,softplus:()=>Ae.Wvh,spaceToBatchND:()=>Ae.fBT,sparse:()=>Ae.rVs,sparseToDense:()=>Ae.ers,spectral:()=>Ae.uN7,split:()=>Ae.Vl2,sqrt:()=>Ae._b3,square:()=>Ae.h62,squaredDifference:()=>Ae.$i,squeeze:()=>Ae.L9e,stack:()=>Ae.knu,step:()=>Ae.Nbs,stridedSlice:()=>Ae.NXj,string:()=>Ae.Z_8,sub:()=>Ae.luU,sum:()=>Ae.Smz,sumOutType:()=>ki.z4,tan:()=>Ae.ORZ,tanh:()=>Ae.AEp,tensor:()=>Ae.XeE,tensor1d:()=>Ae.RRF,tensor2d:()=>Ae.odF,tensor3d:()=>Ae.wOQ,tensor4d:()=>Ae.yXz,tensor5d:()=>Ae.Bfx,tensor6d:()=>Ae.xZs,tensor_util:()=>bt,test_util:()=>$,tidy:()=>Bt.lu,tile:()=>Ae.Gg6,time:()=>Bt.XV,topk:()=>Ae.hg7,train:()=>jl,transpose:()=>Ae.p4s,truncatedNormal:()=>Ae.Xu6,unique:()=>Ae.Two,unregisterGradient:()=>mr.bt,unregisterKernel:()=>mr.nE,unsortedSegmentSum:()=>Ae.pUJ,unstack:()=>Ae.HHK,upcastType:()=>ki.x8,upperBound:()=>Ae.GaM,util:()=>en,valueAndGrad:()=>oo.h7,valueAndGrads:()=>oo.fN,variable:()=>Ae.VD$,variableGrads:()=>oo.pn,version_core:()=>Ec,where:()=>Ae.arb,whereAsync:()=>Ae.itS,zeros:()=>Ae.lls,zerosLike:()=>Ae.P84});var V={};h.r(V),h.d(V,{isBrowser:()=>de,isMobile:()=>J,mockIsMobile:()=>oe});var U={};h.r(U),h.d(U,{browserFiles:()=>Wl,browserHTTPRequest:()=>an,concatenateArrayBuffers:()=>Pe,copyModel:()=>ma,decodeWeights:()=>q,encodeWeights:()=>K,fromMemory:()=>Oi,fromMemorySync:()=>Ir,getLoadHandlers:()=>Ie,getModelArtifactsForJSON:()=>_t,getModelArtifactsForJSONSync:()=>mt,getModelArtifactsInfoForJSON:()=>Dt,getSaveHandlers:()=>Qs,getWeightSpecs:()=>Xt,http:()=>Mo,isHTTPScheme:()=>Ca,listModels:()=>al,loadWeights:()=>_a,moveModel:()=>Zo,registerLoadRouter:()=>$s,registerSaveRouter:()=>_s,removeModel:()=>ll,weightsLoaderFactory:()=>Ni,withSaveHandler:()=>bs,withSaveHandlerSync:()=>Gl});var W={};h.r(W),h.d(W,{confusionMatrix:()=>kn});var L={};h.r(L),h.d(L,{fromPixels:()=>ze,fromPixelsAsync:()=>X,toPixels:()=>fe});var P={};h.r(P),h.d(P,{prepareAndValidate:()=>gt});var k={};h.r(k),h.d(k,{Serializable:()=>Tt,SerializationMap:()=>qt,registerClass:()=>hn});var $={};h.r($),h.d($,{TEST_EPSILON_FLOAT16:()=>Cs,createVideoElement:()=>Lf,encodeStrings:()=>xc,expectArrayBuffersEqual:()=>Ru,expectArraysClose:()=>Kr,expectArraysEqual:()=>Ri,expectNumbersClose:()=>vc,expectPromiseToFail:()=>Gs,expectValuesInRange:()=>yl,play:()=>Gn,testEpsilon:()=>Wn});var S={};h.r(S),h.d(S,{collectGatherOpShapeInfo:()=>Jl,computeOutShape:()=>Bu,segOpComputeOptimalWindowSize:()=>Yd});var b={};h.r(b),h.d(b,{ERF_A1:()=>Xr,ERF_A2:()=>jn,ERF_A3:()=>Pu,ERF_A4:()=>$u,ERF_A5:()=>Co,ERF_P:()=>Li,PARALLELIZE_THRESHOLD:()=>Fi,RowPartitionType:()=>as,SELU_SCALE:()=>Oa.$,SELU_SCALEALPHA:()=>Oa.y,applyActivation:()=>Kn.QH,assertAndGetBroadcastShape:()=>_o.assertAndGetBroadcastShape,assertAxesAreInnerMostDims:()=>ni.lB,assertParamsConsistent:()=>Hs,assignToTypedArray:()=>Bf,axesAreInnerMostDims:()=>ni.YB,calculateShapes:()=>it.calculateShapes,checkEinsumDimSizes:()=>zf,checkPadOnDimRoundingMode:()=>tn.m,combineLocations:()=>ni.Vh,combineRaggedTensorToTensorShapes:()=>Pi,complexWithEvenIndex:()=>Zl,complexWithOddIndex:()=>lo,computeConv2DInfo:()=>tn.Ix,computeConv3DInfo:()=>tn.jw,computeDefaultPad:()=>tn.aO,computeDilation2DInfo:()=>tn.Rf,computeOptimalWindowSize:()=>Sa,computeOutAndReduceShapes:()=>ni.kz,computeOutShape:()=>Nt,computePool2DInfo:()=>tn.Xw,computePool3DInfo:()=>tn.pl,convertConv2DDataFormat:()=>tn.sl,decodeEinsumEquation:()=>Uf,eitherStridesOrDilationsAreOne:()=>tn.jT,expandShapeToKeepDim:()=>ni.rv,exponent:()=>_l,exponents:()=>Fu,fromStringArrayToUint8:()=>Qd,fromUint8ToStringArray:()=>Ma,getAxesPermutation:()=>ni.Q3,getBroadcastDims:()=>_o.getBroadcastDims,getComplexWithIndex:()=>ar,getEinsumComputePath:()=>Wf,getEinsumPermutation:()=>Vf,getFusedBiasGradient:()=>Kn.pf,getFusedDyActivation:()=>Kn.Fr,getImageCenter:()=>pn,getInnerMostAxes:()=>ni.sY,getPermuted:()=>Na,getRaggedRank:()=>$i,getReductionAxes:()=>_o.getReductionAxes,getReshaped:()=>Xl,getReshapedPermuted:()=>ku,getRowPartitionTypesHelper:()=>Ks,getSliceBeginCoords:()=>Aa,getSliceSize:()=>Nr,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>_c,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>jf,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>Xf,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>Zf,getSparseReshapeInputOutputMismatchErrorMessage:()=>Xd,getSparseReshapeInputOutputMultipleErrorMessage:()=>bc,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>Ra,getSparseReshapeNegativeOutputDimErrorMessage:()=>Lu,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>Ql,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>ri,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>Zd,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>Bi,getUndoAxesPermutation:()=>ni.LJ,isIdentityPermutation:()=>Gf,log:()=>Lr.c,mergeRealAndImagArrays:()=>El,prepareAndValidate:()=>gt,prepareSplitSize:()=>Kf,segment_util:()=>S,shouldFuse:()=>Kn.uy,slice_util:()=>ft,splitRealAndImagArrays:()=>si,tupleValuesAreOne:()=>tn.I0,upcastType:()=>ki.x8,validateDefaultValueShape:()=>Ds,validateInput:()=>it.validateInput,validateUpdateShape:()=>it.validateUpdateShape,warn:()=>Lr.Z});var N={};h.r(N),h.d(N,{nonMaxSuppressionV3Impl:()=>bl.GP,nonMaxSuppressionV4Impl:()=>bl.qP,nonMaxSuppressionV5Impl:()=>bl.pA,whereImpl:()=>Jd.Z});var O=h(3738);let H;function oe(R){H=R}function J(R){if(void 0!==H)return H;if(R||function M(){return"undefined"!=typeof navigator&&null!=navigator}()){if(R||(R=navigator),"ReactNative"===R.product)return!0;const G=R.userAgent||R.vendor||("undefined"!=typeof window?window.opera:"");if(!G){const A=R;return A.userAgentData&&A.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(G)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(G.substr(0,4))}return!1}function de(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}var pe=h(1777);const be=(0,pe.OB)();be.registerFlag("DEBUG",()=>!1,R=>{R&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")}),be.registerFlag("IS_BROWSER",()=>de()),be.registerFlag("IS_NODE",()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node),be.registerFlag("IS_CHROME",()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor)),be.registerFlag("PROD",()=>!1),be.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>be.getBool("DEBUG")),be.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0),be.registerFlag("IS_TEST",()=>!1),be.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>!0),be.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1),be.registerFlag("ENGINE_COMPILE_ONLY",()=>!1),be.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",()=>!1),be.registerFlag("USE_SETTIMEOUTCUSTOM",()=>!1);var we=h(5861),Ce=h(9907),me=h(1973),ye=h(1396);const xe={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};function K(R,G){return w.apply(this,arguments)}function w(){return w=(0,we.Z)(function*(R,G){const A=[],z=[],te=Array.isArray(R)?R.map(De=>De.name):Object.keys(R);for(let De=0;De<te.length;++De){const Ve=te[De],rt=Array.isArray(R)?R[De].tensor:R[Ve];if("float32"!==rt.dtype&&"int32"!==rt.dtype&&"bool"!==rt.dtype&&"string"!==rt.dtype&&"complex64"!==rt.dtype)throw new Error(`Unsupported dtype in weight '${Ve}': ${rt.dtype}`);const Ye={name:Ve,shape:rt.shape,dtype:rt.dtype};if("string"===rt.dtype){const yt=new Promise(function(){var at=(0,we.Z)(function*(xt){const Ft=yield rt.bytes(),Ut=Ft.reduce((Vn,ms)=>Vn+ms.length,0)+4*Ft.length,Kt=new Uint8Array(Ut);let nn=0;for(let Vn=0;Vn<Ft.length;Vn++){const ms=Ft[Vn],Yr=new Uint8Array(new Uint32Array([ms.length]).buffer);Kt.set(Yr,nn),nn+=4,Kt.set(ms,nn),nn+=ms.length}xt(Kt)});return function(xt){return at.apply(this,arguments)}}());z.push(yt)}else z.push(rt.data());null!=G&&(Ye.group=G),A.push(Ye)}return{data:le(yield Promise.all(z)),specs:A}}),w.apply(this,arguments)}function q(R,G){const A={};let z,te=0;for(const Ee of G){const De=Ee.name,Ve=Ee.dtype,rt=Ee.shape,Ye=(0,ye.NA)(rt);let yt;if("quantization"in Ee){const at=Ee.quantization;if("uint8"===at.dtype||"uint16"===at.dtype){if(!("min"in at)||!("scale"in at))throw new Error(`Weight ${Ee.name} with quantization ${at.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==at.dtype)throw new Error(`Weight ${Ee.name} has unknown quantization dtype ${at.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==Ve)throw new Error(`Weight ${Ee.name} is quantized with ${at.dtype} which only supports weights of type float32 not ${Ve}.`)}const xt=xe[at.dtype],Ft=R.slice(te,te+Ye*xt),Ut="uint8"===at.dtype?new Uint8Array(Ft):new Uint16Array(Ft);if("float32"===Ve)if("uint8"===at.dtype||"uint16"===at.dtype){yt=new Float32Array(Ut.length);for(let Kt=0;Kt<Ut.length;Kt++)yt[Kt]=Ut[Kt]*at.scale+at.min}else{if("float16"!==at.dtype)throw new Error(`Unsupported quantization type ${at.dtype} for weight type float32.`);void 0===z&&(z=ss()),yt=z(Ut)}else{if("int32"!==Ve)throw new Error(`Unsupported dtype in weight '${De}': ${Ve}`);if("uint8"!==at.dtype&&"uint16"!==at.dtype)throw new Error(`Unsupported quantization type ${at.dtype} for weight type int32.`);yt=new Int32Array(Ut.length);for(let Kt=0;Kt<Ut.length;Kt++)yt[Kt]=Math.round(Ut[Kt]*at.scale+at.min)}te+=Ye*xt}else if("string"===Ve){const at=(0,ye.NA)(Ee.shape);yt=[];for(let xt=0;xt<at;xt++){const Ft=new Uint32Array(R.slice(te,te+4))[0];te+=4;const Ut=new Uint8Array(R.slice(te,te+Ft));yt.push(Ut),te+=Ft}}else{const at=xe[Ve],xt=R.slice(te,te+Ye*at);if("float32"===Ve)yt=new Float32Array(xt);else if("int32"===Ve)yt=new Int32Array(xt);else if("bool"===Ve)yt=new Uint8Array(xt);else{if("complex64"!==Ve)throw new Error(`Unsupported dtype in weight '${De}': ${Ve}`);{yt=new Float32Array(xt);const Ft=new Float32Array(yt.length/2),Ut=new Float32Array(yt.length/2);for(let Vn=0;Vn<Ft.length;Vn++)Ft[Vn]=yt[2*Vn],Ut[Vn]=yt[2*Vn+1];const Kt=(0,me.X)(Ft,rt,"float32"),nn=(0,me.X)(Ut,rt,"float32");A[De]=(0,Ce.P)(Kt,nn),Kt.dispose(),nn.dispose()}}te+=Ye*at}"complex64"!==Ve&&(A[De]=(0,me.X)(yt,rt,Ve))}return A}function le(R){if(null===R)throw new Error(`Invalid input value: ${JSON.stringify(R)}`);let G=0;const A=[];R.forEach(Ee=>{if(G+=Ee.byteLength,A.push(Ee.byteLength===Ee.buffer.byteLength?Ee:new Ee.constructor(Ee)),!(Ee instanceof Float32Array||Ee instanceof Int32Array||Ee instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${Ee.constructor.name}`)});const z=new Uint8Array(G);let te=0;return A.forEach(Ee=>{z.set(new Uint8Array(Ee.buffer),te),te+=Ee.byteLength}),z.buffer}const ae="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function E(R){return ae?Buffer.byteLength(R):new Blob([R]).size}function Pe(R){if(1===R.length)return R[0];let G=0;R.forEach(te=>{G+=te.byteLength});const A=new Uint8Array(G);let z=0;return R.forEach(te=>{A.set(new Uint8Array(te),z),z+=te.byteLength}),A.buffer}function Ne(R){for(R=R.trim();R.endsWith("/");)R=R.slice(0,R.length-1);const A=R.split("/");return A[A.length-1]}function He(R,G){const A={modelTopology:R.modelTopology,format:R.format,generatedBy:R.generatedBy,convertedBy:R.convertedBy,weightsManifest:G};return null!=R.signature&&(A.signature=R.signature),null!=R.userDefinedMetadata&&(A.userDefinedMetadata=R.userDefinedMetadata),null!=R.modelInitializer&&(A.modelInitializer=R.modelInitializer),null!=R.trainingConfig&&(A.trainingConfig=R.trainingConfig),A}function mt(R,G,A){const z={modelTopology:R.modelTopology,format:R.format,generatedBy:R.generatedBy,convertedBy:R.convertedBy};if(null!=R.trainingConfig&&(z.trainingConfig=R.trainingConfig),null!=R.weightsManifest){if(!G)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!A)throw new Error("modelJSON has weightsManifest but weightData is null");z.weightSpecs=G,z.weightData=A}return null!=R.signature&&(z.signature=R.signature),null!=R.userDefinedMetadata&&(z.userDefinedMetadata=R.userDefinedMetadata),null!=R.modelInitializer&&(z.modelInitializer=R.modelInitializer),z}function _t(R,G){return Rt.apply(this,arguments)}function Rt(){return(Rt=(0,we.Z)(function*(R,G){let A,z;return null!=R.weightsManifest&&([A,z]=yield G(R.weightsManifest)),mt(R,A,z)})).apply(this,arguments)}function Dt(R){if(R.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==R.modelTopology?0:E(JSON.stringify(R.modelTopology)),weightSpecsBytes:null==R.weightSpecs?0:E(JSON.stringify(R.weightSpecs)),weightDataBytes:null==R.weightData?0:R.weightData.byteLength}}function Xt(R){const G=[];for(const A of R)G.push(...A.weights);return G}function ss(){const R=function Et(){const R=A=>{let z=A<<13,te=0;for(;0==(8388608&z);)te-=8388608,z<<=1;return z&=-8388609,te+=947912704,z|te},G=new Uint32Array(2048);G[0]=0;for(let A=1;A<1024;A++)G[A]=R(A);for(let A=1024;A<2048;A++)G[A]=939524096+(A-1024<<13);return G}(),G=function Vt(){const R=new Uint32Array(64);R[0]=0,R[31]=1199570944,R[32]=2147483648,R[63]=3347054592;for(let G=1;G<31;G++)R[G]=G<<23;for(let G=33;G<63;G++)R[G]=2147483648+(G-32<<23);return R}(),A=function Ht(){const R=new Uint32Array(64);for(let G=0;G<64;G++)R[G]=1024;return R[0]=R[32]=0,R}();return z=>{const te=new ArrayBuffer(4*z.length),Ee=new Uint32Array(te);for(let De=0;De<z.length;De++){const Ve=z[De];Ee[De]=R[A[Ve>>10]+(1023&Ve)]+G[Ve>>10]}return new Float32Array(te)}}class St{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==St.instance&&(St.instance=new St),St.instance}static registerSaveRouter(G){St.getInstance().saveRouters.push(G)}static registerLoadRouter(G){St.getInstance().loadRouters.push(G)}static getSaveHandlers(G){return St.getHandlers(G,"save")}static getLoadHandlers(G,A){return St.getHandlers(G,"load",A)}static getHandlers(G,A,z){const te=[];return("load"===A?St.getInstance().loadRouters:St.getInstance().saveRouters).forEach(De=>{const Ve=De(G,z);null!==Ve&&te.push(Ve)}),te}}const _s=R=>St.registerSaveRouter(R),$s=R=>St.registerLoadRouter(R),Qs=R=>St.getSaveHandlers(R),Ie=(R,G)=>St.getLoadHandlers(R,G),Ke="tensorflowjs",It="models_store",cn="model_info_store";function Zn(){if(!(0,pe.OB)().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const R="undefined"==typeof window?self:window,G=R.indexedDB||R.mozIndexedDB||R.webkitIndexedDB||R.msIndexedDB||R.shimIndexedDB;if(null==G)throw new Error("The current browser does not appear to support IndexedDB.");return G}function Js(R){const G=R.result;G.createObjectStore(It,{keyPath:"modelPath"}),G.createObjectStore(cn,{keyPath:"modelPath"})}let Rr=(()=>{class R{constructor(A){if(this.indexedDB=Zn(),null==A||!A)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=A}save(A){var z=this;return(0,we.Z)(function*(){if(A.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return z.databaseAction(z.modelPath,A)})()}load(){var A=this;return(0,we.Z)(function*(){return A.databaseAction(A.modelPath)})()}databaseAction(A,z){return new Promise((te,Ee)=>{const De=this.indexedDB.open(Ke,1);De.onupgradeneeded=()=>Js(De),De.onsuccess=()=>{const Ve=De.result;if(null==z){const rt=Ve.transaction(It,"readonly"),yt=rt.objectStore(It).get(this.modelPath);yt.onsuccess=()=>{if(null==yt.result)return Ve.close(),Ee(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));te(yt.result.modelArtifacts)},yt.onerror=at=>(Ve.close(),Ee(yt.error)),rt.oncomplete=()=>Ve.close()}else{const rt=Dt(z),Ye=Ve.transaction(cn,"readwrite");let yt=Ye.objectStore(cn);const at=yt.put({modelPath:this.modelPath,modelArtifactsInfo:rt});let xt;at.onsuccess=()=>{xt=Ve.transaction(It,"readwrite");const Ut=xt.objectStore(It).put({modelPath:this.modelPath,modelArtifacts:z,modelArtifactsInfo:rt});Ut.onsuccess=()=>te({modelArtifactsInfo:rt}),Ut.onerror=Kt=>{yt=Ye.objectStore(cn);const nn=yt.delete(this.modelPath);nn.onsuccess=()=>(Ve.close(),Ee(Ut.error)),nn.onerror=Vn=>(Ve.close(),Ee(Ut.error))}},at.onerror=Ft=>(Ve.close(),Ee(at.error)),Ye.oncomplete=()=>{null==xt?Ve.close():xt.oncomplete=()=>Ve.close()}}},De.onerror=Ve=>Ee(De.error)})}}return R.URL_SCHEME="indexeddb://",R})();const nl=R=>(0,pe.OB)().getBool("IS_BROWSER")&&!Array.isArray(R)&&R.startsWith(Rr.URL_SCHEME)?function sl(R){return new Rr(R)}(R.slice(Rr.URL_SCHEME.length)):null;St.registerSaveRouter(nl),St.registerLoadRouter(nl);class Mr{constructor(){this.indexedDB=Zn()}listModels(){var G=this;return(0,we.Z)(function*(){return new Promise((A,z)=>{const te=G.indexedDB.open(Ke,1);te.onupgradeneeded=()=>Js(te),te.onsuccess=()=>{const Ee=te.result,De=Ee.transaction(cn,"readonly"),rt=De.objectStore(cn).getAll();rt.onsuccess=()=>{const Ye={};for(const yt of rt.result)Ye[yt.modelPath]=yt.modelArtifactsInfo;A(Ye)},rt.onerror=Ye=>(Ee.close(),z(rt.error)),De.oncomplete=()=>Ee.close()},te.onerror=Ee=>z(te.error)})})()}removeModel(G){var A=this;return(0,we.Z)(function*(){return G=function ca(R){return R.startsWith(Rr.URL_SCHEME)?R.slice(Rr.URL_SCHEME.length):R}(G),new Promise((z,te)=>{const Ee=A.indexedDB.open(Ke,1);Ee.onupgradeneeded=()=>Js(Ee),Ee.onsuccess=()=>{const De=Ee.result,Ve=De.transaction(cn,"readwrite"),rt=Ve.objectStore(cn),Ye=rt.get(G);let yt;Ye.onsuccess=()=>{if(null==Ye.result)return De.close(),te(new Error(`Cannot find model with path '${G}' in IndexedDB.`));{const at=rt.delete(G),xt=()=>{yt=De.transaction(It,"readwrite");const Ut=yt.objectStore(It).delete(G);Ut.onsuccess=()=>z(Ye.result.modelArtifactsInfo),Ut.onerror=Kt=>te(Ye.error)};at.onsuccess=xt,at.onerror=Ft=>(xt(),De.close(),te(Ye.error))}},Ye.onerror=at=>(De.close(),te(Ye.error)),Ve.oncomplete=()=>{null==yt?De.close():yt.oncomplete=()=>De.close()}},Ee.onerror=De=>te(Ee.error)})})()}}const qs="/",Gr="tensorflowjs_models",xi="info",da="model_topology",Ei="weight_specs",rl="weight_data",ha="model_metadata";function _i(R){return{info:[Gr,R,xi].join(qs),topology:[Gr,R,da].join(qs),weightSpecs:[Gr,R,Ei].join(qs),weightData:[Gr,R,rl].join(qs),modelMetadata:[Gr,R,ha].join(qs)}}function bi(R){for(const G of Object.values(R))window.localStorage.removeItem(G)}function Ao(R){const G=R.split(qs);if(G.length<3)throw new Error(`Invalid key format: ${R}`);return G.slice(1,G.length-1).join(qs)}let Te=(()=>{class R{constructor(A){if(!(0,pe.OB)().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==A||!A)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=A,this.keys=_i(this.modelPath)}save(A){var z=this;return(0,we.Z)(function*(){if(A.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const te=JSON.stringify(A.modelTopology),Ee=JSON.stringify(A.weightSpecs),De=Dt(A);try{return z.LS.setItem(z.keys.info,JSON.stringify(De)),z.LS.setItem(z.keys.topology,te),z.LS.setItem(z.keys.weightSpecs,Ee),z.LS.setItem(z.keys.weightData,function Oe(R){if(ae)return Buffer.from(R).toString("base64");const G=new Uint8Array(R);let A="";for(let z=0,te=G.length;z<te;z++)A+=String.fromCharCode(G[z]);return btoa(A)}(A.weightData)),z.LS.setItem(z.keys.modelMetadata,JSON.stringify({format:A.format,generatedBy:A.generatedBy,convertedBy:A.convertedBy,signature:null!=A.signature?A.signature:void 0,userDefinedMetadata:null!=A.userDefinedMetadata?A.userDefinedMetadata:void 0,modelInitializer:null!=A.modelInitializer?A.modelInitializer:void 0,trainingConfig:null!=A.trainingConfig?A.trainingConfig:void 0})),{modelArtifactsInfo:De}}catch(Ve){throw bi(z.keys),new Error(`Failed to save model '${z.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${De.modelTopologyBytes}, weightSpecsBytes=${De.weightSpecsBytes}, weightDataBytes=${De.weightDataBytes}.`)}}})()}load(){var A=this;return(0,we.Z)(function*(){const z=JSON.parse(A.LS.getItem(A.keys.info));if(null==z)throw new Error(`In local storage, there is no model with name '${A.modelPath}'`);if("JSON"!==z.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const te={},Ee=JSON.parse(A.LS.getItem(A.keys.topology));if(null==Ee)throw new Error(`In local storage, the topology of model '${A.modelPath}' is missing.`);te.modelTopology=Ee;const De=JSON.parse(A.LS.getItem(A.keys.weightSpecs));if(null==De)throw new Error(`In local storage, the weight specs of model '${A.modelPath}' are missing.`);te.weightSpecs=De;const Ve=A.LS.getItem(A.keys.modelMetadata);if(null!=Ve){const Ye=JSON.parse(Ve);te.format=Ye.format,te.generatedBy=Ye.generatedBy,te.convertedBy=Ye.convertedBy,null!=Ye.signature&&(te.signature=Ye.signature),null!=Ye.userDefinedMetadata&&(te.userDefinedMetadata=Ye.userDefinedMetadata),null!=Ye.modelInitializer&&(te.modelInitializer=Ye.modelInitializer),null!=Ye.trainingConfig&&(te.trainingConfig=Ye.trainingConfig)}const rt=A.LS.getItem(A.keys.weightData);if(null==rt)throw new Error(`In local storage, the binary weight values of model '${A.modelPath}' are missing.`);return te.weightData=function ke(R){if(ae){const z=Buffer.from(R,"base64");return z.buffer.slice(z.byteOffset,z.byteOffset+z.byteLength)}const G=atob(R),A=new Uint8Array(G.length);for(let z=0;z<G.length;++z)A.set([G.charCodeAt(z)],z);return A.buffer}(rt),te})()}}return R.URL_SCHEME="localstorage://",R})();const Ci=R=>(0,pe.OB)().getBool("IS_BROWSER")&&!Array.isArray(R)&&R.startsWith(Te.URL_SCHEME)?function pa(R){return new Te(R)}(R.slice(Te.URL_SCHEME.length)):null;St.registerSaveRouter(Ci),St.registerLoadRouter(Ci);class il{constructor(){(0,ye.hu)((0,pe.OB)().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),(0,ye.hu)("undefined"==typeof window||void 0!==window.localStorage,()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}listModels(){var G=this;return(0,we.Z)(function*(){const A={},z=Gr+qs,te=qs+xi;for(let Ee=0;Ee<G.LS.length;++Ee){const De=G.LS.key(Ee);De.startsWith(z)&&De.endsWith(te)&&(A[Ao(De)]=JSON.parse(G.LS.getItem(De)))}return A})()}removeModel(G){var A=this;return(0,we.Z)(function*(){const z=_i(G=function fa(R){return R.startsWith(Te.URL_SCHEME)?R.slice(Te.URL_SCHEME.length):R}(G));if(null==A.LS.getItem(z.info))throw new Error(`Cannot find model at path '${G}'`);const te=JSON.parse(A.LS.getItem(z.info));return bi(z),te})()}}const xo="://";class Mn{constructor(){this.managers={}}static getInstance(){return null==Mn.instance&&(Mn.instance=new Mn),Mn.instance}static registerManager(G,A){(0,ye.hu)(null!=G,()=>"scheme must not be undefined or null."),G.endsWith(xo)&&(G=G.slice(0,G.indexOf(xo))),(0,ye.hu)(G.length>0,()=>"scheme must not be an empty string.");const z=Mn.getInstance();(0,ye.hu)(null==z.managers[G],()=>`A model store manager is already registered for scheme '${G}'.`),z.managers[G]=A}static getManager(G){const A=Mn.getInstance().managers[G];if(null==A)throw new Error(`Cannot find model manager for scheme '${G}'`);return A}static getSchemes(){return Object.keys(Mn.getInstance().managers)}}function rs(R){if(-1===R.indexOf(xo))throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${Mn.getSchemes().join(",")}`);return{scheme:R.split(xo)[0],path:R.split(xo)[1]}}function ro(R,G){return Os.apply(this,arguments)}function Os(){return(Os=(0,we.Z)(function*(R,G,A=!1){(0,ye.hu)(R!==G,()=>`Old path and new path are the same: '${R}'`);const z=St.getLoadHandlers(R);(0,ye.hu)(z.length>0,()=>`Copying failed because no load handler is found for source URL ${R}.`),(0,ye.hu)(z.length<2,()=>`Copying failed because more than one (${z.length}) load handlers for source URL ${R}.`);const te=z[0],Ee=St.getSaveHandlers(G);(0,ye.hu)(Ee.length>0,()=>`Copying failed because no save handler is found for destination URL ${G}.`),(0,ye.hu)(Ee.length<2,()=>`Copying failed because more than one (${z.length}) save handlers for destination URL ${G}.`);const De=Ee[0],Ve=rs(R).scheme,rt=rs(R).path,Ye=Ve===rs(R).scheme,yt=yield te.load();A&&Ye&&(yield Mn.getManager(Ve).removeModel(rt));const at=yield De.save(yt);return A&&!Ye&&(yield Mn.getManager(Ve).removeModel(rt)),at.modelArtifactsInfo})).apply(this,arguments)}function al(){return kr.apply(this,arguments)}function kr(){return(kr=(0,we.Z)(function*(){const R=Mn.getSchemes(),G={};for(const A of R){const z=yield Mn.getManager(A).listModels();for(const te in z)G[A+xo+te]=z[te]}return G})).apply(this,arguments)}function ll(R){return Di.apply(this,arguments)}function Di(){return(Di=(0,we.Z)(function*(R){const G=rs(R);return Mn.getManager(G.scheme).removeModel(G.path)})).apply(this,arguments)}function ma(R,G){return Ii.apply(this,arguments)}function Ii(){return(Ii=(0,we.Z)(function*(R,G){return ro(R,G,!1)})).apply(this,arguments)}function Zo(R,G){return Rs.apply(this,arguments)}function Rs(){return(Rs=(0,we.Z)(function*(R,G){return ro(R,G,!0)})).apply(this,arguments)}class ga{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(G,A){return fetch(G,A)}now(){return performance.now()}encode(G,A){if("utf-8"!==A&&"utf8"!==A)throw new Error(`Browser's encoder only supports utf-8, but got ${A}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(G)}decode(G,A){return new TextDecoder(A).decode(G)}setTimeoutCustom(G,A){window&&(0,pe.OB)().getBool("USE_SETTIMEOUTCUSTOM")?(this.functionRefs.push(G),setTimeout(()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")},A),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",z=>{z.source===window&&z.data.name===this.messageName&&(z.stopPropagation(),this.functionRefs[z.data.index](),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0))},!0))):setTimeout(G,A)}}if((0,pe.OB)().get("IS_BROWSER")){(0,pe.OB)().setPlatform("browser",new ga);try{Mn.registerManager(Te.URL_SCHEME,new il)}catch(R){}try{Mn.registerManager(Rr.URL_SCHEME,new Mr)}catch(R){}}let Pr;(0,pe.OB)().get("IS_NODE")&&!(0,pe.OB)().get("IS_BROWSER")&&(0,pe.OB)().setPlatform("node",new class ya{constructor(){this.util=h(8628),this.textEncoder=new this.util.TextEncoder}fetch(G,A){return null!=(0,pe.OB)().global.fetch?(0,pe.OB)().global.fetch(G,A):(null==Pr&&(Pr=h(5410)),Pr(G,A))}now(){const G=process.hrtime();return 1e3*G[0]+G[1]/1e6}encode(G,A){if("utf-8"!==A&&"utf8"!==A)throw new Error(`Node built-in encoder only supports utf-8, but got ${A}`);return this.textEncoder.encode(G)}decode(G,A){return 0===G.length?"":new this.util.TextDecoder(A).decode(G)}});var wi=h(8621),Hr=h(9734),Oo=h(4249),ul=h(2174),Ro=h(708);function Yo(R){return new Promise(G=>setTimeout(G)).then(R)}(0,O.wv)(),(0,Ro.Vp)({buffer:wi.f,cast:Hr.p,clone:Oo.d,print:ul.S});let Si=(()=>{class R{constructor(A){if(!(0,pe.OB)().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");A.startsWith(R.URL_SCHEME)&&(A=A.slice(R.URL_SCHEME.length)),(null==A||0===A.length)&&(A="model"),this.modelJsonFileName=A+".json",this.weightDataFileName=A+".weights.bin"}save(A){var z=this;return(0,we.Z)(function*(){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const te=window.URL.createObjectURL(new Blob([A.weightData],{type:"application/octet-stream"}));if(A.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const De=He(A,[{paths:["./"+z.weightDataFileName],weights:A.weightSpecs}]),Ve=window.URL.createObjectURL(new Blob([JSON.stringify(De)],{type:"application/json"})),rt=null==z.modelJsonAnchor?document.createElement("a"):z.modelJsonAnchor;if(rt.download=z.modelJsonFileName,rt.href=Ve,yield Yo(()=>rt.dispatchEvent(new MouseEvent("click"))),null!=A.weightData){const Ye=null==z.weightDataAnchor?document.createElement("a"):z.weightDataAnchor;Ye.download=z.weightDataFileName,Ye.href=te,yield Yo(()=>Ye.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:Dt(A)}}})()}}return R.URL_SCHEME="downloads://",R})();class hl{constructor(G){if(null==G||G.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${G}`);this.jsonFile=G[0],this.weightsFiles=G.slice(1)}load(){var G=this;return(0,we.Z)(function*(){return new Promise((A,z)=>{const te=new FileReader;te.onload=Ee=>{const De=JSON.parse(Ee.target.result),Ve=De.modelTopology;if(null==Ve)return void z(new Error(`modelTopology field is missing from file ${G.jsonFile.name}`));if(null==De.weightsManifest)return void z(new Error(`weightManifest field is missing from file ${G.jsonFile.name}`));if(0===G.weightsFiles.length)return void A({modelTopology:Ve});const Ye=_t(De,yt=>G.loadWeights(yt));A(Ye)},te.onerror=Ee=>z(`Failed to read model topology and weights manifest JSON from file '${G.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),te.readAsText(G.jsonFile)})})()}loadWeights(G){const A=[],z=[];for(const De of G)A.push(...De.weights),z.push(...De.paths);const te=this.checkManifestAndWeightFiles(G),Ee=z.map(De=>this.loadWeightsFile(De,te[De]));return Promise.all(Ee).then(De=>[A,Pe(De)])}loadWeightsFile(G,A){return new Promise((z,te)=>{const Ee=new FileReader;Ee.onload=De=>{z(De.target.result)},Ee.onerror=De=>te(`Failed to weights data from file of path '${G}'.`),Ee.readAsArrayBuffer(A)})}checkManifestAndWeightFiles(G){const A=[],z=this.weightsFiles.map(Ee=>Ne(Ee.name)),te={};for(const Ee of G)Ee.paths.forEach(De=>{const Ve=Ne(De);if(-1!==A.indexOf(Ve))throw new Error(`Duplicate file basename found in weights manifest: '${Ve}'`);if(A.push(Ve),-1===z.indexOf(Ve))throw new Error(`Weight file with basename '${Ve}' is not provided.`);te[De]=this.weightsFiles[z.indexOf(Ve)]});if(A.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${A.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return te}}function Wl(R){return new hl(R)}function Ea(R,G,A,z){(function De(rt){(0,ye.hu)(null!=rt&&Array.isArray(rt)&&rt.length>0,()=>"promises must be a none empty array")})(R),function Ve(rt,Ye){(0,ye.hu)(rt>=0&&rt<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${rt}`),(0,ye.hu)(Ye>=0&&Ye<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${Ye}`),(0,ye.hu)(Ye>=rt,()=>`startFraction must be no more than endFraction, but got startFraction ${rt} and endFraction ${Ye}`)}(A=null==A?0:A,z=null==z?1:z);let te=0;return Promise.all(R.map(rt=>(rt.then(Ye=>{const yt=A+ ++te/R.length*(z-A);return G(yt),Ye}),rt)))}function Qo(R,G){return Sn.apply(this,arguments)}function Sn(){return(Sn=(0,we.Z)(function*(R,G){null==G&&(G={});const A=null==G.fetchFunc?(0,pe.OB)().platform.fetch:G.fetchFunc,z=R.map(at=>A(at,G.requestInit,{isBinary:!0})),Ve=(null==G.onProgress?yield Promise.all(z):yield Ea(z,G.onProgress,0,.5)).map(at=>at.arrayBuffer());return null==G.onProgress?yield Promise.all(Ve):yield Ea(Ve,G.onProgress,.5,1)})).apply(this,arguments)}function _a(R){return Tn.apply(this,arguments)}function Tn(){return(Tn=(0,we.Z)(function*(R,G="",A,z){return Ni(De=>Qo(De,{requestInit:z}))(R,G,A)})).apply(this,arguments)}function Ni(R){return function(){var G=(0,we.Z)(function*(A,z="",te){const Ee=A.map(()=>!1),De={},Ve=null!=te?te.map(()=>!1):[],rt=[];if(A.forEach((Ut,Kt)=>{let nn=0;Ut.weights.forEach(Vn=>{const Yr=xe["quantization"in Vn?Vn.quantization.dtype:Vn.dtype]*ye.NA(Vn.shape),gr=()=>{Ee[Kt]=!0,null==De[Kt]&&(De[Kt]=[]),De[Kt].push({manifestEntry:Vn,groupOffset:nn,sizeBytes:Yr})};null!=te?te.forEach((yr,oi)=>{yr===Vn.name&&(gr(),Ve[oi]=!0)}):gr(),rt.push(Vn.name),nn+=Yr})}),!Ve.every(Ut=>Ut)){const Ut=te.filter((Kt,nn)=>!Ve[nn]);throw new Error(`Could not find weights in manifest with names: ${Ut.join(", ")}. \nManifest JSON has weights with names: ${rt.join(", ")}.`)}const Ye=Ee.reduce((Ut,Kt,nn)=>(Kt&&Ut.push(nn),Ut),[]),yt=[];Ye.forEach(Ut=>{A[Ut].paths.forEach(Kt=>{const nn=z+(z.endsWith("/")?"":"/")+Kt;yt.push(nn)})});const at=yield R(yt),xt={};let Ft=0;return Ye.forEach(Ut=>{const Kt=A[Ut].paths.length;let nn=0;for(let yr=0;yr<Kt;yr++)nn+=at[Ft+yr].byteLength;const Vn=new ArrayBuffer(nn),ms=new Uint8Array(Vn);let Yr=0;for(let yr=0;yr<Kt;yr++){const oi=new Uint8Array(at[Ft+yr]);ms.set(oi,Yr),Yr+=oi.byteLength}De[Ut].forEach(yr=>{const Cc=q(Vn.slice(yr.groupOffset,yr.groupOffset+yr.sizeBytes),[yr.manifestEntry]);for(const ko in Cc)xt[ko]=Cc[ko]}),Ft+=Kt}),xt});return function(A){return G.apply(this,arguments)}}()}St.registerSaveRouter(R=>(0,pe.OB)().getBool("IS_BROWSER")&&!Array.isArray(R)&&R.startsWith(Si.URL_SCHEME)?function Qn(R="model"){return new Si(R)}(R.slice(Si.URL_SCHEME.length)):null);let sn=(()=>{class R{constructor(A,z){if(this.DEFAULT_METHOD="POST",null==z&&(z={}),this.weightPathPrefix=z.weightPathPrefix,this.onProgress=z.onProgress,this.weightUrlConverter=z.weightUrlConverter,null!=z.fetchFunc?((0,ye.hu)("function"==typeof z.fetchFunc,()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=z.fetchFunc):this.fetch=(0,pe.OB)().platform.fetch,(0,ye.hu)(null!=A&&A.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(A)&&(0,ye.hu)(2===A.length,()=>`URL paths for http must have a length of 2, (actual length is ${A.length}).`),this.path=A,null!=z.requestInit&&null!=z.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=z.requestInit||{}}save(A){var z=this;return(0,we.Z)(function*(){if(A.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const te=Object.assign({method:z.DEFAULT_METHOD},z.requestInit);te.body=new FormData;const De=He(A,[{paths:["./model.weights.bin"],weights:A.weightSpecs}]);te.body.append("model.json",new Blob([JSON.stringify(De)],{type:"application/json"}),"model.json"),null!=A.weightData&&te.body.append("model.weights.bin",new Blob([A.weightData],{type:"application/octet-stream"}),"model.weights.bin");const Ve=yield z.fetch(z.path,te);if(Ve.ok)return{modelArtifactsInfo:Dt(A),responses:[Ve]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${Ve.status}.`)})()}load(){var A=this;return(0,we.Z)(function*(){const z=yield A.fetch(A.path,A.requestInit);if(!z.ok)throw new Error(`Request to ${A.path} failed with status code ${z.status}. Please verify this URL points to the model JSON of the model to load.`);let te;try{te=yield z.json()}catch(Ve){let rt=`Failed to parse model JSON of response from ${A.path}.`;throw A.path.endsWith(".pb")?rt+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":rt+=" Please make sure the server is serving valid JSON for this request.",new Error(rt)}if(null==te.modelTopology&&null==te.weightsManifest)throw new Error(`The JSON from HTTP path ${A.path} contains neither model topology or manifest for weights.`);return _t(te,Ve=>A.loadWeights(Ve))})()}loadWeights(A){var z=this;return(0,we.Z)(function*(){const te=Array.isArray(z.path)?z.path[1]:z.path,[Ee,De]=function fl(R){const G=R.lastIndexOf("/"),A=R.lastIndexOf("?");return[R.substring(0,G)+"/",A>G?R.substring(A):""]}(te),Ve=z.weightPathPrefix||Ee,rt=Xt(A),Ye=[],yt=[];for(const xt of A)for(const Ft of xt.paths)null!=z.weightUrlConverter?yt.push(z.weightUrlConverter(Ft)):Ye.push(Ve+Ft+De);return z.weightUrlConverter&&Ye.push(...yield Promise.all(yt)),[rt,Pe(yield Qo(Ye,{requestInit:z.requestInit,fetchFunc:z.fetch,onProgress:z.onProgress}))]})()}}return R.URL_SCHEME_REGEX=/^https?:\/\//,R})();function Ca(R){return null!=R.match(sn.URL_SCHEME_REGEX)}const wn=(R,G)=>{if("undefined"==typeof fetch&&(null==G||null==G.fetchFunc))return null;{let A=!0;if(A=Array.isArray(R)?R.every(z=>Ca(z)):Ca(R),A)return Mo(R,G)}return null};function Mo(R,G){return new sn(R,G)}function an(R,G){return Mo(R,G)}St.registerSaveRouter(wn),St.registerLoadRouter(wn);class ps{constructor(G){this.modelArtifacts=G}load(){return this.modelArtifacts}}class Ai{constructor(G){this.saveHandler=G}save(G){return this.saveHandler(G)}}class pl{constructor(G){G.load&&(this.load=()=>Promise.resolve(G.load())),G.save&&(this.save=A=>Promise.resolve(G.save(A)))}}function Oi(R,G,A,z){const te=arguments;return new pl(Ir(...te))}function Ir(R,G,A,z){return 1===arguments.length?null!=R.modelTopology||null!=R.weightSpecs?new ps(R):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new ps({modelTopology:R})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new ps({modelTopology:R,weightSpecs:G,weightData:A,trainingConfig:z}))}function bs(R){return new Ai(R)}function Gl(R){return new Ai(R)}var Eo=h(9608),ml=h(341),Tr=h(2738),qo=h(6721),gl=h(9540);const kn=(0,qo.op)({confusionMatrix_:function Da(R,G,A){const z=(0,Eo._1)(R,"labels","confusionMatrix"),te=(0,Eo._1)(G,"predictions","confusionMatrix");ye.hu(null==A||A>0&&Number.isInteger(A),()=>`If provided, numClasses must be a positive integer, but got ${A}`),ye.hu(1===z.rank,()=>`Expected the rank of labels to be 1, but got ${z.rank}`),ye.hu(1===te.rank,()=>`Expected the rank of predictions to be 1, but got ${te.rank}`),ye.hu(z.shape[0]===te.shape[0],()=>`Mismatch in the number of examples: ${z.shape[0]} vs. ${te.shape[0]}. Labels and predictions should have the same number of elements.`),ye.hu(A>0&&Number.isInteger(A),()=>`numClasses is required to be a positive integer, but got ${A}`);const Ee=(0,Tr.l)((0,Hr.p)(z,"int32"),A),De=(0,Tr.l)((0,Hr.p)(te,"int32"),A),Ve=(0,gl.p)(Ee),rt=(0,ml.O)(Ve,De);return(0,Hr.p)(rt,"int32")}});var _o=h(258),Ue=h(1070),mr=h(9464),Hl=h(3157);let is;function Bn(R,G=3){if(G>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==R)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let A=!1,z=!1,te=!1,Ee=!1,De=!1,Ve=!1;if(R.data instanceof Uint8Array)A=!0;else if("undefined"!=typeof ImageData&&R instanceof ImageData)z=!0;else if("undefined"!=typeof HTMLVideoElement&&R instanceof HTMLVideoElement)te=!0;else if("undefined"!=typeof HTMLImageElement&&R instanceof HTMLImageElement)Ee=!0;else if(null!=R.getContext)De=!0;else{if(!("undefined"!=typeof ImageBitmap&&R instanceof ImageBitmap))throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${R.constructor.name}`);Ve=!0}if(null!=(0,mr.pI)(Ue.eBW,O.BV.backendName))return O.BV.runKernel(Ue.eBW,{pixels:R},{numChannels:G});const[Ye,yt]=te?[R.videoWidth,R.videoHeight]:[R.width,R.height];let at,xt;if(De)at=R.getContext("2d").getImageData(0,0,Ye,yt).data;else if(z||A)at=R.data;else if(Ee||te||Ve){if(null==is)if("undefined"==typeof document){if("undefined"==typeof OffscreenCanvas||"undefined"==typeof OffscreenCanvasRenderingContext2D)throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");is=new OffscreenCanvas(1,1).getContext("2d")}else is=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});is.canvas.width=Ye,is.canvas.height=yt,is.drawImage(R,0,0,Ye,yt),at=is.getImageData(0,0,Ye,yt).data}if(4===G)xt=new Int32Array(at);else{const Ut=Ye*yt;xt=new Int32Array(Ut*G);for(let Kt=0;Kt<Ut;Kt++)for(let nn=0;nn<G;++nn)xt[Kt*G+nn]=at[4*Kt+nn]}return(0,Hl.w)(xt,[yt,Ye,G],"int32")}function T(R){return function g(){return"undefined"!=typeof window&&"undefined"!=typeof ImageBitmap&&window.hasOwnProperty("createImageBitmap")}()&&!(R instanceof ImageBitmap)&&function v(R){return null!=R&&0!==R.width&&0!==R.height}(R)&&!function I(R){return null!=R&&R.data instanceof Uint8Array}(R)}function X(R){return j.apply(this,arguments)}function j(){return(j=(0,we.Z)(function*(R,G=3){let A=null;if((0,pe.OB)().getBool("WRAP_TO_IMAGEBITMAP")&&T(R)){let z;try{z=yield createImageBitmap(R,{premultiplyAlpha:"none"})}catch(te){z=null}A=null!=z&&z.width===R.width&&z.height===R.height?z:R}else A=R;return Bn(A,G)})).apply(this,arguments)}function fe(R,G){return he.apply(this,arguments)}function he(){return(he=(0,we.Z)(function*(R,G){let A=(0,Eo._1)(R,"img","toPixels");if(!(R instanceof Ro.es)){const Ye=A;A=(0,Hr.p)(Ye,"int32"),Ye.dispose()}if(2!==A.rank&&3!==A.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${A.rank}.`);const[z,te]=A.shape.slice(0,2),Ee=2===A.rank?1:A.shape[2];if(Ee>4||2===Ee)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${Ee}`);if("float32"!==A.dtype&&"int32"!==A.dtype)throw new Error(`Unsupported type for toPixels: ${A.dtype}. Please use float32 or int32 tensors.`);const De=yield A.data(),Ve="float32"===A.dtype?255:1,rt=new Uint8ClampedArray(te*z*4);for(let Ye=0;Ye<z*te;++Ye){const yt=[0,0,0,255];for(let xt=0;xt<Ee;xt++){const Ft=De[Ye*Ee+xt];if("float32"===A.dtype){if(Ft<0||Ft>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${Ft}.`)}else if("int32"===A.dtype&&(Ft<0||Ft>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${Ft}.`);1===Ee?(yt[0]=Ft*Ve,yt[1]=Ft*Ve,yt[2]=Ft*Ve):yt[xt]=Ft*Ve}const at=4*Ye;rt[at+0]=Math.round(yt[0]),rt[at+1]=Math.round(yt[1]),rt[at+2]=Math.round(yt[2]),rt[at+3]=Math.round(yt[3])}if(null!=G){G.width=te,G.height=z;const Ye=G.getContext("2d"),yt=new ImageData(rt,te,z);Ye.putImageData(yt,0,0)}return A!==R&&A.dispose(),rt})).apply(this,arguments)}const ze=(0,qo.op)({fromPixels_:Bn});function gt(R,G){const A=R.shape.length,z=G.shape.length;if(A<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${A}.`);if(z<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${z}.`);if("int32"!==G.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${G.dtype}.`);if(G.shape[z-1]>A)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${G.shape[z-1]} vs. ${A}`);if(0===(0,ye.NA)(R.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${R.shape}.`);const te=G.shape,Ee=te[te.length-1];let De=1;for(let at=0;at<te.length-1;++at)De*=te[at];const Ve=R.shape,rt=te.slice();rt.pop();let Ye=1;for(let at=Ee;at<A;++at)Ye*=Ve[at],rt.push(Ve[at]);const yt=[...(0,ye.e3)(R.shape).map(at=>at/Ye),1].slice(0,Ee);return[rt,De,Ye,yt]}var it=h(2808),ft=h(7433);class Tt{getClassName(){return this.constructor.className}static fromConfig(G,A){return new G(A)}}class qt{constructor(){this.classNameMap={}}static getMap(){return null==qt.instance&&(qt.instance=new qt),qt.instance}static register(G){qt.getMap().classNameMap[G.className]=[G,G.fromConfig]}}function hn(R){(0,ye.hu)(null!=R.className,()=>"Class being registered does not have the static className property defined."),(0,ye.hu)("string"==typeof R.className,()=>"className is required to be a string, but got type "+typeof R.className),(0,ye.hu)(R.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),qt.register(R)}var bt=h(7904),en=h(8813);const Cs=.1;function Kr(R,G,A){return null==A&&(A=Wn()),Fs(R,G,(z,te)=>wr(z,te,A))}function Wn(){return 32===O.BV.backend.floatPrecision()?.001:Cs}function Fs(R,G,A){let z=!0;if(((0,ye.fU)(R)||(0,ye.fU)(G))&&(z=!1),(0,ye.fU)(R)&&(0,ye.fU)(G)&&(z=!0),z){const De=R.constructor.name,Ve=G.constructor.name;if(De!==Ve)throw new Error(`Arrays are of different type. Actual: ${De}. Expected: ${Ve}`)}if(Array.isArray(R)&&Array.isArray(G)){const De=(0,Eo.C)(R),Ve=(0,Eo.C)(G);if(!(0,ye.cO)(De,Ve))throw new Error(`Arrays have different shapes. Actual: [${De}]. Expected: [${Ve}]`)}const te=(0,ye.fU)(R)?R:(0,ye.xH)(R),Ee=(0,ye.fU)(G)?G:(0,ye.xH)(G);if(te.length!==Ee.length)throw new Error(`Arrays have different lengths actual: ${te.length} vs expected: ${Ee.length}.\nActual:   ${te}.\nExpected: ${Ee}.`);for(let De=0;De<Ee.length;++De){const Ve=te[De],rt=Ee[De];if(!A(Ve,rt))throw new Error(`Arrays differ: actual[${De}] = ${Ve}, expected[${De}] = ${rt}.\nActual:   ${te}.\nExpected: ${Ee}.`)}"undefined"!=typeof expect&&expect().nothing()}function Gs(R,G){R().then(()=>G.fail(),()=>G()),"undefined"!=typeof expect&&expect().nothing()}function Ri(R,G){const A="string"==typeof G||"number"==typeof G||"boolean"==typeof G?[G]:G;return(0,ye.HD)(R)||(0,ye.HD)(R[0])||(0,ye.HD)(G)||(0,ye.HD)(G[0])?Fs(R,A,(z,te)=>z==te):Fs(R,G,(z,te)=>wr(z,te,0))}function vc(R,G,A){if(null==A&&(A=Wn()),!wr(R,G,A))throw new Error(`Numbers differ: actual === ${R}, expected === ${G}`);"undefined"!=typeof expect&&expect().nothing()}function wr(R,G,A){return!isFinite(R)&&!isFinite(G)||!(isNaN(R)||isNaN(G)||Math.abs(R-G)>A)}function yl(R,G,A){for(let z=0;z<R.length;z++)if(R[z]<G||R[z]>A)throw new Error(`Value out of range:${R[z]} low: ${G}, high: ${A}`)}function Ru(R,G){const A=new Float32Array(R),z=new Float32Array(G);if(A.length!==z.length)throw new Error(`Expected ArrayBuffer to be of length ${z.length}, but it was ${A.length}`);for(let te=0;te<z.length;te++)if(A[te]!==z[te])throw new Error(`Expected ArrayBuffer value at ${te} to be ${z[te]} but got ${A[te]} instead`)}function xc(R){for(let G=0;G<R.length;G++){const A=R[G];Array.isArray(A)?xc(A):R[G]=(0,en.encodeString)(A)}return R}function Lf(R){const G=document.createElement("video");return"playsInline"in G&&(G.playsInline=!0),G.muted=!0,G.loop=!0,G.style.position="fixed",G.style.left="0px",G.style.top="0px",G.preload="auto",G.appendChild(R),new Promise(A=>{G.addEventListener("loadeddata",z=>A(G)),G.load()})}function Gn(R){return Hd.apply(this,arguments)}function Hd(){return(Hd=(0,we.Z)(function*(R){yield R.play(),"requestVideoFrameCallback"in R&&(yield new Promise(G=>{R.requestVideoFrameCallback(G)}))})).apply(this,arguments)}const Ec="3.21.0";var Bt=h(9370),Wt=h(6849),Fr=h(6635),En=h(8788),ei=h(5562),ti=h(4164),Ls=h(37),oo=h(1335),Mi=h(316);class jr extends Tt{minimize(G,A=!1,z){const{value:te,grads:Ee}=this.computeGradients(G,z);if(null!=z){const De=z.map(Ve=>({name:Ve.name,tensor:Ee[Ve.name]}));this.applyGradients(De)}else this.applyGradients(Ee);return(0,Bt.B9)(Ee),A?te:(te.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(G,A){return(0,oo.pn)(G,A)}dispose(){null!=this.iterations_&&(0,Bt.B9)(this.iterations_)}saveIterations(){var G=this;return(0,we.Z)(function*(){return null==G.iterations_&&(G.iterations_=0),{name:"iter",tensor:(0,Mi.i)(G.iterations_,"int32")}})()}getWeights(){return(0,we.Z)(function*(){throw new Error("getWeights() is not implemented for this optimizer yet.")})()}setWeights(G){var A=this;return(0,we.Z)(function*(){throw new Error(`setWeights() is not implemented for this optimizer class ${A.getClassName()}`)})()}extractIterations(G){var A=this;return(0,we.Z)(function*(){return A.iterations_=(yield G[0].tensor.data())[0],G.slice(1)})()}}Object.defineProperty(jr,Symbol.hasInstance,{value:R=>null!=R.minimize&&null!=R.computeGradients&&null!=R.applyGradients});let vl=(()=>{class R extends jr{constructor(A,z,te=null){super(),this.learningRate=A,this.rho=z,this.epsilon=te,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==te&&(this.epsilon=O.BV.backend.epsilon())}applyGradients(A){(Array.isArray(A)?A.map(te=>te.name):Object.keys(A)).forEach((te,Ee)=>{const De=O.BV.registeredVariables[te];null==this.accumulatedGrads[Ee]&&(this.accumulatedGrads[Ee]={originalName:`${te}/accum_grad`,variable:(0,Bt.lu)(()=>(0,Ls.P)(De).variable(!1))}),null==this.accumulatedUpdates[Ee]&&(this.accumulatedUpdates[Ee]={originalName:`${te}/accum_var`,variable:(0,Bt.lu)(()=>(0,Ls.P)(De).variable(!1))});const rt=Array.isArray(A)?A[Ee].tensor:A[te];if(null==rt)return;const Ye=this.accumulatedGrads[Ee].variable,yt=this.accumulatedUpdates[Ee].variable;(0,Bt.lu)(()=>{const at=(0,Wt.I)((0,En.d)(Ye,this.rho),(0,En.d)((0,ti.h)(rt),1-this.rho)),xt=(0,En.d)((0,Fr.h)((0,ei._)((0,Wt.I)(yt,this.epsilon)),(0,ei._)((0,Wt.I)(Ye,this.epsilon))),rt),Ft=(0,Wt.I)((0,En.d)(yt,this.rho),(0,En.d)((0,ti.h)(xt),1-this.rho));Ye.assign(at),yt.assign(Ft);const Ut=(0,Wt.I)((0,En.d)(xt,-this.learningRate),De);De.assign(Ut)})}),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&((0,Bt.B9)(this.accumulatedGrads.map(A=>A.variable)),(0,Bt.B9)(this.accumulatedUpdates.map(A=>A.variable)))}getWeights(){var A=this;return(0,we.Z)(function*(){const z=[...A.accumulatedGrads,...A.accumulatedUpdates];return[yield A.saveIterations()].concat(z.map(te=>({name:te.originalName,tensor:te.variable})))})()}setWeights(A){var z=this;return(0,we.Z)(function*(){const te=(A=yield z.extractIterations(A)).length/2;z.accumulatedGrads=A.slice(0,te).map(De=>({originalName:De.name,variable:De.tensor.variable(!1)})),z.accumulatedUpdates=A.slice(te,2*te).map(De=>({originalName:De.name,variable:De.tensor.variable(!1)}))})()}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(A,z){return new A(z.learningRate,z.rho,z.epsilon)}}return R.className="Adadelta",R})();hn(vl);var Ia=h(8509);let xl=(()=>{class R extends jr{constructor(A,z=.1){super(),this.learningRate=A,this.initialAccumulatorValue=z,this.accumulatedGrads=[]}applyGradients(A){(Array.isArray(A)?A.map(te=>te.name):Object.keys(A)).forEach((te,Ee)=>{const De=O.BV.registeredVariables[te];null==this.accumulatedGrads[Ee]&&(this.accumulatedGrads[Ee]={originalName:`${te}/accumulator`,variable:(0,Bt.lu)(()=>(0,Ia.h)(De.shape,this.initialAccumulatorValue).variable(!1))});const Ve=Array.isArray(A)?A[Ee].tensor:A[te];if(null==Ve)return;const rt=this.accumulatedGrads[Ee].variable;(0,Bt.lu)(()=>{const Ye=(0,Wt.I)(rt,(0,ti.h)(Ve));rt.assign(Ye);const yt=(0,Wt.I)((0,En.d)((0,Fr.h)(Ve,(0,ei._)((0,Wt.I)(Ye,O.BV.backend.epsilon()))),-this.learningRate),De);De.assign(yt)})}),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&(0,Bt.B9)(this.accumulatedGrads.map(A=>A.variable))}getWeights(){var A=this;return(0,we.Z)(function*(){return[yield A.saveIterations()].concat(A.accumulatedGrads.map(z=>({name:z.originalName,tensor:z.variable})))})()}setWeights(A){var z=this;return(0,we.Z)(function*(){A=yield z.extractIterations(A),z.accumulatedGrads=A.map(Ee=>({originalName:Ee.name,variable:Ee.tensor.variable(!1)}))})()}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(A,z){return new A(z.learningRate,z.initialAccumulatorValue)}}return R.className="Adagrad",R})();hn(xl);var Mu=h(9043),Sr=h(8578);let Kl=(()=>{class R extends jr{constructor(A,z,te,Ee=null){super(),this.learningRate=A,this.beta1=z,this.beta2=te,this.epsilon=Ee,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],(0,Bt.lu)(()=>{this.accBeta1=(0,Mi.i)(z).variable(),this.accBeta2=(0,Mi.i)(te).variable()}),null==Ee&&(this.epsilon=O.BV.backend.epsilon())}applyGradients(A){const z=Array.isArray(A)?A.map(te=>te.name):Object.keys(A);(0,Bt.lu)(()=>{const te=(0,Sr.l)(1,this.accBeta1),Ee=(0,Sr.l)(1,this.accBeta2);z.forEach((De,Ve)=>{const rt=O.BV.registeredVariables[De];null==this.accumulatedFirstMoment[Ve]&&(this.accumulatedFirstMoment[Ve]={originalName:`${De}/m`,variable:(0,Bt.lu)(()=>(0,Ls.P)(rt).variable(!1))}),null==this.accumulatedSecondMoment[Ve]&&(this.accumulatedSecondMoment[Ve]={originalName:`${De}/v`,variable:(0,Bt.lu)(()=>(0,Ls.P)(rt).variable(!1))});const yt=Array.isArray(A)?A[Ve].tensor:A[De];if(null==yt)return;const at=this.accumulatedFirstMoment[Ve].variable,xt=this.accumulatedSecondMoment[Ve].variable,Ft=(0,Wt.I)((0,En.d)(at,this.beta1),(0,En.d)(yt,1-this.beta1)),Ut=(0,Wt.I)((0,En.d)(xt,this.beta2),(0,En.d)((0,ti.h)(yt),1-this.beta2)),Kt=(0,Fr.h)(Ft,te),nn=(0,Fr.h)(Ut,Ee);at.assign(Ft),xt.assign(Ut);const Vn=(0,Wt.I)((0,En.d)((0,Fr.h)(Kt,(0,Wt.I)((0,ei._)(nn),this.epsilon)),-this.learningRate),rt);rt.assign(Vn)}),this.accBeta1.assign((0,En.d)(this.accBeta1,this.beta1)),this.accBeta2.assign((0,En.d)(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&(0,Bt.B9)(this.accumulatedFirstMoment.map(A=>A.variable)),null!=this.accumulatedSecondMoment&&(0,Bt.B9)(this.accumulatedSecondMoment.map(A=>A.variable))}getWeights(){var A=this;return(0,we.Z)(function*(){const z=[...A.accumulatedFirstMoment,...A.accumulatedSecondMoment];return[yield A.saveIterations()].concat(z.map(te=>({name:te.originalName,tensor:te.variable})))})()}setWeights(A){var z=this;return(0,we.Z)(function*(){A=yield z.extractIterations(A),(0,Bt.lu)(()=>{z.accBeta1.assign((0,Mu.s)(z.beta1,z.iterations_+1)),z.accBeta2.assign((0,Mu.s)(z.beta2,z.iterations_+1))});const te=A.length/2;z.accumulatedFirstMoment=A.slice(0,te).map(De=>({originalName:De.name,variable:De.tensor.variable(!1)})),z.accumulatedSecondMoment=A.slice(te,2*te).map(De=>({originalName:De.name,variable:De.tensor.variable(!1)}))})()}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(A,z){return new A(z.learningRate,z.beta1,z.beta2,z.epsilon)}}return R.className="Adam",R})();hn(Kl);var Ta=h(2519),or=h(6825);let er=(()=>{class R extends jr{constructor(A,z,te,Ee=null,De=0){super(),this.learningRate=A,this.beta1=z,this.beta2=te,this.epsilon=Ee,this.decay=De,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],(0,Bt.lu)(()=>{this.iteration=(0,Mi.i)(0).variable(),this.accBeta1=(0,Mi.i)(z).variable()}),null==Ee&&(this.epsilon=O.BV.backend.epsilon())}applyGradients(A){const z=Array.isArray(A)?A.map(te=>te.name):Object.keys(A);(0,Bt.lu)(()=>{const te=(0,Sr.l)(1,this.accBeta1),Ee=(0,Fr.h)(-this.learningRate,(0,Wt.I)((0,En.d)(this.iteration,this.decay),1));z.forEach((De,Ve)=>{const rt=O.BV.registeredVariables[De];null==this.accumulatedFirstMoment[Ve]&&(this.accumulatedFirstMoment[Ve]={originalName:`${De}/m`,variable:(0,Ls.P)(rt).variable(!1)}),null==this.accumulatedWeightedInfNorm[Ve]&&(this.accumulatedWeightedInfNorm[Ve]={originalName:`${De}/v`,variable:(0,Ls.P)(rt).variable(!1)});const yt=Array.isArray(A)?A[Ve].tensor:A[De];if(null==yt)return;const at=this.accumulatedFirstMoment[Ve].variable,xt=this.accumulatedWeightedInfNorm[Ve].variable,Ft=(0,Wt.I)((0,En.d)(at,this.beta1),(0,En.d)(yt,1-this.beta1)),Ut=(0,En.d)(xt,this.beta2),Kt=(0,Ta.W)(yt),nn=(0,or.g)(Ut,Kt);at.assign(Ft),xt.assign(nn);const Vn=(0,Wt.I)((0,En.d)((0,Fr.h)(Ee,te),(0,Fr.h)(Ft,(0,Wt.I)(nn,this.epsilon))),rt);rt.assign(Vn)}),this.iteration.assign((0,Wt.I)(this.iteration,1)),this.accBeta1.assign((0,En.d)(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&(0,Bt.B9)(this.accumulatedFirstMoment.map(A=>A.variable)),null!=this.accumulatedWeightedInfNorm&&(0,Bt.B9)(this.accumulatedWeightedInfNorm.map(A=>A.variable))}getWeights(){return(0,we.Z)(function*(){throw new Error("getWeights() is not implemented for Adamax yet.")})()}setWeights(A){return(0,we.Z)(function*(){throw new Error("setWeights() is not implemented for Adamax yet.")})()}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(A,z){return new A(z.learningRate,z.beta1,z.beta2,z.epsilon,z.decay)}}return R.className="Adamax",R})();hn(er);let Ms=(()=>{class R extends jr{constructor(A){super(),this.learningRate=A,this.setLearningRate(A)}applyGradients(A){(Array.isArray(A)?A.map(te=>te.name):Object.keys(A)).forEach((te,Ee)=>{const De=Array.isArray(A)?A[Ee].tensor:A[te];if(null==De)return;const Ve=O.BV.registeredVariables[te];(0,Bt.lu)(()=>{const rt=(0,Wt.I)((0,En.d)(this.c,De),Ve);Ve.assign(rt)})}),this.incrementIterations()}setLearningRate(A){this.learningRate=A,null!=this.c&&this.c.dispose(),this.c=(0,Bt.Cn)((0,Mi.i)(-A))}dispose(){this.c.dispose()}getWeights(){var A=this;return(0,we.Z)(function*(){return[yield A.saveIterations()]})()}setWeights(A){var z=this;return(0,we.Z)(function*(){if(0!==(A=yield z.extractIterations(A)).length)throw new Error("SGD optimizer does not have settable weights.")})()}getConfig(){return{learningRate:this.learningRate}}static fromConfig(A,z){return new A(z.learningRate)}}return R.className="SGD",R})();hn(Ms);let ao=(()=>{class R extends Ms{constructor(A,z,te=!1){super(A),this.learningRate=A,this.momentum=z,this.useNesterov=te,this.accumulations=[],this.m=(0,Mi.i)(this.momentum)}applyGradients(A){(Array.isArray(A)?A.map(te=>te.name):Object.keys(A)).forEach((te,Ee)=>{const De=O.BV.registeredVariables[te];null==this.accumulations[Ee]&&(this.accumulations[Ee]={originalName:`${te}/momentum`,variable:(0,Bt.lu)(()=>(0,Ls.P)(De).variable(!1))});const Ve=this.accumulations[Ee].variable,rt=Array.isArray(A)?A[Ee].tensor:A[te];null!=rt&&(0,Bt.lu)(()=>{let Ye;const yt=(0,Wt.I)((0,En.d)(this.m,Ve),rt);Ye=(0,Wt.I)((0,En.d)(this.c,this.useNesterov?(0,Wt.I)(rt,(0,En.d)(yt,this.m)):yt),De),Ve.assign(yt),De.assign(Ye)})}),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&(0,Bt.B9)(this.accumulations.map(A=>A.variable))}setMomentum(A){this.momentum=A}getWeights(){var A=this;return(0,we.Z)(function*(){return[yield A.saveIterations()].concat(A.accumulations.map(z=>({name:z.originalName,tensor:z.variable})))})()}setWeights(A){var z=this;return(0,we.Z)(function*(){A=yield z.extractIterations(A),z.accumulations=A.map(Ee=>({originalName:Ee.name,variable:Ee.tensor.variable(!1)}))})()}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(A,z){return new A(z.learningRate,z.momentum,z.useNesterov)}}return R.className="Momentum",R})();hn(ao);let bo=(()=>{class R extends jr{constructor(A,z=.9,te=0,Ee=null,De=!1){if(super(),this.learningRate=A,this.decay=z,this.momentum=te,this.epsilon=Ee,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=De,null==Ee&&(this.epsilon=O.BV.backend.epsilon()),null==A)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(A){(Array.isArray(A)?A.map(te=>te.name):Object.keys(A)).forEach((te,Ee)=>{const De=O.BV.registeredVariables[te];null==this.accumulatedMeanSquares[Ee]&&(this.accumulatedMeanSquares[Ee]={originalName:`${te}/rms`,variable:(0,Bt.lu)(()=>(0,Ls.P)(De).variable(!1))}),null==this.accumulatedMoments[Ee]&&(this.accumulatedMoments[Ee]={originalName:`${te}/momentum`,variable:(0,Bt.lu)(()=>(0,Ls.P)(De).variable(!1))}),null==this.accumulatedMeanGrads[Ee]&&this.centered&&(this.accumulatedMeanGrads[Ee]={originalName:`${te}/mg`,variable:(0,Bt.lu)(()=>(0,Ls.P)(De).variable(!1))});const rt=Array.isArray(A)?A[Ee].tensor:A[te];if(null==rt)return;const Ye=this.accumulatedMeanSquares[Ee].variable,yt=this.accumulatedMoments[Ee].variable;(0,Bt.lu)(()=>{const at=(0,Wt.I)((0,En.d)(Ye,this.decay),(0,En.d)((0,ti.h)(rt),1-this.decay));if(this.centered){const xt=this.accumulatedMeanGrads[Ee].variable,Ft=(0,Wt.I)((0,En.d)(xt,this.decay),(0,En.d)(rt,1-this.decay)),Ut=(0,Fr.h)((0,En.d)(rt,this.learningRate),(0,ei._)((0,Sr.l)(at,(0,Wt.I)((0,ti.h)(Ft),this.epsilon)))),Kt=(0,Wt.I)((0,En.d)(yt,this.momentum),Ut);Ye.assign(at),xt.assign(Ft),yt.assign(Kt);const nn=(0,Sr.l)(De,Kt);De.assign(nn)}else{const xt=(0,Wt.I)((0,En.d)(Ye,this.decay),(0,En.d)((0,ti.h)(rt),1-this.decay)),Ft=(0,Wt.I)((0,En.d)(yt,this.momentum),(0,Fr.h)((0,En.d)(rt,this.learningRate),(0,ei._)((0,Wt.I)(xt,this.epsilon))));Ye.assign(xt),yt.assign(Ft);const Ut=(0,Sr.l)(De,Ft);De.assign(Ut)}})}),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&(0,Bt.B9)(this.accumulatedMeanSquares.map(A=>A.variable)),null!=this.accumulatedMeanGrads&&this.centered&&(0,Bt.B9)(this.accumulatedMeanGrads.map(A=>A.variable)),null!=this.accumulatedMoments&&(0,Bt.B9)(this.accumulatedMoments.map(A=>A.variable))}getWeights(){var A=this;return(0,we.Z)(function*(){const z=[...A.accumulatedMeanSquares,...A.accumulatedMoments];return A.centered&&z.push(...A.accumulatedMeanGrads),[yield A.saveIterations()].concat(z.map(te=>({name:te.originalName,tensor:te.variable})))})()}setWeights(A){var z=this;return(0,we.Z)(function*(){A=yield z.extractIterations(A);const te=z.centered?A.length/3:A.length/2;z.accumulatedMeanSquares=A.slice(0,te).map(De=>({originalName:De.name,variable:De.tensor.variable(!1)})),z.accumulatedMoments=A.slice(te,2*te).map(De=>({originalName:De.name,variable:De.tensor.variable(!1)})),z.centered&&(z.accumulatedMeanGrads=A.slice(2*te,3*te).map(De=>({originalName:De.name,variable:De.tensor.variable(!1)})))})()}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(A,z){return new A(z.learningRate,z.decay,z.momentum,z.epsilon,z.centered)}}return R.className="RMSProp",R})();hn(bo);class Bs{static sgd(G){return new Ms(G)}static momentum(G,A,z=!1){return new ao(G,A,z)}static rmsprop(G,A=.9,z=0,te=null,Ee=!1){return new bo(G,A,z,te,Ee)}static adam(G=.001,A=.9,z=.999,te=null){return new Kl(G,A,z,te)}static adadelta(G=.001,A=.95,z=null){return new vl(G,A,z)}static adamax(G=.002,A=.9,z=.999,te=null,Ee=0){return new er(G,A,z,te,Ee)}static adagrad(G,A=.1){return new xl(G,A)}}var ki=h(7770),Ae=h(8790),wa=h(4761);const jl={sgd:Bs.sgd,momentum:Bs.momentum,adadelta:Bs.adadelta,adagrad:Bs.adagrad,rmsprop:Bs.rmsprop,adamax:Bs.adamax,adam:Bs.adam},Hn="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:R=>R();function ir(){return new Promise(R=>Hn(()=>R()))}var ni=h(7745);function Hs(R,G){const A=R[0].length;R.forEach((te,Ee)=>{ye.hu(te.length===A,()=>`Error in concat${A}D: rank of tensors[${Ee}] must be the same as the rank of the rest (${A})`)}),ye.hu(G>=0&&G<A,()=>`Error in concat${A}D: axis must be between 0 and ${A-1}.`);const z=R[0];R.forEach((te,Ee)=>{for(let De=0;De<A;De++)ye.hu(De===G||te[De]===z[De],()=>`Error in concat${A}D: Shape of tensors[${Ee}] (${te}) does not match the shape of the rest (${z}) along the non-concatenated axis ${Ee}.`)})}function Nt(R,G){const A=R[0].slice();for(let z=1;z<R.length;z++)A[G]+=R[z][G];return A}var tn=h(744),Kn=h(8868),as=(()=>{return(R=as||(as={}))[R.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",R[R.VALUE_ROWIDS=1]="VALUE_ROWIDS",R[R.ROW_LENGTHS=2]="ROW_LENGTHS",R[R.ROW_SPLITS=3]="ROW_SPLITS",R[R.ROW_LIMITS=4]="ROW_LIMITS",R[R.ROW_STARTS=5]="ROW_STARTS",as;var R})();function Pi(R,G,A){let z=new Array;if(null==A&&null==G)return z;if(null==G)for(;z.length<R+A.length;)z.push(-1);else z=G.slice();if(null==A)return z;if(R+A.length!==z.length)throw new Error(`rt input.shape and shape=${G} are incompatible: rt input.rank = ${R+A.length}, but shape.rank = ${z.length}`);for(let te=1;te<A.length;++te){const Ee=A[te],De=z[z.length-A.length+te],Ve=z[De];if(Ee>=0)if(Ve>=0){if(Ve!==Ee)throw new Error(`rt input.shape and shape=${G} are incompatible: rt input.shape[${te+R}] = ${Ee} but shape[${te+R}] = ${Ve}`)}else z[De]=Ee}return z}function Ks(R){const G={FIRST_DIM_SIZE:as.FIRST_DIM_SIZE,VALUE_ROWIDS:as.VALUE_ROWIDS,ROW_LENGTHS:as.ROW_LENGTHS,ROW_SPLITS:as.ROW_SPLITS,ROW_LIMITS:as.ROW_LIMITS,ROW_STARTS:as.ROW_STARTS},A=[];for(const z of R){if(!(z in G))break;A.push(G[z])}return A}function $i(R){return 0===R.length?0:R[0]===as.FIRST_DIM_SIZE?R.length-1:R.length}function Ds(R,G){if(null==R||null==G)return;const A=R.length,z=G.length;if(A>=z)throw new Error(`defaultValue.shape=${R} and ragged tensor flatValues.shape=${G}, are incompatible: defaultValue.rank = ${A} must be less than ragged tensor input flatValues.rank = ${z})`);for(let te=0;te<Math.min(A,z-1);++te){const Ee=R[te],De=G[te+1];if(Ee>=0&&De>=0&&1!==Ee&&Ee!==De)throw new Error(`defaultValue.shape=${R}, and ragged tensor input flatValues.shape=${G} are incompatible: defaultValue.shape[${te-R.length}] = ${Ee} but ragged tensor input.flatValues.shape[${te-R.length}] = ${De}`)}}const Fi=30;function Sa(R){return R<=Fi?R:(0,ye.jP)(R,Math.floor(Math.sqrt(R)))}function pn(R,G,A){return[A*("number"==typeof R?R:R[0]),G*("number"==typeof R?R:R[1])]}function Xl(R,G,A,z=!0){let te=[];if(z)te=te.concat(G.slice(0)),te.push(R[0]/A),te=te.concat(R.slice(1));else{te=te.concat(R[0]);const Ee=G.length;for(let De=0;De<Ee;++De)te=te.concat([R[De+1]/G[De],G[De]]);te=te.concat(R.slice(Ee+1))}return te}function Na(R,G,A=!0){const z=[];if(A){z.push(G);for(let te=G+1;te<R;++te)te<=2*G?(z.push(te),z.push(te-(G+1))):z.push(te)}else{const te=[],Ee=[];for(let De=1;De<R;++De)De>=2*G+1||De%2==1?Ee.push(De):te.push(De);z.push(...te),z.push(0),z.push(...Ee)}return z}function ku(R,G,A,z=!0){const te=[];te.push(z?R[0]/A:R[0]*A);for(let Ee=1;Ee<R.length;++Ee)te.push(Ee<=G.length?z?G[Ee-1]*R[Ee]:R[Ee]/G[Ee-1]:R[Ee]);return te}function Aa(R,G){const A=[0];for(let z=0;z<G;++z)A.push(R[z][0]);return A}function Nr(R,G,A){const z=R.slice(0,1);for(let te=0;te<A;++te)z.push(R[te+1]-G[te][0]-G[te][1]);return z}var Oa=h(8617);const Li=.3275911,Xr=.254829592,jn=-.284496736,Pu=1.421413741,$u=-1.453152027,Co=1.061405429;var Lr=h(5686);function El(R,G){if(R.length!==G.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${R.length}, imag: ${G.length}.`);const A=new Float32Array(2*R.length);for(let z=0;z<A.length;z+=2)A[z]=R[z/2],A[z+1]=G[z/2];return A}function si(R){const G=new Float32Array(R.length/2),A=new Float32Array(R.length/2);for(let z=0;z<R.length;z+=2)G[z/2]=R[z],A[z/2]=R[z+1];return{real:G,imag:A}}function Zl(R){const G=Math.ceil(R.length/4),A=new Float32Array(G),z=new Float32Array(G);for(let te=0;te<R.length;te+=4)A[Math.floor(te/4)]=R[te],z[Math.floor(te/4)]=R[te+1];return{real:A,imag:z}}function lo(R){const G=Math.floor(R.length/4),A=new Float32Array(G),z=new Float32Array(G);for(let te=2;te<R.length;te+=4)A[Math.floor(te/4)]=R[te],z[Math.floor(te/4)]=R[te+1];return{real:A,imag:z}}function ar(R,G){return{real:R[2*G],imag:R[2*G+1]}}function Bf(R,G,A,z){R[2*z]=G,R[2*z+1]=A}function Fu(R,G){const A=new Float32Array(R/2),z=new Float32Array(R/2);for(let te=0;te<Math.ceil(R/2);te++){const Ee=(G?2:-2)*Math.PI*(te/R);A[te]=Math.cos(Ee),z[te]=Math.sin(Ee)}return{real:A,imag:z}}function _l(R,G,A){const z=(A?2:-2)*Math.PI*(R/G);return{real:Math.cos(z),imag:Math.sin(z)}}const Yl=/->/g;function Uf(R,G){const A=((R=R.replace(/\s/g,"")).length-R.replace(Yl,"").length)/"->".length;if(A<1)throw new Error("Equations without an arrow are not supported.");if(A>1)throw new Error('Equation must contain exactly one arrow ("->").');const[z,te]=R.split("->");(0,ye.hu)(-1===z.indexOf("..."),()=>'The ellipsis notation ("...") is not supported yet.');const Ee=z.split(","),De=Ee.length;if(G!==De)throw new Error(`Expected ${De} input tensors, received ${G}`);if(De>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const Ve=[];for(let xt=0;xt<te.length;++xt){const Ft=te[xt];if(!Ee.some(Ut=>-1!==Ut.indexOf(Ft)))throw new Error(`Output subscripts contain the label ${Ft} not present in the input subscripts.`);-1===Ve.indexOf(Ft)&&Ve.push(Ft)}for(let xt=0;xt<z.length;++xt){const Ft=z[xt];-1===Ve.indexOf(Ft)&&","!==Ft&&Ve.push(Ft)}const rt=new Array(Ee.length);for(let xt=0;xt<De;++xt){if(new Set(Ee[xt].split("")).size!==Ee[xt].length)throw new Error(`Found duplicate axes in input component ${Ee[xt]}. Support for duplicate axes in input is not implemented yet.`);rt[xt]=[];for(let Ft=0;Ft<Ee[xt].length;++Ft)rt[xt].push(Ve.indexOf(Ee[xt][Ft]))}const Ye=Ve.length,at=[];for(let xt=te.length;xt<Ye;++xt)at.push(xt);return{allDims:Ve,summedDims:at,idDims:rt}}function Vf(R,G){let A=new Array(R);A.fill(-1);for(let te=0;te<G.length;++te)A[G[te]]=te;const z=[];for(let te=0;te<R;++te)-1===A[te]&&z.push(te);return A=A.filter(te=>-1!==te),{permutationIndices:A,expandDims:z}}function zf(R,G,A){const z=new Array(R);for(let te=0;te<A.length;++te){const Ee=A[te].shape;for(let De=0;De<G[te].length;++De)void 0===z[G[te][De]]?z[G[te][De]]=Ee[De]:(0,ye.hu)(z[G[te][De]]===Ee[De],()=>`Expected dimension ${z[G[te][De]]} at axis ${De} of input shaped ${JSON.stringify(Ee)}, but got dimension ${Ee[De]}`)}}function Wf(R,G){const A=R,z=[];let te=0;0===R.length&&A.push(-1),te=R.length+1;for(let De=0;De<te;++De)z.push([]);const Ee=[];for(let De=0;De<A.length;++De){const rt=Hf(G,A[De]);for(const Ye of rt)-1===Ee.indexOf(Ye)&&(z[De].push(Ye),Ee.push(Ye))}return{path:A,steps:z}}function Gf(R){return R.every((G,A)=>G===A)}function Hf(R,G){const A=[];for(let z=0;z<R.length;++z)(0===R[z].length||-1!==R[z].indexOf(G)||-1===G)&&A.push(z);return A}function Kf(R,G,A=0){let z=[];if("number"==typeof G)(0,ye.hu)(R.shape[A]%G==0,()=>"Number of splits must evenly divide the axis."),z=new Array(G).fill(R.shape[A]/G);else{const te=G.reduce((De,Ve)=>(-1===Ve&&(De+=1),De),0);(0,ye.hu)(te<=1,()=>"There should be only one negative value in split array.");const Ee=G.indexOf(-1);if(-1!==Ee){const De=G.reduce((Ve,rt)=>rt>0?Ve+rt:Ve);G[Ee]=R.shape[A]-De}(0,ye.hu)(R.shape[A]===G.reduce((De,Ve)=>De+Ve),()=>"The sum of sizes must match the size of the axis dimension."),z=G}return z}function _c(R){return`Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ${R}`}function jf(R,G){return`indices(${R}, 0) is invalid: ${G} < 0`}function Xf(R,G,A){return`indices(${R}, 0) is invalid: ${G} >= ${A}`}function Ra(R,G){return`only one output dimension may be -1, not both ${R} and ${G}`}function Lu(R,G){return`size ${R} must be non-negative, not ${G}`}function Zf(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function bc(R,G){return`Input to reshape is a SparseTensor with ${(0,ye.NA)(R)}\n  dense values, but the requested shape requires a multiple of ${(0,ye.NA)(G)}. inputShape=${R} outputShape= ${G}`}function Xd(R,G){return`Input to reshape is a tensor with ${(0,ye.NA)(R)} dense values, but the requested shape has ${(0,ye.NA)(G)}. inputShape=${R} outputShape=${G}`}function ri(){return"segment ids must be >= 0"}function Zd(){return"segment ids are not increasing"}function Bi(R,G){return`Segment id ${R} out of range [0, ${G}), possibly because segmentIds input is not sorted.`}function Ql(R,G,A){return`Bad: indices[${R}] == ${G} out of range [0, ${A})`}function Yd(R,G){let z,A=!1;for(R<=Fi?(z=R,A=!0):z=(0,ye.jP)(R,Math.floor(Math.sqrt(R)));!A;)z>G||z===R?A=!0:z=(0,ye.jP)(R,z+1);return z}function Bu(R,G,A){const z=[],te=R.length;for(let Ee=0;Ee<te;Ee++)z.push(Ee!==G?R[Ee]:A);return z}function Jl(R,G,A,z){const te=G.shape.length,Ee=R.shape.length;if(0!==z&&(z<-te||z>te))throw new Error(`Expect batchDims in the range of [-${te}, ${te}], but got ${z}`);if(z<0&&(z+=te),z>Ee)throw new Error(`batchDims (${z}) must be less than rank(x) (\n    ${Ee}).`);if(A<z)throw new Error(`batchDims (${z}) must be less than or equal to axis (${A}).`);for(let at=0;at<z;++at)if(R.shape[at]!==G.shape[at])throw new Error(`x.shape[${at}]: ${R.shape[at]} should be equal to indices.shape[${at}]: ${G.shape[at]}.`);const De=R.shape[A],Ve=[];let rt=1,Ye=1,yt=1;for(let at=0;at<z;++at)Ve.push(R.shape[at]),rt*=R.shape[at];for(let at=z;at<A;at++)Ve.push(R.shape[at]),Ye*=R.shape[at];for(let at=z;at<te;at++)Ve.push(G.shape[at]);for(let at=A+1;at<Ee;at++)Ve.push(R.shape[at]),yt*=R.shape[at];return{batchSize:rt,sliceSize:yt,outerSize:Ye,dimSize:De,outputShape:Ve}}function Ma(R){try{return R.map(G=>(0,en.decodeString)(G))}catch(G){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${G}`)}}function Qd(R){return R.map(G=>(0,en.encodeString)(G))}var bl=h(152),Jd=h(2842),Br=h(7872)},1070:(Re,Y,h)=>{"use strict";h.d(Y,{$HU:()=>Jo,$g6:()=>ot,$w:()=>_s,Acj:()=>rl,BMI:()=>Zo,BiW:()=>_a,Byc:()=>Rt,CAk:()=>pa,D2d:()=>v,DlI:()=>Qo,Eh3:()=>ae,FKq:()=>kn,G3Y:()=>bt,GBy:()=>_o,Gcp:()=>Hl,HEU:()=>cn,HZH:()=>sn,Hhh:()=>ma,Hmb:()=>Ca,IKK:()=>$,IMb:()=>be,J$2:()=>Te,J_u:()=>_i,JhU:()=>J,Kgp:()=>Qn,L8s:()=>mr,Ly9:()=>ye,M2y:()=>N,MIZ:()=>ft,MRv:()=>Da,MZg:()=>Os,NEP:()=>Zn,NZg:()=>Oo,O3z:()=>is,OAf:()=>Yn,OR:()=>Mr,OU7:()=>Pr,OV7:()=>ga,Omj:()=>Un,Oyi:()=>H,PYm:()=>rs,PhF:()=>bs,QCc:()=>oe,QRR:()=>Et,Qg5:()=>ol,QiL:()=>hl,Qvg:()=>Cs,RFZ:()=>Q,ROF:()=>de,RQH:()=>ml,RuY:()=>Wn,SX0:()=>It,SYM:()=>V,SbG:()=>an,SpW:()=>W,T0n:()=>Vt,TQc:()=>Ue,TR1:()=>_t,ToN:()=>ts,Tr8:()=>gt,Uyb:()=>ca,VGw:()=>U,Vbg:()=>Hr,VcC:()=>Xt,VfG:()=>ro,Vn9:()=>Ie,W0H:()=>zl,XDQ:()=>Kr,XLW:()=>we,XkS:()=>ze,Xze:()=>P,Y0y:()=>Rr,YFo:()=>Js,YoZ:()=>Ii,ZbH:()=>xo,ZjV:()=>g,Zz9:()=>q,_JP:()=>fe,_V0:()=>wr,_Yw:()=>wn,_k9:()=>pe,_tC:()=>T,a5O:()=>gl,aJk:()=>b,avt:()=>bi,b9H:()=>Ri,bK0:()=>X,bV0:()=>pl,c17:()=>Ti,cWu:()=>qt,cie:()=>Ht,cye:()=>dl,dDz:()=>Sn,deh:()=>sl,dpD:()=>fl,e07:()=>Ai,e6w:()=>Tn,e7N:()=>il,eBW:()=>Gs,eEB:()=>xe,eZ0:()=>Di,ekb:()=>Qs,gJX:()=>K,h8e:()=>Fs,hdR:()=>Xn,i5y:()=>qo,iHb:()=>Dt,iJz:()=>ha,iWB:()=>Ao,iZT:()=>Ei,ik2:()=>He,jMg:()=>M,jQk:()=>j,jQs:()=>wi,jeX:()=>qs,kU:()=>Mn,kpP:()=>en,kuV:()=>Ro,luS:()=>yl,lyA:()=>xa,mKl:()=>ps,mTV:()=>Rs,mc4:()=>mt,mhS:()=>E,mm_:()=>L,n9L:()=>Tt,nhH:()=>Bn,nr8:()=>Ir,o0g:()=>Ea,o2y:()=>Ne,oFR:()=>Gl,oHH:()=>Ke,oT6:()=>k,p2w:()=>Eo,p4S:()=>$s,pe_:()=>Wl,q1x:()=>da,q2K:()=>Vl,q8u:()=>ya,qCd:()=>kr,qIC:()=>ll,qWM:()=>Yo,qi_:()=>xi,qkr:()=>ba,qw7:()=>O,r7n:()=>fa,s1s:()=>he,sEM:()=>it,sHE:()=>Gr,sJF:()=>S,sL$:()=>ss,usg:()=>vc,uv1:()=>cl,vFR:()=>$r,vtC:()=>Ci,vwp:()=>nl,w3H:()=>I,w6g:()=>al,wUP:()=>Oe,wYB:()=>Tr,wYn:()=>ul,we_:()=>Si,wm:()=>ke,wx7:()=>hn,x12:()=>Pe,xJR:()=>Ni,xQA:()=>Oi,xnO:()=>w,y7R:()=>St,yQU:()=>va,yj2:()=>le,zbQ:()=>Mo,zvY:()=>me,zws:()=>Ce});const V="Abs",U="Acos",W="Acosh",L="Add",P="AddN",k="All",$="Any",S="ArgMax",b="ArgMin",N="Asin",O="Asinh",M="Atan",H="Atanh",oe="Atan2",J="AvgPool",de="AvgPoolGrad",pe="AvgPool3D",be="AvgPool3DGrad",we="BatchMatMul",Ce="BatchToSpaceND",me="Bincount",ye="BroadcastTo",xe="BroadcastArgs",Q="Cast",K="Ceil",w="ClipByValue",q="Complex",le="ComplexAbs",ae="Concat",E="Conv2D",Oe="Conv2DBackpropFilter",ke="Conv2DBackpropInput",Pe="Conv3D",Ne="Conv3DBackpropFilterV2",He="Conv3DBackpropInputV2",mt="Cos",_t="Cosh",Rt="Cumprod",Dt="Cumsum",Xt="CropAndResize",Et="DenseBincount",Vt="DepthToSpace",Ht="DepthwiseConv2dNative",ss="DepthwiseConv2dNativeBackpropFilter",St="DepthwiseConv2dNativeBackpropInput",_s="Diag",$s="Dilation2D",Qs="Dilation2DBackpropInput",Ie="Dilation2DBackpropFilter",Ke="RealDiv",ot="Einsum",It="Elu",cn="EluGrad",Un="Erf",Xn="Equal",Zn="Exp",Js="ExpandDims",Rr="Expm1",nl="FFT",sl="Fill",ca="FlipLeftRight",Mr="Floor",qs="FloorDiv",Gr="FusedBatchNorm",xi="GatherV2",da="GatherNd",Ei="Greater",rl="GreaterEqual",ha="Identity",ol="IFFT",_i="Imag",bi="IsFinite",Ao="IsInf",fa="IsNan",Te="LeakyRelu",Ci="Less",pa="LessEqual",il="LinSpace",xo="Log",Mn="Log1p",rs="LogicalAnd",ro="LogicalNot",Os="LogicalOr",al="LogicalXor",kr="LogSoftmax",ll="LowerBound",Di="LRN",ma="LRNGrad",Ii="Max",Zo="Maximum",Rs="MaxPool",ga="MaxPoolGrad",Yn="MaxPool3D",Pr="MaxPool3DGrad",$r="MaxPoolWithArgmax",Vl="Mean",Ti="Min",ya="Minimum",wi="MirrorPad",Hr="Mod",Oo="Multinomial",ul="Multiply",Ro="Neg",va="NotEqual",cl="NonMaxSuppressionV3",dl="NonMaxSuppressionV4",zl="NonMaxSuppressionV5",Yo="OnesLike",Si="OneHot",hl="Pack",xa="PadV2",Qn="Pool",Wl="Pow",Ea="Prelu",Qo="Prod",Sn="RaggedGather",_a="RaggedTensorToTensor",Tn="Range",Ni="Real",Jo="Reciprocal",ba="Relu",sn="Reshape",fl="ResizeNearestNeighbor",Ca="ResizeNearestNeighborGrad",wn="ResizeBilinear",Mo="ResizeBilinearGrad",an="Relu6",ps="Reverse",Ai="Round",pl="Rsqrt",Oi="ScatterNd",Ir="SearchSorted",bs="Select",Gl="Selu",Eo="Slice",ml="Sin",Tr="Sinh",qo="Sign",gl="Sigmoid",Da="Softplus",kn="Sqrt",_o="Sum",Ue="SpaceToBatchND",mr="SplitV",Hl="Softmax",is="SparseFillEmptyRows",Bn="SparseReshape",I="SparseSegmentMean",g="SparseSegmentSum",v="SparseToDense",T="SquaredDifference",X="Square",j="StridedSlice",fe="StringNGrams",he="StringSplit",ze="StringToHashBucketFast",gt="Sub",it="Tan",ft="Tanh",Tt="Tile",qt="TopK",hn="Transform",bt="Transpose",en="Unique",ts="Unpack",Cs="UnsortedSegmentSum",Kr="UpperBound",Wn="ZerosLike",Fs="Step",Gs="FromPixels",Ri="RotateWithOffset",vc="_FusedMatMul",wr="FusedConv2D",yl="FusedDepthwiseConv2D"},9464:(Re,Y,h)=>{"use strict";h.d(Y,{Li:()=>N,T3:()=>H,bt:()=>M,nE:()=>O,pI:()=>k,tr:()=>S,uk:()=>$,wC:()=>b});var V=h(1777),U=h(6422),W=h(5686);const L=(0,U.R)("kernelRegistry",()=>new Map),P=(0,U.R)("gradRegistry",()=>new Map);function k(J,de){const pe=oe(J,de);return L.get(pe)}function $(J){return P.get(J)}function S(J){const de=L.entries(),pe=[];for(;;){const{done:be,value:we}=de.next();if(be)break;const[Ce,me]=we,[ye]=Ce.split("_");ye===J&&pe.push(me)}return pe}function b(J){const{kernelName:de,backendName:pe}=J,be=oe(de,pe);L.has(be)&&W.Z(`The kernel '${de}' for backend '${pe}' is already registered`),L.set(be,J)}function N(J){const{kernelName:de}=J;P.has(de)&&(0,V.OB)().getBool("DEBUG")&&W.Z(`Overriding the gradient for '${de}'`),P.set(de,J)}function O(J,de){const pe=oe(J,de);if(!L.has(pe))throw new Error(`The kernel '${J}' for backend '${de}' is not registered`);L.delete(pe)}function M(J){if(!P.has(J))throw new Error(`The gradient '${J}' for backend is not registered`);P.delete(J)}function H(J,de){S(J).forEach(be=>{b(Object.assign({},be,{backendName:de}))})}function oe(J,de){return`${de}_${J}`}},5686:(Re,Y,h)=>{"use strict";h.d(Y,{Z:()=>U,c:()=>W});var V=h(1777);function U(...L){(0,V.OB)().getBool("IS_TEST")||(0,V.OB)().getBool("PROD")||console.warn(...L)}function W(...L){(0,V.OB)().getBool("IS_TEST")||(0,V.OB)().getBool("PROD")||console.log(...L)}},2519:(Re,Y,h)=>{"use strict";h.d(Y,{W:()=>k});var V=h(3738),U=h(1070),W=h(9608);const k=(0,h(6721).op)({abs_:function P($){const S=(0,W._1)($,"x","abs");return V.BV.runKernel("complex64"===S.dtype?U.yj2:U.SYM,{x:S})}})},5871:(Re,Y,h)=>{"use strict";h.d(Y,{K:()=>k});var V=h(3738),U=h(1070),W=h(9608);const k=(0,h(6721).op)({acos_:function P($){const b={x:(0,W._1)($,"x","acos")};return V.BV.runKernel(U.VGw,b)}})},3138:(Re,Y,h)=>{"use strict";h.d(Y,{_:()=>k});var V=h(3738),U=h(1070),W=h(9608);const k=(0,h(6721).op)({acosh_:function P($){const b={x:(0,W._1)($,"x","acosh")};return V.BV.runKernel(U.SpW,b)}})},6849:(Re,Y,h)=>{"use strict";h.d(Y,{I:()=>$});var V=h(3738),U=h(1070),W=h(7904),L=h(9608);const $=(0,h(6721).op)({add_:function k(S,b){let N=(0,L._1)(S,"a","add"),O=(0,L._1)(b,"b","add");return[N,O]=(0,W.makeTypesMatch)(N,O),V.BV.runKernel(U.mm_,{a:N,b:O})}})},4119:(Re,Y,h)=>{"use strict";h.d(Y,{$:()=>k});var V=h(3738),U=h(1070),W=h(9608);const k=(0,h(6721).op)({all_:function P($,S=null,b=!1){const O={x:(0,W._1)($,"x","all","bool")};return V.BV.runKernel(U.oT6,O,{axis:S,keepDims:b})}})},4833:(Re,Y,h)=>{"use strict";h.d(Y,{Y:()=>k});var V=h(3738),U=h(1070),W=h(9608);const k=(0,h(6721).op)({any_:function P($,S=null,b=!1){const O={x:(0,W._1)($,"x","any","bool")};return V.BV.runKernel(U.IKK,O,{axis:S,keepDims:b})}})},4982:(Re,Y,h)=>{"use strict";h.d(Y,{N:()=>k});var V=h(3738),U=h(1070),W=h(9608);const k=(0,h(6721).op)({argMax_:function P($,S=0){const N={x:(0,W._1)($,"x","argMax")};return V.BV.runKernel(U.sJF,N,{axis:S})}})},5518:(Re,Y,h)=>{"use strict";h.d(Y,{v:()=>k});var V=h(3738),U=h(1070),W=h(9608);const k=(0,h(6721).op)({argMin_:function P($,S=0){const N={x:(0,W._1)($,"x","argMin")};return V.BV.runKernel(U.aJk,N,{axis:S})}})},8401:(Re,Y,h)=>{"use strict";h.d(Y,{Z:()=>k});var V=h(3738),U=h(1070),W=h(9608);const k=(0,h(6721).op)({asin_:function P($){const b={x:(0,W._1)($,"x","asin")};return V.BV.runKernel(U.M2y,b)}})},4942:(Re,Y,h)=>{"use strict";h.d(Y,{V:()=>k});var V=h(3738),U=h(1070),W=h(9608);const k=(0,h(6721).op)({asinh_:function P($){const b={x:(0,W._1)($,"x","asinh")};return V.BV.runKernel(U.qw7,b)}})},4061:(Re,Y,h)=>{"use strict";h.d(Y,{z:()=>k});var V=h(3738),U=h(1070),W=h(9608);const k=(0,h(6721).op)({atan_:function P($){const b={x:(0,W._1)($,"x","atan")};return V.BV.runKernel(U.jMg,b)}})},1414:(Re,Y,h)=>{"use strict";h.d(Y,{f:()=>$});var V=h(3738),U=h(1070),W=h(7904),L=h(9608);const $=(0,h(6721).op)({atan2_:function k(S,b){let N=(0,L._1)(S,"a","atan2"),O=(0,L._1)(b,"b","atan2");return[N,O]=(0,W.makeTypesMatch)(N,O),V.BV.runKernel(U.QCc,{a:N,b:O})}})},2391:(Re,Y,h)=>{"use strict";h.d(Y,{C:()=>k});var V=h(3738),U=h(1070),W=h(9608);const k=(0,h(6721).op)({atanh_:function P($){const b={x:(0,W._1)($,"x","atanh")};return V.BV.runKernel(U.Oyi,b)}})},809:(Re,Y,h)=>{"use strict";h.d(Y,{w:()=>N});var V=h(3738),U=h(1070),W=h(9608),L=h(1396),P=h(9734),k=h(744),$=h(6721),S=h(9416);const N=(0,$.op)({avgPool_:function b(O,M,H,oe,J){const de=(0,W._1)(O,"x","avgPool","float32");L.hu(k.jT(H,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${H} and dilations '1'`);let be=de,we=!1;3===de.rank&&(we=!0,be=(0,S.X)(de,[1,de.shape[0],de.shape[1],de.shape[2]])),L.hu(4===be.rank,()=>`Error in avgPool: x must be rank 4 but got rank ${be.rank}.`),k.m("avgPool",oe,J);let ye=V.BV.runKernel(U.JhU,{x:be},{filterSize:M,strides:H,pad:oe,dimRoundingMode:J});return ye=(0,P.p)(ye,de.dtype),we?(0,S.X)(ye,[ye.shape[1],ye.shape[2],ye.shape[3]]):ye}})},7745:(Re,Y,h)=>{"use strict";h.d(Y,{LJ:()=>S,Q3:()=>$,Vh:()=>W,YB:()=>U,kz:()=>L,lB:()=>k,rv:()=>P,sY:()=>b});var V=h(1396);function U(N,O){for(let M=0;M<N.length;++M)if(N[N.length-M-1]!==O-1-M)return!1;return!0}function W(N,O,M){const H=N.length+O.length,oe=[];let J=0,de=0;for(let pe=0;pe<H;pe++)-1===M.indexOf(pe)?oe.push(N[J++]):oe.push(O[de++]);return oe}function L(N,O){const M=[],H=N.length;for(let J=0;J<H;J++)-1===O.indexOf(J)&&M.push(N[J]);return[M,O.map(J=>N[J])]}function P(N,O){return W(N,O.map(H=>1),O)}function k(N,O,M){V.hu(U(O,M),()=>`${N} supports only inner-most axes for now. Got axes ${O} and rank-${M} input.`)}function $(N,O){if(U(N,O))return null;const M=[];for(let H=0;H<O;++H)-1===N.indexOf(H)&&M.push(H);return N.forEach(H=>M.push(H)),M}function S(N){return N.map((O,M)=>[M,O]).sort((O,M)=>O[1]-M[1]).map(O=>O[0])}function b(N,O){const M=[];for(let H=O-N;H<O;++H)M.push(H);return M}},5347:(Re,Y,h)=>{"use strict";h.d(Y,{E:()=>$});var V=h(3738),U=h(1070),W=h(9608),L=h(1396);const $=(0,h(6721).op)({batchToSpaceND_:function k(S,b,N){const O=(0,W._1)(S,"x","batchToSpaceND"),M=b.reduce((J,de)=>J*de);return L.hu(O.rank>=1+b.length,()=>`input rank is ${O.rank} but should be > than blockShape.length ${b.length}`),L.hu(N.length===b.length,()=>`crops.length is ${N.length} but should be equal to blockShape.length  ${b.length}`),L.hu(O.shape[0]%M==0,()=>`input tensor batch is ${O.shape[0]} but is not divisible by the product of the elements of blockShape ${b.join(" * ")} === ${M}`),V.BV.runKernel(U.zws,{x:O},{blockShape:b,crops:N})}})},8451:(Re,Y,h)=>{"use strict";h.d(Y,{t:()=>b});var V=h(3738),U=h(1070),W=h(9608),L=h(1396),P=h(9416);function k(N){let O;return O=0===N.rank||1===N.rank?(0,P.X)(N,[1,1,1,N.size]):2===N.rank?(0,P.X)(N,[1,1,N.shape[0],N.shape[1]]):3===N.rank?(0,P.X)(N,[1,N.shape[0],N.shape[1],N.shape[2]]):N,O}const b=(0,h(6721).op)({batchNorm_:function S(N,O,M,H,oe,J){null==J&&(J=.001);const de=(0,W._1)(N,"x","batchNorm"),pe=(0,W._1)(O,"mean","batchNorm"),be=(0,W._1)(M,"variance","batchNorm");let we,Ce;null!=oe&&(we=(0,W._1)(oe,"scale","batchNorm")),null!=H&&(Ce=(0,W._1)(H,"offset","batchNorm")),L.hu(pe.rank===be.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),L.hu(null==Ce||pe.rank===Ce.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),L.hu(null==we||pe.rank===we.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const ye={x:k(de),scale:we,offset:Ce,mean:pe,variance:be},Q=V.BV.runKernel(U.sHE,ye,{varianceEpsilon:J});return(0,P.X)(Q,de.shape)}})},6434:(Re,Y,h)=>{"use strict";h.d(Y,{U:()=>S});var V=h(3738),U=h(1070),W=h(9608),L=h(4249),P=h(6721),k=h(9416);const S=(0,P.op)({broadcastTo_:function $(b,N){let O=(0,W._1)(b,"broadcastTo","x");const M=O.shape;if(N.some(be=>!(be>0)||be%1!=0))throw new Error(`broadcastTo(): Invalid broadcast shape [${N}].`);if(N.length<O.rank)throw new Error(`broadcastTo(): shape.length=${N.length} < input.rank=${O.rank}.`);if(N.length>O.rank){const be=O.shape.slice();for(;be.length<N.length;)be.unshift(1);O=(0,k.X)(O,be)}const H=O.shape,oe=Array.from(N);for(let be=N.length-1;be>=0;be--)if(H[be]===N[be])oe[be]=1;else if(1!==O.shape[be])throw new Error(`broadcastTo(): [${M}] cannot be broadcast to [${N}].`);return 0===oe.map((be,we)=>be>1?we:-1).filter(be=>be>=0).length?(0,L.d)(O):V.BV.runKernel(U.n9L,{x:O},{reps:oe})}})},258:(Re,Y,h)=>{"use strict";function V(L,P){const k=L.length,$=[];for(let S=0;S<k;S++){const b=k-1-S,N=L[b]||1;(P[P.length-1-S]||1)>1&&1===N&&$.unshift(b)}return $}function U(L,P){const k=[];for(let $=0;$<P.length;$++){const S=L[L.length-$-1],b=P.length-$-1,N=P[b];(null==S||1===S&&N>1)&&k.unshift(b)}return k}function W(L,P){const k=[],$=Math.max(L.length,P.length);for(let S=0;S<$;S++){let b=L[L.length-S-1];null==b&&(b=1);let N=P[P.length-S-1];if(null==N&&(N=1),1===b)k.unshift(N);else if(1===N)k.unshift(b);else{if(b!==N)throw Error(`Operands could not be broadcast together with shapes ${L} and ${P}.`);k.unshift(b)}}return k}h.r(Y),h.d(Y,{assertAndGetBroadcastShape:()=>W,getBroadcastDims:()=>V,getReductionAxes:()=>U})},8621:(Re,Y,h)=>{"use strict";h.d(Y,{f:()=>W});var V=h(708),U=h(1396);function W(L,P="float32",k){return P=P||"float32",U.Mu(L),new V.YD(L,P,k)}},9734:(Re,Y,h)=>{"use strict";h.d(Y,{p:()=>$});var V=h(3738),U=h(1070),W=h(9608),L=h(1396);const $=(0,h(6721).op)({cast_:function k(S,b){const N=(0,W._1)(S,"x","cast");if(!L.LP(b))throw new Error(`Failed to cast to unknown dtype ${b}`);if("string"===b&&"string"!==N.dtype||"string"!==b&&"string"===N.dtype)throw new Error("Only strings can be casted to strings");return V.BV.runKernel(U.RFZ,{x:N},{dtype:b})}})},5775:(Re,Y,h)=>{"use strict";h.d(Y,{m:()=>k});var V=h(3738),U=h(1070),W=h(9608);const k=(0,h(6721).op)({ceil_:function P($){const b={x:(0,W._1)($,"x","ceil","float32")};return V.BV.runKernel(U.gJX,b)}})},613:(Re,Y,h)=>{"use strict";h.d(Y,{i:()=>S});var V=h(3738),U=h(1070),W=h(9608),L=h(1396),P=h(8509);const S=(0,h(6721).op)({clipByValue_:function $(b,N,O){const M=(0,W._1)(b,"x","clipByValue");return L.hu(N<=O,()=>`Error in clip: min (${N}) must be less than or equal to max (${O}).`),N===O?(0,P.h)(M.shape,N,M.dtype):V.BV.runKernel(U.xnO,{x:M},{clipValueMin:N,clipValueMax:O})}})},4249:(Re,Y,h)=>{"use strict";h.d(Y,{d:()=>k});var V=h(3738),U=h(1070),W=h(9608);const k=(0,h(6721).op)({clone_:function P($){const b={x:(0,W._1)($,"x","clone","string_or_numeric")};return V.BV.runKernel(U.iJz,b)}})},9907:(Re,Y,h)=>{"use strict";h.d(Y,{P:()=>$});var V=h(3738),U=h(1070),W=h(9608),L=h(1396);const $=(0,h(6721).op)({complex_:function k(S,b){const N=(0,W._1)(S,"real","complex"),O=(0,W._1)(b,"imag","complex");return L.k5(N.shape,O.shape,`real and imag shapes, ${N.shape} and ${O.shape}, must match in call to tf.complex().`),V.BV.runKernel(U.Zz9,{real:N,imag:O})}})},5667:(Re,Y,h)=>{"use strict";h.d(Y,{z:()=>S});var V=h(3738),U=h(1070),W=h(9608),L=h(1396),P=h(4249);const S=(0,h(6721).op)({concat_:function $(b,N=0){(0,L.hu)(b.length>=1,()=>"Pass at least one tensor to concat");const O=(0,W.sI)(b,"tensors","concat","string_or_numeric");return"complex64"===O[0].dtype&&O.forEach(oe=>{if("complex64"!==oe.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${oe.dtype}. `)}),1===O.length?(0,P.d)(O[0]):V.BV.runKernel(U.Eh3,O,{axis:N})}})},1691:(Re,Y,h)=>{"use strict";h.d(Y,{P:()=>S});var V=h(9608),U=h(1396),W=h(7605),L=h(744),P=h(6721),k=h(9416);const S=(0,P.op)({conv1d_:function $(b,N,O,M,H="NWC",oe=1,J){const de=(0,V._1)(b,"x","conv1d"),pe=(0,V._1)(N,"filter","conv1d");let be=de,we=!1;2===de.rank&&(we=!0,be=(0,k.X)(de,[1,de.shape[0],de.shape[1]])),U.hu(3===be.rank,()=>`Error in conv1d: input must be rank 3, but got rank ${be.rank}.`),U.hu(3===pe.rank,()=>`Error in conv1d: filter must be rank 3, but got rank ${pe.rank}.`),L.m("conv1d",M,J),U.hu(be.shape[2]===pe.shape[1],()=>`Error in conv1d: depth of input (${be.shape[2]}) must match input depth for filter ${pe.shape[1]}.`),U.hu(L.jT(O,oe),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${O} and dilation '${oe}'`),U.hu("NWC"===H,()=>`Error in conv1d: got dataFormat of ${H} but only NWC is currently supported.`);const Ce=(0,k.X)(pe,[1,pe.shape[0],pe.shape[1],pe.shape[2]]),me=(0,k.X)(be,[be.shape[0],1,be.shape[1],be.shape[2]]),K=(0,W.T)(me,Ce,[1,O],M,"NHWC",[1,oe],J);return(0,k.X)(K,we?[K.shape[2],K.shape[3]]:[K.shape[0],K.shape[2],K.shape[3]])}})},7605:(Re,Y,h)=>{"use strict";h.d(Y,{T:()=>b});var V=h(3738),U=h(1070),W=h(9608),L=h(1396),P=h(744),k=h(6721),$=h(9416);const b=(0,k.op)({conv2d_:function S(N,O,M,H,oe="NHWC",J=[1,1],de){const pe=(0,W._1)(N,"x","conv2d","float32"),be=(0,W._1)(O,"filter","conv2d","float32");let we=pe,Ce=!1;3===pe.rank&&(Ce=!0,we=(0,$.X)(pe,[1,pe.shape[0],pe.shape[1],pe.shape[2]])),L.hu(4===we.rank,()=>`Error in conv2d: input must be rank 4, but got rank ${we.rank}.`),L.hu(4===be.rank,()=>`Error in conv2d: filter must be rank 4, but got rank ${be.rank}.`),P.m("conv2d",H,de);const me="NHWC"===oe?we.shape[3]:we.shape[1];L.hu(me===be.shape[2],()=>`Error in conv2d: depth of input (${me}) must match input depth for filter ${be.shape[2]}.`),L.hu(P.jT(M,J),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${M} and dilations '${J}'`);const Q=V.BV.runKernel(U.mhS,{x:we,filter:be},{strides:M,pad:H,dataFormat:oe,dilations:J,dimRoundingMode:de});return Ce?(0,$.X)(Q,[Q.shape[1],Q.shape[2],Q.shape[3]]):Q}})},1834:(Re,Y,h)=>{"use strict";h.d(Y,{p:()=>S});var V=h(3738),U=h(1070),W=h(1396),L=h(744),P=h(6721),k=h(9416);const S=(0,P.op)({conv2DBackpropFilter_:function $(b,N,O,M,H,oe="NHWC",J){let de=b;3===b.rank&&(de=(0,k.X)(b,[1,b.shape[0],b.shape[1],b.shape[2]]));let pe=N;3===pe.rank&&(pe=(0,k.X)(N,[1,N.shape[0],N.shape[1],N.shape[2]])),W.hu(4===de.rank,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${de.shape}.`),W.hu(4===pe.rank,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${pe.shape}.`),W.hu(4===O.length,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${O}.`);const be="NHWC"===oe?de.shape[3]:de.shape[1],we="NHWC"===oe?pe.shape[3]:pe.shape[1];return W.hu(be===O[2],()=>`Error in conv2dDerFilter: depth of input ${be}) must match input depth in filter (${O[2]}.`),W.hu(we===O[3],()=>`Error in conv2dDerFilter: depth of dy (${we}) must match output depth for filter (${O[3]}).`),L.m("conv2dDerFilter",H,J),V.BV.runKernel(U.wUP,{x:de,dy:pe},{strides:M,pad:H,dataFormat:oe,dimRoundingMode:J,filterShape:O})}})},5466:(Re,Y,h)=>{"use strict";h.d(Y,{_:()=>S});var V=h(3738),U=h(1070),W=h(1396),L=h(744),P=h(6721),k=h(9416);const S=(0,P.op)({conv2DBackpropInput_:function $(b,N,O,M,H,oe="NHWC",J){W.hu(b.length===N.rank,()=>`Length of inShape (${b.length}) and rank of dy (${N.rank}) must match`);let de=b,pe=N,be=!1;3===N.rank&&(be=!0,pe=(0,k.X)(N,[1,N.shape[0],N.shape[1],N.shape[2]]),de=[1,b[0],b[1],b[2]]),W.hu(4===de.length,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${de.length}.`),W.hu(4===pe.rank,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${pe.rank}`),W.hu(4===O.rank,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${O.rank}`);const we="NHWC"===oe?de[3]:de[1],Ce="NHWC"===oe?pe.shape[3]:pe.shape[1];W.hu(we===O.shape[2],()=>`Error in conv2dDerInput: depth of input (${we}) must match input depth for filter ${O.shape[2]}.`),W.hu(Ce===O.shape[3],()=>`Error in conv2dDerInput: depth of output (${Ce}) must match output depth for filter ${O.shape[3]}.`),L.m("conv2dDerInput",H,J);const xe=V.BV.runKernel(U.wm,{dy:pe,filter:O},{strides:M,pad:H,dataFormat:oe,dimRoundingMode:J,inputShape:de});return be?(0,k.X)(xe,[xe.shape[1],xe.shape[2],xe.shape[3]]):xe}})},9605:(Re,Y,h)=>{"use strict";h.d(Y,{b:()=>P});var V=h(9608),U=h(5466);const P=(0,h(6721).op)({conv2dTranspose_:function L(k,$,S,b,N,O){const M=(0,V._1)(k,"x","conv2dTranspose"),H=(0,V._1)($,"filter","conv2dTranspose");return(0,U._)(S,M,H,b,N,"NHWC",O)}})},2481:(Re,Y,h)=>{"use strict";h.d(Y,{_:()=>$});var V=h(3738),U=h(1070),W=h(1396),L=h(6721),P=h(9416);const $=(0,L.op)({conv3DBackpropInput_:function k(S,b,N,O,M){W.hu(S.length===b.rank,()=>`Length of inShape (${S.length}) and rank of dy (${b.rank}) must match`);let H=S,oe=b,J=!1;4===b.rank&&(J=!0,oe=(0,P.X)(b,[1,b.shape[0],b.shape[1],b.shape[2],b.shape[3]]),H=[1,S[0],S[1],S[2],S[3]]);const de=H[4],pe=oe.shape[4];W.hu(5===H.length,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${H.length}.`),W.hu(5===oe.rank,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${oe.rank}`),W.hu(5===N.rank,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${N.rank}`),W.hu(de===N.shape[3],()=>`Error in conv3dDerInput: depth of input (${de}) must match input depth for filter ${N.shape[3]}.`),W.hu(pe===N.shape[4],()=>`Error in conv3dDerInput: depth of output (${pe}) must match output depth for filter ${N.shape[4]}.`);const Ce=V.BV.runKernel(U.ik2,{dy:oe,filter:N},{pad:M,strides:O,inputShape:H});return J?(0,P.X)(Ce,[Ce.shape[1],Ce.shape[2],Ce.shape[3],Ce.shape[4]]):Ce}})},744:(Re,Y,h)=>{"use strict";h.d(Y,{I0:()=>de,Ix:()=>P,Rf:()=>U,Xw:()=>W,aO:()=>b,jT:()=>pe,jw:()=>k,m:()=>we,pl:()=>L,sl:()=>be});var V=h(1396);function U(Ce,me,ye,xe,Q="NHWC",K){return P(Ce,[...me,Ce[3]],ye,K,xe,null,null,be(Q))}function W(Ce,me,ye,xe,Q,K,w="channelsLast"){const[q,le]=N(me);let ae;if("channelsLast"===w)ae=[q,le,Ce[3],Ce[3]];else{if("channelsFirst"!==w)throw new Error(`Unknown dataFormat ${w}`);ae=[q,le,Ce[1],Ce[1]]}return P(Ce,ae,ye,xe,Q,K,!1,w)}function L(Ce,me,ye,xe,Q,K,w="NDHWC"){const[q,le,ae]=O(me);let E,Oe;if("NDHWC"===w)Oe="channelsLast",E=[q,le,ae,Ce[4],Ce[4]];else{if("NCDHW"!==w)throw new Error(`Unknown dataFormat ${w}`);Oe="channelsFirst",E=[q,le,ae,Ce[1],Ce[1]]}return k(Ce,E,ye,xe,Q,!1,Oe,K)}function P(Ce,me,ye,xe,Q,K,w=!1,q="channelsLast"){let[le,ae,E,Oe]=[-1,-1,-1,-1];if("channelsLast"===q)[le,ae,E,Oe]=Ce;else{if("channelsFirst"!==q)throw new Error(`Unknown dataFormat ${q}`);[le,Oe,ae,E]=Ce}const[ke,Pe,,Ne]=me,[He,mt]=N(ye),[_t,Rt]=N(xe),Dt=M(ke,_t),Xt=M(Pe,Rt),{padInfo:Et,outHeight:Vt,outWidth:Ht}=function H(Ce,me,ye,xe,Q,K,w,q,le){let ae,E,Oe;if("number"==typeof Ce){ae={top:Ce,bottom:Ce,left:Ce,right:Ce,type:0===Ce?"VALID":"NUMBER"};const Pe=function $(Ce,me,ye,xe,Q){null==xe&&(xe=b(Ce,me,ye));const w=Ce[1];return[J((Ce[0]-me+2*xe)/ye+1,Q),J((w-me+2*xe)/ye+1,Q)]}([me,ye],K,xe,Ce,q);E=Pe[0],Oe=Pe[1]}else if("same"===Ce){E=Math.ceil(me/xe),Oe=Math.ceil(ye/Q);const ke=Math.max(0,(E-1)*xe+K-me),Pe=Math.max(0,(Oe-1)*Q+w-ye),Ne=Math.floor(ke/2),He=ke-Ne,mt=Math.floor(Pe/2);ae={top:Ne,bottom:He,left:mt,right:Pe-mt,type:"SAME"}}else if("valid"===Ce)ae={top:0,bottom:0,left:0,right:0,type:"VALID"},E=Math.ceil((me-K+1)/xe),Oe=Math.ceil((ye-w+1)/Q);else{if("object"!=typeof Ce)throw Error(`Unknown padding parameter: ${Ce}`);{const ke="channelsLast"===le?Ce[1][0]:Ce[2][0],Pe="channelsLast"===le?Ce[1][1]:Ce[2][1],Ne="channelsLast"===le?Ce[2][0]:Ce[3][0],He="channelsLast"===le?Ce[2][1]:Ce[3][1];ae={top:ke,bottom:Pe,left:Ne,right:He,type:0===ke&&0===Pe&&0===Ne&&0===He?"VALID":"EXPLICIT"},E=J((me-K+ke+Pe)/xe+1,q),Oe=J((ye-w+Ne+He)/Q+1,q)}}return{padInfo:ae,outHeight:E,outWidth:Oe}}(Q,ae,E,He,mt,Dt,Xt,K,q),ss=w?Ne*Oe:Ne;let St;return"channelsFirst"===q?St=[le,ss,Vt,Ht]:"channelsLast"===q&&(St=[le,Vt,Ht,ss]),{batchSize:le,dataFormat:q,inHeight:ae,inWidth:E,inChannels:Oe,outHeight:Vt,outWidth:Ht,outChannels:ss,padInfo:Et,strideHeight:He,strideWidth:mt,filterHeight:ke,filterWidth:Pe,effectiveFilterHeight:Dt,effectiveFilterWidth:Xt,dilationHeight:_t,dilationWidth:Rt,inShape:Ce,outShape:St,filterShape:me}}function k(Ce,me,ye,xe,Q,K=!1,w="channelsLast",q){let[le,ae,E,Oe,ke]=[-1,-1,-1,-1,-1];if("channelsLast"===w)[le,ae,E,Oe,ke]=Ce;else{if("channelsFirst"!==w)throw new Error(`Unknown dataFormat ${w}`);[le,ke,ae,E,Oe]=Ce}const[Pe,Ne,He,,mt]=me,[_t,Rt,Dt]=O(ye),[Xt,Et,Vt]=O(xe),Ht=M(Pe,Xt),ss=M(Ne,Et),St=M(He,Vt),{padInfo:_s,outDepth:$s,outHeight:Qs,outWidth:Ie}=function oe(Ce,me,ye,xe,Q,K,w,q,le,ae,E){let Oe,ke,Pe,Ne;if("number"==typeof Ce){Oe={top:Ce,bottom:Ce,left:Ce,right:Ce,front:Ce,back:Ce,type:0===Ce?"VALID":"NUMBER"};const mt=function S(Ce,me,ye,xe,Q,K){null==Q&&(Q=b(Ce,me,xe));const q=Ce[1],le=Ce[2];return[J((Ce[0]-me+2*Q)/xe+1,K),J((q-me+2*Q)/xe+1,K),J((le-me+2*Q)/xe+1,K),ye]}([me,ye,xe,1],q,1,Q,Ce,E);ke=mt[0],Pe=mt[1],Ne=mt[2]}else if("same"===Ce){ke=Math.ceil(me/Q),Pe=Math.ceil(ye/K),Ne=Math.ceil(xe/w);const He=(ke-1)*Q+q-me,mt=(Pe-1)*K+le-ye,_t=(Ne-1)*w+ae-xe,Rt=Math.floor(He/2),Dt=He-Rt,Xt=Math.floor(mt/2),Et=mt-Xt,Vt=Math.floor(_t/2);Oe={top:Xt,bottom:Et,left:Vt,right:_t-Vt,front:Rt,back:Dt,type:"SAME"}}else{if("valid"!==Ce)throw Error(`Unknown padding parameter: ${Ce}`);Oe={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},ke=Math.ceil((me-q+1)/Q),Pe=Math.ceil((ye-le+1)/K),Ne=Math.ceil((xe-ae+1)/w)}return{padInfo:Oe,outDepth:ke,outHeight:Pe,outWidth:Ne}}(Q,ae,E,Oe,_t,Rt,Dt,Ht,ss,St,q),Ke=K?mt*ke:mt;let ot;return"channelsFirst"===w?ot=[le,Ke,$s,Qs,Ie]:"channelsLast"===w&&(ot=[le,$s,Qs,Ie,Ke]),{batchSize:le,dataFormat:w,inDepth:ae,inHeight:E,inWidth:Oe,inChannels:ke,outDepth:$s,outHeight:Qs,outWidth:Ie,outChannels:Ke,padInfo:_s,strideDepth:_t,strideHeight:Rt,strideWidth:Dt,filterDepth:Pe,filterHeight:Ne,filterWidth:He,effectiveFilterDepth:Ht,effectiveFilterHeight:ss,effectiveFilterWidth:St,dilationDepth:Xt,dilationHeight:Et,dilationWidth:Vt,inShape:Ce,outShape:ot,filterShape:me}}function b(Ce,me,ye,xe=1){const Q=M(me,xe);return Math.floor((Ce[0]*(ye-1)-ye+Q)/2)}function N(Ce){return"number"==typeof Ce?[Ce,Ce,Ce]:2===Ce.length?[Ce[0],Ce[1],1]:Ce}function O(Ce){return"number"==typeof Ce?[Ce,Ce,Ce]:Ce}function M(Ce,me){return me<=1?Ce:Ce+(Ce-1)*(me-1)}function J(Ce,me){if(!me)return Math.trunc(Ce);switch(me){case"round":return Math.round(Ce);case"ceil":return Math.ceil(Ce);case"floor":return Math.floor(Ce);default:throw new Error(`Unknown roundingMode ${me}`)}}function de(Ce){const[me,ye,xe]=N(Ce);return 1===me&&1===ye&&1===xe}function pe(Ce,me){return de(Ce)||de(me)}function be(Ce){if("NHWC"===Ce)return"channelsLast";if("NCHW"===Ce)return"channelsFirst";throw new Error(`Unknown dataFormat ${Ce}`)}function we(Ce,me,ye){if(null!=ye){if("string"==typeof me)throw Error(`Error in ${Ce}: pad must be an integer when using dimRoundingMode ${ye} but got pad ${me}.`);if("number"==typeof me)V.hu(V.GN(me),()=>`Error in ${Ce}: pad must be an integer when using dimRoundingMode ${ye} but got pad ${me}.`);else{if("object"!=typeof me)throw Error(`Error in ${Ce}: Unknown padding parameter: ${me}`);me.forEach(xe=>{xe.forEach(Q=>{V.hu(V.GN(Q),()=>`Error in ${Ce}: pad must be an integer when using dimRoundingMode ${ye} but got pad ${Q}.`)})})}}}},4254:(Re,Y,h)=>{"use strict";h.d(Y,{m:()=>k});var V=h(3738),U=h(1070),W=h(9608);const k=(0,h(6721).op)({cos_:function P($){const b={x:(0,W._1)($,"x","cos","float32")};return V.BV.runKernel(U.mc4,b)}})},6357:(Re,Y,h)=>{"use strict";h.d(Y,{f:()=>k});var V=h(3738),U=h(1070),W=h(9608);const k=(0,h(6721).op)({cosh_:function P($){const b={x:(0,W._1)($,"x","cosh","float32")};return V.BV.runKernel(U.TR1,b)}})},8178:(Re,Y,h)=>{"use strict";h.d(Y,{$:()=>k});var V=h(3738),U=h(1070),W=h(9608);const k=(0,h(6721).op)({cumprod_:function P($,S=0,b=!1,N=!1){const M={x:(0,W._1)($,"x","cumprod")};return V.BV.runKernel(U.Byc,M,{axis:S,exclusive:b,reverse:N})}})},7089:(Re,Y,h)=>{"use strict";h.d(Y,{z:()=>k});var V=h(3738),U=h(1070),W=h(9608);const k=(0,h(6721).op)({cumsum_:function P($,S=0,b=!1,N=!1){const M={x:(0,W._1)($,"x","cumsum")};return V.BV.runKernel(U.iHb,M,{axis:S,exclusive:b,reverse:N})}})},2792:(Re,Y,h)=>{"use strict";h.d(Y,{n:()=>$});var V=h(3738),U=h(1070),W=h(9608),L=h(1396);const $=(0,h(6721).op)({depthToSpace_:function k(S,b,N="NHWC"){const O=(0,W._1)(S,"x","depthToSpace","float32"),M="NHWC"===N?O.shape[1]:O.shape[2],H="NHWC"===N?O.shape[2]:O.shape[3],oe="NHWC"===N?O.shape[3]:O.shape[1];return L.hu(b>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${b}`),L.hu(M*b>=0,()=>`Negative dimension size caused by overflow when multiplying\n    ${M} and ${b}  for depthToSpace with input shape\n    ${O.shape}`),L.hu(H*b>=0,()=>`Negative dimension size caused by overflow when multiplying\n    ${H} and ${b} for depthToSpace with input shape\n        ${O.shape}`),L.hu(oe%(b*b)==0,()=>`Dimension size must be evenly divisible by ${b*b} but is ${oe} for depthToSpace with input shape ${O.shape}`),V.BV.runKernel(U.T0n,{x:O},{blockSize:b,dataFormat:N})}})},6818:(Re,Y,h)=>{"use strict";h.d(Y,{B:()=>b});var V=h(3738),U=h(1070),W=h(9608),L=h(1396),P=h(744),k=h(6721),$=h(9416);const b=(0,k.op)({depthwiseConv2d_:function S(N,O,M,H,oe="NHWC",J=[1,1],de){const pe=(0,W._1)(N,"x","depthwiseConv2d","float32"),be=(0,W._1)(O,"filter","depthwiseConv2d","float32");let we=pe,Ce=!1;3===pe.rank&&(Ce=!0,we=(0,$.X)(pe,[1,pe.shape[0],pe.shape[1],pe.shape[2]])),L.hu(4===we.rank,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${we.rank}.`),L.hu(4===be.rank,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${be.rank}.`);const me="NHWC"===oe?we.shape[3]:we.shape[1];L.hu(me===be.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${me}) must match the inChannels dimension in filter ${be.shape[2]}.`),P.m("depthwiseConv2d",H,de);const Q=V.BV.runKernel(U.cie,{x:we,filter:be},{strides:M,pad:H,dataFormat:oe,dilations:J,dimRoundingMode:de});return Ce?(0,$.X)(Q,[Q.shape[1],Q.shape[2],Q.shape[3]]):Q}})},1260:(Re,Y,h)=>{"use strict";h.d(Y,{z:()=>k});var V=h(3738),U=h(1070),W=h(6721),L=h(9416);const k=(0,W.op)({depthwiseConv2dNativeBackpropFilter_:function P($,S,b,N,O,M=[1,1],H){let oe=$;3===$.rank&&(oe=(0,L.X)($,[1,$.shape[0],$.shape[1],$.shape[2]]));let J=S;return 3===J.rank&&(J=(0,L.X)(S,[1,S.shape[0],S.shape[1],S.shape[2]])),V.BV.runKernel(U.sL$,{x:oe,dy:J},{strides:N,pad:O,dimRoundingMode:H,dilations:M,filterShape:b})}})},7021:(Re,Y,h)=>{"use strict";h.d(Y,{v:()=>k});var V=h(3738),U=h(1070),W=h(6721),L=h(9416);const k=(0,W.op)({depthwiseConv2dNativeBackpropInput_:function P($,S,b,N,O,M=[1,1],H){let oe=S,J=!1;3===S.rank&&(J=!0,oe=(0,L.X)(S,[1,S.shape[0],S.shape[1],S.shape[2]]));const be=V.BV.runKernel(U.y7R,{dy:oe,filter:b},{strides:N,pad:O,dimRoundingMode:H,dilations:M,inputShape:$});return J?(0,L.X)(be,[be.shape[1],be.shape[2],be.shape[3]]):be}})},5256:(Re,Y,h)=>{"use strict";h.d(Y,{W:()=>S});var V=h(3738),U=h(1070),W=h(9608),L=h(1396),P=h(6721),k=h(9416);const S=(0,P.op)({dilation2d_:function $(b,N,O,M,H=[1,1],oe="NHWC"){const J=(0,W._1)(b,"x","dilation2d"),de=(0,W._1)(N,"filter","dilation2d");L.hu(3===J.rank||4===J.rank,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${J.rank}.`),L.hu(3===de.rank,()=>`Error in dilation2d: filter must be rank 3, but got rank ${de.rank}.`),L.hu("NHWC"===oe,()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${oe}`);let pe=J,be=!1;3===J.rank&&(pe=(0,k.X)(J,[1,J.shape[0],J.shape[1],J.shape[2]]),be=!0);const me=V.BV.runKernel(U.p4S,{x:pe,filter:de},{strides:O,pad:M,dilations:H});return be?(0,k.X)(me,[me.shape[1],me.shape[2],me.shape[3]]):me}})},6635:(Re,Y,h)=>{"use strict";h.d(Y,{h:()=>S});var V=h(3738),U=h(1070),W=h(7904),L=h(9608),P=h(3273);const S=(0,h(6721).op)({div_:function $(b,N){let O=(0,L._1)(b,"a","div"),M=(0,L._1)(N,"b","div");return[O,M]=(0,W.makeTypesMatch)(O,M),"int32"===O.dtype&&"int32"===M.dtype?(0,P.q)(O,M):V.BV.runKernel(U.oHH,{a:O,b:M},{})}})},7265:(Re,Y,h)=>{"use strict";h.d(Y,{N:()=>b});var V=h(7904),U=h(9608),W=h(6635),L=h(8877),P=h(6721),k=h(3062),$=h(37);const b=(0,P.op)({divNoNan_:function S(N,O){let M=(0,U._1)(N,"a","div"),H=(0,U._1)(O,"b","div");[M,H]=(0,V.makeTypesMatch)(M,H);const oe=(0,W.h)(M,H),J=(0,$.P)(oe),de=(0,L.D)(H,J);return(0,k.a)(de,J,oe)}})},7576:(Re,Y,h)=>{"use strict";h.d(Y,{A:()=>$});var V=h(9608),U=h(1396),W=h(341),L=h(6721),P=h(9416);const $=(0,L.op)({dot_:function k(S,b){const N=(0,V._1)(S,"t1","dot"),O=(0,V._1)(b,"t2","dot");U.hu(!(1!==N.rank&&2!==N.rank||1!==O.rank&&2!==O.rank),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${N.rank} and ${O.rank}.`);const M=1===N.rank?N.size:N.shape[1],H=1===O.rank?O.size:O.shape[0];if(U.hu(M===H,()=>`Error in dot: inner dimensions of inputs must match, but got ${M} and ${H}.`),1===N.rank&&1===O.rank){const oe=(0,P.X)(N,[1,-1]),J=(0,P.X)(O,[-1,1]),de=(0,W.O)(oe,J);return(0,P.X)(de,[])}if(1===N.rank&&2===O.rank){const oe=(0,P.X)(N,[1,-1]),J=(0,P.X)(O,[O.shape[0],O.shape[1]]),de=(0,W.O)(oe,J);return(0,P.X)(de,[de.size])}if(2===N.rank&&1===O.rank){const oe=(0,P.X)(O,[-1,1]),J=(0,W.O)(N,oe);return(0,P.X)(J,[J.size])}{const oe=(0,P.X)(O,[O.shape[0],O.shape[1]]);return(0,W.O)(N,oe)}}})},4609:(Re,Y,h)=>{"use strict";h.d(Y,{p:()=>k});var V=h(3738),U=h(1070),W=h(9608);const k=(0,h(6721).op)({elu_:function P($){const b={x:(0,W._1)($,"x","elu","float32")};return V.BV.runKernel(U.SX0,b)}})},8877:(Re,Y,h)=>{"use strict";h.d(Y,{D:()=>S});var V=h(3738),U=h(1070),W=h(7904),L=h(9608),P=h(258);const S=(0,h(6721).op)({equal_:function $(b,N){let O=(0,L._1)(b,"a","equal","string_or_numeric"),M=(0,L._1)(N,"b","equal","string_or_numeric");return[O,M]=(0,W.makeTypesMatch)(O,M),(0,P.assertAndGetBroadcastShape)(O.shape,M.shape),V.BV.runKernel(U.hdR,{a:O,b:M})}})},9156:(Re,Y,h)=>{"use strict";h.d(Y,{q:()=>S});var V=h(3738),U=h(1070),W=h(9608),L=h(1396),P=h(9734);const S=(0,h(6721).op)({erf_:function $(b){let N=(0,W._1)(b,"x","erf");return L.hu("int32"===N.dtype||"float32"===N.dtype,()=>"Input dtype must be `int32` or `float32`."),"int32"===N.dtype&&(N=(0,P.p)(N,"float32")),V.BV.runKernel(U.Omj,{x:N})}})},6624:(Re,Y,h)=>{"use strict";h.d(Y,{d:()=>L});var V=h(4780);const L=(0,h(6721).op)({euclideanNorm_:function W(P,k=null,$=!1){return(0,V.K)(P,"euclidean",k,$)}})},9324:(Re,Y,h)=>{"use strict";h.d(Y,{Q:()=>k});var V=h(3738),U=h(1070),W=h(9608);const k=(0,h(6721).op)({exp_:function P($){const b={x:(0,W._1)($,"x","exp")};return V.BV.runKernel(U.NEP,b)}})},611:(Re,Y,h)=>{"use strict";h.d(Y,{d:()=>$});var V=h(3738),U=h(1070),W=h(9608),L=h(1396);const $=(0,h(6721).op)({expandDims_:function k(S,b=0){const N=(0,W._1)(S,"x","expandDims","string_or_numeric");return L.hu(b<=N.rank,()=>"Axis must be <= rank of the tensor"),V.BV.runKernel(U.YFo,{input:N},{dim:b})}})},8907:(Re,Y,h)=>{"use strict";h.d(Y,{t:()=>k});var V=h(3738),U=h(1070),W=h(9608);const k=(0,h(6721).op)({expm1_:function P($){const b={x:(0,W._1)($,"x","expm1")};return V.BV.runKernel(U.Y0y,b)}})},8509:(Re,Y,h)=>{"use strict";h.d(Y,{h:()=>W});var V=h(3738),U=h(1070);function W(L,P,k){return V.BV.runKernel(U.deh,{},{shape:L,value:P,dtype:k})}},6716:(Re,Y,h)=>{"use strict";h.d(Y,{G:()=>k});var V=h(3738),U=h(1070),W=h(9608);const k=(0,h(6721).op)({floor_:function P($){const b={x:(0,W._1)($,"x","floor","float32")};return V.BV.runKernel(U.OR,b)}})},3273:(Re,Y,h)=>{"use strict";h.d(Y,{q:()=>$});var V=h(3738),U=h(1070),W=h(7904),L=h(9608);const $=(0,h(6721).op)({floorDiv_:function k(S,b){let N=(0,L._1)(S,"a","floorDiv"),O=(0,L._1)(b,"b","floorDiv");return[N,O]=(0,W.makeTypesMatch)(N,O),V.BV.runKernel(U.jeX,{a:N,b:O})}})},8868:(Re,Y,h)=>{"use strict";h.d(Y,{Fr:()=>M,QH:()=>oe,pf:()=>H,uy:()=>J});var V=h(258),U=h(4609),W=h(6151),L=h(8788),P=h(1426),k=h(4563),$=h(5049),S=h(9416),b=h(6713),N=h(6166),O=h(5214);function M(de,pe,be){if(null==be||"linear"===be)return de;if("relu"===be)return(0,L.d)(de,(0,N.N)(pe));throw new Error(`Cannot compute gradient for fused activation ${be}.`)}function H(de,pe){let be=pe;const we=V.getReductionAxes(de.shape,pe.shape);return we.length>0&&(be=(0,O.S)(be,we)),(0,S.X)(be,de.shape)}function oe(de,pe,be,we){if("linear"===pe)return de;if("relu"===pe)return(0,k.U)(de);if("elu"===pe)return(0,U.p)(de);if("relu6"===pe)return(0,$.b)(de);if("prelu"===pe)return(0,P.A)(de,be);if("leakyrelu"===pe)return(0,W.h)(de,we);if("sigmoid"===pe)return(0,b.X)(de);throw new Error(`Unknown fused activation ${pe}.`)}const J=(de,pe)=>!(de>0)||"linear"===pe},9788:(Re,Y,h)=>{"use strict";h.d(Y,{I:()=>k});var V=h(3738),U=h(1070),W=h(9608);const k=(0,h(6721).op)({gather_:function P($,S,b=0,N=0){const O=(0,W._1)($,"x","gather"),M=(0,W._1)(S,"indices","gather","int32");return V.BV.runKernel(U.qi_,{x:O,indices:M},{axis:b,batchDims:N})}})},2860:(Re,Y,h)=>{"use strict";h.d(Y,{p:()=>S});var V=h(3738),U=h(1070),W=h(7904),L=h(9608),P=h(258);const S=(0,h(6721).op)({greater_:function $(b,N){let O=(0,L._1)(b,"a","greater","string_or_numeric"),M=(0,L._1)(N,"b","greater","string_or_numeric");return[O,M]=(0,W.makeTypesMatch)(O,M),(0,P.assertAndGetBroadcastShape)(O.shape,M.shape),V.BV.runKernel(U.iZT,{a:O,b:M})}})},5996:(Re,Y,h)=>{"use strict";h.d(Y,{b:()=>S});var V=h(3738),U=h(1070),W=h(7904),L=h(9608),P=h(258);const S=(0,h(6721).op)({greaterEqual_:function $(b,N){let O=(0,L._1)(b,"a","greaterEqual","string_or_numeric"),M=(0,L._1)(N,"b","greaterEqual","string_or_numeric");return[O,M]=(0,W.makeTypesMatch)(O,M),(0,P.assertAndGetBroadcastShape)(O.shape,M.shape),V.BV.runKernel(U.Acj,{a:O,b:M})}})},5294:(Re,Y,h)=>{"use strict";h.d(Y,{a:()=>k});var V=h(3738),U=h(1070),W=h(9608);const k=(0,h(6721).op)({imag_:function P($){const b={input:(0,W._1)($,"input","imag")};return V.BV.runKernel(U.J_u,b)}})},4052:(Re,Y,h)=>{"use strict";h.d(Y,{I:()=>S});var V=h(3738),U=h(1070),W=h(9608),L=h(1396),P=h(6721),k=h(9416);const S=(0,P.op)({resizeBilinear_:function $(b,N,O=!1,M=!1){const H=(0,W._1)(b,"images","resizeBilinear");L.hu(3===H.rank||4===H.rank,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${H.rank}.`),L.hu(2===N.length,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${N}.`),L.hu(!1===M||!1===O,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let oe=H,J=!1;3===H.rank&&(J=!0,oe=(0,k.X)(H,[1,H.shape[0],H.shape[1],H.shape[2]]));const[]=N,be=V.BV.runKernel(U._Yw,{images:oe},{alignCorners:O,halfPixelCenters:M,size:N});return J?(0,k.X)(be,[be.shape[1],be.shape[2],be.shape[3]]):be}})},5438:(Re,Y,h)=>{"use strict";h.d(Y,{j:()=>S});var V=h(3738),U=h(1070),W=h(9608),L=h(1396),P=h(6721),k=h(9416);const S=(0,P.op)({resizeNearestNeighbor_:function $(b,N,O=!1,M=!1){const H=(0,W._1)(b,"images","resizeNearestNeighbor");L.hu(3===H.rank||4===H.rank,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${H.rank}.`),L.hu(2===N.length,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${N}.`),L.hu("float32"===H.dtype||"int32"===H.dtype,()=>"`images` must have `int32` or `float32` as dtype"),L.hu(!1===M||!1===O,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let oe=H,J=!1;3===H.rank&&(J=!0,oe=(0,k.X)(H,[1,H.shape[0],H.shape[1],H.shape[2]]));const[]=N,be=V.BV.runKernel(U.dpD,{images:oe},{alignCorners:O,halfPixelCenters:M,size:N});return J?(0,k.X)(be,[be.shape[1],be.shape[2],be.shape[3]]):be}})},7502:(Re,Y,h)=>{"use strict";h.d(Y,{x:()=>k});var V=h(3738),U=h(1070),W=h(9608);const k=(0,h(6721).op)({isFinite_:function P($){const b={x:(0,W._1)($,"x","isFinite")};return V.BV.runKernel(U.avt,b)}})},5251:(Re,Y,h)=>{"use strict";h.d(Y,{U:()=>k});var V=h(3738),U=h(1070),W=h(9608);const k=(0,h(6721).op)({isInf_:function P($){const b={x:(0,W._1)($,"x","isInf")};return V.BV.runKernel(U.iWB,b)}})},663:(Re,Y,h)=>{"use strict";h.d(Y,{i:()=>k});var V=h(3738),U=h(1070),W=h(9608);const k=(0,h(6721).op)({isNaN_:function P($){const b={x:(0,W._1)($,"x","isNaN")};return V.BV.runKernel(U.r7n,b)}})},6151:(Re,Y,h)=>{"use strict";h.d(Y,{h:()=>k});var V=h(3738),U=h(1070),W=h(9608);const k=(0,h(6721).op)({leakyRelu_:function P($,S=.2){const N={x:(0,W._1)($,"x","leakyRelu")};return V.BV.runKernel(U.J$2,N,{alpha:S})}})},4688:(Re,Y,h)=>{"use strict";h.d(Y,{d:()=>S});var V=h(3738),U=h(1070),W=h(7904),L=h(9608),P=h(258);const S=(0,h(6721).op)({less_:function $(b,N){let O=(0,L._1)(b,"a","less","string_or_numeric"),M=(0,L._1)(N,"b","less","string_or_numeric");return[O,M]=(0,W.makeTypesMatch)(O,M),(0,P.assertAndGetBroadcastShape)(O.shape,M.shape),V.BV.runKernel(U.vtC,{a:O,b:M})}})},9220:(Re,Y,h)=>{"use strict";h.d(Y,{z:()=>S});var V=h(3738),U=h(1070),W=h(7904),L=h(9608),P=h(258);const S=(0,h(6721).op)({lessEqual_:function $(b,N){let O=(0,L._1)(b,"a","lessEqual","string_or_numeric"),M=(0,L._1)(N,"b","lessEqual","string_or_numeric");return[O,M]=(0,W.makeTypesMatch)(O,M),(0,P.assertAndGetBroadcastShape)(O.shape,M.shape),V.BV.runKernel(U.CAk,{a:O,b:M})}})},9727:(Re,Y,h)=>{"use strict";h.d(Y,{G:()=>S});var V=h(3738),U=h(1070),W=h(9608),L=h(1396),P=h(6721),k=h(9416);const S=(0,P.op)({localResponseNormalization_:function $(b,N=5,O=1,M=1,H=.5){const oe=(0,W._1)(b,"x","localResponseNormalization");L.hu(4===oe.rank||3===oe.rank,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${oe.rank}.`),L.hu(L.GN(N),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${N}.`);let J=oe,de=!1;3===oe.rank&&(de=!0,J=(0,k.X)(oe,[1,oe.shape[0],oe.shape[1],oe.shape[2]]));const we=V.BV.runKernel(U.eZ0,{x:J},{depthRadius:N,bias:O,alpha:M,beta:H});return de?(0,k.X)(we,[we.shape[1],we.shape[2],we.shape[3]]):we}})},7404:(Re,Y,h)=>{"use strict";h.d(Y,{c:()=>k});var V=h(3738),U=h(1070),W=h(9608);const k=(0,h(6721).op)({log_:function P($){const b={x:(0,W._1)($,"x","log","float32")};return V.BV.runKernel(U.ZbH,b)}})},4610:(Re,Y,h)=>{"use strict";h.d(Y,{K:()=>k});var V=h(3738),U=h(1070),W=h(9608);const k=(0,h(6721).op)({log1p_:function P($){const b={x:(0,W._1)($,"x","log1p")};return V.BV.runKernel(U.kU,b)}})},7122:(Re,Y,h)=>{"use strict";h.d(Y,{e:()=>b});var V=h(1335),U=h(9608),W=h(8788),L=h(3304),P=h(6721),k=h(6713),$=h(1808);const b=(0,P.op)({logSigmoid_:function S(N){const O=(0,U._1)(N,"x","logSigmoid");return(0,V.cb)(H=>({value:(0,L.W)((0,$.W)((0,L.W)(H))),gradFunc:de=>(0,W.d)(de,(0,k.X)((0,L.W)(H)))}))(O)}})},6847:(Re,Y,h)=>{"use strict";h.d(Y,{C:()=>M});var V=h(1335),U=h(9608),W=h(9734),L=h(9324),P=h(7404),k=h(888),$=h(8788),S=h(6721),b=h(8578),N=h(5214);const M=(0,S.op)({logSoftmax_:function O(H,oe=-1){const J=(0,U._1)(H,"logits","logSoftmax");if(-1===oe&&(oe=J.rank-1),oe!==J.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${J.rank} and axis was ${oe}`);return(0,V.cb)((pe,be)=>{const Ce=(0,k.F)(pe,oe,!0),me=(0,b.l)(pe,Ce),ye=(0,b.l)((0,W.p)(me,"float32"),(0,P.c)((0,N.S)((0,L.Q)(me),oe,!0)));return be([ye]),{value:ye,gradFunc:(Q,K)=>{const[w]=K,le=(0,L.Q)(w);return(0,b.l)(Q,(0,$.d)((0,N.S)(Q,oe,!0),le))}}})(J)}})},6506:(Re,Y,h)=>{"use strict";h.d(Y,{l:()=>H});var V=h(9608),U=h(1396),W=h(6849),L=h(7745),P=h(9324),k=h(7404),$=h(888),S=h(6721),b=h(9416),N=h(8578),O=h(5214);const H=(0,S.op)({logSumExp_:function M(oe,J=null,de=!1){const pe=(0,V._1)(oe,"x","logSumExp"),be=(0,U.EC)(J,pe.shape),we=(0,$.F)(pe,be,!0),Ce=(0,N.l)(pe,we),me=(0,P.Q)(Ce),ye=(0,O.S)(me,be),xe=(0,k.c)(ye),Q=(0,W.I)((0,b.X)(we,xe.shape),xe);if(de){const K=(0,L.rv)(Q.shape,be);return(0,b.X)(Q,K)}return Q}})},9901:(Re,Y,h)=>{"use strict";h.d(Y,{H:()=>$});var V=h(3738),U=h(1070),W=h(9608),L=h(258);const $=(0,h(6721).op)({logicalAnd_:function k(S,b){const N=(0,W._1)(S,"a","logicalAnd","bool"),O=(0,W._1)(b,"b","logicalAnd","bool");return(0,L.assertAndGetBroadcastShape)(N.shape,O.shape),V.BV.runKernel(U.PYm,{a:N,b:O})}})},3779:(Re,Y,h)=>{"use strict";h.d(Y,{h:()=>k});var V=h(3738),U=h(1070),W=h(9608);const k=(0,h(6721).op)({logicalNot_:function P($){const b={x:(0,W._1)($,"x","logicalNot","bool")};return V.BV.runKernel(U.VfG,b)}})},7423:(Re,Y,h)=>{"use strict";h.d(Y,{K:()=>$});var V=h(3738),U=h(1070),W=h(9608),L=h(258);const $=(0,h(6721).op)({logicalOr_:function k(S,b){const N=(0,W._1)(S,"a","logicalOr","bool"),O=(0,W._1)(b,"b","logicalOr","bool");return(0,L.assertAndGetBroadcastShape)(N.shape,O.shape),V.BV.runKernel(U.MZg,{a:N,b:O})}})},546:(Re,Y,h)=>{"use strict";h.d(Y,{e:()=>S});var V=h(9608),U=h(258),W=h(9901),L=h(3779),P=h(7423);const S=(0,h(6721).op)({logicalXor_:function $(b,N){const O=(0,V._1)(b,"a","logicalXor","bool"),M=(0,V._1)(N,"b","logicalXor","bool");return(0,U.assertAndGetBroadcastShape)(O.shape,M.shape),(0,W.H)((0,P.K)(b,N),(0,L.h)((0,W.H)(b,N)))}})},4761:(Re,Y,h)=>{"use strict";h.d(Y,{I:()=>V});var V=(()=>{return(U=V||(V={}))[U.NONE=0]="NONE",U[U.MEAN=1]="MEAN",U[U.SUM=2]="SUM",U[U.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS",V;var U})()},341:(Re,Y,h)=>{"use strict";h.d(Y,{O:()=>$});var V=h(3738),U=h(1070),W=h(7904),L=h(9608);const $=(0,h(6721).op)({matMul_:function k(S,b,N=!1,O=!1){let M=(0,L._1)(S,"a","matMul"),H=(0,L._1)(b,"b","matMul");return[M,H]=(0,W.makeTypesMatch)(M,H),V.BV.runKernel(U.XLW,{a:M,b:H},{transposeA:N,transposeB:O})}})},888:(Re,Y,h)=>{"use strict";h.d(Y,{F:()=>k});var V=h(3738),U=h(1070),W=h(9608);const k=(0,h(6721).op)({max_:function P($,S=null,b=!1){const O={x:(0,W._1)($,"x","max")};return V.BV.runKernel(U.YoZ,O,{reductionIndices:S,keepDims:b})}})},748:(Re,Y,h)=>{"use strict";h.d(Y,{_:()=>b});var V=h(3738),U=h(1070),W=h(9608),L=h(1396),P=h(744),k=h(6721),$=h(9416);const b=(0,k.op)({maxPool_:function S(N,O,M,H,oe){const J=(0,W._1)(N,"x","maxPool");let pe=J,be=!1;3===J.rank&&(be=!0,pe=(0,$.X)(J,[1,J.shape[0],J.shape[1],J.shape[2]])),L.hu(4===pe.rank,()=>`Error in maxPool: input must be rank 4 but got rank ${pe.rank}.`),L.hu(P.jT(M,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${M} and dilations '1'`),P.m("maxPool",H,oe);const me=V.BV.runKernel(U.mTV,{x:pe},{filterSize:O,strides:M,pad:H,dimRoundingMode:oe});return be?(0,$.X)(me,[me.shape[1],me.shape[2],me.shape[3]]):me}})},6825:(Re,Y,h)=>{"use strict";h.d(Y,{g:()=>b});var V=h(3738),U=h(1070),W=h(7904),L=h(9608),P=h(258),k=h(9734);const b=(0,h(6721).op)({maximum_:function S(N,O){let M=(0,L._1)(N,"a","maximum"),H=(0,L._1)(O,"b","maximum");return[M,H]=(0,W.makeTypesMatch)(M,H),"bool"===M.dtype&&(M=(0,k.p)(M,"int32"),H=(0,k.p)(H,"int32")),(0,P.assertAndGetBroadcastShape)(M.shape,H.shape),V.BV.runKernel(U.BMI,{a:M,b:H})}})},8637:(Re,Y,h)=>{"use strict";h.d(Y,{J:()=>k});var V=h(3738),U=h(1070),W=h(9608);const k=(0,h(6721).op)({mean_:function P($,S=null,b=!1){const O={x:(0,W._1)($,"x","mean")};return V.BV.runKernel(U.q2K,O,{axis:S,keepDims:b})}})},3050:(Re,Y,h)=>{"use strict";h.d(Y,{V:()=>k});var V=h(3738),U=h(1070),W=h(9608);const k=(0,h(6721).op)({min_:function P($,S=null,b=!1){const O={x:(0,W._1)($,"x","min")};return V.BV.runKernel(U.c17,O,{axis:S,keepDims:b})}})},2123:(Re,Y,h)=>{"use strict";h.d(Y,{L:()=>b});var V=h(3738),U=h(1070),W=h(7904),L=h(9608),P=h(258),k=h(9734);const b=(0,h(6721).op)({minimum_:function S(N,O){let M=(0,L._1)(N,"a","minimum"),H=(0,L._1)(O,"b","minimum");return[M,H]=(0,W.makeTypesMatch)(M,H),"bool"===M.dtype&&(M=(0,k.p)(M,"int32"),H=(0,k.p)(H,"int32")),(0,P.assertAndGetBroadcastShape)(M.shape,H.shape),V.BV.runKernel(U.q8u,{a:M,b:H})}})},3325:(Re,Y,h)=>{"use strict";h.d(Y,{V:()=>$});var V=h(3738),U=h(1070),W=h(9608),L=h(1396);const $=(0,h(6721).op)({mirrorPad_:function k(S,b,N){L.hu("reflect"===N||"symmetric"===N,()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${N}.`);const O=(0,W._1)(S,"x","mirrorPad");if(0===O.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");L.hu(b.length===O.rank,()=>`Padding doesn't match input. Must be ${O.rank}. Got ${b.length}.`);const M="reflect"===N?1:0;for(let J=0;J<O.rank;J++)L.hu(2===b[J].length,()=>"Invalid number of paddings. Must be length of 2 each."),L.hu(b[J][0]>=0&&b[J][0]<=O.shape[J]-M&&b[J][1]>=0&&b[J][1]<=O.shape[J]-M,()=>`Padding in dimension ${J} cannot be greater than or equal to ${O.shape[J]-M} or less than 0 for input of shape ${O.shape}`);return V.BV.runKernel(U.jQs,{x:O},{paddings:b,mode:N})}})},3038:(Re,Y,h)=>{"use strict";h.d(Y,{w:()=>$});var V=h(3738),U=h(1070),W=h(7904),L=h(9608);const $=(0,h(6721).op)({mod_:function k(S,b){let N=(0,L._1)(S,"a","mod"),O=(0,L._1)(b,"b","mod");return[N,O]=(0,W.makeTypesMatch)(N,O),V.BV.runKernel(U.Vbg,{a:N,b:O})}})},8788:(Re,Y,h)=>{"use strict";h.d(Y,{d:()=>$});var V=h(3738),U=h(1070),W=h(7904),L=h(9608);const $=(0,h(6721).op)({mul_:function k(S,b){let N=(0,L._1)(S,"a","mul"),O=(0,L._1)(b,"b","mul");return[N,O]=(0,W.makeTypesMatch)(N,O),V.BV.runKernel(U.wYn,{a:N,b:O})}})},3304:(Re,Y,h)=>{"use strict";h.d(Y,{W:()=>k});var V=h(3738),U=h(1070),W=h(9608);const k=(0,h(6721).op)({neg_:function P($){const b={x:(0,W._1)($,"x","neg")};return V.BV.runKernel(U.kuV,b)}})},4780:(Re,Y,h)=>{"use strict";h.d(Y,{K:()=>de});var V=h(9608),U=h(1396),W=h(2519),L=h(7745),P=h(888),k=h(3050),$=h(6721),S=h(9043),b=h(9416),N=h(316),O=h(5562),M=h(4164),H=h(5214);function J(pe,be,we=null){if(0===pe.rank)return(0,W.W)(pe);if(1!==pe.rank&&null===we)return J((0,b.X)(pe,[-1]),be,we);if(1===pe.rank||"number"==typeof we||Array.isArray(we)&&1===we.length){if(1===be)return(0,H.S)((0,W.W)(pe),we);if(be===1/0)return(0,P.F)((0,W.W)(pe),we);if(be===-1/0)return(0,k.V)((0,W.W)(pe),we);if("euclidean"===be||2===be)return(0,O._)((0,H.S)((0,S.s)((0,W.W)(pe),(0,N.i)(2,"int32")),we));throw new Error(`Error in norm: invalid ord value: ${be}`)}if(Array.isArray(we)&&2===we.length){if(1===be)return(0,P.F)((0,H.S)((0,W.W)(pe),we[0]),we[1]-1);if(be===1/0)return(0,P.F)((0,H.S)((0,W.W)(pe),we[1]),we[0]);if(be===-1/0)return(0,k.V)((0,H.S)((0,W.W)(pe),we[1]),we[0]);if("fro"===be||"euclidean"===be)return(0,O._)((0,H.S)((0,M.h)(pe),we));throw new Error(`Error in norm: invalid ord value: ${be}`)}throw new Error(`Error in norm: invalid axis: ${we}`)}const de=(0,$.op)({norm_:function oe(pe,be="euclidean",we=null,Ce=!1){const me=J(pe=(0,V._1)(pe,"x","norm"),be,we);let ye=me.shape;if(Ce){const xe=(0,U.EC)(we,pe.shape);ye=L.rv(me.shape,xe)}return(0,b.X)(me,ye)}})},761:(Re,Y,h)=>{"use strict";h.d(Y,{Q:()=>S});var V=h(3738),U=h(1070),W=h(7904),L=h(9608),P=h(258);const S=(0,h(6721).op)({notEqual_:function $(b,N){let O=(0,L._1)(b,"a","notEqual","string_or_numeric"),M=(0,L._1)(N,"b","notEqual","string_or_numeric");return[O,M]=(0,W.makeTypesMatch)(O,M),(0,P.assertAndGetBroadcastShape)(O.shape,M.shape),V.BV.runKernel(U.yQU,{a:O,b:M})}})},2738:(Re,Y,h)=>{"use strict";h.d(Y,{l:()=>k});var V=h(3738),U=h(1070),W=h(9608);const k=(0,h(6721).op)({oneHot_:function P($,S,b=1,N=0,O="int32"){if(S<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${S}`);const H={indices:(0,W._1)($,"indices","oneHot","int32")};return V.BV.runKernel(U.we_,H,{dtype:O,depth:S,onValue:b,offValue:N})}})},7014:(Re,Y,h)=>{"use strict";h.d(Y,{i:()=>P});var V=h(3738),U=h(1396),W=h(9907),L=h(6383);function P(k,$="float32"){if("complex64"===$){const b=P(k,"float32"),N=(0,L.l)(k,"float32");return(0,W.P)(b,N)}const S=(0,U.p8)((0,U.NA)(k),$);return V.BV.makeTensor(S,k,$)}},7286:(Re,Y,h)=>{"use strict";h.d(Y,{J:()=>k});var V=h(3738),U=h(1070),W=h(9608);const k=(0,h(6721).op)({onesLike_:function P($){const b={x:(0,W._1)($,"x","onesLike")};return V.BV.runKernel(U.qWM,b)}})},6721:(Re,Y,h)=>{"use strict";h.d(Y,{op:()=>L,z:()=>W});var V=h(3738),U=h(1396);const W="__op";function L(P){const k=Object.keys(P);if(1!==k.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${k.length} keys.`);let $=k[0];const S=P[$];$.endsWith("_")&&($=$.substring(0,$.length-1)),$+=W;const b=(...N)=>{V.BV.startScope($);try{const O=S(...N);return(0,U.tI)(O)&&console.error("Cannot return a Promise inside of tidy."),V.BV.endScope(O),O}catch(O){throw V.BV.endScope(null),O}};return Object.defineProperty(b,"name",{value:$,configurable:!0}),b}},8790:(Re,Y,h)=>{"use strict";h.d(Y,{zvA:()=>N.z,WnP:()=>U.W,Khb:()=>W.K,__u:()=>L._,IHx:()=>P.I,QBD:()=>M,$6P:()=>H.$,YjB:()=>oe.Y,NqF:()=>J.N,vHJ:()=>de.v,ZRM:()=>pe.Z,VfV:()=>be.V,z4N:()=>we.z,fvJ:()=>Ce.f,C80:()=>me.C,wS1:()=>ye.w,uR5:()=>q,zEQ:()=>He,tgs:()=>_t.t,Dxk:()=>Dt,JY5:()=>Et,p3b:()=>Ht,E4h:()=>mt.E,yE8:()=>St,anm:()=>Yd,XsQ:()=>$s,UFq:()=>Qs.U,f3b:()=>Ie.f,pju:()=>Q.p,mDi:()=>Ke.m,iUl:()=>ot.i,d9v:()=>It.d,PYB:()=>cn.P,zoF:()=>le.z,gME:()=>Xn,Izb:()=>Js,MNy:()=>nl,ZaL:()=>ca,PAt:()=>Mr.P,Tek:()=>qs.T,bc:()=>Gr.b,pdZ:()=>da,$QV:()=>ha,mCk:()=>ol.m,f9Y:()=>_i.f,mew:()=>yt,$Gn:()=>bi.$,zbp:()=>Ao.z,ppE:()=>Te,nTT:()=>Ci.n,B10:()=>pa.B,Ka3:()=>xo,WmZ:()=>Mn.W,hiC:()=>rs.h,NTj:()=>ro.N,AKD:()=>Os.A,rvX:()=>rt,WYO:()=>kr,pyx:()=>ll.p,GRh:()=>Ye,DgJ:()=>Di.D,qNN:()=>ma.q,d2q:()=>Ii.d,Qqt:()=>Zo.Q,dt4:()=>Rs.d,t$B:()=>ga.t,iyy:()=>$r,kp_:()=>Li.k,hlL:()=>Vl.h,GWj:()=>Ti.G,qPi:()=>ya.q,imm:()=>V,Iqj:()=>wi.I,dbB:()=>Ee,pjt:()=>Hr.p,brS:()=>Oo.b,Sxn:()=>Xr.S,asL:()=>ul.a,BHj:()=>Gu,V3u:()=>Ft,wx0:()=>jn.w,xVT:()=>Ro.x,UWc:()=>va.U,i2d:()=>cl.i,hi7:()=>dl.h,d9m:()=>zl.d,zN1:()=>Yo.z,$r2:()=>uh,SX3:()=>Si,G9k:()=>hl.G,cM7:()=>xa.c,Krr:()=>Qn.K,e_t:()=>Wl.e,CmS:()=>Ea.C,l_t:()=>Qo.l,HvI:()=>Sn.H,hJK:()=>_a.h,K5V:()=>Tn.K,egP:()=>Ni.e,MB5:()=>ch,eab:()=>fl,OI3:()=>ae.O,Fp7:()=>Ca.F,_sB:()=>wn._,YQQ:()=>an,Ip$:()=>Ai,gWQ:()=>pl.g,J69:()=>Oi.J,ry_:()=>Gl,VV$:()=>Eo.V,LTh:()=>ml.L,VdP:()=>Tr.V,wQq:()=>qo.w,Gi7:()=>Ue,p_:()=>bl,dC7:()=>E.d,rq4:()=>Hl,SJ_:()=>Bn,W76:()=>I.W,KOy:()=>Jl.K,Quu:()=>g.Q,lfX:()=>v.l,iUs:()=>Ir.i,JpU:()=>T.J,op:()=>N.op,N2O:()=>j,vku:()=>fe.v,pNR:()=>ze,koy:()=>it,t1L:()=>Tt,lGY:()=>hn,d_R:()=>bt.d,sQ3:()=>en.s,AL3:()=>ts.A,S0v:()=>Cs.S,WVs:()=>Kr.W,$gW:()=>Fs,N89:()=>Ri,TN_:()=>wr,wzB:()=>ei,nGf:()=>Ls,ruB:()=>Mi,LGj:()=>vl,w6H:()=>Ia,kwC:()=>xl.k,M25:()=>Mu.M,UYe:()=>Sr.U,btT:()=>Kl.b,XLQ:()=>K.X,GYS:()=>Ta.G,SDf:()=>er,diP:()=>ao,sx7:()=>Bs,mG2:()=>Ae,QEs:()=>Pu.Q,NMM:()=>wa.N,bp0:()=>jl.b,iD$:()=>Hn.i,snQ:()=>R,zcT:()=>sn,U8D:()=>ir.U,U_I:()=>ni.U,ODp:()=>Kn,XD2:()=>Oe.X,Xxe:()=>as.X,tdS:()=>n0,O$l:()=>Pi.O,R_K:()=>Ks.R,tPi:()=>ke.t,jZU:()=>Ds,SmN:()=>Sa,CnO:()=>Xl,p0P:()=>ku,XAC:()=>Aa.X,Wvh:()=>Nr.W,fBT:()=>Oa.f,rVs:()=>Mc,ers:()=>z,uN7:()=>t0,Vl2:()=>$u.V,_b3:()=>Co._,h62:()=>Da.h,$i:()=>Lr.$,L9e:()=>El.L,knu:()=>si.k,Nbs:()=>Zl.N,NXj:()=>lo.N,Z_8:()=>kc,luU:()=>kn.l,Smz:()=>ar.S,ORZ:()=>Bf.O,AEp:()=>Pe.A,XeE:()=>Fu.X,RRF:()=>Zr,odF:()=>Yl,wOQ:()=>Kd.w,yXz:()=>jd,Bfx:()=>Uf,xZs:()=>Vf,Gg6:()=>Yn.G,hg7:()=>zf.h,p4s:()=>Bu.p,Xu6:()=>Gf,Two:()=>Hf.T,pUJ:()=>Kf.p,HHK:()=>_c.H,GaM:()=>jf,VD$:()=>Xf,arb:()=>Ra.a,itS:()=>Xd,lls:()=>ri.l,P84:()=>Zd.P});var V={};h.r(V),h.d(V,{conv2d:()=>gr,depthwiseConv2d:()=>ko,matMul:()=>qd});var U=h(2519),W=h(5871),L=h(3138),P=h(6849),k=h(3738),$=h(1070),S=h(9608),b=h(1396),N=h(6721);const M=(0,N.op)({addN_:function O(re){b.hu(Array.isArray(re),()=>"The argument passed to tf.addN() must be a list of tensors"),b.hu(re.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${re.length}`);const ne=re.map((ie,ue)=>(0,S._1)(ie,`tensors${ue}`,"addN")),ee=ne[0];return ne.forEach(ie=>{if(ie.dtype!==ee.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),ne.forEach(ie=>{if(!b.cO(ie.shape,ee.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}),k.BV.runKernel($.Xze,ne)}});var H=h(4119),oe=h(4833),J=h(4982),de=h(5518),pe=h(8401),be=h(4942),we=h(4061),Ce=h(1414),me=h(2391),ye=h(809),xe=h(744),Q=h(9734),K=h(9416);const q=(0,N.op)({avgPool3d_:function w(re,ne,ee,se,ie,ue="NDHWC"){const ge=(0,S._1)(re,"x","avgPool3d","float32");let Se=ge,We=!1;4===ge.rank&&(We=!0,Se=(0,K.X)(ge,[1,ge.shape[0],ge.shape[1],ge.shape[2],ge.shape[3]])),b.hu(5===Se.rank,()=>`Error in avgPool3d: x must be rank 5 but got rank ${Se.rank}.`),b.hu("NDHWC"===ue,()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${ue}`),(0,xe.m)("avgPool3d",se,ie);let ht=k.BV.runKernel($._k9,{x:Se},{filterSize:ne,strides:ee,pad:se,dimRoundingMode:ie,dataFormat:ue});return ht=(0,Q.p)(ht,Se.dtype),We?(0,K.X)(ht,[ht.shape[1],ht.shape[2],ht.shape[3],ht.shape[4]]):ht}});var le=h(5667),ae=h(341),E=h(8788),Oe=h(6713),ke=h(7208),Pe=h(8998);const He=(0,N.op)({basicLSTMCell_:function Ne(re,ne,ee,se,ie,ue){const ge=(0,S._1)(re,"forgetBias","basicLSTMCell"),Se=(0,S._1)(ne,"lstmKernel","basicLSTMCell"),We=(0,S._1)(ee,"lstmBias","basicLSTMCell"),je=(0,S._1)(se,"data","basicLSTMCell"),ct=(0,S._1)(ie,"c","basicLSTMCell"),ht=(0,S._1)(ue,"h","basicLSTMCell"),Mt=(0,le.z)([je,ht],1),Qt=(0,ae.O)(Mt,Se),bn=(0,P.I)(Qt,We),gn=bn.shape[1]/4,Dn=[bn.shape[0],gn],ks=(0,ke.t)(bn,[0,0],Dn),xr=(0,ke.t)(bn,[0,gn],Dn),lr=(0,ke.t)(bn,[0,2*gn],Dn),ls=(0,ke.t)(bn,[0,3*gn],Dn),Nn=(0,P.I)((0,E.d)((0,Oe.X)(ks),(0,Pe.A)(xr)),(0,E.d)(ct,(0,Oe.X)((0,P.I)(ge,lr))));return[Nn,(0,E.d)((0,Pe.A)(Nn),(0,Oe.X)(ls))]}});var mt=h(5347),_t=h(8451);const Dt=(0,N.op)({batchNorm2d_:function Rt(re,ne,ee,se,ie,ue){const ge=(0,S._1)(re,"x","batchNorm"),Se=(0,S._1)(ne,"mean","batchNorm"),We=(0,S._1)(ee,"variance","batchNorm");let je,ct;return null!=ie&&(je=(0,S._1)(ie,"scale","batchNorm")),null!=se&&(ct=(0,S._1)(se,"offset","batchNorm")),b.hu(2===ge.rank,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${ge.rank}.`),b.hu(2===Se.rank||1===Se.rank,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${Se.rank}.`),b.hu(2===We.rank||1===We.rank,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${We.rank}.`),null!=je&&b.hu(2===je.rank||1===je.rank,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${je.rank}.`),null!=ct&&b.hu(2===ct.rank||1===ct.rank,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${ct.rank}.`),(0,_t.t)(ge,Se,We,ct,je,ue)}}),Et=(0,N.op)({batchNorm3d_:function Xt(re,ne,ee,se,ie,ue){const ge=(0,S._1)(re,"x","batchNorm"),Se=(0,S._1)(ne,"mean","batchNorm"),We=(0,S._1)(ee,"variance","batchNorm");let je,ct;return null!=ie&&(je=(0,S._1)(ie,"scale","batchNorm")),null!=se&&(ct=(0,S._1)(se,"offset","batchNorm")),b.hu(3===ge.rank,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${ge.rank}.`),b.hu(3===Se.rank||1===Se.rank,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${Se.rank}.`),b.hu(3===We.rank||1===We.rank,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${We.rank}.`),null!=je&&b.hu(3===je.rank||1===je.rank,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${je.rank}.`),null!=ct&&b.hu(3===ct.rank||1===ct.rank,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${ct.rank}.`),(0,_t.t)(ge,Se,We,ct,je,ue)}}),Ht=(0,N.op)({batchNorm4d_:function Vt(re,ne,ee,se,ie,ue){const ge=(0,S._1)(re,"x","batchNorm"),Se=(0,S._1)(ne,"mean","batchNorm"),We=(0,S._1)(ee,"variance","batchNorm");let je,ct;return null!=ie&&(je=(0,S._1)(ie,"scale","batchNorm")),null!=se&&(ct=(0,S._1)(se,"offset","batchNorm")),b.hu(4===ge.rank,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${ge.rank}.`),b.hu(4===Se.rank||1===Se.rank,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${Se.rank}.`),b.hu(4===We.rank||1===We.rank,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${We.rank}.`),null!=je&&b.hu(4===je.rank||1===je.rank,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${je.rank}.`),null!=ct&&b.hu(4===ct.rank||1===ct.rank,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${ct.rank}.`),(0,_t.t)(ge,Se,We,ct,je,ue)}}),St=(0,N.op)({bincount_:function ss(re,ne,ee){const se=(0,S._1)(re,"x","bincount"),ie=(0,S._1)(ne,"weights","bincount");return b.hu("int32"===se.dtype,()=>`Error in bincount: input dtype must be int32, but got ${se.dtype}`),b.hu(ee>=0,()=>`size must be non-negative, but got ${ee}.`),b.hu(ie.size===se.size||0===ie.size,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${se.shape}, weights shape: ${ie.shape}.`),k.BV.runKernel($.zvY,{x:se,weights:ie},{size:ee})}}),$s=(0,N.op)({broadcastArgs_:function _s(re,ne){const ee=(0,S._1)(re,"s0","broadcastArgs","int32"),se=(0,S._1)(ne,"s1","broadcastArgs","int32");if(1!==ee.rank)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${ee.rank}`);if(1!==se.rank)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${se.rank}`);return k.BV.runKernel($.eEB,{s0:ee,s1:se})}});var Qs=h(6434),Ie=h(8621),Ke=h(5775),ot=h(613),It=h(4249),cn=h(9907);const Xn=(0,N.op)({concat1d_:function Un(re){return(0,le.z)(re,0)}}),Js=(0,N.op)({concat2d_:function Zn(re,ne){return(0,le.z)(re,ne)}}),nl=(0,N.op)({concat3d_:function Rr(re,ne){return(0,le.z)(re,ne)}}),ca=(0,N.op)({concat4d_:function sl(re,ne){return(0,le.z)(re,ne)}});var Mr=h(1691),qs=h(7605),Gr=h(9605);const da=(0,N.op)({conv3d_:function xi(re,ne,ee,se,ie="NDHWC",ue=[1,1,1]){const ge=(0,S._1)(re,"x","conv3d"),Se=(0,S._1)(ne,"filter","conv3d");let We=ge,je=!1;4===ge.rank&&(je=!0,We=(0,K.X)(ge,[1,ge.shape[0],ge.shape[1],ge.shape[2],ge.shape[3]])),b.hu(5===We.rank,()=>`Error in conv3d: input must be rank 5, but got rank ${We.rank}.`),b.hu(5===Se.rank,()=>`Error in conv3d: filter must be rank 5, but got rank ${Se.rank}.`),b.hu(We.shape[4]===Se.shape[3],()=>`Error in conv3d: depth of input (${We.shape[4]}) must match input depth for filter ${Se.shape[3]}.`),b.hu((0,xe.jT)(ee,ue),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${ee} and dilations '${ue}'`),b.hu("NDHWC"===ie,()=>`Error in conv3d: got dataFormat of ${ie} but only NDHWC is currently supported.`);const Mt=k.BV.runKernel($.x12,{x:We,filter:Se},{strides:ee,pad:se,dataFormat:ie,dilations:ue});return je?(0,K.X)(Mt,[Mt.shape[1],Mt.shape[2],Mt.shape[3],Mt.shape[4]]):Mt}});var Ei=h(2481);const ha=(0,N.op)({conv3dTranspose_:function rl(re,ne,ee,se,ie){const ue=(0,S._1)(re,"x","conv3dTranspose"),ge=(0,S._1)(ne,"filter","conv3dTranspose");return(0,Ei._)(ee,ue,ge,se,ie)}});var ol=h(4254),_i=h(6357),bi=h(8178),Ao=h(7089);const Te=(0,N.op)({denseBincount_:function fa(re,ne,ee,se=!1){const ie=(0,S._1)(re,"x","denseBincount"),ue=(0,S._1)(ne,"weights","denseBincount");return b.hu("int32"===ie.dtype,()=>`Error in denseBincount: input dtype must be int32, but got ${ie.dtype}`),b.hu(ie.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${ie.rank}.`),b.hu(ee>=0,()=>`size must be non-negative, but got ${ee}.`),b.hu(ue.size===ie.size||0===ue.size,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${ie.shape}, weights shape: ${ue.shape}.`),k.BV.runKernel($.QRR,{x:ie,weights:ue},{size:ee,binaryOutput:se})}});var Ci=h(2792),pa=h(6818);const xo=(0,N.op)({diag_:function il(re){const ee={x:(0,S._1)(re,"x","diag")};return k.BV.runKernel($.$w,ee)}});var Mn=h(5256),rs=h(6635),ro=h(7265),Os=h(7576);const kr=(0,N.op)({einsum_:function al(re,...ne){const ee=ne.map((ie,ue)=>(0,S._1)(ie,`tensors${ue}`,"einsum"));return k.BV.runKernel($.$g6,ee,{equation:re})}});var ll=h(4609),Di=h(8877),ma=h(9156),Ii=h(6624),Zo=h(9324),Rs=h(611),ga=h(8907),Yn=h(3964);const $r=(0,N.op)({eye_:function Pr(re,ne,ee,se="float32"){null==ne&&(ne=re);const ie=(0,Ie.f)([re,ne],se),ue=re<=ne?re:ne;for(let Se=0;Se<ue;++Se)ie.set(1,Se,Se);const ge=(0,K.X)(ie.toTensor(),[re,ne]);if(null==ee)return ge;if(1===ee.length)return(0,Yn.G)((0,Rs.d)(ge,0),[ee[0],1,1]);if(2===ee.length)return(0,Yn.G)((0,Rs.d)((0,Rs.d)(ge,0),0),[ee[0],ee[1],1,1]);if(3===ee.length)return(0,Yn.G)((0,Rs.d)((0,Rs.d)((0,Rs.d)(ge,0),0),0),[ee[0],ee[1],ee[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${ee.length}D.`)}});var Vl=h(8509),Ti=h(6716),ya=h(3273),wi=h(9788),Hr=h(2860),Oo=h(5996),ul=h(5294),Ro=h(7502),va=h(5251),cl=h(663),dl=h(6151),zl=h(4688),Yo=h(9220);function Si(re,ne,ee){if(ee<=0)throw new Error("The number of values should be positive.");return k.BV.runKernel($.e7N,{},{start:re,stop:ne,num:ee})}var hl=h(9727),xa=h(7404),Qn=h(4610),Wl=h(7122),Ea=h(6847),Qo=h(6506),Sn=h(9901),_a=h(3779),Tn=h(7423),Ni=h(546);const Jo=2147483648,sn=(0,N.op)({searchSorted_:function ba(re,ne,ee="left"){const se=(0,S._1)(re,"sortedSequence","searchSorted"),ie=(0,S._1)(ne,"values","searchSorted"),ge=ie.shape[ie.shape.length-1],Se=(0,K.X)(se,[-1,se.shape[se.shape.length-1]]),We=(0,K.X)(ie,[-1,ge]);if(Se.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(Se.shape[0]!==We.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if((0,b.NA)(We.shape)>=Jo)throw new Error(`values tensor size must less than ${Jo}`);if(Se.shape[1]>=Jo)throw new Error(`trailing dim_size must less than ${Jo} for int32 output type, was ${Se.shape[1]}`);return k.BV.runKernel($.nr8,{sortedSequence:Se,values:We},{side:ee})}});function fl(re,ne){return sn(re,ne,"left")}var Ca=h(888),wn=h(748);const an=(0,N.op)({maxPool3d_:function Mo(re,ne=[1,1,1],ee,se,ie,ue="NDHWC"){const ge=(0,S._1)(re,"x","maxPool3d");let Se=ge,We=!1;4===ge.rank&&(We=!0,Se=(0,K.X)(ge,[1,ge.shape[0],ge.shape[1],ge.shape[2],ge.shape[3]])),b.hu(5===Se.rank,()=>`Error in maxPool3d: x must be rank 5 but got rank ${Se.rank}.`),b.hu("NDHWC"===ue,()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${ue}`),(0,xe.m)("maxPool3d",se,ie);const ht=k.BV.runKernel($.OAf,{x:Se},{filterSize:ne,strides:ee,pad:se,dimRoundingMode:ie,dataFormat:ue});return We?(0,K.X)(ht,[ht.shape[1],ht.shape[2],ht.shape[3],ht.shape[4]]):ht}}),Ai=(0,N.op)({maxPoolWithArgmax_:function ps(re,ne,ee,se,ie=!1){const ge={x:(0,S._1)(re,"x","maxPoolWithArgmax")},We=k.BV.runKernel($.vFR,ge,{filterSize:ne,strides:ee,pad:se,includeBatchInIndex:ie});return{result:We[0],indexes:We[1]}}});var pl=h(6825),Oi=h(8637),Ir=h(7014),bs=h(708);function Gl(re,ne,{indexing:ee="xy"}={}){if("xy"!==ee&&"ij"!==ee)throw new TypeError(`${ee} is not a valid third argument to meshgrid`);if(void 0===re)return[];let se=(0,S._1)(re,"x","meshgrid",re instanceof bs.es?re.dtype:"float32");if(void 0===ne)return[se];let ie=(0,S._1)(ne,"y","meshgrid",ne instanceof bs.es?ne.dtype:"float32");const ue=(0,b.NA)(se.shape),ge=(0,b.NA)(ie.shape);return"xy"===ee?(se=(0,K.X)(se,[1,-1]),ie=(0,K.X)(ie,[-1,1]),[(0,ae.O)((0,Ir.i)([ge,1],se.dtype),se),(0,ae.O)(ie,(0,Ir.i)([1,ue],ie.dtype))]):(se=(0,K.X)(se,[-1,1]),ie=(0,K.X)(ie,[1,-1]),[(0,ae.O)(se,(0,Ir.i)([1,ge],se.dtype)),(0,ae.O)((0,Ir.i)([ue,1],ie.dtype),ie)])}var Eo=h(3050),ml=h(2123),Tr=h(3325),qo=h(3038),gl=h(7745),Da=h(4164),kn=h(8578);const Ue=(0,N.op)({moments_:function _o(re,ne=null,ee=!1){re=(0,S._1)(re,"x","moments");const se=(0,b.EC)(ne,re.shape),ie=(0,Oi.J)(re,se,ee);let ue=ie.shape;ee||(ue=(0,gl.rv)(ie.shape,se));const ge=(0,Da.h)((0,kn.l)((0,Q.p)(re,"float32"),(0,K.X)(ie,ue)));return{mean:ie,variance:(0,Oi.J)(ge,se,ee)}}}),Hl=(0,N.op)({multiRNNCell_:function mr(re,ne,ee,se){const ie=(0,S._1)(ne,"data","multiRNNCell"),ue=(0,S.sI)(ee,"c","multiRNNCell"),ge=(0,S.sI)(se,"h","multiRNNCell");let Se=ie;const We=[];for(let ht=0;ht<re.length;ht++){const Mt=re[ht](Se,ue[ht],ge[ht]);We.push(Mt[0]),We.push(Mt[1]),Se=Mt[1]}const je=[],ct=[];for(let ht=0;ht<We.length;ht+=2)je.push(We[ht]),ct.push(We[ht+1]);return[je,ct]}}),Bn=(0,N.op)({multinomial_:function is(re,ne,ee,se=!1){const ie=(0,S._1)(re,"logits","multinomial"),ue=ie.size,ge=ie.rank;if(ue<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${ue}.`);if(ge>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${ge}`);ee=ee||Math.random();const We={logits:1===ge?(0,K.X)(ie,[1,-1]):ie},ct=k.BV.runKernel($.NZg,We,{numSamples:ne,seed:ee,normalized:se});return 1===ge?(0,K.X)(ct,[ct.size]):ct}});var I=h(3304),g=h(761),v=h(2738),T=h(7286);const j=(0,N.op)({outerProduct_:function X(re,ne){const ee=(0,S._1)(re,"v1","outerProduct"),se=(0,S._1)(ne,"v2","outerProduct");b.hu(1===ee.rank&&1===se.rank,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${ee.rank} and ${se.rank}.`);const ie=(0,K.X)(ee,[-1,1]),ue=(0,K.X)(se,[1,-1]);return(0,ae.O)(ie,ue)}});var fe=h(4158);const ze=(0,N.op)({pad1d_:function he(re,ne,ee=0){return(0,b.hu)(2===ne.length,()=>"Invalid number of paddings. Must be length of 2."),(0,fe.v)(re,[ne],ee)}}),it=(0,N.op)({pad2d_:function gt(re,ne,ee=0){return(0,b.hu)(2===ne.length&&2===ne[0].length&&2===ne[1].length,()=>"Invalid number of paddings. Must be length of 2 each."),(0,fe.v)(re,ne,ee)}}),Tt=(0,N.op)({pad3d_:function ft(re,ne,ee=0){return(0,b.hu)(3===ne.length&&2===ne[0].length&&2===ne[1].length&&2===ne[2].length,()=>"Invalid number of paddings. Must be length of 2 each."),(0,fe.v)(re,ne,ee)}}),hn=(0,N.op)({pad4d_:function qt(re,ne,ee=0){return(0,b.hu)(4===ne.length&&2===ne[0].length&&2===ne[1].length&&2===ne[2].length&&2===ne[3].length,()=>"Invalid number of paddings. Must be length of 2 each."),(0,fe.v)(re,ne,ee)}});var bt=h(8944),en=h(9043),ts=h(1426),Cs=h(2174),Kr=h(2107);const Fs=(0,N.op)({raggedGather_:function Wn(re,ne,ee,se){const ie=re.map((ct,ht)=>(0,S._1)(ct,`tensors${ht}`,"raggedGather","int32")),ue=(0,S._1)(ne,"paramsDenseValues","raggedGather"),ge=(0,S._1)(ee,"indices","raggedGather","int32"),je=k.BV.runKernel($.dDz,{paramsNestedSplits:ie,paramsDenseValues:ue,indices:ge},{outputRaggedRank:se});return{outputNestedSplits:je.slice(0,je.length-1),outputDenseValues:je[je.length-1]}}}),Ri=(0,N.op)({raggedTensorToTensor_:function Gs(re,ne,ee,se,ie){const ue=(0,S._1)(re,"shape","raggedTensorToTensor","int32"),ge=(0,S._1)(ne,"values","raggedTensorToTensor"),Se=(0,S._1)(ee,"defaultValue","raggedTensorToTensor",ge.dtype),We=se.map((ht,Mt)=>(0,S._1)(ht,`tensors${Mt}`,"raggedTensorToTensor","int32"));return k.BV.runKernel($.BiW,{shape:ue,values:ge,defaultValue:Se,rowPartitionTensors:We},{rowPartitionTypes:ie})}}),wr=(0,N.op)({rand_:function vc(re,ne,ee){const se=(0,b.NA)(re);let ie=null;if(null==ee||"float32"===ee)ie=new Float32Array(se);else if("int32"===ee)ie=new Int32Array(se);else{if("bool"!==ee)throw new Error(`Unknown data type ${ee}`);ie=new Uint8Array(se)}for(let ue=0;ue<se;ue++)ie[ue]=ne();return k.BV.makeTensor(ie,re,ee)}});var yl=h(340);class Ru{constructor(ne,ee,se,ie,ue){this.mean=ne,this.stdDev=ee,this.dtype=se,this.nextVal=NaN,this.truncated=ie,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const ge=ue||Math.random();this.random=yl.alea(ge.toString())}nextValue(){if(!isNaN(this.nextVal)){const ie=this.nextVal;return this.nextVal=NaN,ie}let ne,ee,se=!1;for(;!se;){let ie,ue,ge;do{ie=2*this.random()-1,ue=2*this.random()-1,ge=ie*ie+ue*ue}while(ge>=1||0===ge);const Se=Math.sqrt(-2*Math.log(ge)/ge);ne=this.mean+this.stdDev*ie*Se,ee=this.mean+this.stdDev*ue*Se,(!this.truncated||this.isValidTruncated(ne))&&(se=!0)}return(!this.truncated||this.isValidTruncated(ee))&&(this.nextVal=this.convertValue(ee)),this.convertValue(ne)}convertValue(ne){return null==this.dtype||"float32"===this.dtype?ne:Math.round(ne)}isValidTruncated(ne){return ne<=this.upper&&ne>=this.lower}}class xc{constructor(ne,ee,se,ie){this.alpha=ne,this.beta=1/ee,this.dtype=se;const ue=ie||Math.random();this.randu=yl.alea(ue.toString()),this.randn=new Ru(0,1,se,!1,this.randu()),this.d=ne<1?ne+2/3:ne-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let ne,ee,se,ie,ue,ge;for(;;){do{ie=this.randn.nextValue(),ge=1+this.c*ie}while(ge<=0);if(ge*=ge*ge,ne=ie*ie,ee=1-.331*ne*ne,se=.5*ne+this.d*(1-ge+Math.log(ge)),ue=this.randu(),ue<ee||Math.log(ue)<se)break}return ge*=1/this.beta*this.d,this.alpha<1&&(ge*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(ge)}convertValue(ne){return"float32"===this.dtype?ne:Math.round(ne)}}class Lf{constructor(ne=0,ee=1,se,ie){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=ne,this.range=ee-ne,this.dtype=se,null==ie&&(ie=Math.random()),"number"==typeof ie&&(ie=ie.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${ne} - ${ee} <= 1 and dtype is not float`);this.random=yl.alea(ie)}convertValue(ne){return this.canReturnFloat()?ne:Math.round(ne)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const ei=(0,N.op)({randomGamma_:function En(re,ne,ee=1,se="float32",ie){if(null==ee&&(ee=1),null==se&&(se="float32"),"float32"!==se&&"int32"!==se)throw new Error(`Unsupported data type ${se}`);const ue=new xc(ne,ee,se,ie),ge=(0,Ie.f)(re,se);for(let Se=0;Se<ge.values.length;Se++)ge.values[Se]=ue.nextValue();return ge.toTensor()}}),Ls=(0,N.op)({randomNormal_:function ti(re,ne=0,ee=1,se,ie){if(null!=se&&"bool"===se)throw new Error(`Unsupported data type ${se}`);const ue=new Ru(ne,ee,se,!1,ie),ge=(0,Ie.f)(re,se);for(let Se=0;Se<ge.values.length;Se++)ge.values[Se]=ue.nextValue();return ge.toTensor()}}),Mi=(0,N.op)({randomStandardNormal_:function oo(re,ne,ee){if(null!=ne&&"bool"===ne)throw new Error(`Unsupported data type ${ne}`);return Ls(re,0,1,ne,ee)}}),vl=(0,N.op)({randomUniform_:function jr(re,ne=0,ee=1,se="float32",ie){const ue=(0,Ie.f)(re,se),ge=new Lf(ne,ee,null,ie);for(let Se=0;Se<ue.values.length;Se++)ue.values[Se]=ge.nextValue();return ue.toTensor()}});function Ia(re,ne,ee=1,se="float32"){if(0===ee)throw new Error("Cannot have a step of zero");return k.BV.runKernel($.e6w,{},{start:re,stop:ne,step:ee,dtype:se})}var xl=h(5732),Mu=h(6071),Sr=h(4563),Kl=h(5049),Ta=h(9264);const er=(0,N.op)({reverse1d_:function or(re){const ne=(0,S._1)(re,"x","reverse");return b.hu(1===ne.rank,()=>`Error in reverse1D: x must be rank 1 but got rank ${ne.rank}.`),(0,Ta.G)(ne,0)}}),ao=(0,N.op)({reverse2d_:function Ms(re,ne){const ee=(0,S._1)(re,"x","reverse");return b.hu(2===ee.rank,()=>`Error in reverse2D: x must be rank 2 but got rank ${ee.rank}.`),(0,Ta.G)(ee,ne)}}),Bs=(0,N.op)({reverse3d_:function bo(re,ne){const ee=(0,S._1)(re,"x","reverse");return b.hu(3===ee.rank,()=>`Error in reverse3D: x must be rank 3 but got rank ${ee.rank}.`),(0,Ta.G)(ee,ne)}}),Ae=(0,N.op)({reverse4d_:function ki(re,ne){const ee=(0,S._1)(re,"x","reverse");return b.hu(4===ee.rank,()=>`Error in reverse4D: x must be rank 4 but got rank ${ee.rank}.`),(0,Ta.G)(ee,ne)}});var wa=h(8015),jl=h(3443),Hn=h(316),ir=h(2747),ni=h(9587),Hs=h(5861);function tn(){return(tn=(0,Hs.Z)(function*(re,ne){const ee=(0,S._1)(re,"x","setdiff1d"),se=(0,S._1)(ne,"y","setdiff1d");b.hu(ee.dtype===se.dtype,()=>`x and y should have the same dtype, but got x (${ee.dtype}) and y (${se.dtype}).`),b.hu(1===ee.rank,()=>`x should be 1D tensor, but got x (${ee.shape}).`),b.hu(1===se.rank,()=>`y should be 1D tensor, but got y (${se.shape}).`);const ie=yield ee.data(),ue=yield se.data(),ge=new Set(ue);let Se=0;for(let ct=0;ct<ie.length;ct++)ge.has(ie[ct])||Se++;const We=new bs.YD([Se],ee.dtype),je=new bs.YD([Se],"int32");for(let ct=0,ht=0;ct<ie.length;ct++)ge.has(ie[ct])||(We.values[ht]=ie[ct],je.values[ht]=ct,ht++);return[We.toTensor(),je.toTensor()]})).apply(this,arguments)}const Kn=function Nt(re,ne){return tn.apply(this,arguments)};var as=h(2820),Pi=h(1901),Ks=h(3118);const Ds=(0,N.op)({slice1d_:function $i(re,ne,ee){const se=(0,S._1)(re,"x","slice1d");return b.hu(1===se.rank,()=>`slice1d expects a rank-1 tensor, but got a rank-${se.rank} tensor`),(0,ke.t)(se,[ne],[ee])}}),Sa=(0,N.op)({slice2d_:function Fi(re,ne,ee){const se=(0,S._1)(re,"x","slice2d");return b.hu(2===se.rank,()=>`slice2d expects a rank-2 tensor, but got a rank-${se.rank} tensor`),(0,ke.t)(se,ne,ee)}}),Xl=(0,N.op)({slice3d_:function pn(re,ne,ee){const se=(0,S._1)(re,"x","slice3d");return b.hu(3===se.rank,()=>`slice3d expects a rank-3 tensor, but got a rank-${se.rank} tensor`),(0,ke.t)(se,ne,ee)}}),ku=(0,N.op)({slice4d_:function Na(re,ne,ee){const se=(0,S._1)(re,"x","slice4d");return b.hu(4===se.rank,()=>`slice4d expects a rank-4 tensor, but got a rank-${se.rank} tensor`),(0,ke.t)(se,ne,ee)}});var Aa=h(2388),Nr=h(1808),Oa=h(2616),Li=h(8797),Xr=h(9472),jn=h(8109),Pu=h(849),$u=h(4728),Co=h(5562),Lr=h(3441),El=h(5527),si=h(4278),Zl=h(6166),lo=h(5617),ar=h(5214),Bf=h(3337),Fu=h(1973),_l=h(3906);function Zr(re,ne){(0,b.Cq)(re);const ee=(0,S.C)(re,ne);if(1!==ee.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return(0,_l.H)(re,null,ee,ne)}function Yl(re,ne,ee){if((0,b.Cq)(re),null!=ne&&2!==ne.length)throw new Error("tensor2d() requires shape to have two numbers");const se=(0,S.C)(re,ee);if(2!==se.length&&1!==se.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===se.length&&null==ne)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return(0,_l.H)(re,ne,se,ee)}var Kd=h(3157);function jd(re,ne,ee){if((0,b.Cq)(re),null!=ne&&4!==ne.length)throw new Error("tensor4d() requires shape to have four numbers");const se=(0,S.C)(re,ee);if(4!==se.length&&1!==se.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===se.length&&null==ne)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return(0,_l.H)(re,ne,se,ee)}function Uf(re,ne,ee){if((0,b.Cq)(re),null!=ne&&5!==ne.length)throw new Error("tensor5d() requires shape to have five numbers");const se=(0,S.C)(re,ee);if(5!==se.length&&1!==se.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===se.length&&null==ne)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return(0,_l.H)(re,ne,se,ee)}function Vf(re,ne,ee){if((0,b.Cq)(re),null!=ne&&6!==ne.length)throw new Error("tensor6d() requires shape to have six numbers");const se=(0,S.C)(re,ee);if(6!==se.length&&1!==se.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===se.length&&null==ne)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return(0,_l.H)(re,ne=ne||se,se,ee)}var zf=h(7205);const Gf=(0,N.op)({truncatedNormal_:function Wf(re,ne=0,ee=1,se,ie){if(null!=se&&"bool"===se)throw new Error("Unsupported data type $ { dtype }");const ue=new Ru(ne,ee,se,!0,ie),ge=(0,Ie.f)(re,se);for(let Se=0;Se<ge.values.length;Se++)ge.values[Se]=ue.nextValue();return ge.toTensor()}});var Hf=h(3720),Kf=h(2925),_c=h(4126);function jf(re,ne){return sn(re,ne,"right")}function Xf(re,ne=!0,ee,se){return k.BV.makeVariable(re,ne,ee,se)}var Ra=h(3062),Lu=h(2842);function bc(){return(bc=(0,Hs.Z)(function*(re){const ne=(0,S._1)(re,"condition","whereAsync","bool"),ee=yield ne.data(),se=(0,Lu.Z)(ne.shape,ee);return re!==ne&&ne.dispose(),se})).apply(this,arguments)}const Xd=function Zf(re){return bc.apply(this,arguments)};var ri=h(6383),Zd=h(37);function Ql(){return(Ql=(0,Hs.Z)(function*(re,ne,ee){const se=(0,S._1)(re,"tensor","boolMask"),ie=(0,S._1)(ne,"mask","boolMask","bool"),ue=null==ee?0:ee,ge=ie.rank,Se=se.shape;b.hu(ge>0,()=>"mask cannot be scalar"),b.k5(Se.slice(ue,ue+ge),ie.shape,"mask's shape must match the first K dimensions of tensor's shape,");let We=1;for(let Cn=ue;Cn<ue+ge;Cn++)We*=Se[Cn];const je=Se.slice(0,ue).concat([We],Se.slice(ue+ge)),ct=(0,K.X)(se,je),ht=(0,K.X)(ie,[-1]),Mt=yield Xd(ht),Qt=(0,El.L)(Mt,[1]),bn=(0,wi.I)(ct,Qt,ue);return re!==se&&se.dispose(),ne!==ie&&ie.dispose(),Qt.dispose(),ct.dispose(),ht.dispose(),Mt.dispose(),bn})).apply(this,arguments)}const Yd=function Bi(re,ne,ee){return Ql.apply(this,arguments)};var Bu=h(9540),Jl=h(4780),Ma=h(7904);const bl=(0,N.op)({movingAverage_:function Qd(re,ne,ee,se,ie=!0){const ue=(0,S._1)(re,"v","movingAverage"),ge=(0,S._1)(ne,"x","movingAverage"),Se=(0,S._1)(ee,"decay","movingAverage");(0,Ma.assertTypesMatch)(ue,ge),b.hu(b.cO(ue.shape,ge.shape),()=>"Shape mismatch in v and x");const We=(0,Hn.i)(1),je=(0,kn.l)(We,Se);let ct=(0,E.d)((0,kn.l)(ge,ue),je);if(ie){b.hu(null!=se,()=>"When using zeroDebias: true, step is required.");const ht=(0,S._1)(se,"step","movingAverage");ct=(0,rs.h)(ct,(0,kn.l)(We,(0,en.s)(Se,ht)))}return(0,P.I)(ue,ct)}});var Jd=h(2808);const R=(0,N.op)({scatterND_:function Br(re,ne,ee){const se=(0,S._1)(re,"indices","scatterND","int32"),ie=(0,S._1)(ne,"updates","scatterND");return Jd.validateInput(ie,se,ee),k.BV.runKernel($.xQA,{indices:se,updates:ie},{shape:ee})}}),z=(0,N.op)({sparseToDense_:function A(re,ne,ee,se=0){const ie=(0,S._1)(re,"sparseIndices","sparseToDense","int32"),ue=(0,S._1)(ne,"sparseValues","sparseToDense","string_or_numeric"),ge=(0,S._1)(se,"defaultValue","sparseToDense",ue.dtype);return function G(re,ne,ee,se){if("int32"!==re.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${re.dtype}.`);if(re.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${re.shape}.`);const ie=re.rank>0?re.shape[0]:1,ue=re.rank>1?re.shape[1]:1;if(ee.length!==ue)throw new Error(`outputShape has incorrect number of elements:, ${ee.length}, should be: ${ue}.`);if(0!==ne.rank&&(1!==ne.rank||ne.size!==ie))throw new Error(`sparseValues has incorrect shape ${ne.shape}, should be [] or [${ie}]`);if(ne.dtype!==se.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(ie,ue,ee,ge),k.BV.runKernel($.D2d,{sparseIndices:ie,sparseValues:ue,defaultValue:ge},{outputShape:ee})}}),Ee=(0,N.op)({gatherND_:function te(re,ne){const ee=(0,S._1)(ne,"indices","gatherND","int32"),ie={params:(0,S._1)(re,"x","gatherND","string_or_numeric"),indices:ee};return k.BV.runKernel($.q1x,ie)}}),rt=(0,N.op)({dropout_:function Ve(re,ne,ee,se){const ie=(0,S._1)(re,"x","dropout");if(b.hu("float32"===ie.dtype,()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${ie.dtype} tensor instead.`),b.hu(ne>=0&&ne<1,()=>`rate must be a float in the range [0, 1), but got ${ne}.`),0===ne)return re instanceof bs.es?ie.clone():ie;const ue=function De(re,ne){if(null==ne)return re.shape.slice();if(b.cO(re.shape,ne))return ne;if(re.shape.length===ne.length){const ee=[];for(let se=0;se<re.shape.length;se++)ee.push(null==ne[se]&&null!=re.shape[se]?re.shape[se]:ne[se]);return ee}return ne}(ie,ee),ge=1-ne,Se=(0,rs.h)((0,Ti.G)((0,P.I)(vl(ue,0,1,"float32",se),ge)),ge);return(0,E.d)(ie,Se)}});function Ye(re){return Math.floor(Math.pow(2,Math.ceil(Math.log(re)/Math.log(2))))}function yt(re,ne,ee){const se=1-re%2,ie=new Float32Array(re);for(let ue=0;ue<re;++ue){const ge=2*Math.PI*ue/(re+se-1);ie[ue]=ne-ee*Math.cos(ge)}return Zr(ie,"float32")}function xt(){return(xt=(0,Hs.Z)(function*(re,ne,ee=1){const se=(0,S._1)(re,"predictions","inTopK"),ie=(0,S._1)(ne,"targets","inTopK");(0,b.hu)(se.rank>1,()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${se.rank}`),(0,b.hu)(se.rank-1===ie.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${se.rank} and targets rank ${ie.rank}`),(0,b.k5)(se.shape.slice(0,se.shape.length-1),ie.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const ue=se.shape[se.shape.length-1];(0,b.hu)(ee>0&&ee<=ue,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${ue}), but got ${ee}`);const ge=yield se.data(),Se=yield ie.data(),[We,je]=[ge.length/ue,ue],ct=(0,b.WP)("bool",We);for(let ht=0;ht<We;ht++){const Mt=ht*je,Qt=ge.subarray(Mt,Mt+je),bn=[];for(let Cn=0;Cn<Qt.length;Cn++)bn.push({value:Qt[Cn],index:Cn});bn.sort((Cn,gn)=>gn.value-Cn.value),ct[ht]=0;for(let Cn=0;Cn<ee;Cn++)if(bn[Cn].index===Se[ht]){ct[ht]=1;break}}return re!==se&&se.dispose(),ne!==ie&&ie.dispose(),(0,Fu.X)(ct,ie.shape,"bool")})).apply(this,arguments)}const Ft=function at(re,ne){return xt.apply(this,arguments)};var Ut=h(1335),Kt=h(258),nn=h(1834),Vn=h(5466),ms=h(8868);const gr=(0,N.op)({fusedConv2d_:function Yr({x:re,filter:ne,strides:ee,pad:se,dataFormat:ie="NHWC",dilations:ue=[1,1],dimRoundingMode:ge,bias:Se,activation:We="linear",preluActivationWeights:je,leakyreluAlpha:ct}){if(!1===(0,ms.uy)(k.BV.state.gradientDepth,We=We||"linear")){b.hu("NHWC"===ie,()=>`Error in fused conv2d: got dataFormat of ${ie} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let Nn=(0,qs.T)(re,ne,ee,se,ie,ue,ge);return null!=Se&&(Nn=(0,P.I)(Nn,Se)),(0,ms.QH)(Nn,We,je,ct)}const ht=(0,S._1)(re,"x","conv2d","float32"),Mt=(0,S._1)(ne,"filter","conv2d","float32");let Qt=ht,bn=!1;3===ht.rank&&(bn=!0,Qt=(0,K.X)(ht,[1,ht.shape[0],ht.shape[1],ht.shape[2]])),b.hu(4===Qt.rank,()=>`Error in fused conv2d: input must be rank 4, but got rank ${Qt.rank}.`),b.hu(4===Mt.rank,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${Mt.rank}.`),xe.m("fused conv2d",se,ge);const Cn="NHWC"===ie?Qt.shape[3]:Qt.shape[1];b.hu(Mt.shape[2]===Cn,()=>`Error in conv2d: depth of input (${Cn}) must match input depth for filter ${Mt.shape[2]}.`),b.hu(xe.jT(ee,ue),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${ee} and dilations '${ue}'`);const gn=xe.Ix(Qt.shape,Mt.shape,ee,ue,se,ge);let Dn,ks;if(null!=Se&&(Dn=(0,S._1)(Se,"bias","fused conv2d"),[Dn]=(0,Ma.makeTypesMatch)(Dn,ht),"NHWC"===ie?Kt.assertAndGetBroadcastShape(gn.outShape,Dn.shape):(b.hu(Dn.shape.length<=1,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${Dn.shape.length}.`),b.hu(0===Dn.shape.length||Dn.shape[0]===gn.outChannels||1===Dn.shape[0],()=>`Error in fused conv2d: bias shape (${Dn.shape}) is not compatible with the number of output channels (${gn.outChannels})`))),null!=je){const Nn=je.shape;if(b.hu(Nn.length<=1||3===Nn.length,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${Nn.length}.`),1===Nn.length)b.hu(1===Nn[0]||Nn[0]===gn.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${Nn}) is not compatible with the number of output channels (${gn.outChannels}).`);else if(3===Nn.length)try{Kt.assertAndGetBroadcastShape(Nn,gn.outShape)}catch(Us){throw Error(`Error in fused conv2d: PReLU activation weights (${Nn}) is not compatible with the output shape of the conv2d (${gn.outShape}).`)}ks=(0,S._1)(je,"prelu weights","fused conv2d")}const xr=(Nn,Us)=>{b.hu("NHWC"===ie,()=>`Error in gradient of fused conv2D: got dataFormat of ${ie} but only NHWC is currently supported.`);const[Zt,us,Ts,Vs]=Us,Po=(0,ms.Fr)(Nn,Ts,We);b.hu(xe.I0(ue),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${ue}'`);const Wi=[(0,Vn._)(us.shape,Po,Zt,ee,se),(0,nn.p)(us,Po,Zt.shape,ee,se)];if(null!=Vs){const ai=(0,ms.pf)(Vs,Po);Wi.push(ai)}return Wi},lr={x:Qt,filter:Mt,bias:Dn,preluActivationWeights:ks},ls={strides:ee,pad:se,dataFormat:ie,dilations:ue,dimRoundingMode:ge,activation:We,leakyreluAlpha:ct};return null==Se?(0,Ut.cb)((Us,Zt,us)=>{let Ts=k.BV.runKernel($._V0,lr,ls);return us([Zt,Us,Ts]),bn&&(Ts=(0,K.X)(Ts,[Ts.shape[1],Ts.shape[2],Ts.shape[3]])),{value:Ts,gradFunc:xr}})(Qt,Mt):(0,Ut.cb)((Us,Zt,us,Ts)=>{let Vs=k.BV.runKernel($._V0,lr,ls);return Ts([Zt,Us,Vs,us]),bn&&(Vs=(0,K.X)(Vs,[Vs.shape[1],Vs.shape[2],Vs.shape[3]])),{value:Vs,gradFunc:xr}})(Qt,Mt,Dn)}});var yr=h(1260),oi=h(7021);const ko=(0,N.op)({fusedDepthwiseConv2d_:function Cc({x:re,filter:ne,strides:ee,pad:se,dataFormat:ie="NHWC",dilations:ue=[1,1],dimRoundingMode:ge,bias:Se,activation:We="linear",preluActivationWeights:je,leakyreluAlpha:ct}){if(!1===(0,ms.uy)(k.BV.state.gradientDepth,We)){let ls=(0,pa.B)(re,ne,ee,se,ie,ue,ge);return null!=Se&&(ls=(0,P.I)(ls,Se)),(0,ms.QH)(ls,We,je,ct)}const ht=(0,S._1)(re,"x","depthwiseConv2d","float32"),Mt=(0,S._1)(ne,"filter","depthwiseConv2d","float32");let Qt=ht,bn=!1;3===ht.rank&&(bn=!0,Qt=(0,K.X)(ht,[1,ht.shape[0],ht.shape[1],ht.shape[2]])),b.hu(4===Qt.rank,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${Qt.rank}.`),b.hu(4===Mt.rank,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${Mt.rank}.`),b.hu(Qt.shape[3]===Mt.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${Qt.shape[3]}) must match the inChannels dimension in filter ${Mt.shape[2]}.`),null==ue&&(ue=[1,1]),b.hu(xe.jT(ee,ue),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${ee} and dilations '${ue}'`),xe.m("fused depthwiseConv2d",se,ge);const Cn=xe.Ix(Qt.shape,Mt.shape,ee,ue,se,ge,!0);let gn,Dn;null!=Se&&(gn=(0,S._1)(Se,"bias","fused conv2d"),[gn]=(0,Ma.makeTypesMatch)(gn,ht),Kt.assertAndGetBroadcastShape(Cn.outShape,gn.shape)),null!=je&&(Dn=(0,S._1)(je,"prelu weights","fused depthwiseConv2d"));const ks=(ls,Nn)=>{b.hu(xe.I0(ue),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${ue}'`);const[Us,Zt,us,Ts]=Nn,Vs=(0,ms.Fr)(ls,us,We),Po=(0,oi.v)(Zt.shape,Vs,Us,ee,se,ue,ge),Do=(0,yr.z)(Zt,Vs,Us.shape,ee,se,ue,ge);return null!=Ts?[Po,Do,(0,ms.pf)(gn,Vs)]:[Po,Do]},xr={x:Qt,filter:Mt,bias:gn,preluActivationWeights:Dn},lr={strides:ee,pad:se,dataFormat:ie,dilations:ue,dimRoundingMode:ge,activation:We,leakyreluAlpha:ct};return null==Se?(0,Ut.cb)((Nn,Us,Zt)=>{let us=k.BV.runKernel($.luS,xr,lr);return Zt([Us,Nn,us]),bn&&(us=(0,K.X)(us,[us.shape[1],us.shape[2],us.shape[3]])),{value:us,gradFunc:ks}})(Qt,Mt):(0,Ut.cb)((Nn,Us,Zt,us)=>{let Ts=k.BV.runKernel($.luS,xr,lr);return us([Us,Nn,Ts,Zt]),bn&&(Ts=(0,K.X)(Ts,[Ts.shape[1],Ts.shape[2],Ts.shape[3]])),{value:Ts,gradFunc:ks}})(Qt,Mt,gn)}}),qd=(0,N.op)({fusedMatMul_:function Yf({a:re,b:ne,transposeA:ee=!1,transposeB:se=!1,bias:ie,activation:ue="linear",preluActivationWeights:ge,leakyreluAlpha:Se=.2}){if(!1===(0,ms.uy)(k.BV.state.gradientDepth,ue)){let Vs=(0,ae.O)(re,ne,ee,se);return null!=ie&&(Vs=(0,P.I)(Vs,ie)),(0,ms.QH)(Vs,ue,ge,Se)}let We=(0,S._1)(re,"a","fused matMul"),je=(0,S._1)(ne,"b","fused matMul");[We,je]=(0,Ma.makeTypesMatch)(We,je);const ct=ee?We.shape[We.rank-2]:We.shape[We.rank-1],ht=se?je.shape[je.rank-1]:je.shape[je.rank-2],Mt=ee?We.shape[We.rank-1]:We.shape[We.rank-2],Qt=se?je.shape[je.rank-2]:je.shape[je.rank-1],bn=We.shape.slice(0,-2),Cn=je.shape.slice(0,-2),gn=b.NA(bn),Dn=b.NA(Cn);b.hu(ct===ht,()=>`Error in fused matMul: inner shapes (${ct}) and (${ht}) of Tensors with shapes ${We.shape} and ${je.shape} and transposeA=${ee} and transposeB=${se} must match.`);const xr=Kt.assertAndGetBroadcastShape(We.shape.slice(0,-2),je.shape.slice(0,-2)).concat([Mt,Qt]),lr=(0,K.X)(We,ee?[gn,ct,Mt]:[gn,Mt,ct]),ls=(0,K.X)(je,se?[Dn,Qt,ht]:[Dn,ht,Qt]);let Nn,Us;null!=ie&&(Nn=(0,S._1)(ie,"bias","fused matMul"),[Nn]=(0,Ma.makeTypesMatch)(Nn,We),Kt.assertAndGetBroadcastShape(xr,Nn.shape)),null!=ge&&(Us=(0,S._1)(ge,"prelu weights","fused matMul"));const Zt=(Vs,Po)=>{const[Do,$o,Wi,ai]=Po,Fa=(0,ms.Fr)((0,K.X)(Vs,Wi.shape),Wi,ue);let gs,La;return ee||se?!ee&&se?(gs=(0,ae.O)(Fa,$o,!1,!1),La=(0,ae.O)(Fa,Do,!0,!1)):ee&&!se?(gs=(0,ae.O)($o,Fa,!1,!0),La=(0,ae.O)(Do,Fa,!1,!1)):(gs=(0,ae.O)($o,Fa,!0,!0),La=(0,ae.O)(Fa,Do,!0,!0)):(gs=(0,ae.O)(Fa,$o,!1,!0),La=(0,ae.O)(Do,Fa,!0,!1)),null!=ie?[gs,La,(0,ms.pf)(ai,Fa)]:[gs,La]},us={a:lr,b:ls,bias:Nn,preluActivationWeights:Us},Ts={transposeA:ee,transposeB:se,activation:ue,leakyreluAlpha:Se};return null==ie?(0,Ut.cb)((Po,Do,$o)=>{const Wi=k.BV.runKernel($.usg,us,Ts);return $o([Po,Do,Wi]),{value:(0,K.X)(Wi,xr),gradFunc:Zt}})(lr,ls):(0,Ut.cb)((Po,Do,$o,Wi)=>{const ai=k.BV.runKernel($.usg,us,Ts);return Wi([Po,Do,ai,$o]),{value:(0,K.X)(ai,xr),gradFunc:Zt}})(lr,ls,Nn)}}),RE=(0,N.op)({hammingWindow_:function fn(re){return yt(re,.54,.46)}}),Qf=(0,N.op)({hannWindow_:function kg(re){return yt(re,.5,.5)}}),eh=(0,N.op)({frame_:function Pg(re,ne,ee,se=!1,ie=0){let ue=0;const ge=[];for(;ue+ne<=re.size;)ge.push((0,ke.t)(re,ue,ne)),ue+=ee;if(se)for(;ue<re.size;){const Se=ue+ne-re.size,We=(0,le.z)([(0,ke.t)(re,ue,ne-Se),(0,Vl.h)([Se],ie)]);ge.push(We),ue+=ee}return 0===ge.length?Yl([],[0,ne]):(0,K.X)((0,le.z)(ge),[ge.length,ne])}}),Fg=(0,N.op)({stft_:function $g(re,ne,ee,se,ie=Qf){null==se&&(se=Ye(ne));const ue=eh(re,ne,ee),ge=(0,E.d)(ue,ie(ne));return(0,Pu.Q)(ge,se)}}),Pn=(0,N.op)({cropAndResize_:function pt(re,ne,ee,se,ie="bilinear",ue=0){const ge=(0,S._1)(re,"image","cropAndResize"),Se=(0,S._1)(ne,"boxes","cropAndResize","float32"),We=(0,S._1)(ee,"boxInd","cropAndResize","int32"),je=Se.shape[0];return b.hu(4===ge.rank,()=>`Error in cropAndResize: image must be rank 4,but got rank ${ge.rank}.`),b.hu(2===Se.rank&&4===Se.shape[1],()=>`Error in cropAndResize: boxes must be have size [${je},4] but had shape ${Se.shape}.`),b.hu(1===We.rank&&We.shape[0]===je,()=>`Error in cropAndResize: boxInd must be have size [${je}] but had shape ${Se.shape}.`),b.hu(2===se.length,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${se.length}.`),b.hu(se[0]>=1&&se[1]>=1,()=>`cropSize must be atleast [1,1], but was ${se}`),b.hu("bilinear"===ie||"nearest"===ie,()=>`method must be bilinear or nearest, but was ${ie}`),k.BV.runKernel($.VcC,{image:ge,boxes:Se,boxInd:We},{method:ie,extrapolationValue:ue,cropSize:se})}}),tr=(0,N.op)({flipLeftRight_:function Lg(re){const ne=(0,S._1)(re,"image","flipLeftRight","float32");return b.hu(4===ne.rank,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${ne.rank}.`),k.BV.runKernel($.Uyb,{image:ne},{})}}),Uu=(0,N.op)({grayscaleToRGB_:function Jf(re){const ne=(0,S._1)(re,"image","grayscaleToRGB"),ee=ne.rank-1,se=ne.shape[ee];b.hu(ne.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${ne.rank}.`),b.hu(1===se,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${se}.`);const ie=new Array(ne.rank);return ie.fill(1,0,ee),ie[ee]=3,(0,Yn.G)(ne,ie)}}),th=(0,N.op)({rotateWithOffset_:function ii(re,ne,ee=0,se=.5){const ie=(0,S._1)(re,"image","rotateWithOffset","float32");return b.hu(4===ie.rank,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${ie.rank}.`),k.BV.runKernel($.b9H,{image:ie},{radians:ne,fillValue:ee,center:se})}});function ka(re,ne,ee,se,ie,ue){null==se&&(se=.5),null==ie&&(ie=Number.NEGATIVE_INFINITY),null==ue&&(ue=0);const ge=re.shape[0];return ee=Math.min(ee,ge),b.hu(0<=se&&se<=1,()=>`iouThreshold must be in [0, 1], but was '${se}'`),b.hu(2===re.rank,()=>`boxes must be a 2D tensor, but was of rank '${re.rank}'`),b.hu(4===re.shape[1],()=>`boxes must have 4 columns, but 2nd dimension was ${re.shape[1]}`),b.hu(1===ne.rank,()=>"scores must be a 1D tensor"),b.hu(ne.shape[0]===ge,()=>`scores has incompatible shape with boxes. Expected ${ge}, but was ${ne.shape[0]}`),b.hu(0<=ue&&ue<=1,()=>`softNmsSigma must be in [0, 1], but was '${ue}'`),{maxOutputSize:ee,iouThreshold:se,scoreThreshold:ie,softNmsSigma:ue}}const Bg=(0,N.op)({nonMaxSuppression_:function ME(re,ne,ee,se=.5,ie=Number.NEGATIVE_INFINITY){const ue=(0,S._1)(re,"boxes","nonMaxSuppression","float32"),ge=(0,S._1)(ne,"scores","nonMaxSuppression","float32"),Se=ka(ue,ge,ee,se,ie);return k.BV.runKernel($.uv1,{boxes:ue,scores:ge},{maxOutputSize:ee=Se.maxOutputSize,iouThreshold:se=Se.iouThreshold,scoreThreshold:ie=Se.scoreThreshold})}});var ql=h(152);function vr(){return(vr=(0,Hs.Z)(function*(re,ne,ee,se=.5,ie=Number.NEGATIVE_INFINITY){const ue=(0,S._1)(re,"boxes","nonMaxSuppressionAsync"),ge=(0,S._1)(ne,"scores","nonMaxSuppressionAsync"),Se=ka(ue,ge,ee,se,ie);ee=Se.maxOutputSize,se=Se.iouThreshold,ie=Se.scoreThreshold;const We=yield Promise.all([ue.data(),ge.data()]),je=We[0],ct=We[1],{selectedIndices:ht}=(0,ql.GP)(je,ct,ee,se,ie);return ue!==re&&ue.dispose(),ge!==ne&&ge.dispose(),Zr(ht,"int32")})).apply(this,arguments)}const eu=(0,N.op)({nonMaxSuppressionWithScore_:function qf(re,ne,ee,se=.5,ie=Number.NEGATIVE_INFINITY,ue=0){const ge=(0,S._1)(re,"boxes","nonMaxSuppression"),Se=(0,S._1)(ne,"scores","nonMaxSuppression"),We=ka(ge,Se,ee,se,ie,ue),ht=k.BV.runKernel($.W0H,{boxes:ge,scores:Se},{maxOutputSize:ee=We.maxOutputSize,iouThreshold:se=We.iouThreshold,scoreThreshold:ie=We.scoreThreshold,softNmsSigma:ue=We.softNmsSigma});return{selectedIndices:ht[0],selectedScores:ht[1]}}});function nh(){return(nh=(0,Hs.Z)(function*(re,ne,ee,se=.5,ie=Number.NEGATIVE_INFINITY,ue=0){const ge=(0,S._1)(re,"boxes","nonMaxSuppressionAsync"),Se=(0,S._1)(ne,"scores","nonMaxSuppressionAsync"),We=ka(ge,Se,ee,se,ie,ue);ee=We.maxOutputSize,se=We.iouThreshold,ie=We.scoreThreshold,ue=We.softNmsSigma;const je=yield Promise.all([ge.data(),Se.data()]),ct=je[0],ht=je[1],{selectedIndices:Mt,selectedScores:Qt}=(0,ql.pA)(ct,ht,ee,se,ie,ue);return ge!==re&&ge.dispose(),Se!==ne&&Se.dispose(),{selectedIndices:Zr(Mt,"int32"),selectedScores:Zr(Qt)}})).apply(this,arguments)}const Vg=(0,N.op)({nonMaxSuppressionPadded_:function Ug(re,ne,ee,se=.5,ie=Number.NEGATIVE_INFINITY,ue=!1){const ge=(0,S._1)(re,"boxes","nonMaxSuppression"),Se=(0,S._1)(ne,"scores","nonMaxSuppression"),We=ka(ge,Se,ee,se,ie,null),bn=k.BV.runKernel($.cye,{boxes:ge,scores:Se},{maxOutputSize:We.maxOutputSize,iouThreshold:We.iouThreshold,scoreThreshold:We.scoreThreshold,padToMaxOutputSize:ue});return{selectedIndices:bn[0],validOutputs:bn[1]}}});function Vu(){return(Vu=(0,Hs.Z)(function*(re,ne,ee,se=.5,ie=Number.NEGATIVE_INFINITY,ue=!1){const ge=(0,S._1)(re,"boxes","nonMaxSuppressionAsync"),Se=(0,S._1)(ne,"scores","nonMaxSuppressionAsync"),We=ka(ge,Se,ee,se,ie,null),je=We.maxOutputSize,ct=We.iouThreshold,ht=We.scoreThreshold,[Mt,Qt]=yield Promise.all([ge.data(),Se.data()]),{selectedIndices:bn,validOutputs:Cn}=(0,ql.qP)(Mt,Qt,je,ct,ht,ue);return ge!==re&&ge.dispose(),Se!==ne&&Se.dispose(),{selectedIndices:Zr(bn,"int32"),validOutputs:(0,Hn.i)(Cn,"int32")}})).apply(this,arguments)}var rh=h(4052),zg=h(5438);const sp=(0,N.op)({threshold_:function np(re,ne="binary",ee=!1,se=.5){const ie=(0,S._1)(re,"image","threshold"),We=ie.shape[0]*ie.shape[1];let ct,ht,Mt,Qt,je=(0,E.d)(Zr([se]),255);if(b.hu(3===ie.rank,()=>`Error in threshold: image must be rank 3,but got rank ${ie.rank}.`),b.hu(3===ie.shape[2]||1===ie.shape[2],()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${ie.shape[2]}.`),b.hu("int32"===ie.dtype||"float32"===ie.dtype,()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${ie.dtype}.`),b.hu("otsu"===ne||"binary"===ne,()=>`Method must be binary or otsu, but was ${ne}`),3===ie.shape[2]){[ct,ht,Mt]=(0,$u.V)(ie,[1,1,1],-1);const gn=(0,E.d)(ct,.2989),Dn=(0,E.d)(ht,.587),ks=(0,E.d)(Mt,.114);Qt=(0,P.I)((0,P.I)(gn,Dn),ks)}else Qt=re;"otsu"===ne&&(je=function Ic(re,ne){let ue,ge,Se,We,je,ct,ee=Zr([-1]),se=Zr([0]),ie=Zr([0]);for(let ht=0;ht<re.size-1;ht++){ue=(0,ke.t)(re,0,ht+1),ge=(0,ke.t)(re,ht+1),je=(0,rs.h)((0,ar.S)(ue),ne),ct=(0,rs.h)((0,ar.S)(ge),ne);const Mt=(0,ar.S)((0,E.d)(ue,Ia(0,ue.size)));Se=(0,rs.h)(Mt,(0,ar.S)(ue));const Qt=(0,Vl.h)(ge.shape,ue.size),bn=(0,P.I)(Ia(0,ge.size),Qt),Cn=(0,E.d)(ge,bn);We=(0,rs.h)((0,ar.S)(Cn),(0,ar.S)(ge));const gn=(0,kn.l)(Se,We),Dn=(0,kn.l)(Se,We),ks=(0,E.d)(je,ct);ie=(0,E.d)((0,E.d)(ks,gn),Dn);const xr=(0,Hr.p)(ie,se);se=(0,Ra.a)(xr,ie,se),ee=(0,Ra.a)(xr,Zr([ht]),ee)}return ee}(St((0,Q.p)((0,wa.N)(Qt),"int32"),(0,Fu.X)([]),256),We));const bn=ee?(0,Yo.z)(Qt,je):(0,Hr.p)(Qt,je);return(0,Q.p)((0,E.d)(bn,255),"int32")}}),op=(0,N.op)({transform_:function rp(re,ne,ee="nearest",se="constant",ie=0,ue){const ge=(0,S._1)(re,"image","transform","float32"),Se=(0,S._1)(ne,"transforms","transform","float32");return b.hu(4===ge.rank,()=>`Error in transform: image must be rank 4,but got rank ${ge.rank}.`),b.hu(2===Se.rank&&(Se.shape[0]===ge.shape[0]||1===Se.shape[0])&&8===Se.shape[1],()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),b.hu(null==ue||2===ue.length,()=>`Error in transform: outputShape must be [height, width] or null, but got ${ue}.`),k.BV.runKernel($.wx7,{image:ge,transforms:Se},{interpolation:ee,fillMode:se,fillValue:ie,outputShape:ue})}}),Tc=(0,N.op)({bandPart_:function ip(re,ne,ee){(0,b.hu)(ne%1==0,()=>`bandPart(): numLower must be an integer, got ${ne}.`),(0,b.hu)(ee%1==0,()=>`bandPart(): numUpper must be an integer, got ${ee}.`);const se=(0,S._1)(re,"a","bandPart");(0,b.hu)(se.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${se.rank}.`);const ie=se.shape,[ue,ge]=se.shape.slice(-2);if(!(ne<=ue))throw new Error(`bandPart(): numLower (${ne}) must not be greater than the number of rows (${ue}).`);if(!(ee<=ge))throw new Error(`bandPart(): numUpper (${ee}) must not be greater than the number of columns (${ge}).`);ne<0&&(ne=ue),ee<0&&(ee=ge);const Se=(0,K.X)(Ia(0,ue,1,"int32"),[-1,1]),We=Ia(0,ge,1,"int32"),je=(0,kn.l)(Se,We),ct=(0,Sn.H)((0,Yo.z)(je,(0,Hn.i)(+ne,"int32")),(0,Oo.b)(je,(0,Hn.i)(-ee,"int32"))),ht=(0,ri.l)([ue,ge],se.dtype);return(0,K.X)((0,si.k)((0,_c.H)((0,K.X)(se,[-1,ue,ge])).map(Mt=>(0,Ra.a)(ct,Mt,ht))),ie)}}),Gg=(0,N.op)({gramSchmidt_:function Wg(re){let ne;if(Array.isArray(re)){ne=!1,(0,b.hu)(null!=re&&re.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const ie=re[0].shape[0];for(let ue=1;ue<re.length;++ue)(0,b.hu)(re[ue].shape[0]===ie,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${re[ue].shape[0]} vs. ${ie})`)}else ne=!0,re=(0,$u.V)(re,re.shape[0],0).map(ie=>(0,El.L)(ie,[0]));(0,b.hu)(re.length<=re[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${re.length}) exceeds number of dimensions (${re[0].shape[0]}).`);const ee=[],se=re;for(let ie=0;ie<re.length;++ie)ee.push(k.BV.tidy(()=>{let ue=se[ie];if(ie>0)for(let ge=0;ge<ie;++ge){const Se=(0,E.d)((0,ar.S)((0,E.d)(ee[ge],ue)),ee[ge]);ue=(0,kn.l)(ue,Se)}return(0,rs.h)(ue,(0,Jl.K)(ue,"euclidean"))}));return ne?(0,si.k)(ee,0):ee}});var Ur=h(9370);function Is(re,ne=!1){return k.BV.tidy(()=>{(0,b.hu)(2===re.shape.length,()=>`qr2d() requires a 2D Tensor, but got a ${re.shape.length}D Tensor.`);const ee=re.shape[0],se=re.shape[1];let ie=$r(ee),ue=(0,It.d)(re);const ge=Yl([[1]],[1,1]);let Se=(0,It.d)(ge);const We=ee>=se?se:ee;for(let je=0;je<We;++je){const ct=ue,ht=Se,Mt=ie;[Se,ue,ie]=k.BV.tidy(()=>{const Qt=(0,ke.t)(ue,[je,je],[ee-je,1]),bn=(0,Jl.K)(Qt),Cn=(0,ke.t)(ue,[je,je],[1,1]),gn=(0,Ra.a)((0,Hr.p)(Cn,0),Yl([[-1]]),Yl([[1]])),Dn=(0,kn.l)(Cn,(0,E.d)(gn,bn)),ks=(0,rs.h)(Qt,Dn);Se=1===ks.shape[0]?(0,It.d)(ge):(0,le.z)([ge,(0,ke.t)(ks,[1,0],[ks.shape[0]-1,ks.shape[1]])],0);const xr=(0,I.W)((0,rs.h)((0,ae.O)(gn,Dn),bn)),lr=(0,ke.t)(ue,[je,0],[ee-je,se]),ls=(0,E.d)(xr,Se),Nn=(0,Bu.p)(Se);if(0===je)ue=(0,kn.l)(lr,(0,ae.O)(ls,(0,ae.O)(Nn,lr)));else{const us=(0,kn.l)(lr,(0,ae.O)(ls,(0,ae.O)(Nn,lr)));ue=(0,le.z)([(0,ke.t)(ue,[0,0],[je,se]),us],0)}const Us=(0,Bu.p)(ls),Zt=(0,ke.t)(ie,[0,je],[ee,ie.shape[1]-je]);if(0===je)ie=(0,kn.l)(Zt,(0,ae.O)((0,ae.O)(Zt,Se),Us));else{const us=(0,kn.l)(Zt,(0,ae.O)((0,ae.O)(Zt,Se),Us));ie=(0,le.z)([(0,ke.t)(ie,[0,0],[ee,je]),us],1)}return[Se,ue,ie]}),(0,Ur.B9)([ct,ht,Mt])}return!ne&&ee>se&&(ie=(0,ke.t)(ie,[0,0],[ee,se]),ue=(0,ke.t)(ue,[0,0],[se,se])),[ie,ue]})}const Hg=(0,N.op)({qr_:function Pa(re,ne=!1){if((0,b.hu)(re.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${re.rank}`),2===re.rank)return Is(re,ne);{const ee=re.shape.slice(0,re.shape.length-2).reduce((We,je)=>We*je),se=(0,_c.H)((0,K.X)(re,[ee,re.shape[re.shape.length-2],re.shape[re.shape.length-1]]),0),ie=[],ue=[];return se.forEach(We=>{const[je,ct]=Is(We,ne);ie.push(je),ue.push(ct)}),[(0,K.X)((0,si.k)(ie,0),re.shape),(0,K.X)((0,si.k)(ue,0),re.shape)]}}});var uo=h(4761);const zi=(0,N.op)({computeWeightedLoss_:function Kg(re,ne,ee=uo.I.SUM_BY_NONZERO_WEIGHTS){const se=(0,S._1)(re,"losses","computeWeightedLoss");let ie=null;null!=ne&&(ie=(0,S._1)(ne,"weights","computeWeightedLoss"));const ue=null==ie?se:(0,E.d)(se,ie);if(ee===uo.I.NONE)return ue;if(ee===uo.I.SUM)return(0,ar.S)(ue);if(ee===uo.I.MEAN){if(null==ie)return(0,Oi.J)(ue);{const ge=se.size/ie.size,Se=(0,rs.h)((0,ar.S)(ue),(0,ar.S)(ie));return ge>1?(0,rs.h)(Se,(0,Hn.i)(ge)):Se}}if(ee===uo.I.SUM_BY_NONZERO_WEIGHTS){if(null==ie)return(0,rs.h)((0,ar.S)(ue),(0,Hn.i)(se.size));{const ge=(0,E.d)(ie,(0,Ir.i)(se.shape)),Se=(0,Q.p)((0,ar.S)((0,g.Q)(ge,(0,Hn.i)(0))),"float32");return(0,rs.h)((0,ar.S)(ue),Se)}}throw Error(`Unknown reduction: ${ee}`)}}),Xg=(0,N.op)({absoluteDifference_:function jg(re,ne,ee,se=uo.I.SUM_BY_NONZERO_WEIGHTS){const ie=(0,S._1)(re,"labels","absoluteDifference"),ue=(0,S._1)(ne,"predictions","absoluteDifference");let ge=null;null!=ee&&(ge=(0,S._1)(ee,"weights","absoluteDifference")),(0,b.k5)(ie.shape,ue.shape,"Error in absoluteDifference: ");const Se=(0,U.W)((0,kn.l)(ie,ue));return zi(Se,ge,se)}}),Sc=(0,N.op)({cosineDistance_:function wc(re,ne,ee,se,ie=uo.I.SUM_BY_NONZERO_WEIGHTS){const ue=(0,S._1)(re,"labels","cosineDistance"),ge=(0,S._1)(ne,"predictions","cosineDistance");let Se=null;null!=se&&(Se=(0,S._1)(se,"weights","cosineDistance")),(0,b.k5)(ue.shape,ge.shape,"Error in cosineDistance: ");const We=(0,Hn.i)(1),je=(0,kn.l)(We,(0,ar.S)((0,E.d)(ue,ge),ee,!0));return zi(je,Se,ie)}}),oh=(0,N.op)({hingeLoss_:function Nc(re,ne,ee,se=uo.I.SUM_BY_NONZERO_WEIGHTS){let ie=(0,S._1)(re,"labels","hingeLoss");const ue=(0,S._1)(ne,"predictions","hingeLoss");let ge=null;null!=ee&&(ge=(0,S._1)(ee,"weights","hingeLoss")),(0,b.k5)(ie.shape,ue.shape,"Error in hingeLoss: ");const Se=(0,Hn.i)(1);ie=(0,kn.l)((0,E.d)((0,Hn.i)(2),ie),Se);const We=(0,Sr.U)((0,kn.l)(Se,(0,E.d)(ie,ue)));return zi(We,ge,se)}}),Zg=(0,N.op)({huberLoss_:function ap(re,ne,ee,se=1,ie=uo.I.SUM_BY_NONZERO_WEIGHTS){const ue=(0,S._1)(re,"labels","huberLoss"),ge=(0,S._1)(ne,"predictions","huberLoss");let Se=null;null!=ee&&(Se=(0,S._1)(ee,"weights","huberLoss")),(0,b.k5)(ue.shape,ge.shape,"Error in huberLoss: ");const We=(0,Hn.i)(se),je=(0,U.W)((0,kn.l)(ge,ue)),ct=(0,ml.L)(je,We),ht=(0,kn.l)(je,ct),Mt=(0,P.I)((0,E.d)((0,Hn.i)(.5),(0,Da.h)(ct)),(0,E.d)(We,ht));return zi(Mt,Se,ie)}}),zu=(0,N.op)({logLoss_:function $a(re,ne,ee,se=1e-7,ie=uo.I.SUM_BY_NONZERO_WEIGHTS){const ue=(0,S._1)(re,"labels","logLoss"),ge=(0,S._1)(ne,"predictions","logLoss");let Se=null;null!=ee&&(Se=(0,S._1)(ee,"weights","logLoss")),(0,b.k5)(ue.shape,ge.shape,"Error in logLoss: ");const We=(0,Hn.i)(1),je=(0,Hn.i)(se),ct=(0,I.W)((0,E.d)(ue,(0,xa.c)((0,P.I)(ge,je)))),ht=(0,E.d)((0,kn.l)(We,ue),(0,xa.c)((0,P.I)((0,kn.l)(We,ge),je))),Mt=(0,kn.l)(ct,ht);return zi(Mt,Se,ie)}}),Qg=(0,N.op)({meanSquaredError_:function Yg(re,ne,ee,se=uo.I.SUM_BY_NONZERO_WEIGHTS){const ie=(0,S._1)(re,"labels","meanSquaredError"),ue=(0,S._1)(ne,"predictions","meanSquaredError");let ge=null;null!=ee&&(ge=(0,S._1)(ee,"weights","meanSquaredError")),(0,b.k5)(ie.shape,ue.shape,"Error in meanSquaredError: ");const Se=(0,Lr.$)(ie,ue);return zi(Se,ge,se)}}),Jg=(0,N.op)({sigmoidCrossEntropy_:function ih(re,ne,ee,se=0,ie=uo.I.SUM_BY_NONZERO_WEIGHTS){let ue=(0,S._1)(re,"multiClassLabels","sigmoidCrossEntropy");const ge=(0,S._1)(ne,"logits","sigmoidCrossEntropy");let Se=null;if(null!=ee&&(Se=(0,S._1)(ee,"weights","sigmoidCrossEntropy")),(0,b.k5)(ue.shape,ge.shape,"Error in sigmoidCrossEntropy: "),se>0){const je=(0,Hn.i)(se),ct=(0,Hn.i)(1),ht=(0,Hn.i)(.5);ue=(0,P.I)((0,E.d)(ue,(0,kn.l)(ct,je)),(0,E.d)(ht,je))}const We=function Wu(re,ne){const ee=(0,S._1)(re,"labels","sigmoidCrossEntropyWithLogits"),se=(0,S._1)(ne,"logits","sigmoidCrossEntropyWithLogits");(0,b.k5)(ee.shape,se.shape,"Error in sigmoidCrossEntropyWithLogits: ");const ie=(0,Sr.U)(se),ue=(0,E.d)(se,ee),ge=(0,Qn.K)((0,Zo.Q)((0,I.W)((0,U.W)(se))));return(0,P.I)((0,kn.l)(ie,ue),ge)}(ue,ge);return zi(We,Se,ie)}}),PE=(0,N.op)({softmaxCrossEntropy_:function kE(re,ne,ee,se=0,ie=uo.I.SUM_BY_NONZERO_WEIGHTS){let ue=(0,S._1)(re,"onehotLabels","softmaxCrossEntropy");const ge=(0,S._1)(ne,"logits","softmaxCrossEntropy");let Se=null;if(null!=ee&&(Se=(0,S._1)(ee,"weights","softmaxCrossEntropy")),(0,b.k5)(ue.shape,ge.shape,"Error in softmaxCrossEntropy: "),se>0){const je=(0,Hn.i)(se),ct=(0,Hn.i)(1),ht=(0,Hn.i)(ue.shape[1]);ue=(0,P.I)((0,E.d)(ue,(0,kn.l)(ct,je)),(0,rs.h)(je,ht))}const We=function qg(re,ne,ee=-1){if(-1===ee&&(ee=ne.rank-1),ee!==ne.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${ne.rank} and dim was ${ee}`);return(0,Ut.cb)((ie,ue,ge)=>{const We=(0,Qo.l)(ue,[ee],!0),je=(0,kn.l)((0,Q.p)(ue,"float32"),We);ge([ie,je]);const ct=(0,I.W)((0,E.d)(je,ie));return{value:(0,ar.S)(ct,[ee]),gradFunc:(Qt,bn)=>{const[Cn,gn]=bn,Dn=(0,gl.rv)(Qt.shape,[ee]);return[(0,E.d)((0,K.X)(Qt,Dn),(0,kn.l)((0,Q.p)(Cn,"float32"),(0,Zo.Q)(gn))),(0,E.d)((0,K.X)(Qt,Dn),(0,kn.l)((0,Zo.Q)(gn),(0,Q.p)(Cn,"float32")))]}}})(re,ne)}(ue,ge);return zi(We,Se,ie)}}),lp=(0,N.op)({sparseFillEmptyRows_:function Ac(re,ne,ee,se){const ie=(0,S._1)(re,"indices","sparseFillEmptyRows","int32"),ue=(0,S._1)(ne,"values","sparseFillEmptyRows"),ge=(0,S._1)(ee,"denseShape","sparseFillEmptyRows","int32"),Se=(0,S._1)(se,"defaultValue","sparseFillEmptyRows",ue.dtype);if(2!==ie.rank)throw new Error(`Indices should be Tensor2D but received shape\n        ${ie.shape}`);if(1!==ue.rank)throw new Error(`Values should be Tensor1D but received shape ${ue.shape}`);if(1!==ge.rank)throw new Error(`Dense shape should be Tensor1D but received shape ${ge.shape}`);if(0!==Se.rank)throw new Error(`Default value should be a scalar but received shape ${Se.shape}`);const je=k.BV.runKernel($.O3z,{indices:ie,values:ue,denseShape:ge,defaultValue:Se});return{outputIndices:je[0],outputValues:je[1],emptyRowIndicator:je[2],reverseIndexMap:je[3]}}}),Oc=(0,N.op)({sparseReshape_:function ah(re,ne,ee){const se=(0,S._1)(re,"inputIndices","sparseReshape","int32"),ie=(0,S._1)(ne,"inputShape","sparseReshape","int32"),ue=(0,S._1)(ee,"newShape","sparseReshape","int32");if(2!==se.rank)throw new Error(`Input indices should be Tensor2D but received shape\n        ${se.shape}`);if(1!==ie.rank)throw new Error(`Input shape should be Tensor1D but received shape ${ie.shape}`);if(1!==ue.rank)throw new Error(`New shape should be Tensor1D but received shape ${ue.shape}`);const Se=k.BV.runKernel($.nhH,{inputIndices:se,inputShape:ie,newShape:ue});return{outputIndices:Se[0],outputShape:Se[1]}}}),cp=(0,N.op)({sparseSegmentMean_:function up(re,ne,ee){const se=(0,S._1)(re,"data","sparseSegmentMean"),ie=(0,S._1)(ne,"indices","sparseSegmentMean","int32"),ue=(0,S._1)(ee,"segmentIds","sparseSegmentMean","int32");if(se.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==ie.rank)throw new Error(`Indices should be Tensor1D but received shape\n          ${ie.shape}`);if(1!==ue.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n          ${ue.shape}`);return k.BV.runKernel($.w3H,{data:se,indices:ie,segmentIds:ue})}}),e0=(0,N.op)({sparseSegmentSum_:function tu(re,ne,ee){const se=(0,S._1)(re,"data","sparseSegmentSum"),ie=(0,S._1)(ne,"indices","sparseSegmentSum","int32"),ue=(0,S._1)(ee,"segmentIds","sparseSegmentSum","int32");if(se.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==ie.rank)throw new Error(`Indices should be Tensor1D but received shape\n         ${ie.shape}`);if(1!==ue.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n         ${ue.shape}`);return k.BV.runKernel($.ZjV,{data:se,indices:ie,segmentIds:ue})}}),lh=(0,N.op)({stringNGrams_:function nu(re,ne,ee,se,ie,ue,ge,Se){const We=(0,S._1)(re,"data","stringNGrams","string");if("string"!==We.dtype)throw new Error("Data must be of datatype string");if(1!==We.shape.length)throw new Error(`Data must be a vector, saw: ${We.shape}`);const je=(0,S._1)(ne,"dataSplits","stringNGrams");if("int32"!==je.dtype)throw new Error("Data splits must be of datatype int32");const Mt=k.BV.runKernel($._JP,{data:We,dataSplits:je},{separator:ee,nGramWidths:se,leftPad:ie,rightPad:ue,padWidth:ge,preserveShortSequences:Se});return{nGrams:Mt[0],nGramsSplits:Mt[1]}}}),$E=(0,N.op)({stringSplit_:function Rc(re,ne,ee=!0){const se=(0,S._1)(re,"input","stringSplit","string"),ie=(0,S._1)(ne,"delimiter","stringSplit","string");if(1!==se.rank)throw new Error(`Input should be Tensor1D but received shape ${se.shape}`);if(0!==ie.rank)throw new Error(`Delimiter should be a scalar but received shape ${ie.shape}`);const Se=k.BV.runKernel($.s1s,{input:se,delimiter:ie},{skipEmpty:ee});return{indices:Se[0],values:Se[1],shape:Se[2]}}}),hp=(0,N.op)({stringToHashBucketFast_:function dp(re,ne){const ee=(0,S._1)(re,"input","stringToHashBucketFast","string"),se={numBuckets:ne};if(ne<=0)throw new Error("Number of buckets must be at least 1");return k.BV.runKernel($.XkS,{input:ee},se)}}),t0={fft:Li.k,ifft:Xr.S,rfft:Pu.Q,irfft:jn.w},n0={hammingWindow:RE,hannWindow:Qf,frame:eh,stft:Fg},Gu={flipLeftRight:tr,grayscaleToRGB:Uu,resizeNearestNeighbor:zg.j,resizeBilinear:rh.I,rotateWithOffset:th,cropAndResize:Pn,nonMaxSuppression:Bg,nonMaxSuppressionAsync:function Dc(re,ne,ee){return vr.apply(this,arguments)},nonMaxSuppressionWithScore:eu,nonMaxSuppressionWithScoreAsync:function Vi(re,ne,ee){return nh.apply(this,arguments)},nonMaxSuppressionPadded:Vg,nonMaxSuppressionPaddedAsync:function sh(re,ne,ee){return Vu.apply(this,arguments)},threshold:sp,transform:op},uh={bandPart:Tc,gramSchmidt:Gg,qr:Hg},ch={absoluteDifference:Xg,computeWeightedLoss:zi,cosineDistance:Sc,hingeLoss:oh,huberLoss:Zg,logLoss:zu,meanSquaredError:Qg,sigmoidCrossEntropy:Jg,softmaxCrossEntropy:PE},Mc={sparseFillEmptyRows:lp,sparseReshape:Oc,sparseSegmentMean:cp,sparseSegmentSum:e0},kc={stringNGrams:lh,stringSplit:$E,stringToHashBucketFast:hp}},4158:(Re,Y,h)=>{"use strict";h.d(Y,{v:()=>k});var V=h(3738),U=h(1070),W=h(9608);const k=(0,h(6721).op)({pad_:function P($,S,b=0){const N=(0,W._1)($,"x","pad");if(0===N.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");return V.BV.runKernel(U.lyA,{x:N},{paddings:S,constantValue:b})}})},8944:(Re,Y,h)=>{"use strict";h.d(Y,{d:()=>H});var V=h(9608),U=h(1396),W=h(809),L=h(5347),P=h(744),k=h(748),$=h(6721),S=h(9416),b=h(2616);const H=(0,$.op)({pool_:function N(oe,J,de,pe,be,we,Ce){null==be&&(be=[1,1]),null==we&&(we=1),0===pe&&(pe="valid");const me=(0,V._1)(oe,"x","maxPool");let ye=me,xe=!1;3===me.rank&&(xe=!0,ye=(0,S.X)(me,[1,me.shape[0],me.shape[1],me.shape[2]])),U.hu(P.jT(we,be),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${we} and dilations '${be}'`);const Q=P.Xw(ye.shape,J,we,be,pe),K=[Q.dilationHeight,Q.dilationWidth];let w;w="same"===pe?function M(oe,J){const pe=oe.map((Ce,me)=>Ce+(Ce-1)*(J[me]-1)).map(Ce=>Ce-1),be=pe.map(Ce=>Math.floor(Ce/2)),we=pe.map((Ce,me)=>Ce-be[me]);return pe.map((Ce,me)=>[be[me],we[me]])}([Q.filterHeight,Q.filterWidth],K):[[0,0],[0,0]];const q=1===K[0]&&1===K[1],[le,ae]=function O(oe,J,de){const pe=de.map(Q=>Q[0]),be=de.map(Q=>Q[1]),we=oe.concat(pe,be),Ce=J.map((Q,K)=>(Q-we[K]%Q)%Q),me=be.map((Q,K)=>Q+Ce[K]),ye=J.map((Q,K)=>[pe[K],me[K]]),xe=J.map((Q,K)=>[0,Ce[K]]);return[ye,xe]}([Q.inHeight,Q.inWidth],K,w),E=q?pe:"valid",Oe=q?ye:(0,b.f)(ye,K,le),Pe=("avg"===de?()=>(0,W.w)(Oe,J,we,E,Ce):()=>(0,k._)(Oe,J,we,E,Ce))(),Ne=q?Pe:(0,L.E)(Pe,K,ae);return xe?(0,S.X)(Ne,[Ne.shape[1],Ne.shape[2],Ne.shape[3]]):Ne}})},9043:(Re,Y,h)=>{"use strict";h.d(Y,{s:()=>$});var V=h(3738),U=h(1070),W=h(7904),L=h(9608);const $=(0,h(6721).op)({pow_:function k(S,b){let N=(0,L._1)(S,"base","pow"),O=(0,L._1)(b,"exp","pow");return[N,O]=(0,W.makeTypesMatch)(N,O),V.BV.runKernel(U.pe_,{a:N,b:O})}})},1426:(Re,Y,h)=>{"use strict";h.d(Y,{A:()=>k});var V=h(3738),U=h(1070),W=h(9608);const k=(0,h(6721).op)({prelu_:function P($,S){const b=(0,W._1)($,"x","prelu"),N=(0,W._1)(S,"alpha","prelu");return V.BV.runKernel(U.o0g,{x:b,alpha:N})}})},2174:(Re,Y,h)=>{"use strict";function V(U,W=!1){console.log(U.toString(W))}h.d(Y,{S:()=>V})},2107:(Re,Y,h)=>{"use strict";h.d(Y,{W:()=>$});var V=h(3738),U=h(1070),W=h(9608),L=h(9734);const $=(0,h(6721).op)({prod_:function k(S,b=null,N=!1){let O=(0,W._1)(S,"x","prod");return"bool"===O.dtype&&(O=(0,L.p)(O,"int32")),V.BV.runKernel(U.DlI,{x:O},{axis:b,keepDims:N})}})},5732:(Re,Y,h)=>{"use strict";h.d(Y,{k:()=>k});var V=h(3738),U=h(1070),W=h(9608);const k=(0,h(6721).op)({real_:function P($){const b={input:(0,W._1)($,"input","real")};return V.BV.runKernel(U.xJR,b)}})},6071:(Re,Y,h)=>{"use strict";h.d(Y,{M:()=>k});var V=h(3738),U=h(1070),W=h(9608);const k=(0,h(6721).op)({reciprocal_:function P($){const b={x:(0,W._1)($,"x","reciprocal")};return V.BV.runKernel(U.$HU,b)}})},4563:(Re,Y,h)=>{"use strict";h.d(Y,{U:()=>k});var V=h(3738),U=h(1070),W=h(9608);const k=(0,h(6721).op)({relu_:function P($){const b={x:(0,W._1)($,"x","relu")};return V.BV.runKernel(U.qkr,b)}})},5049:(Re,Y,h)=>{"use strict";h.d(Y,{b:()=>k});var V=h(3738),U=h(1070),W=h(9608);const k=(0,h(6721).op)({relu6_:function P($){const b={x:(0,W._1)($,"x","relu6")};return V.BV.runKernel(U.SbG,b)}})},9416:(Re,Y,h)=>{"use strict";h.d(Y,{X:()=>k});var V=h(3738),U=h(1070),W=h(9608);const k=(0,h(6721).op)({reshape_:function P($,S){const N={x:(0,W._1)($,"x","reshape","string_or_numeric")};return V.BV.runKernel(U.HZH,N,{shape:S})}})},9264:(Re,Y,h)=>{"use strict";h.d(Y,{G:()=>k});var V=h(3738),U=h(1070),W=h(9608);const k=(0,h(6721).op)({reverse_:function P($,S){const N={x:(0,W._1)($,"x","reverse")};return V.BV.runKernel(U.mKl,N,{dims:S})}})},8015:(Re,Y,h)=>{"use strict";h.d(Y,{N:()=>k});var V=h(3738),U=h(1070),W=h(9608);const k=(0,h(6721).op)({round_:function P($){const b={x:(0,W._1)($,"x","round")};return V.BV.runKernel(U.e07,b)}})},3443:(Re,Y,h)=>{"use strict";h.d(Y,{b:()=>k});var V=h(3738),U=h(1070),W=h(9608);const k=(0,h(6721).op)({rsqrt_:function P($){const b={x:(0,W._1)($,"x","rsqrt","float32")};return V.BV.runKernel(U.bV0,b)}})},316:(Re,Y,h)=>{"use strict";h.d(Y,{i:()=>W});var V=h(1396),U=h(3906);function W(L,P){if(((0,V.fU)(L)&&"string"!==P||Array.isArray(L))&&"complex64"!==P)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===P&&(0,V.fU)(L)&&!(L instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return(0,U.H)(L,[],[],P)}},2808:(Re,Y,h)=>{"use strict";h.r(Y),h.d(Y,{calculateShapes:()=>L,validateInput:()=>W,validateUpdateShape:()=>U});var V=h(1396);function U(P,k,$){const S=k.rank>1?k.shape[k.rank-1]:1,b=k.rank>1?k.rank-1:1,N=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${$.shape}, indices.shape: ${k.shape}, shape: ${P}, sliceDim: ${S}, and batchDim: ${b}.`;if($.rank<b)throw new Error(N+` update.rank < ${b}. `);if(P.length<S+($.rank-b))throw new Error(N+` Output shape length < ${S+($.rank-b)}`);if($.rank!==b+P.length-S)throw new Error(N+" update.rank != "+(b+P.length-S));for(let O=0;O<b;++O)if($.shape[O]!==k.shape[O])throw new Error(N+` updates.shape[${O}] (${$.shape[O]}) != indices.shape[${O}] (${k.shape[O]}).`);for(let O=0;O<$.rank-b;++O)if($.shape[O+b]!==P[O+S])throw new Error(N+` updates.shape[${O+b}] (${$.shape[O+b]}) != shape[${O+b}] (${P[O+b]})`)}function W(P,k,$){if(k.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${k.rank}.`);if(P.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${P.rank}.`);if("int32"!==k.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${k.dtype}`);if($.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${$}`);if(0===$.length){if(0===k.size)throw new Error(`Indices specified for empty output. indices shape: ${k.shape}`);if(0===P.size)throw new Error(`Updates specified for empty output. updates shape: ${P.shape}`)}U($,k,P)}function L(P,k,$){const S=k.shape.length,b=S>1?k.shape[S-1]:1,N=$.length;let O=1;for(let de=b;de<N;++de)O*=$[de];const M=b<1?1:b;return{sliceRank:b,numUpdates:(0,V.NA)(k.shape)/M,sliceSize:O,strides:[...(0,V.e3)($.slice(0,b)),1],outputSize:(0,V.NA)($)}}},2747:(Re,Y,h)=>{"use strict";h.d(Y,{U:()=>k});var V=h(3738),U=h(1070),W=h(9608);const k=(0,h(6721).op)({selu_:function P($){const b={x:(0,W._1)($,"x","selu")};return V.BV.runKernel(U.oFR,b)}})},8617:(Re,Y,h)=>{"use strict";h.d(Y,{$:()=>U,y:()=>V});const V=1.7580993408473768,U=1.0507009873554805},9587:(Re,Y,h)=>{"use strict";h.d(Y,{U:()=>S});var V=h(9608),U=h(1396),W=h(7605),L=h(6818),P=h(6721),k=h(9416);const S=(0,P.op)({separableConv2d_:function $(b,N,O,M,H,oe=[1,1],J="NHWC"){const de=(0,V._1)(b,"x","separableConv2d"),pe=(0,V._1)(N,"depthwiseFilter","separableConv2d"),be=(0,V._1)(O,"pointwiseFilter","separableConv2d");let we=de,Ce=!1;if(3===de.rank&&(Ce=!0,we=(0,k.X)(de,[1,de.shape[0],de.shape[1],de.shape[2]])),"NCHW"===J)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");U.hu(4===we.rank,()=>`Error in separableConv2d: input must be rank 4, but got rank ${we.rank}.`),U.hu(4===pe.rank,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${pe.rank}.`),U.hu(4===be.rank,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${pe.rank}.`),U.hu(1===be.shape[0],()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${be.shape[0]}.`),U.hu(1===be.shape[1],()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${be.shape[1]}.`);const me=pe.shape[2],ye=pe.shape[3];U.hu(be.shape[2]===me*ye,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${me*ye}, but got ${be.shape[2]}.`);const xe=(0,L.B)(we,pe,M,H,J,oe),K=(0,W.T)(xe,be,1,"valid",J);return Ce?(0,k.X)(K,[K.shape[1],K.shape[2],K.shape[3]]):K}})},6713:(Re,Y,h)=>{"use strict";h.d(Y,{X:()=>k});var V=h(3738),U=h(1070),W=h(9608);const k=(0,h(6721).op)({sigmoid_:function P($){const b={x:(0,W._1)($,"x","sigmoid","float32")};return V.BV.runKernel(U.a5O,b)}})},2820:(Re,Y,h)=>{"use strict";h.d(Y,{X:()=>k});var V=h(3738),U=h(1070),W=h(9608);const k=(0,h(6721).op)({sign_:function P($){const b={x:(0,W._1)($,"x","sign")};return V.BV.runKernel(U.i5y,b)}})},1901:(Re,Y,h)=>{"use strict";h.d(Y,{O:()=>k});var V=h(3738),U=h(1070),W=h(9608);const k=(0,h(6721).op)({sin_:function P($){const b={x:(0,W._1)($,"x","sin","float32")};return V.BV.runKernel(U.RQH,b)}})},3118:(Re,Y,h)=>{"use strict";h.d(Y,{R:()=>k});var V=h(3738),U=h(1070),W=h(9608);const k=(0,h(6721).op)({sinh_:function P($){const b={x:(0,W._1)($,"x","sinh")};return V.BV.runKernel(U.wYB,b)}})},7208:(Re,Y,h)=>{"use strict";h.d(Y,{t:()=>k});var V=h(3738),U=h(1070),W=h(9608);const k=(0,h(6721).op)({slice_:function P($,S,b){const N=(0,W._1)($,"x","slice","string_or_numeric");if(0===N.rank)throw new Error("Slicing scalar is not possible");return V.BV.runKernel(U.p2w,{x:N},{begin:S,size:b})}})},7433:(Re,Y,h)=>{"use strict";h.r(Y),h.d(Y,{assertParamsValid:()=>L,computeFlatOffset:()=>pe,computeOutShape:()=>k,getNormalizedAxes:()=>N,isSliceContinous:()=>de,maskToAxes:()=>P,parseSliceParams:()=>be,sliceInfo:()=>we,startForAxis:()=>oe,startIndicesWithElidedDims:()=>O,stopForAxis:()=>J,stopIndicesWithElidedDims:()=>M,stridesForAxis:()=>H,stridesWithElidedDims:()=>$});var V=h(1396);function L(ye,xe,Q){const K=ye.shape.length;V.hu(K===xe.length,()=>`Error in slice${K}D: Length of begin ${xe} must match the rank of the array (${K}).`),V.hu(K===Q.length,()=>`Error in slice${K}D: Length of size ${Q} must match the rank of the array (${K}).`);for(let w=0;w<K;++w)V.hu(xe[w]+Q[w]<=ye.shape[w],()=>`Error in slice${K}D: begin[${w}] + size[${w}] (${xe[w]+Q[w]}) would overflow input.shape[${w}] (${ye.shape[w]})`)}function P(ye){const xe=[];let Q=0;for(;ye>0;)1&ye&&xe.push(Q),ye/=2,Q++;return xe}function k(ye,xe,Q){const K=[];for(let w=0;w<ye.length;w++)K[w]=Math.ceil((xe[w]-ye[w])/Q[w]);return K}function $(ye,xe,Q,K){const w=[...ye];for(let q=w.length;q<K.length;q++)w.push(1);for(let q=0;q<Q;q++)0===q?w[xe]=1:(w.splice(xe,0,1),w.pop());return w}function S(ye,xe,Q){return Q<=ye?Q:Q-(xe-1)}function b(ye,xe){const Q=[];for(let K=0;K<ye;K++)Q.push(xe+K);return Q}function N(ye,xe,Q,K,w,q,le,ae,E){const Oe=ye.length;let ke=new Array(Oe),Pe=new Array(Oe),Ne=new Array(Oe);if(xe.length&&Q>0){const He=xe[0],mt=Q+1;ke=O(le,He,mt,K,ye),Pe=M(ae,He,mt,w,ye),Ne=$(q,He,mt,ye)}else for(let He=0;He<Oe;He++)ke[He]=oe(le,K,q,ye,He,E),Pe[He]=J(ae,w,q,ye,He,E),Ne[He]=H(q,He,E);return{begin:ke,end:Pe,strides:Ne}}function O(ye,xe,Q,K,w){const q=[...w],le=b(Q,xe);for(let ae=0;ae<q.length;ae++)if(le.indexOf(ae)>-1)q[ae]=0;else{const E=S(xe,Q,ae);let Oe=K[E];ye&1<<E&&(Oe=0),q[ae]=Oe}return q}function M(ye,xe,Q,K,w){const q=[...w],le=b(Q,xe);for(let ae=0;ae<q.length;ae++)if(le.indexOf(ae)>-1)q[ae]=Number.MAX_SAFE_INTEGER;else{const E=S(xe,Q,ae);let Oe=K[E];ye&1<<E&&(Oe=Number.MAX_SAFE_INTEGER),q[ae]=Oe}for(let ae=0;ae<q.length;ae++){const E=w[ae];q[ae]<0&&(q[ae]+=E),q[ae]=V.uZ(0,q[ae],w[ae])}return q}function H(ye,xe,Q){let K=ye[xe];return(Q&1<<xe||null==K)&&(K=1),K}function oe(ye,xe,Q,K,w,q){let le=xe[w];(ye&1<<w||q&1<<w||null==le)&&(le=(Q[w]||1)>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const E=K[w];return le<0&&(le+=E),le=V.uZ(0,le,E-1),le}function J(ye,xe,Q,K,w,q){let le=xe[w];const ae=Q[w]||1;(ye&1<<w||q&1<<w||null==le)&&(le=ae>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const E=K[w];return le<0&&(le+=E),le=ae>0?V.uZ(0,le,E):V.uZ(-1,le,E-1),le}function de(ye,xe,Q){let K=Q.length;for(let w=0;w<Q.length;w++)if(Q[w]>1){K=w;break}for(let w=K+1;w<Q.length;w++)if(xe[w]>0||Q[w]!==ye[w])return!1;return!0}function pe(ye,xe){let Q=ye.length>0?ye[ye.length-1]:1;for(let K=0;K<ye.length-1;K++)Q+=ye[K]*xe[K];return Q}function be(ye,xe,Q){let K;const w=ye.shape.length;let q;return K="number"==typeof xe?[xe,...new Array(w-1).fill(0)]:xe.length<w?xe.concat(new Array(w-xe.length).fill(0)):xe.slice(),K.forEach(le=>{V.hu(-1!==le,()=>"slice() does not support negative begin indexing.")}),q=null==Q?new Array(w).fill(-1):"number"==typeof Q?[Q,...new Array(w-1).fill(-1)]:Q.length<w?Q.concat(new Array(w-Q.length).fill(-1)):Q,q=q.map((le,ae)=>le>=0?le:(V.hu(-1===le,()=>`Negative size values should be exactly -1 but got ${le} for the slice() size at index ${ae}.`),ye.shape[ae]-K[ae])),[K,q]}function we(ye,xe,Q,K,w,q,le,ae,E){let Oe;if(null==K?(Oe=new Array(xe.length),Oe.fill(1)):Oe=K,null!=le&&0!=(le&le-1))throw new Error("Multiple ellipses in slice is not allowed.");let ke=!1;const Pe={dims:Oe.length,numAddAxisAfterEllipsis:0,begin:xe.slice(),end:Q.slice(),strides:Oe.slice(),beginMask:w,endMask:q,ellipsisMask:le,newAxisMask:ae,shrinkAxisMask:E};for(let Et=0;Et<Pe.dims;Et++)ke&&0!=(1<<Et&ae)&&Pe.numAddAxisAfterEllipsis++,1<<Et&le&&(ke=!0);ke||(Pe.ellipsisMask|=1<<Pe.dims,Pe.dims++);const Ne={dims:ye.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function Ce(ye,xe){xe.beginMask=0,xe.endMask=0,xe.shrinkAxisMask=0;let Q=0;xe.beginValid=null!=ye.begin,xe.endValid=null!=ye.end,xe.begin=new Array(xe.dims),xe.end=new Array(xe.dims),xe.strides=new Array(xe.dims),xe.finalShapeGatherIndices=[],xe.finalShapeGatherIndicesSparse=[],xe.inputShapeGatherIndicesSparse=new Array(xe.dims);for(let K=0;K<ye.dims;K++)if(1<<K&ye.ellipsisMask){const w=Math.min(xe.dims-(ye.dims-K)+1+ye.numAddAxisAfterEllipsis,xe.dims);for(;Q<w;Q++)xe.begin[Q]=0,xe.end[Q]=0,xe.strides[Q]=1,xe.beginMask|=1<<Q,xe.endMask|=1<<Q,xe.finalShapeGatherIndices.push(Q),xe.finalShapeGatherIndicesSparse.push(-1),xe.inputShapeGatherIndicesSparse[Q]=K}else if(1<<K&ye.newAxisMask)xe.finalShapeGatherIndices.push(-2),xe.finalShapeGatherIndicesSparse.push(-1);else{if(Q===xe.begin.length)throw Error(`Index out of range using input dim ${Q}; input has only ${xe.dims} dims, ${xe.begin.length}.`);null!=ye.begin&&(xe.begin[Q]=ye.begin[K]),null!=ye.end&&(xe.end[Q]=ye.end[K]),xe.strides[Q]=ye.strides[K],ye.beginMask&1<<K&&(xe.beginMask|=1<<Q),ye.endMask&1<<K&&(xe.endMask|=1<<Q),ye.shrinkAxisMask&1<<K?(xe.finalShapeGatherIndices.push(-1),xe.finalShapeGatherIndicesSparse.push(-1),xe.shrinkAxisMask|=1<<Q):(xe.finalShapeGatherIndices.push(Q),xe.finalShapeGatherIndicesSparse.push(K)),xe.inputShapeGatherIndicesSparse[Q]=K,Q++}}(Pe,Ne);let He=!0,mt=!0,_t=!0;const Rt=[],Dt=[];for(let Et=0;Et<ye.length;++Et){if(0===Ne.strides[Et])throw Error(`strides[${Et}] must be non-zero`);const Vt=!!(Ne.shrinkAxisMask&1<<Et),Ht=ye[Et];if(-1===Ht){Rt.push(Vt?1:-1);continue}const ss=[Ne.beginMask&1<<Et,Ne.endMask&1<<Et],St=[Ne.strides[Et]>0?0:-1,Ne.strides[Et]>0?Ht:Ht-1];if(Vt&&Ne.strides[Et]<=0)throw Error("only stride 1 allowed on non-range indexing.");_t=_t&&1===Ne.strides[Et];const _s=!!(Ne.beginMask&1<<Et&&Ne.endMask&1<<Et);if(Ne.beginValid&&Ne.endValid){if(Vt){const Ke=Ne.begin[Et]<0?Ht+Ne.begin[Et]:Ne.begin[Et];if(Ne.begin[Et]=Ke,Ne.end[Et]=Ne.begin[Et]+1,Ke<0||Ke>=Ht)throw Error(`slice index ${Ne.begin[Et]} of dimension ${Et} out of bounds.`)}else Ne.begin[Et]=me(Ne.begin[Et],0,Ne.strides[Et],Ht,ss,St),Ne.end[Et]=me(Ne.end[Et],1,Ne.strides[Et],Ht,ss,St);const Ie=1===Ne.strides[Et]&&0===Ne.begin[Et]&&Ne.end[Et]===Ht;He=He&&Ie,mt=mt&&(0===Et&&1===Ne.strides[Et]||Ie)}else He=He&&1===Ne.strides[Et]&&_s,mt=mt&&(0===Et&&1===Ne.strides[Et]||_s);let $s,Qs=!1;if(Ne.beginValid&&Ne.endValid?($s=Ne.end[Et]-Ne.begin[Et],Qs=!0):Vt?($s=1,Qs=!0):_s&&Ht>=0&&($s=Ne.strides[Et]<0?-Ht:Ht,Qs=!0),Qs){let Ie;Ie=0===$s||$s<0!=Ne.strides[Et]<0?0:Math.trunc($s/Ne.strides[Et])+($s%Ne.strides[Et]!=0?1:0),Rt.push(Ie)}else Rt.push(-1)}for(let Et=0;Et<Ne.finalShapeGatherIndices.length;++Et){const Vt=Ne.finalShapeGatherIndices[Et];Vt>=0?Dt.push(Rt[Vt]):-2===Vt&&Dt.push(1)}return{finalShapeSparse:Dt.filter((Et,Vt)=>-2!==Ne.finalShapeGatherIndices[Vt]),finalShape:Dt,isIdentity:He,sliceDim0:mt,isSimpleSlice:_t,begin:Ne.begin,end:Ne.end,strides:Ne.strides}}function me(ye,xe,Q,K,w,q){if(w[xe])return Q>0?q[xe]:q[xe+1&1];{const le=ye<0?K+ye:ye;return le<q[0]?q[0]:le>q[1]?q[1]:le}}},2388:(Re,Y,h)=>{"use strict";h.d(Y,{X:()=>k});var V=h(3738),U=h(1070),W=h(9608);const k=(0,h(6721).op)({softmax_:function P($,S=-1){const b=(0,W._1)($,"logits","softmax","float32");if(-1===S&&(S=b.rank-1),S!==b.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${b.rank} and dim was ${S}`);return V.BV.runKernel(U.Gcp,{logits:b},{dim:S})}})},1808:(Re,Y,h)=>{"use strict";h.d(Y,{W:()=>k});var V=h(3738),U=h(1070),W=h(9608);const k=(0,h(6721).op)({softplus_:function P($){const b={x:(0,W._1)($,"x","softplus")};return V.BV.runKernel(U.MRv,b)}})},2616:(Re,Y,h)=>{"use strict";h.d(Y,{f:()=>$});var V=h(3738),U=h(1070),W=h(9608),L=h(1396);const $=(0,h(6721).op)({spaceToBatchND_:function k(S,b,N){const O=(0,W._1)(S,"x","spaceToBatchND");return L.hu(O.rank>=1+b.length,()=>`input rank ${O.rank} should be > than [blockShape] ${b.length}`),L.hu(N.length===b.length,()=>`paddings.shape[0] ${N.length} must be equal to [blockShape] ${b.length}`),L.hu(O.shape.reduce((oe,J,de)=>de>0&&de<=b.length?oe&&(J+N[de-1][0]+N[de-1][1])%b[de-1]==0:oe,!0),()=>`input spatial dimensions ${O.shape.slice(1)} with paddings ${N.toString()} must be divisible by blockShapes ${b.toString()}`),V.BV.runKernel(U.TQc,{x:O},{blockShape:b,paddings:N})}})},8797:(Re,Y,h)=>{"use strict";h.d(Y,{k:()=>k});var V=h(3738),U=h(1070),W=h(1396);const k=(0,h(6721).op)({fft_:function P($){return(0,W.hu)("complex64"===$.dtype,()=>`The dtype for tf.spectral.fft() must be complex64 but got ${$.dtype}.`),V.BV.runKernel(U.vwp,{input:$})}})},9472:(Re,Y,h)=>{"use strict";h.d(Y,{S:()=>k});var V=h(3738),U=h(1070),W=h(1396);const k=(0,h(6721).op)({ifft_:function P($){return(0,W.hu)("complex64"===$.dtype,()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${$.dtype}.`),V.BV.runKernel(U.Qg5,{input:$})}})},8109:(Re,Y,h)=>{"use strict";h.d(Y,{w:()=>H});var V=h(9907),U=h(5667),W=h(5294),L=h(8788),P=h(6721),k=h(5732),$=h(9416),S=h(9264),b=h(316),N=h(7208),O=h(9472);const H=(0,P.op)({irfft_:function M(oe){const J=oe.shape[oe.shape.length-1],de=oe.size/J;let pe;if(J<=2){const be=(0,$.X)(oe,[de,J]);pe=(0,O.S)(be)}else{const be=[de,2*(J-1)],we=(0,$.X)((0,k.k)(oe),[de,J]),Ce=(0,$.X)((0,W.a)(oe),[de,J]),me=(0,S.G)((0,N.t)(we,[0,1],[de,J-2]),1),ye=(0,L.d)((0,S.G)((0,N.t)(Ce,[0,1],[de,J-2]),1),(0,b.i)(-1)),xe=(0,U.z)([we,me],1),Q=(0,U.z)([Ce,ye],1),K=(0,$.X)((0,V.P)(xe,Q),[be[0],be[1]]);pe=(0,O.S)(K)}if(pe=(0,k.k)(pe),3===oe.rank&&0!==oe.shape[0]){const be=pe,we=oe.shape[0];pe=(0,$.X)(pe,[we,pe.shape[0]/we,pe.shape[1]]),be.dispose()}return pe}})},849:(Re,Y,h)=>{"use strict";h.d(Y,{Q:()=>oe});var V=h(1396),U=h(9907),W=h(5667),L=h(5294),P=h(6721),k=h(5732),$=h(9416),S=h(7208),b=h(4728),N=h(6383),O=h(37),M=h(8797);const oe=(0,P.op)({rfft_:function H(J,de){(0,V.hu)("float32"===J.dtype,()=>`The dtype for rfft() must be real value but got ${J.dtype}`);let pe=J.shape[J.shape.length-1];const be=J.size/pe;let we;if(null!=de&&de<pe){const ae=J.shape.map(Oe=>0),E=J.shape.map(Oe=>Oe);E[J.shape.length-1]=de,we=(0,S.t)(J,ae,E),pe=de}else if(null!=de&&de>pe){const ae=J.shape.map(E=>E);ae[J.shape.length-1]=de-pe,we=(0,W.z)([J,(0,N.l)(ae)],J.shape.length-1),pe=de}else we=J;const Ce=(0,O.P)(we),me=(0,$.X)((0,U.P)(we,Ce),[be,pe]),ye=(0,M.k)(me),xe=Math.floor(pe/2)+1,Q=(0,k.k)(ye),K=(0,L.a)(ye),w=(0,b.V)(Q,[xe,pe-xe],Q.shape.length-1),q=(0,b.V)(K,[xe,pe-xe],K.shape.length-1),le=we.shape.slice();return le[we.shape.length-1]=xe,(0,$.X)((0,U.P)(w[0],q[0]),le)}})},4728:(Re,Y,h)=>{"use strict";h.d(Y,{V:()=>k});var V=h(3738),U=h(1070),W=h(9608);const k=(0,h(6721).op)({split_:function P($,S,b=0){const O={x:(0,W._1)($,"x","split")};return V.BV.runKernel(U.L8s,O,{numOrSizeSplits:S,axis:b})}})},5562:(Re,Y,h)=>{"use strict";h.d(Y,{_:()=>k});var V=h(3738),U=h(1070),W=h(9608);const k=(0,h(6721).op)({sqrt_:function P($){const b={x:(0,W._1)($,"x","sqrt","float32")};return V.BV.runKernel(U.FKq,b)}})},4164:(Re,Y,h)=>{"use strict";h.d(Y,{h:()=>P});var V=h(3738),U=h(9608);const P=(0,h(6721).op)({square_:function L(k){const $=(0,U._1)(k,"x","square");return V.BV.runKernel("Square",{x:$},{})}})},3441:(Re,Y,h)=>{"use strict";h.d(Y,{$:()=>S});var V=h(3738),U=h(1070),W=h(7904),L=h(9608),P=h(258);const S=(0,h(6721).op)({squaredDifference_:function $(b,N){let O=(0,L._1)(b,"a","squaredDifference"),M=(0,L._1)(N,"b","squaredDifference");return[O,M]=(0,W.makeTypesMatch)(O,M),(0,P.assertAndGetBroadcastShape)(O.shape,M.shape),V.BV.runKernel(U._tC,{a:O,b:M},{})}})},5527:(Re,Y,h)=>{"use strict";h.d(Y,{L:()=>k});var V=h(9608),U=h(1396),W=h(6721),L=h(9416);const k=(0,W.op)({squeeze_:function P($,S){const b=(0,V._1)($,"x","squeeze","string_or_numeric");return(0,L.X)(b,(0,U.bp)(b.shape,S).newShape)}})},4278:(Re,Y,h)=>{"use strict";h.d(Y,{k:()=>$});var V=h(3738),U=h(1070),W=h(9608),L=h(1396);const $=(0,h(6721).op)({stack_:function k(S,b=0){const N=(0,W.sI)(S,"tensors","stack","string_or_numeric");return L.hu(N.length>=1,()=>"Pass at least one tensor to tf.stack"),N.length>0&&L.hu(b<=N[0].rank,()=>"Axis must be <= rank of the tensor"),V.BV.runKernel(U.QiL,N,{axis:b})}})},6166:(Re,Y,h)=>{"use strict";h.d(Y,{N:()=>k});var V=h(3738),U=h(1070),W=h(9608);const k=(0,h(6721).op)({step_:function P($,S=0){const N={x:(0,W._1)($,"x","step")};return V.BV.runKernel(U.h8e,N,{alpha:S})}})},5617:(Re,Y,h)=>{"use strict";h.d(Y,{N:()=>k});var V=h(3738),U=h(1070),W=h(9608);const k=(0,h(6721).op)({stridedSlice_:function P($,S,b,N,O=0,M=0,H=0,oe=0,J=0){const pe={x:(0,W._1)($,"x","stridedSlice","string_or_numeric")};return V.BV.runKernel(U.jQk,pe,{begin:S,end:b,strides:N,beginMask:O,endMask:M,ellipsisMask:H,newAxisMask:oe,shrinkAxisMask:J})}})},8578:(Re,Y,h)=>{"use strict";h.d(Y,{l:()=>$});var V=h(3738),U=h(1070),W=h(7904),L=h(9608);const $=(0,h(6721).op)({sub_:function k(S,b){let N=(0,L._1)(S,"a","sub"),O=(0,L._1)(b,"b","sub");return[N,O]=(0,W.makeTypesMatch)(N,O),V.BV.runKernel(U.Tr8,{a:N,b:O})}})},5214:(Re,Y,h)=>{"use strict";h.d(Y,{S:()=>$});var V=h(3738),U=h(1070),W=h(9608),L=h(9734);const $=(0,h(6721).op)({sum_:function k(S,b=null,N=!1){let O=(0,W._1)(S,"x","sum");return"bool"===O.dtype&&(O=(0,L.p)(O,"int32")),V.BV.runKernel(U.GBy,{x:O},{axis:b,keepDims:N})}})},3337:(Re,Y,h)=>{"use strict";h.d(Y,{O:()=>k});var V=h(3738),U=h(1070),W=h(9608);const k=(0,h(6721).op)({tan_:function P($){const b={x:(0,W._1)($,"x","tan","float32")};return V.BV.runKernel(U.sEM,b)}})},8998:(Re,Y,h)=>{"use strict";h.d(Y,{A:()=>k});var V=h(3738),U=h(1070),W=h(9608);const k=(0,h(6721).op)({tanh_:function P($){const b={x:(0,W._1)($,"x","tanh","float32")};return V.BV.runKernel(U.MIZ,b)}})},1973:(Re,Y,h)=>{"use strict";h.d(Y,{X:()=>W});var V=h(9608),U=h(3906);function W(L,P,k){const $=(0,V.C)(L,k);return(0,U.H)(L,P,$,k)}},3157:(Re,Y,h)=>{"use strict";h.d(Y,{w:()=>L});var V=h(9608),U=h(1396),W=h(3906);function L(P,k,$){if((0,U.Cq)(P),null!=k&&3!==k.length)throw new Error("tensor3d() requires shape to have three numbers");const S=(0,V.C)(P,$);if(3!==S.length&&1!==S.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===S.length&&null==k)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return(0,W.H)(P,k,S,$)}},3906:(Re,Y,h)=>{"use strict";h.d(Y,{H:()=>L});var V=h(3738),U=h(1396),W=h(8813);function L(P,k,$,S){if(null==S&&(S=(0,U.D2)(P)),"complex64"===S)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!(0,U.fU)(P)&&!Array.isArray(P)&&"number"!=typeof P&&"boolean"!=typeof P&&"string"!=typeof P)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=k){(0,U.Mu)(k);const b=(0,U.NA)(k),N=(0,U.NA)($);(0,U.hu)(b===N,()=>`Based on the provided shape, [${k}], the tensor should have ${b} values but has ${N}`);for(let O=0;O<$.length;++O){const M=$[O],H=O!==$.length-1||M!==(0,U.NA)(k.slice(O));(0,U.hu)($[O]===k[O]||!H,()=>`Error creating a new Tensor. Inferred shape (${$}) does not match the provided shape (${k}). `)}}return!(0,U.fU)(P)&&!Array.isArray(P)&&(P=[P]),k=k||$,P="string"!==S?(0,W.toTypedArray)(P,S):(0,U.xH)(P,[],!0),V.BV.makeTensor(P,k,S)}},3964:(Re,Y,h)=>{"use strict";h.d(Y,{G:()=>$});var V=h(3738),U=h(1070),W=h(9608),L=h(1396);const $=(0,h(6721).op)({tile_:function k(S,b){const N=(0,W._1)(S,"x","tile","string_or_numeric");return L.hu(N.rank===b.length,()=>`Error in transpose: rank of input ${N.rank} must match length of reps ${b}.`),V.BV.runKernel(U.n9L,{x:N},{reps:b})}})},7205:(Re,Y,h)=>{"use strict";h.d(Y,{h:()=>k});var V=h(3738),U=h(1070),W=h(9608);const k=(0,h(6721).op)({topk_:function P($,S=1,b=!0){const N=(0,W._1)($,"x","topk");if(0===N.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const O=N.shape[N.shape.length-1];if(S<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${S}`);if(S>O)throw new Error(`'k' passed to topk() must be <= the last dimension (${O}) but got ${S}`);const M={x:N},H={k:S,sorted:b},[oe,J]=V.BV.runKernel(U.cWu,M,H);return{values:oe,indices:J}}})},9540:(Re,Y,h)=>{"use strict";h.d(Y,{p:()=>M});var V=h(3738),U=h(9370),W=h(1070),L=h(9608),P=h(1396),k=h(9907),$=h(5294),S=h(3304),b=h(6721),N=h(5732);const M=(0,b.op)({transpose_:function O(H,oe,J){const de=(0,L._1)(H,"x","transpose");if(null==oe&&(oe=de.shape.map((we,Ce)=>Ce).reverse()),P.hu(de.rank===oe.length,()=>`Error in transpose: rank of input ${de.rank} must match length of perm ${oe}.`),oe.forEach(we=>{P.hu(we>=0&&we<de.rank,()=>`All entries in 'perm' must be between 0 and ${de.rank-1} but got ${oe}`)}),de.rank<=1)return de.clone();const pe={x:de},be={perm:oe};return"complex64"===de.dtype?(0,U.lu)(()=>{let we=(0,N.k)(de),Ce=(0,$.a)(de);return we=V.BV.runKernel(W.G3Y,{x:we},be),Ce=V.BV.runKernel(W.G3Y,{x:Ce},be),J&&(Ce=(0,S.W)(Ce)),(0,k.P)(we,Ce)}):V.BV.runKernel(W.G3Y,pe,be)}})},3720:(Re,Y,h)=>{"use strict";h.d(Y,{T:()=>$});var V=h(3738),U=h(1070),W=h(9608),L=h(1396);const $=(0,h(6721).op)({unique_:function k(S,b=0){const N=(0,W._1)(S,"x","unique","string_or_numeric");(0,L.hu)(N.rank>0,()=>"The input tensor must be at least 1D");const O={x:N},M={axis:b},[H,oe]=V.BV.runKernel(U.kpP,O,M);return{values:H,indices:oe}}})},2925:(Re,Y,h)=>{"use strict";h.d(Y,{p:()=>$});var V=h(3738),U=h(1070),W=h(9608),L=h(1396);const $=(0,h(6721).op)({unsortedSegmentSum_:function k(S,b,N){const O=(0,W._1)(S,"x","unsortedSegmentSum"),M=(0,W._1)(b,"segmentIds","unsortedSegmentSum","int32");return(0,L.hu)((0,L.GN)(N),()=>"numSegments must be of dtype int"),V.BV.runKernel(U.Qvg,{x:O,segmentIds:M},{numSegments:N})}})},4126:(Re,Y,h)=>{"use strict";h.d(Y,{H:()=>$});var V=h(3738),U=h(1070),W=h(9608),L=h(1396);const $=(0,h(6721).op)({unstack_:function k(S,b=0){const N=(0,W._1)(S,"x","unstack","string_or_numeric");return L.hu(b>=-N.shape.length&&b<N.shape.length,()=>`Axis = ${b} is not in [-${N.shape.length}, ${N.shape.length})`),V.BV.runKernel(U.ToN,{value:N},{axis:b})}})},3062:(Re,Y,h)=>{"use strict";h.d(Y,{a:()=>S});var V=h(3738),U=h(1070),W=h(9608),L=h(6434),P=h(258);const S=(0,h(6721).op)({where_:function $(b,N,O){const M=(0,W._1)(N,"a","where"),H=(0,W._1)(O,"b","where"),oe=(0,W._1)(b,"condition","where","bool"),J=(0,P.assertAndGetBroadcastShape)((0,P.assertAndGetBroadcastShape)(oe.shape,M.shape),H.shape),de=(0,L.U)(oe,J),pe=(0,L.U)(M,J),be=(0,L.U)(H,J);return V.BV.runKernel(U.PhF,{condition:de,t:pe,e:be})}})},6383:(Re,Y,h)=>{"use strict";h.d(Y,{l:()=>L});var V=h(3738),U=h(1396),W=h(9907);function L(P,k="float32"){if("complex64"===k){const S=L(P,"float32"),b=L(P,"float32");return(0,W.P)(S,b)}const $=(0,U.wT)((0,U.NA)(P),k);return V.BV.makeTensor($,P,k)}},37:(Re,Y,h)=>{"use strict";h.d(Y,{P:()=>k});var V=h(3738),U=h(1070),W=h(9608);const k=(0,h(6721).op)({zerosLike_:function P($){const b={x:(0,W._1)($,"x","zerosLike")};return V.BV.runKernel(U.RuY,b)}})},708:(Re,Y,h)=>{"use strict";h.d(Y,{es:()=>me,YD:()=>oe,_w:()=>xe,t3:()=>ye,FZ:()=>Ce,Vp:()=>we,Vi:()=>be});var V=h(5861),U=h(6422),W=h(1396);function $(Q,K,w,q){const le=(0,W.e3)(K),ae=function S(Q,K,w,q){const le=(0,W.NA)(K),ae=q[q.length-1],E=new Array(ae).fill(0),Oe=K.length,ke="complex64"===w?M(Q):Q;if(Oe>1)for(let Pe=0;Pe<le/ae;Pe++){const Ne=Pe*ae;for(let He=0;He<ae;He++)E[He]=Math.max(E[He],b(ke[Ne+He],0,w).length)}return E}(Q,K,w,le),E=K.length,Oe=O(Q,K,w,le,ae),ke=["Tensor"];return q&&(ke.push(`  dtype: ${w}`),ke.push(`  rank: ${E}`),ke.push(`  shape: [${K}]`),ke.push("  values:")),ke.push(Oe.map(Pe=>"    "+Pe).join("\n")),ke.join("\n")}function b(Q,K,w){let q;return q=Array.isArray(Q)?`${parseFloat(Q[0].toFixed(7))} + ${parseFloat(Q[1].toFixed(7))}j`:(0,W.HD)(Q)?`'${Q}'`:"bool"===w?N(Q):parseFloat(Q.toFixed(7)).toString(),(0,W.oj)(q,K)}function N(Q){return 0===Q?"false":"true"}function O(Q,K,w,q,le,ae=!0){const E="complex64"===w?2:1,Oe=K[0],ke=K.length;if(0===ke)return"complex64"===w?[b(M(Q)[0],0,w)]:"bool"===w?[N(Q[0])]:[Q[0].toString()];if(1===ke){if(Oe>20){let Et=Array.from(Q.slice(0,3*E)),Vt=Array.from(Q.slice((Oe-3)*E,Oe*E));return"complex64"===w&&(Et=M(Et),Vt=M(Vt)),["["+Et.map((Ht,ss)=>b(Ht,le[ss],w)).join(", ")+", ..., "+Vt.map((Ht,ss)=>b(Ht,le[Oe-3+ss],w)).join(", ")+"]"]}return["["+("complex64"===w?M(Q):Array.from(Q)).map((Xt,Et)=>b(Xt,le[Et],w)).join(", ")+"]"]}const Pe=K.slice(1),Ne=q.slice(1),He=q[0]*E,mt=[];if(Oe>20){for(let Dt=0;Dt<3;Dt++){const Xt=Dt*He;mt.push(...O(Q.slice(Xt,Xt+He),Pe,w,Ne,le,!1))}mt.push("...");for(let Dt=Oe-3;Dt<Oe;Dt++){const Xt=Dt*He;mt.push(...O(Q.slice(Xt,Xt+He),Pe,w,Ne,le,Dt===Oe-1))}}else for(let Dt=0;Dt<Oe;Dt++){const Xt=Dt*He;mt.push(...O(Q.slice(Xt,Xt+He),Pe,w,Ne,le,Dt===Oe-1))}const _t=2===ke?",":"";mt[0]="["+mt[0]+_t;for(let Dt=1;Dt<mt.length-1;Dt++)mt[Dt]=" "+mt[Dt]+_t;let Rt=",\n";for(let Dt=2;Dt<ke;Dt++)Rt+="\n";return mt[mt.length-1]=" "+mt[mt.length-1]+"]"+(ae?"":Rt),mt}function M(Q){const K=[];for(let w=0;w<Q.length;w+=2)K.push([Q[w],Q[w+1]]);return K}var H=h(8813);class oe{constructor(K,w,q){if(this.dtype=w,this.shape=K.slice(),this.size=W.NA(K),null!=q){const le=q.length;W.hu(le===this.size,()=>`Length of values '${le}' does not match the size inferred by the shape '${this.size}'.`)}if("complex64"===w)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=q||W.rQ(w,this.size),this.strides=(0,W.e3)(K)}set(K,...w){0===w.length&&(w=[0]),W.hu(w.length===this.rank,()=>`The number of provided coordinates (${w.length}) must match the rank (${this.rank})`);const q=this.locToIndex(w);this.values[q]=K}get(...K){0===K.length&&(K=[0]);let w=0;for(const le of K){if(le<0||le>=this.shape[w])throw new Error(`Requested out of range element at ${K}.   Buffer shape=${this.shape}`);w++}let q=K[K.length-1];for(let le=0;le<K.length-1;++le)q+=this.strides[le]*K[le];return this.values[q]}locToIndex(K){if(0===this.rank)return 0;if(1===this.rank)return K[0];let w=K[K.length-1];for(let q=0;q<K.length-1;++q)w+=this.strides[q]*K[q];return w}indexToLoc(K){if(0===this.rank)return[];if(1===this.rank)return[K];const w=new Array(this.shape.length);for(let q=0;q<w.length-1;++q)w[q]=Math.floor(K/this.strides[q]),K-=w[q]*this.strides[q];return w[w.length-1]=K,w}get rank(){return this.shape.length}toTensor(){return J().makeTensor(this.values,this.shape,this.dtype)}}let J=null,de=null,pe=null;function be(Q){J=Q}function we(Q){de=Q}function Ce(Q){pe=Q}class me{constructor(K,w,q,le){this.kept=!1,this.isDisposedInternal=!1,this.shape=K.slice(),this.dtype=w||"float32",this.size=W.NA(K),this.strides=(0,W.e3)(K),this.dataId=q,this.id=le,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}buffer(){var K=this;return(0,V.Z)(function*(){const w=yield K.data();return de.buffer(K.shape,K.dtype,w)})()}bufferSync(){return de.buffer(this.shape,this.dtype,this.dataSync())}array(){var K=this;return(0,V.Z)(function*(){const w=yield K.data();return(0,W.GX)(K.shape,w,"complex64"===K.dtype)})()}arraySync(){return(0,W.GX)(this.shape,this.dataSync(),"complex64"===this.dtype)}data(){var K=this;return(0,V.Z)(function*(){K.throwIfDisposed();const w=J().read(K.dataId);if("string"===K.dtype){const q=yield w;try{return q.map(le=>H.decodeString(le))}catch(le){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return w})()}dataToGPU(K){return this.throwIfDisposed(),J().readToGPU(this.dataId,K)}dataSync(){this.throwIfDisposed();const K=J().readSync(this.dataId);if("string"===this.dtype)try{return K.map(w=>H.decodeString(w))}catch(w){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return K}bytes(){var K=this;return(0,V.Z)(function*(){K.throwIfDisposed();const w=yield J().read(K.dataId);return"string"===K.dtype?w:new Uint8Array(w.buffer)})()}dispose(){this.isDisposed||(J().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(K=!1){return de.print(this,K)}clone(){return this.throwIfDisposed(),de.clone(this)}toString(K=!1){return $(this.dataSync(),this.shape,this.dtype,K)}cast(K){return this.throwIfDisposed(),de.cast(this,K)}variable(K=!0,w,q){return this.throwIfDisposed(),J().makeVariable(this,K,w,q)}}function ye(){return(0,U.R)("Tensor",()=>me)}Object.defineProperty(me,Symbol.hasInstance,{value:Q=>!!Q&&null!=Q.data&&null!=Q.dataSync&&null!=Q.throwIfDisposed}),ye();class xe extends me{constructor(K,w,q,le){super(K.shape,K.dtype,K.dataId,le),this.trainable=w,this.name=q}assign(K){if(K.dtype!==this.dtype)throw new Error(`dtype of the new value (${K.dtype}) and previous value (${this.dtype}) must match`);if(!W.cO(K.shape,this.shape))throw new Error(`shape of the new value (${K.shape}) and previous value (${this.shape}) must match`);J().disposeTensor(this),this.dataId=K.dataId,J().incRef(this,null)}dispose(){J().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(xe,Symbol.hasInstance,{value:Q=>Q instanceof me&&null!=Q.assign&&Q.assign instanceof Function})},7904:(Re,Y,h)=>{"use strict";h.r(Y),h.d(Y,{assertTypesMatch:()=>P,getTensorsInContainer:()=>$,isTensorInList:()=>k,makeTypesMatch:()=>L});var V=h(708),U=h(7770),W=h(1396);function L(N,O){if(N.dtype===O.dtype)return[N,O];const M=(0,U.x8)(N.dtype,O.dtype);return[N.cast(M),O.cast(M)]}function P(N,O){(0,W.hu)(N.dtype===O.dtype,()=>`The dtypes of the first(${N.dtype}) and second(${O.dtype}) input must match`)}function k(N,O){return O.some(M=>M.id===N.id)}function $(N){const O=[];return S(N,O,new Set),O}function S(N,O,M){if(null==N)return;if(N instanceof V.es)return void O.push(N);if(!function b(N){return Array.isArray(N)||"object"==typeof N}(N))return;const H=N;for(const oe in H){const J=H[oe];M.has(J)||(M.add(J),S(J,O,M))}}},9608:(Re,Y,h)=>{"use strict";h.d(Y,{C:()=>k,_1:()=>b,sI:()=>N});var V=h(3738),U=h(1777),W=h(708),L=h(1396),P=h(8813);function k(O,M){let H=O;if((0,L.fU)(O))return"string"===M?[]:[O.length];if(!Array.isArray(O))return[];const oe=[];for(;Array.isArray(H)||(0,L.fU)(H)&&"string"!==M;)oe.push(H.length),H=H[0];return Array.isArray(O)&&(0,U.OB)().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&$(O,oe,[]),oe}function $(O,M,H){if(H=H||[],!Array.isArray(O)&&!(0,L.fU)(O))return void(0,L.hu)(0===M.length,()=>`Element arr[${H.join("][")}] is a primitive, but should be an array/TypedArray of ${M[0]} elements`);(0,L.hu)(M.length>0,()=>`Element arr[${H.join("][")}] should be a primitive, but is an array of ${O.length} elements`),(0,L.hu)(O.length===M[0],()=>`Element arr[${H.join("][")}] should have ${M[0]} elements, but has ${O.length} elements`);const oe=M.slice(1);for(let J=0;J<O.length;++J)$(O[J],oe,H.concat(J))}function S(O,M,H,oe){if("string_or_numeric"!==O){if(null==O)throw new Error("Expected dtype cannot be null.");if("numeric"!==O&&O!==M||"numeric"===O&&"string"===M)throw new Error(`Argument '${H}' passed to '${oe}' must be ${O} tensor, but got ${M} tensor`)}}function b(O,M,H,oe="numeric"){if(O instanceof W.es)return S(oe,O.dtype,M,H),O;let J=(0,L.D2)(O);if("string"!==J&&["bool","int32","float32"].indexOf(oe)>=0&&(J=oe),S(oe,J,M,H),null==O||!(0,L.fU)(O)&&!Array.isArray(O)&&"number"!=typeof O&&"boolean"!=typeof O&&"string"!=typeof O)throw new Error(`Argument '${M}' passed to '${H}' must be a Tensor or TensorLike, but got '${null==O?"null":O.constructor.name}'`);const de=k(O,J);!(0,L.fU)(O)&&!Array.isArray(O)&&(O=[O]);const be="string"!==J?(0,P.toTypedArray)(O,J):(0,L.xH)(O,[],!0);return V.BV.makeTensor(be,de,J)}function N(O,M,H,oe="numeric"){if(!Array.isArray(O))throw new Error(`Argument ${M} passed to ${H} must be a \`Tensor[]\` or \`TensorLike[]\``);return O.map((de,pe)=>b(de,`${M}[${pe}]`,H,oe))}},7770:(Re,Y,h)=>{"use strict";h.d(Y,{x8:()=>$,yw:()=>V,z4:()=>S});var V=(()=>{return(b=V||(V={})).R0="R0",b.R1="R1",b.R2="R2",b.R3="R3",b.R4="R4",b.R5="R5",b.R6="R6",V;var b})(),U=(()=>{return(b=U||(U={})).float32="float32",b.int32="int32",b.bool="int32",b.complex64="complex64",U;var b})(),W=(()=>{return(b=W||(W={})).float32="float32",b.int32="int32",b.bool="bool",b.complex64="complex64",W;var b})(),L=(()=>{return(b=L||(L={})).float32="float32",b.int32="float32",b.bool="float32",b.complex64="complex64",L;var b})(),P=(()=>{return(b=P||(P={})).float32="complex64",b.int32="complex64",b.bool="complex64",b.complex64="complex64",P;var b})();const k={float32:L,int32:U,bool:W,complex64:P};function $(b,N){if("string"===b||"string"===N){if("string"===b&&"string"===N)return"string";throw new Error(`Can not upcast ${b} with ${N}`)}return k[b][N]}function S(b){return $(b,"int32")}},8813:(Re,Y,h)=>{"use strict";h.r(Y),h.d(Y,{arraysEqual:()=>U.cO,assert:()=>U.hu,assertNonNegativeIntegerDimensions:()=>U.Mu,assertNonNull:()=>U.Cq,assertShapesMatch:()=>U.k5,bytesFromStringArray:()=>U.Ub,bytesPerElement:()=>U.bT,checkConversionForErrors:()=>U.D5,clamp:()=>U.uZ,computeStrides:()=>U.e3,createScalarValue:()=>ye,createShuffledIndices:()=>U.U$,decodeString:()=>le,distSquared:()=>U.E7,encodeString:()=>q,fetch:()=>w,fingerPrint64:()=>me,flatten:()=>U.xH,getArrayFromDType:()=>U.rQ,getTypedArrayFromDType:()=>U.WP,hasEncodingLoss:()=>U.QB,hexToLong:()=>k,indexToLoc:()=>U.NE,inferDtype:()=>U.D2,inferFromImplicitShape:()=>U.JZ,isBoolean:()=>U.jn,isFunction:()=>U.mf,isInt:()=>U.GN,isNumber:()=>U.hj,isPromise:()=>U.tI,isScalarShape:()=>U.N9,isString:()=>U.HD,isTypedArray:()=>U.fU,isValidDtype:()=>U.LP,locToIndex:()=>U.qy,makeOnesTypedArray:()=>U.p8,makeZerosNestedTypedArray:()=>U.l6,makeZerosTypedArray:()=>U.wT,nearestDivisor:()=>U.jP,nearestLargerEven:()=>U.nY,now:()=>K,parseAxisParam:()=>U.EC,randUniform:()=>U.bj,repeatedTry:()=>U.WD,rightPad:()=>U.oj,shuffle:()=>U.TV,shuffleCombo:()=>U.d7,sizeFromShape:()=>U.NA,sizeToSquarishShape:()=>U.YP,squeezeShape:()=>U.bp,sum:()=>U.Sm,swap:()=>U.LF,tanh:()=>U.AE,toNestedArray:()=>U.GX,toTypedArray:()=>Q});var V=h(1777),U=h(1396),W=h(7658);const P=h.n(W)()||W;function k(ae){return P.fromString(ae,!0,16)}const $=k("c3a5c85c97cb3127"),S=k("b492b66fbe98f273"),b=k("9ae16a3b2f90404f");function N(ae){return ae.xor(ae.shru(47))}function O(ae,E,Oe){const ke=ae.slice(E,E+Oe);return P.fromBytes(Array.from(ke),!0,!0)}function M(ae,E){return O(ae,E,8)}function H(ae,E){return O(ae,E,4)}function oe(ae,E){return 0===E?ae:ae.shru(E).or(ae.shl(64-E))}function J(ae,E,Oe=k("9ddfea08eb382d69")){let ke=ae.xor(E).mul(Oe);ke=ke.xor(ke.shru(47));let Pe=E.xor(ke).mul(Oe);return Pe=Pe.xor(Pe.shru(47)),Pe=Pe.mul(Oe),Pe}function pe(ae,E,Oe,ke){return function de(ae,E,Oe,ke,Pe,Ne){Pe=Pe.add(ae),Ne=oe(Ne.add(Pe).add(ke),21);const He=Pe;return Pe=(Pe=Pe.add(E)).add(Oe),Ne=Ne.add(oe(Pe,44)),[Pe.add(ke),Ne.add(He)]}(M(ae,E),M(ae,E+8),M(ae,E+16),M(ae,E+24),Oe,ke)}function me(ae,E=ae.length){const Oe=P.fromNumber(81,!0);if(E<=32)return E<=16?function be(ae,E=ae.length){if(E>=8){const Oe=b.add(2*E),ke=M(ae,0).add(b),Pe=M(ae,E-8);return J(oe(Pe,37).mul(Oe).add(ke),oe(ke,25).add(Pe).mul(Oe),Oe)}if(E>=4){const Oe=b.add(2*E);return J(H(ae,0).shl(3).add(E),H(ae,E-4),Oe)}if(E>0){const He=E+(ae[E-1]<<2);return N(b.mul(ae[0]+(ae[E>>1]<<8)).xor($.mul(He))).mul(b)}return b}(ae,E):function we(ae,E=ae.length){const Oe=b.add(2*E),ke=M(ae,0).mul(S),Pe=M(ae,8),Ne=M(ae,E-8).mul(Oe),He=M(ae,E-16).mul(b);return J(oe(ke.add(Pe),43).add(oe(Ne,30)).add(He),ke.add(oe(Pe.add(b),18)).add(Ne),Oe)}(ae,E);if(E<=64)return function Ce(ae,E=ae.length){const Oe=b.add(2*E),ke=M(ae,0).mul(b),Pe=M(ae,8),Ne=M(ae,E-8).mul(Oe),He=M(ae,E-16).mul(b),mt=oe(ke.add(Pe),43).add(oe(Ne,30)).add(He),_t=J(mt,ke.add(oe(Pe.add(b),18)).add(Ne),Oe),Rt=M(ae,16).mul(Oe),Dt=M(ae,24),Xt=mt.add(M(ae,E-32)).mul(Oe),Et=_t.add(M(ae,E-24)).mul(Oe);return J(oe(Rt.add(Dt),43).add(oe(Xt,30)).add(Et),Rt.add(oe(Dt.add(ke),18)).add(Xt),Oe)}(ae,E);let ke=Oe,Pe=Oe.mul(S).add(113),Ne=N(Pe.mul(b).add(113)).mul(b),He=[P.UZERO,P.UZERO],mt=[P.UZERO,P.UZERO];ke=ke.mul(b).add(M(ae,0));let _t=0;const Rt=64*(E-1>>6),Dt=Rt+(E-1&63)-63;do{ke=oe(ke.add(Pe).add(He[0]).add(M(ae,_t+8)),37).mul(S),Pe=oe(Pe.add(He[1]).add(M(ae,_t+48)),42).mul(S),ke=ke.xor(mt[1]),Pe=Pe.add(He[0]).add(M(ae,_t+40)),Ne=oe(Ne.add(mt[0]),33).mul(S),He=pe(ae,_t,He[1].mul(S),ke.add(mt[0])),mt=pe(ae,_t+32,Ne.add(mt[1]),Pe.add(M(ae,_t+16))),[Ne,ke]=[ke,Ne],_t+=64}while(_t!==Rt);const Xt=S.add(Ne.and(255).shl(1));return _t=Dt,mt[0]=mt[0].add(E-1&63),He[0]=He[0].add(mt[0]),mt[0]=mt[0].add(He[0]),ke=oe(ke.add(Pe).add(He[0]).add(M(ae,_t+8)),37).mul(Xt),Pe=oe(Pe.add(He[1]).add(M(ae,_t+48)),42).mul(Xt),ke=ke.xor(mt[1].mul(9)),Pe=Pe.add(He[0].mul(9).add(M(ae,_t+40))),Ne=oe(Ne.add(mt[0]),33).mul(Xt),He=pe(ae,_t,He[1].mul(Xt),ke.add(mt[0])),mt=pe(ae,_t+32,Ne.add(mt[1]),Pe.add(M(ae,_t+16))),[Ne,ke]=[ke,Ne],J(J(He[0],mt[0],Xt).add(N(Pe).mul($)).add(Ne),J(He[1],mt[1],Xt).add(ke),Xt)}function ye(ae,E){return"string"===E?q(ae):Q([ae],E)}function Q(ae,E){if("string"===E)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(ae)&&(ae=U.xH(ae)),(0,V.OB)().getBool("DEBUG")&&U.D5(ae,E),function xe(ae,E){return ae instanceof Float32Array&&"float32"===E||ae instanceof Int32Array&&"int32"===E||ae instanceof Uint8Array&&"bool"===E}(ae,E))return ae;if(null==E||"float32"===E||"complex64"===E)return new Float32Array(ae);if("int32"===E)return new Int32Array(ae);if("bool"===E){const Oe=new Uint8Array(ae.length);for(let ke=0;ke<Oe.length;++ke)0!==Math.round(ae[ke])&&(Oe[ke]=1);return Oe}throw new Error(`Unknown data type ${E}`)}function K(){return(0,V.OB)().platform.now()}function w(ae,E){return(0,V.OB)().platform.fetch(ae,E)}function q(ae,E="utf-8"){return E=E||"utf-8",(0,V.OB)().platform.encode(ae,E)}function le(ae,E="utf-8"){return E=E||"utf-8",(0,V.OB)().platform.decode(ae,E)}},1396:(Re,Y,h)=>{"use strict";function V(Ie){let Ke=Ie.length,ot=0;for(;Ke>0;)ot=Math.random()*Ke|0,Ke--,P(Ie,Ke,ot)}function U(Ie,Ke){if(Ie.length!==Ke.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${Ie.length}Second array length was ${Ke.length}`);let ot=Ie.length,It=0;for(;ot>0;)It=Math.random()*ot|0,ot--,P(Ie,ot,It),P(Ke,ot,It)}function W(Ie,Ke,ot){return Math.max(Ie,Math.min(Ke,ot))}function L(Ie){return Ie%2==0?Ie:Ie+1}function P(Ie,Ke,ot){const It=Ie[Ke];Ie[Ke]=Ie[ot],Ie[ot]=It}function k(Ie){let Ke=0;for(let ot=0;ot<Ie.length;ot++)Ke+=Ie[ot];return Ke}function $(Ie,Ke){const ot=Math.random();return Ke*ot+(1-ot)*Ie}function S(Ie,Ke){let ot=0;for(let It=0;It<Ie.length;It++){const cn=Number(Ie[It])-Number(Ke[It]);ot+=cn*cn}return ot}function b(Ie,Ke){if(!Ie)throw new Error("string"==typeof Ke?Ke:Ke())}function N(Ie,Ke,ot=""){b(J(Ie,Ke),()=>ot+` Shapes ${Ie} and ${Ke} must match`)}function O(Ie){b(null!=Ie,()=>"The input to the tensor constructor must be a non-null value.")}function M(Ie,Ke=[],ot=!1){if(null==Ke&&(Ke=[]),Array.isArray(Ie)||E(Ie)&&!ot)for(let It=0;It<Ie.length;++It)M(Ie[It],Ke,ot);else Ke.push(Ie);return Ke}function H(Ie){if(0===Ie.length)return 1;let Ke=Ie[0];for(let ot=1;ot<Ie.length;ot++)Ke*=Ie[ot];return Ke}function oe(Ie){return 0===Ie.length}function J(Ie,Ke){if(Ie===Ke)return!0;if(null==Ie||null==Ke||Ie.length!==Ke.length)return!1;for(let ot=0;ot<Ie.length;ot++)if(Ie[ot]!==Ke[ot])return!1;return!0}function de(Ie){return Ie%1==0}function pe(Ie){if(null!=Math.tanh)return Math.tanh(Ie);if(Ie===1/0)return 1;if(Ie===-1/0)return-1;{const Ke=Math.exp(2*Ie);return(Ke-1)/(Ke+1)}}function be(Ie){const Ke=Math.ceil(Math.sqrt(Ie));return[Ke,Math.ceil(Ie/Ke)]}function we(Ie){const Ke=new Uint32Array(Ie);for(let ot=0;ot<Ie;++ot)Ke[ot]=ot;return V(Ke),Ke}function Ce(Ie,Ke){return Ke<=Ie.length?Ie:Ie+" ".repeat(Ke-Ie.length)}function me(Ie,Ke=(cn=>0),ot,It=setTimeout){return new Promise((cn,Un)=>{let Xn=0;const Zn=()=>{if(Ie())return void cn();Xn++;const Js=Ke(Xn);null!=ot&&Xn>=ot?Un():It(Zn,Js)};Zn()})}function ye(Ie,Ke){let ot=1,It=-1;for(let Un=0;Un<Ie.length;++Un)if(Ie[Un]>=0)ot*=Ie[Un];else if(-1===Ie[Un]){if(-1!==It)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${It} and dim ${Un}`);It=Un}else if(Ie[Un]<0)throw Error(`Shapes can not be < 0. Found ${Ie[Un]} at dim ${Un}`);if(-1===It){if(Ke>0&&Ke!==ot)throw Error(`Size(${Ke}) must match the product of shape ${Ie}`);return Ie}if(0===ot)throw Error(`Cannot infer the missing size in [${Ie}] when there are 0 elements`);if(Ke%ot!=0)throw Error(`The implicit shape can't be a fractional number. Got ${Ke} / ${ot}`);const cn=Ie.slice();return cn[It]=Ke/ot,cn}function xe(Ie,Ke){const ot=Ke.length;return b((Ie=null==Ie?Ke.map((It,cn)=>cn):[].concat(Ie)).every(It=>It>=-ot&&It<ot),()=>`All values in axis param must be in range [-${ot}, ${ot}) but got axis ${Ie}`),b(Ie.every(It=>de(It)),()=>`All values in axis param must be integers but got axis ${Ie}`),Ie.map(It=>It<0?ot+It:It)}function Q(Ie,Ke){const ot=[],It=[],cn=null!=Ke&&Array.isArray(Ke)&&0===Ke.length,Un=null==Ke||cn?null:xe(Ke,Ie).sort();let Xn=0;for(let Zn=0;Zn<Ie.length;++Zn){if(null!=Un){if(Un[Xn]===Zn&&1!==Ie[Zn])throw new Error(`Can't squeeze axis ${Zn} since its dim '${Ie[Zn]}' is not 1`);(null==Un[Xn]||Un[Xn]>Zn)&&1===Ie[Zn]&&(ot.push(Ie[Zn]),It.push(Zn)),Un[Xn]<=Zn&&Xn++}1!==Ie[Zn]&&(ot.push(Ie[Zn]),It.push(Zn))}return{newShape:ot,keptDims:It}}function K(Ie,Ke){let ot=null;if(null==Ie||"float32"===Ie)ot=new Float32Array(Ke);else if("int32"===Ie)ot=new Int32Array(Ke);else{if("bool"!==Ie)throw new Error(`Unknown data type ${Ie}`);ot=new Uint8Array(Ke)}return ot}function w(Ie,Ke){let ot=null;if(null==Ie||"float32"===Ie)ot=new Float32Array(Ke);else if("int32"===Ie)ot=new Int32Array(Ke);else if("bool"===Ie)ot=new Uint8Array(Ke);else{if("string"!==Ie)throw new Error(`Unknown data type ${Ie}`);ot=new Array(Ke)}return ot}function q(Ie,Ke){for(let ot=0;ot<Ie.length;ot++){const It=Ie[ot];if(isNaN(It)||!isFinite(It))throw Error(`A tensor of type ${Ke} being uploaded contains ${It}.`)}}function le(Ie){return"bool"===Ie||"complex64"===Ie||"float32"===Ie||"int32"===Ie||"string"===Ie}function ae(Ie,Ke){return!("complex64"===Ke||"float32"===Ke&&"complex64"!==Ie||"int32"===Ke&&"float32"!==Ie&&"complex64"!==Ie||"bool"===Ke&&"bool"===Ie)}function E(Ie){return Ie instanceof Float32Array||Ie instanceof Int32Array||Ie instanceof Uint8Array||Ie instanceof Uint8ClampedArray}function Oe(Ie){if("float32"===Ie||"int32"===Ie)return 4;if("complex64"===Ie)return 8;if("bool"===Ie)return 1;throw new Error(`Unknown dtype ${Ie}`)}function ke(Ie){if(null==Ie)return 0;let Ke=0;return Ie.forEach(ot=>Ke+=ot.length),Ke}function Pe(Ie){return"string"==typeof Ie||Ie instanceof String}function Ne(Ie){return"boolean"==typeof Ie}function He(Ie){return"number"==typeof Ie}function mt(Ie){return Array.isArray(Ie)?mt(Ie[0]):Ie instanceof Float32Array?"float32":Ie instanceof Int32Array||Ie instanceof Uint8Array||Ie instanceof Uint8ClampedArray?"int32":He(Ie)?"float32":Pe(Ie)?"string":Ne(Ie)?"bool":"float32"}function _t(Ie){return!!(Ie&&Ie.constructor&&Ie.call&&Ie.apply)}function Rt(Ie,Ke){for(let ot=Ke;ot<Ie;++ot)if(Ie%ot==0)return ot;return Ie}function Dt(Ie){const Ke=Ie.length;if(Ke<2)return[];const ot=new Array(Ke-1);ot[Ke-2]=Ie[Ke-1];for(let It=Ke-3;It>=0;--It)ot[It]=ot[It+1]*Ie[It+1];return ot}function Xt(Ie,Ke,ot,It=!1){const cn=new Array;if(1===Ke.length){const Un=Ke[0]*(It?2:1);for(let Xn=0;Xn<Un;Xn++)cn[Xn]=ot[Ie+Xn]}else{const Un=Ke[0],Xn=Ke.slice(1),Zn=Xn.reduce((Js,Rr)=>Js*Rr)*(It?2:1);for(let Js=0;Js<Un;Js++)cn[Js]=Xt(Ie+Js*Zn,Xn,ot,It)}return cn}function Et(Ie,Ke,ot=!1){if(0===Ie.length)return Ke[0];const It=Ie.reduce((cn,Un)=>cn*Un)*(ot?2:1);if(0===It)return[];if(It!==Ke.length)throw new Error(`[${Ie}] does not match the input size ${Ke.length}${ot?" for a complex tensor":""}.`);return Xt(0,Ie,Ke,ot)}function Vt(Ie,Ke){const ot=Ht(Ie,Ke);for(let It=0;It<ot.length;It++)ot[It]=1;return ot}function Ht(Ie,Ke){if(null==Ke||"float32"===Ke||"complex64"===Ke)return new Float32Array(Ie);if("int32"===Ke)return new Int32Array(Ie);if("bool"===Ke)return new Uint8Array(Ie);throw new Error(`Unknown data type ${Ke}`)}function ss(Ie,Ke){const ot=Ie.reduce((It,cn)=>It*cn,1);if(null==Ke||"float32"===Ke)return Et(Ie,new Float32Array(ot));if("int32"===Ke)return Et(Ie,new Int32Array(ot));if("bool"===Ke)return Et(Ie,new Uint8Array(ot));throw new Error(`Unknown data type ${Ke}`)}function St(Ie){Ie.forEach(Ke=>{b(Number.isInteger(Ke)&&Ke>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${Ie}].`)})}function _s(Ie,Ke,ot){if(0===Ke)return 0;if(1===Ke)return Ie[0];let It=Ie[Ie.length-1];for(let cn=0;cn<Ie.length-1;++cn)It+=ot[cn]*Ie[cn];return It}function $s(Ie,Ke,ot){if(0===Ke)return[];if(1===Ke)return[Ie];const It=new Array(Ke);for(let cn=0;cn<It.length-1;++cn)It[cn]=Math.floor(Ie/ot[cn]),Ie-=It[cn]*ot[cn];return It[It.length-1]=Ie,It}function Qs(Ie){return Ie&&Ie.then&&"function"==typeof Ie.then}h.d(Y,{AE:()=>pe,Cq:()=>O,D2:()=>mt,D5:()=>q,E7:()=>S,EC:()=>xe,GN:()=>de,GX:()=>Et,HD:()=>Pe,JZ:()=>ye,LF:()=>P,LP:()=>le,Mu:()=>St,N9:()=>oe,NA:()=>H,NE:()=>$s,QB:()=>ae,Sm:()=>k,TV:()=>V,U$:()=>we,Ub:()=>ke,WD:()=>me,WP:()=>K,YP:()=>be,bT:()=>Oe,bj:()=>$,bp:()=>Q,cO:()=>J,d7:()=>U,e3:()=>Dt,fU:()=>E,hj:()=>He,hu:()=>b,jP:()=>Rt,jn:()=>Ne,k5:()=>N,l6:()=>ss,mf:()=>_t,nY:()=>L,oj:()=>Ce,p8:()=>Vt,qy:()=>_s,rQ:()=>w,tI:()=>Qs,uZ:()=>W,wT:()=>Ht,xH:()=>M})},7658:Re=>{Re.exports=h;var Y=null;try{Y=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(K){}function h(K,w,q){this.low=0|K,this.high=0|w,this.unsigned=!!q}function V(K){return!0===(K&&K.__isLong__)}Object.defineProperty(h.prototype,"__isLong__",{value:!0}),h.isLong=V;var U={},W={};function L(K,w){var q,le,ae;return w?(ae=0<=(K>>>=0)&&K<256)&&(le=W[K])?le:(q=k(K,(0|K)<0?-1:0,!0),ae&&(W[K]=q),q):(ae=-128<=(K|=0)&&K<128)&&(le=U[K])?le:(q=k(K,K<0?-1:0,!1),ae&&(U[K]=q),q)}function P(K,w){if(isNaN(K))return w?pe:de;if(w){if(K<0)return pe;if(K>=H)return ye}else{if(K<=-oe)return xe;if(K+1>=oe)return me}return K<0?P(-K,w).neg():k(K%M|0,K/M|0,w)}function k(K,w,q){return new h(K,w,q)}h.fromInt=L,h.fromNumber=P,h.fromBits=k;var $=Math.pow;function S(K,w,q){if(0===K.length)throw Error("empty string");if("NaN"===K||"Infinity"===K||"+Infinity"===K||"-Infinity"===K)return de;if("number"==typeof w?(q=w,w=!1):w=!!w,(q=q||10)<2||36<q)throw RangeError("radix");var le;if((le=K.indexOf("-"))>0)throw Error("interior hyphen");if(0===le)return S(K.substring(1),w,q).neg();for(var ae=P($(q,8)),E=de,Oe=0;Oe<K.length;Oe+=8){var ke=Math.min(8,K.length-Oe),Pe=parseInt(K.substring(Oe,Oe+ke),q);if(ke<8){var Ne=P($(q,ke));E=E.mul(Ne).add(P(Pe))}else E=(E=E.mul(ae)).add(P(Pe))}return E.unsigned=w,E}function b(K,w){return"number"==typeof K?P(K,w):"string"==typeof K?S(K,w):k(K.low,K.high,"boolean"==typeof w?w:K.unsigned)}h.fromString=S,h.fromValue=b;var M=4294967296,H=M*M,oe=H/2,J=L(1<<24),de=L(0);h.ZERO=de;var pe=L(0,!0);h.UZERO=pe;var be=L(1);h.ONE=be;var we=L(1,!0);h.UONE=we;var Ce=L(-1);h.NEG_ONE=Ce;var me=k(-1,2147483647,!1);h.MAX_VALUE=me;var ye=k(-1,-1,!0);h.MAX_UNSIGNED_VALUE=ye;var xe=k(0,-2147483648,!1);h.MIN_VALUE=xe;var Q=h.prototype;Q.toInt=function(){return this.unsigned?this.low>>>0:this.low},Q.toNumber=function(){return this.unsigned?(this.high>>>0)*M+(this.low>>>0):this.high*M+(this.low>>>0)},Q.toString=function(w){if((w=w||10)<2||36<w)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(xe)){var q=P(w),le=this.div(q),ae=le.mul(q).sub(this);return le.toString(w)+ae.toInt().toString(w)}return"-"+this.neg().toString(w)}for(var E=P($(w,6),this.unsigned),Oe=this,ke="";;){var Pe=Oe.div(E),He=(Oe.sub(Pe.mul(E)).toInt()>>>0).toString(w);if((Oe=Pe).isZero())return He+ke;for(;He.length<6;)He="0"+He;ke=""+He+ke}},Q.getHighBits=function(){return this.high},Q.getHighBitsUnsigned=function(){return this.high>>>0},Q.getLowBits=function(){return this.low},Q.getLowBitsUnsigned=function(){return this.low>>>0},Q.getNumBitsAbs=function(){if(this.isNegative())return this.eq(xe)?64:this.neg().getNumBitsAbs();for(var w=0!=this.high?this.high:this.low,q=31;q>0&&0==(w&1<<q);q--);return 0!=this.high?q+33:q+1},Q.isZero=function(){return 0===this.high&&0===this.low},Q.eqz=Q.isZero,Q.isNegative=function(){return!this.unsigned&&this.high<0},Q.isPositive=function(){return this.unsigned||this.high>=0},Q.isOdd=function(){return 1==(1&this.low)},Q.isEven=function(){return 0==(1&this.low)},Q.equals=function(w){return V(w)||(w=b(w)),(this.unsigned===w.unsigned||this.high>>>31!=1||w.high>>>31!=1)&&this.high===w.high&&this.low===w.low},Q.eq=Q.equals,Q.notEquals=function(w){return!this.eq(w)},Q.neq=Q.notEquals,Q.ne=Q.notEquals,Q.lessThan=function(w){return this.comp(w)<0},Q.lt=Q.lessThan,Q.lessThanOrEqual=function(w){return this.comp(w)<=0},Q.lte=Q.lessThanOrEqual,Q.le=Q.lessThanOrEqual,Q.greaterThan=function(w){return this.comp(w)>0},Q.gt=Q.greaterThan,Q.greaterThanOrEqual=function(w){return this.comp(w)>=0},Q.gte=Q.greaterThanOrEqual,Q.ge=Q.greaterThanOrEqual,Q.compare=function(w){if(V(w)||(w=b(w)),this.eq(w))return 0;var q=this.isNegative(),le=w.isNegative();return q&&!le?-1:!q&&le?1:this.unsigned?w.high>>>0>this.high>>>0||w.high===this.high&&w.low>>>0>this.low>>>0?-1:1:this.sub(w).isNegative()?-1:1},Q.comp=Q.compare,Q.negate=function(){return!this.unsigned&&this.eq(xe)?xe:this.not().add(be)},Q.neg=Q.negate,Q.add=function(w){V(w)||(w=b(w));var He=0,mt=0,_t=0,Rt=0;return _t+=(Rt+=(65535&this.low)+(65535&w.low))>>>16,mt+=(_t+=(this.low>>>16)+(w.low>>>16))>>>16,He+=(mt+=(65535&this.high)+(65535&w.high))>>>16,He+=(this.high>>>16)+(w.high>>>16),k((_t&=65535)<<16|(Rt&=65535),(He&=65535)<<16|(mt&=65535),this.unsigned)},Q.subtract=function(w){return V(w)||(w=b(w)),this.add(w.neg())},Q.sub=Q.subtract,Q.multiply=function(w){if(this.isZero())return de;if(V(w)||(w=b(w)),Y)return k(Y.mul(this.low,this.high,w.low,w.high),Y.get_high(),this.unsigned);if(w.isZero())return de;if(this.eq(xe))return w.isOdd()?xe:de;if(w.eq(xe))return this.isOdd()?xe:de;if(this.isNegative())return w.isNegative()?this.neg().mul(w.neg()):this.neg().mul(w).neg();if(w.isNegative())return this.mul(w.neg()).neg();if(this.lt(J)&&w.lt(J))return P(this.toNumber()*w.toNumber(),this.unsigned);var ae=65535&this.high,E=this.low>>>16,Oe=65535&this.low,Pe=65535&w.high,Ne=w.low>>>16,He=65535&w.low,mt=0,_t=0,Rt=0,Dt=0;return Rt+=(Dt+=Oe*He)>>>16,_t+=(Rt+=E*He)>>>16,Rt&=65535,_t+=(Rt+=Oe*Ne)>>>16,mt+=(_t+=ae*He)>>>16,_t&=65535,mt+=(_t+=E*Ne)>>>16,_t&=65535,mt+=(_t+=Oe*Pe)>>>16,mt+=(this.high>>>16)*He+ae*Ne+E*Pe+Oe*(w.high>>>16),k((Rt&=65535)<<16|(Dt&=65535),(mt&=65535)<<16|(_t&=65535),this.unsigned)},Q.mul=Q.multiply,Q.divide=function(w){if(V(w)||(w=b(w)),w.isZero())throw Error("division by zero");var le,ae,E;if(Y)return this.unsigned||-2147483648!==this.high||-1!==w.low||-1!==w.high?k((this.unsigned?Y.div_u:Y.div_s)(this.low,this.high,w.low,w.high),Y.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?pe:de;if(this.unsigned){if(w.unsigned||(w=w.toUnsigned()),w.gt(this))return pe;if(w.gt(this.shru(1)))return we;E=pe}else{if(this.eq(xe))return w.eq(be)||w.eq(Ce)?xe:w.eq(xe)?be:(le=this.shr(1).div(w).shl(1)).eq(de)?w.isNegative()?be:Ce:(ae=this.sub(w.mul(le)),E=le.add(ae.div(w)));if(w.eq(xe))return this.unsigned?pe:de;if(this.isNegative())return w.isNegative()?this.neg().div(w.neg()):this.neg().div(w).neg();if(w.isNegative())return this.div(w.neg()).neg();E=de}for(ae=this;ae.gte(w);){le=Math.max(1,Math.floor(ae.toNumber()/w.toNumber()));for(var ke=Math.ceil(Math.log(le)/Math.LN2),Pe=ke<=48?1:$(2,ke-48),Ne=P(le),He=Ne.mul(w);He.isNegative()||He.gt(ae);)He=(Ne=P(le-=Pe,this.unsigned)).mul(w);Ne.isZero()&&(Ne=be),E=E.add(Ne),ae=ae.sub(He)}return E},Q.div=Q.divide,Q.modulo=function(w){return V(w)||(w=b(w)),Y?k((this.unsigned?Y.rem_u:Y.rem_s)(this.low,this.high,w.low,w.high),Y.get_high(),this.unsigned):this.sub(this.div(w).mul(w))},Q.mod=Q.modulo,Q.rem=Q.modulo,Q.not=function(){return k(~this.low,~this.high,this.unsigned)},Q.and=function(w){return V(w)||(w=b(w)),k(this.low&w.low,this.high&w.high,this.unsigned)},Q.or=function(w){return V(w)||(w=b(w)),k(this.low|w.low,this.high|w.high,this.unsigned)},Q.xor=function(w){return V(w)||(w=b(w)),k(this.low^w.low,this.high^w.high,this.unsigned)},Q.shiftLeft=function(w){return V(w)&&(w=w.toInt()),0==(w&=63)?this:w<32?k(this.low<<w,this.high<<w|this.low>>>32-w,this.unsigned):k(0,this.low<<w-32,this.unsigned)},Q.shl=Q.shiftLeft,Q.shiftRight=function(w){return V(w)&&(w=w.toInt()),0==(w&=63)?this:w<32?k(this.low>>>w|this.high<<32-w,this.high>>w,this.unsigned):k(this.high>>w-32,this.high>=0?0:-1,this.unsigned)},Q.shr=Q.shiftRight,Q.shiftRightUnsigned=function(w){if(V(w)&&(w=w.toInt()),0==(w&=63))return this;var q=this.high;return w<32?k(this.low>>>w|q<<32-w,q>>>w,this.unsigned):k(32===w?q:q>>>w-32,0,this.unsigned)},Q.shru=Q.shiftRightUnsigned,Q.shr_u=Q.shiftRightUnsigned,Q.toSigned=function(){return this.unsigned?k(this.low,this.high,!1):this},Q.toUnsigned=function(){return this.unsigned?this:k(this.low,this.high,!0)},Q.toBytes=function(w){return w?this.toBytesLE():this.toBytesBE()},Q.toBytesLE=function(){var w=this.high,q=this.low;return[255&q,q>>>8&255,q>>>16&255,q>>>24,255&w,w>>>8&255,w>>>16&255,w>>>24]},Q.toBytesBE=function(){var w=this.high,q=this.low;return[w>>>24,w>>>16&255,w>>>8&255,255&w,q>>>24,q>>>16&255,q>>>8&255,255&q]},h.fromBytes=function(w,q,le){return le?h.fromBytesLE(w,q):h.fromBytesBE(w,q)},h.fromBytesLE=function(w,q){return new h(w[0]|w[1]<<8|w[2]<<16|w[3]<<24,w[4]|w[5]<<8|w[6]<<16|w[7]<<24,q)},h.fromBytesBE=function(w,q){return new h(w[4]<<24|w[5]<<16|w[6]<<8|w[7],w[0]<<24|w[1]<<16|w[2]<<8|w[3],q)}},340:(Re,Y,h)=>{var V=h(9471),U=h(2992),W=h(7657),L=h(5583),P=h(1929),k=h(8083),$=h(3818);$.alea=V,$.xor128=U,$.xorwow=W,$.xorshift7=L,$.xor4096=P,$.tychei=k,Re.exports=$},9471:function(Re,Y,h){var V;!function(U,W,L){function P(b){var N=this,O=function S(){var b=4022871197;return function(O){O=String(O);for(var M=0;M<O.length;M++){var H=.02519603282416938*(b+=O.charCodeAt(M));H-=b=H>>>0,b=(H*=b)>>>0,b+=4294967296*(H-=b)}return 2.3283064365386963e-10*(b>>>0)}}();N.next=function(){var M=2091639*N.s0+2.3283064365386963e-10*N.c;return N.s0=N.s1,N.s1=N.s2,N.s2=M-(N.c=0|M)},N.c=1,N.s0=O(" "),N.s1=O(" "),N.s2=O(" "),N.s0-=O(b),N.s0<0&&(N.s0+=1),N.s1-=O(b),N.s1<0&&(N.s1+=1),N.s2-=O(b),N.s2<0&&(N.s2+=1),O=null}function k(b,N){return N.c=b.c,N.s0=b.s0,N.s1=b.s1,N.s2=b.s2,N}function $(b,N){var O=new P(b),M=N&&N.state,H=O.next;return H.int32=function(){return 4294967296*O.next()|0},H.double=function(){return H()+11102230246251565e-32*(2097152*H()|0)},H.quick=H,M&&("object"==typeof M&&k(M,O),H.state=function(){return k(O,{})}),H}W&&W.exports?W.exports=$:h.amdD&&h.amdO?void 0!==(V=function(){return $}.call(Y,h,Y,W))&&(W.exports=V):this.alea=$}(0,Re=h.nmd(Re))},8083:function(Re,Y,h){var V;!function(U,W,L){function P(S){var b=this,N="";b.next=function(){var M=b.b,H=b.c,oe=b.d,J=b.a;return M=M<<25^M>>>7^H,H=H-oe|0,oe=oe<<24^oe>>>8^J,J=J-M|0,b.b=M=M<<20^M>>>12^H,b.c=H=H-oe|0,b.d=oe<<16^H>>>16^J,b.a=J-M|0},b.a=0,b.b=0,b.c=-1640531527,b.d=1367130551,S===Math.floor(S)?(b.a=S/4294967296|0,b.b=0|S):N+=S;for(var O=0;O<N.length+20;O++)b.b^=0|N.charCodeAt(O),b.next()}function k(S,b){return b.a=S.a,b.b=S.b,b.c=S.c,b.d=S.d,b}function $(S,b){var N=new P(S),O=b&&b.state,M=function(){return(N.next()>>>0)/4294967296};return M.double=function(){do{var J=((N.next()>>>11)+(N.next()>>>0)/4294967296)/(1<<21)}while(0===J);return J},M.int32=N.next,M.quick=M,O&&("object"==typeof O&&k(O,N),M.state=function(){return k(N,{})}),M}W&&W.exports?W.exports=$:h.amdD&&h.amdO?void 0!==(V=function(){return $}.call(Y,h,Y,W))&&(W.exports=V):this.tychei=$}(0,Re=h.nmd(Re))},2992:function(Re,Y,h){var V;!function(U,W,L){function P(S){var b=this,N="";b.x=0,b.y=0,b.z=0,b.w=0,b.next=function(){var M=b.x^b.x<<11;return b.x=b.y,b.y=b.z,b.z=b.w,b.w^=b.w>>>19^M^M>>>8},S===(0|S)?b.x=S:N+=S;for(var O=0;O<N.length+64;O++)b.x^=0|N.charCodeAt(O),b.next()}function k(S,b){return b.x=S.x,b.y=S.y,b.z=S.z,b.w=S.w,b}function $(S,b){var N=new P(S),O=b&&b.state,M=function(){return(N.next()>>>0)/4294967296};return M.double=function(){do{var J=((N.next()>>>11)+(N.next()>>>0)/4294967296)/(1<<21)}while(0===J);return J},M.int32=N.next,M.quick=M,O&&("object"==typeof O&&k(O,N),M.state=function(){return k(N,{})}),M}W&&W.exports?W.exports=$:h.amdD&&h.amdO?void 0!==(V=function(){return $}.call(Y,h,Y,W))&&(W.exports=V):this.xor128=$}(0,Re=h.nmd(Re))},1929:function(Re,Y,h){var V;!function(U,W,L){function P(S){var b=this;b.next=function(){var oe,J,O=b.w,M=b.X,H=b.i;return b.w=O=O+1640531527|0,J=M[H+34&127],oe=M[H=H+1&127],J^=J<<13,oe^=oe<<17,J=M[H]=(J^=J>>>15)^(oe^=oe>>>12),b.i=H,J+(O^O>>>16)|0},function N(O,M){var H,oe,J,de,pe,be=[],we=128;for(M===(0|M)?(oe=M,M=null):(M+="\0",oe=0,we=Math.max(we,M.length)),J=0,de=-32;de<we;++de)M&&(oe^=M.charCodeAt((de+32)%M.length)),0===de&&(pe=oe),oe^=oe<<10,oe^=oe>>>15,oe^=oe<<4,oe^=oe>>>13,de>=0&&(J=0==(H=be[127&de]^=oe+(pe=pe+1640531527|0))?J+1:0);for(J>=128&&(be[127&(M&&M.length||0)]=-1),J=127,de=512;de>0;--de)oe=be[J+34&127],H=be[J=J+1&127],oe^=oe<<13,H^=H<<17,be[J]=(oe^=oe>>>15)^(H^=H>>>12);O.w=pe,O.X=be,O.i=J}(b,S)}function k(S,b){return b.i=S.i,b.w=S.w,b.X=S.X.slice(),b}function $(S,b){null==S&&(S=+new Date);var N=new P(S),O=b&&b.state,M=function(){return(N.next()>>>0)/4294967296};return M.double=function(){do{var J=((N.next()>>>11)+(N.next()>>>0)/4294967296)/(1<<21)}while(0===J);return J},M.int32=N.next,M.quick=M,O&&(O.X&&k(O,N),M.state=function(){return k(N,{})}),M}W&&W.exports?W.exports=$:h.amdD&&h.amdO?void 0!==(V=function(){return $}.call(Y,h,Y,W))&&(W.exports=V):this.xor4096=$}(0,Re=h.nmd(Re))},5583:function(Re,Y,h){var V;!function(U,W,L){function P(S){var b=this;b.next=function(){var H,oe,O=b.x,M=b.i;return H=O[M],oe=(H^=H>>>7)^H<<24,oe^=(H=O[M+1&7])^H>>>10,oe^=(H=O[M+3&7])^H>>>3,oe^=(H=O[M+4&7])^H<<7,H=O[M+7&7],O[M]=oe^=(H^=H<<13)^H<<9,b.i=M+1&7,oe},function N(O,M){var H,J=[];if(M===(0|M))J[0]=M;else for(M=""+M,H=0;H<M.length;++H)J[7&H]=J[7&H]<<15^M.charCodeAt(H)+J[H+1&7]<<13;for(;J.length<8;)J.push(0);for(H=0;H<8&&0===J[H];++H);for(8==H&&(J[7]=-1),O.x=J,O.i=0,H=256;H>0;--H)O.next()}(b,S)}function k(S,b){return b.x=S.x.slice(),b.i=S.i,b}function $(S,b){null==S&&(S=+new Date);var N=new P(S),O=b&&b.state,M=function(){return(N.next()>>>0)/4294967296};return M.double=function(){do{var J=((N.next()>>>11)+(N.next()>>>0)/4294967296)/(1<<21)}while(0===J);return J},M.int32=N.next,M.quick=M,O&&(O.x&&k(O,N),M.state=function(){return k(N,{})}),M}W&&W.exports?W.exports=$:h.amdD&&h.amdO?void 0!==(V=function(){return $}.call(Y,h,Y,W))&&(W.exports=V):this.xorshift7=$}(0,Re=h.nmd(Re))},7657:function(Re,Y,h){var V;!function(U,W,L){function P(S){var b=this,N="";b.next=function(){var M=b.x^b.x>>>2;return b.x=b.y,b.y=b.z,b.z=b.w,b.w=b.v,(b.d=b.d+362437|0)+(b.v=b.v^b.v<<4^M^M<<1)|0},b.x=0,b.y=0,b.z=0,b.w=0,b.v=0,S===(0|S)?b.x=S:N+=S;for(var O=0;O<N.length+64;O++)b.x^=0|N.charCodeAt(O),O==N.length&&(b.d=b.x<<10^b.x>>>4),b.next()}function k(S,b){return b.x=S.x,b.y=S.y,b.z=S.z,b.w=S.w,b.v=S.v,b.d=S.d,b}function $(S,b){var N=new P(S),O=b&&b.state,M=function(){return(N.next()>>>0)/4294967296};return M.double=function(){do{var J=((N.next()>>>11)+(N.next()>>>0)/4294967296)/(1<<21)}while(0===J);return J},M.int32=N.next,M.quick=M,O&&("object"==typeof O&&k(O,N),M.state=function(){return k(N,{})}),M}W&&W.exports?W.exports=$:h.amdD&&h.amdO?void 0!==(V=function(){return $}.call(Y,h,Y,W))&&(W.exports=V):this.xorwow=$}(0,Re=h.nmd(Re))},3818:function(Re,Y,h){var V;!function(U,W,L){var H,P=256,b=L.pow(P,6),N=L.pow(2,52),O=2*N,M=255;function oe(me,ye,xe){var Q=[],K=be(pe((ye=1==ye?{entropy:!0}:ye||{}).entropy?[me,Ce(W)]:null==me?function we(){try{var me;return H&&(me=H.randomBytes)?me=me(P):(me=new Uint8Array(P),(U.crypto||U.msCrypto).getRandomValues(me)),Ce(me)}catch(Q){var ye=U.navigator,xe=ye&&ye.plugins;return[+new Date,U,xe,U.screen,Ce(W)]}}():me,3),Q),w=new J(Q),q=function(){for(var le=w.g(6),ae=b,E=0;le<N;)le=(le+E)*P,ae*=P,E=w.g(1);for(;le>=O;)le/=2,ae/=2,E>>>=1;return(le+E)/ae};return q.int32=function(){return 0|w.g(4)},q.quick=function(){return w.g(4)/4294967296},q.double=q,be(Ce(w.S),W),(ye.pass||xe||function(le,ae,E,Oe){return Oe&&(Oe.S&&de(Oe,w),le.state=function(){return de(w,{})}),E?(L.random=le,ae):le})(q,K,"global"in ye?ye.global:this==L,ye.state)}function J(me){var ye,xe=me.length,Q=this,K=0,w=Q.i=Q.j=0,q=Q.S=[];for(xe||(me=[xe++]);K<P;)q[K]=K++;for(K=0;K<P;K++)q[K]=q[w=M&w+me[K%xe]+(ye=q[K])],q[w]=ye;(Q.g=function(le){for(var ae,E=0,Oe=Q.i,ke=Q.j,Pe=Q.S;le--;)ae=Pe[Oe=M&Oe+1],E=E*P+Pe[M&(Pe[Oe]=Pe[ke=M&ke+ae])+(Pe[ke]=ae)];return Q.i=Oe,Q.j=ke,E})(P)}function de(me,ye){return ye.i=me.i,ye.j=me.j,ye.S=me.S.slice(),ye}function pe(me,ye){var K,xe=[],Q=typeof me;if(ye&&"object"==Q)for(K in me)try{xe.push(pe(me[K],ye-1))}catch(w){}return xe.length?xe:"string"==Q?me:me+"\0"}function be(me,ye){for(var Q,xe=me+"",K=0;K<xe.length;)ye[M&K]=M&(Q^=19*ye[M&K])+xe.charCodeAt(K++);return Ce(ye)}function Ce(me){return String.fromCharCode.apply(0,me)}if(be(L.random(),W),Re.exports){Re.exports=oe;try{H=h(5042)}catch(me){}}else void 0!==(V=function(){return oe}.call(Y,h,Y,Re))&&(Re.exports=V)}("undefined"!=typeof self?self:this,[],Math)},8926:Re=>{function Y(V,U,W,L,P,k,$){try{var S=V[k]($),b=S.value}catch(N){return void W(N)}S.done?U(b):Promise.resolve(b).then(L,P)}Re.exports=function h(V){return function(){var U=this,W=arguments;return new Promise(function(L,P){var k=V.apply(U,W);function $(b){Y(k,L,P,$,S,"next",b)}function S(b){Y(k,L,P,$,S,"throw",b)}$(void 0)})}},Re.exports.__esModule=!0,Re.exports.default=Re.exports},5410:()=>{},8628:()=>{},1601:()=>{},7792:()=>{},4977:()=>{},5042:()=>{},5861:(Re,Y,h)=>{"use strict";function V(W,L,P,k,$,S,b){try{var N=W[S](b),O=N.value}catch(M){return void P(M)}N.done?L(O):Promise.resolve(O).then(k,$)}function U(W){return function(){var L=this,P=arguments;return new Promise(function(k,$){var S=W.apply(L,P);function b(O){V(S,k,$,b,N,"next",O)}function N(O){V(S,k,$,b,N,"throw",O)}b(void 0)})}}h.d(Y,{Z:()=>U})}},Re=>{Re(Re.s=8125)}]);